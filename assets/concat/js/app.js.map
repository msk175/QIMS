{"version":3,"sources":["app.js"],"names":["angular","$","appConfig","packageJson","i18nPackageJson","get","then","configData","Object","assign","packageJsonData","languageResources","dependencyOrigin","undefined","i18nPackageJsonData","always","module","config","$stateProvider","templateBase","returnCtrlAs","name","asPrefix","toUpperCase","slice","length","loginRequired","state","url","template","access","templateUrl","controller","Loader","User","$scope","API","APIError","$filter","$pagination","$q","$state","$stateParams","appGrantHistory","scopeName","search","page","paginationPageSize","getUserValue","getPaginationOptions","pageSize","searchBy","pageGrantedChange","newpage","updateSearch","updateType","updateValue","switchBetween","queryParams","String","sortBy","push","status","eventType","opts","personId","user","id","qs","transitionTo","notify","console","log","grantedHistory","cui","getPersonApplicationsGrantHistory","res","$digest","fail","onFor","err","property","firstValue","secondValue","getCountsOfStatus","qsValue","getUser","useCuid","popupGrantedCount","activeCount","suspendedCount","getPersonApplicationsGrantHistoryCount","count","offFor","$apply","appRequestHistory","pageChange","requestedHistory","getPersonApplicationsRequestHistory","getCountsOfApproved","popuprequestedCount","yesCount","noCount","getPersonApplicationsRequestHistoryCount","UserHistory","userHistory","injectUI","lastLogin","lastLoginDate","userName","initUserHistory","merge","UserProfile","userProfile","maskAnswers","inputType","updateUIMasking","initUserProfile","organization","$timeout","userRoles","grantedHistoryError","getRolesDetailsError","appCheckbox","handleError","loading","init","success","getPersonRolesOnly","rolesDetails","initiGrantable","getPersonRolesGrantable","rolesGrantable","assignRoles","roles","forEach","dsd","appId","test","rolesSubmitData","assignPersonRoles","data","rolessubmitError","$watch","n","key","appCheckboxValid","menu","desktop","mobile","newDivision","userLogin","orgSearch","passwordPolicies","getSecurityQuestions","splice","numberOfQuestions","numberOfQuestionsFloor","Math","floor","challengeQuestions1","challengeQuestions2","question1","question2","getOrganizations","organizationList","searchOrganizations","$watchCollection","newTLO","Base","localStorageService","$http","userCSV","submitError","initializing","organization_id","entitlements","go","initiateNonce","getSecurityQuestionsNonce","securityQuestionAccount","version","questions","question","type","realm","answer","index","security","JSON","stringify","getOrganizationNonce","organizationId","submit","submitting","csvfile","csvFile","errorMessage","match","transformRequest","headersGetter","formData","FormData","value","append","headers","Registration","LocaleService","$window","userInvited","encodedString","btoa","inviteId","pin","applications","numberOfSelected","languages","showOrgInfo","selected","d","Date","tz","toTimeString","lang","navigator","language","userLanguage","indexOf","browserPreference","addresses","streets","phones","keys","values","_","find","initInvitedRegistration","securityQuestions","invitationData","email","restrictEmail","emailRe","catch","error","responseJSON","apiMessage","updateNumberOfSelected","checkboxValue","process","updateSelected","application","packageId","showTac","getAppicationTaC","processedSelected","app","tac","getTac","checkTacFlag","selectedApplications","TacCount","tacContent","tacText","step","oldSelected","i","split","acceptedTos","registrationData","profile","login","userCountry","requestReason","reason","invitedSubmit","selectOrganization","grants","appCount","list","servicePackage","flagObject","preSelectApps","appsFoundFlag","subappsFoundFlag","getAllOrgApps","passwordRules","selectAndUpdateFlags","flags","personTacEnabled","bundledApps","appList","bundledAppFlags","subappFlags","subPackage","subPackages","iteration","flag","iterationOut","countOut","subpackage","deferred","defer","tempAllApps","tempAppsCount","apiPromises","getOrgAppsByPage","all","resolve","promise","updatingApps","a","set","checkDuplicateEmail","isEmailTaken","customErrors","usernameTaken","isUsernameTaken","EMAIL_REGEXP","answersMatch","challengeAnswer2","challengeAnswer1","inlineEdit","firstName","isDefined","firstNameError","required","noSaveFirstName","lastName","lastNameError","noSaveLastName","EMAIL_REGXP","emailError","noSaveEmail","country","countryError","noSaveCountry","address1","address1Error","noSaveAddress1","telephone","telephoneError","noSaveTelephone","userId","userIdError","noSaveUserId","challengeAnswer1Error","noSaveChallengeAnswer1","challengeAnswer2Error","noSaveChallengeAnswer2","updateFirstNameError","given","updateLastNameError","surname","updateEmailError","updateCountryError","updateAddress1Error","updateTelephoneError","number","updateUserIdError","username","updateChallengeAnswer1Error","updateChallengeAnswer2Error","userWalkup","orgPaginationSize","appPaginationSize","initWalkupRegistration","organizations","organizationCount","orgReRenderPaginate","checkOrUncheckBundledApps","bundledApp","filter","walkupSubmit","appReRenderPaginate","orgPaginationPageHandler","newPage","updatingOrgs","getOrgsByPageAndName","orgPaginationCurrentPage","appPaginationPageHandler","appPaginationCurrentPage","abstract","permittedLogic","accessByAnyAdmin","views","grantAppToUserLogic","grantAppToOrgLogic","orgAdminLogic","DataStorage","orgAppRequest","orgAppsBeingRequested","getType","loaderName","stateParamsOrgId","numberOfOrgRequests","getOrgAppCategories","categories","searchCallback","searchWord","BuildPackageRequests","AppRequests","orgAppRequestReview","orgId","appRequests","appsBeingRequested","applicationGroup","organizationTacEnabled","getOrgTacOfPackage","numberOfRequests","removeApplicationRequest","requestId","deleteType","setType","requestArray","appRequestGroup","appRequest","x","clear","nameSearch","APIHelpers","Sort","orgApplicationDetails","serviceId","sortFlag","checkIfRequestable","relatedAppsArray","getOrganizationRequestableApps","requestable","getGrantArrayData","grantArray","promises","grant","getPerson","grantee","person","getOrganization","getPersonPackageClaims","claims","packageClaims","grantList","getOrganizationHierarchy","flattenOrgHierarchy","getOrganizationGrantedApps","relatedApps","sort","sortValue","listSort","userList","parseGrantUsersByStatus","unparsedGrantList","filteredGrantUsers","newGrants","switchDivision","getGrants","requestRelatedApp","service","requestor","postRequest","mobileTabs","tab","bundled","related","suspendApplication","suspendObj","owningOrganization","suspendOrgPkg","suspendError","organizationApplications","getPackageServices","ArrayOfPackages","services","onLoad","previouslyLoaded","category","refine","parseInt","getOrganizationGrantedCount","reRenderPaginate","loadingError","updateSearchByName","goToDetails","orgAppSearch","packageRequests","processNumberOfRequestedApps","pkgRequest","updateViewList","viewList","parentIndex","parent","realtedApp","getOrganizationsRequestableApps","expanded","reject","query","getOrganizationRequestableCount","toggleRequest","saveRequestsAndCheckout","request","relatedAppSelectedCount","relatedApp","getPersonRequestableApps","checkRelatedAppsBody","checkRelatedAndBundledApps","checkBundledApps","check","orgDetails","prevState","params","mobileHandler","profileUsersSwitch","appsHierarchySwitch","orgDetailsApps","orgDetailsHierarchy","pageLoader","addExpandedProperty","childOrgs","parentOrg","org","children","done","organizationHierarchy","goToOrgPrfile","toggleExpand","object","Organization","orgDetailsProfile","orgPromise","initOrganizationProfile","passwordPolicy","authenticationPolicy","securityAdmins","admins","CuiMobileNavFactory","UserList","orgDetailsUsers","getUserListAppCount","getPersonGrantedAppCount","initDirectory","apiCalls","getUsers","getQs","getUserCount","users","userCount","statusData","getCollectionValuesAndCount","setTitle","reRenderPagination","finally","sortingCallbacks","sortType","order","orderBy","updateSearchParams","actionCallbacks","refineType","hasOwnProperty","userClick","clickedUser","stateOpts","getOrgMembers","orgDirectory","unparsedUserList","statusList","statusCount","getStatusList","statusInStatusList","some","equals","flattenHierarchy","orgChildrenArray","childrenArray","orgList","childOrg","newChildArray","flatten","userArray","getPersonGrantedCount","getPeopleAndCount","getPersonOptions","countPersonOptions","getPersons","countPersons","copy","orgPersonCount","parseUsersByStatus","filteredUsers","paginationHandler","userID","orgID","newValue","oldValue","paginationCurrentPage","userAppDetails","dropDown","suspend","unsuspend","remove","getClaims","userClaims","getPackageClaims","getFormattedClaimData","claimSelection","packageClaim","claimId","grantedClaim","claimValues","claimValueId","claimValue","getApp","updating","getPersonGrantedApps","getRelatedApps","concat","buildData","suspendReason","unsuspendReason","justification","buildClaimData","buildPackageClaims","claimsObject","toggleDropDown","suspendApp","suspendPersonApp","suspendAppSuccess","unsuspendApp","unsuspendPersonApp","unsuspendAppSuccess","removeApp","revokePersonApp","removeAppSuccess","modifyClaims","grantClaims","modifyClaimsSuccess","userDetails","profileRolesSwitch","appsHistorySwitch","getPersonPassword","password","passwordAccount","getPasswordPolicy","policyId","rules","rule","numberOfPasswords","begun","specifyPassword","resetPassword","reset","confirm","encodeURIComponent","suspendPerson","cancel","unsuspendPerson","resetPersonPassword","resetPasswordValue","errorTimer","passwordHistoryError","newPassword","newPasswordConfirm","validate","formObject","input","validSwitch","isValidBoolean","validNewPassword","validNewPasswordRe","validateData","operations","validatePassword","validPasswordHistory","isPassed","$setValidity","specifyPersonPassword","subject","expirePersonPassword","passwordPolicyId","authenticationPolicyId","unlockUser","unlockPersonPassword","stutus","updatePerson","unlockUserSuccess","userDetailsApps","pendingService","grantedApp","getPersonPendingServicePackages","pendingServicePromises","getCategories","appCategories","userDetailsHistory","sortClicked","getPersonStatusHistory","personStatusHistory","userDetailsProfile","userDetailsRoles","getPersonRoles","assignedRoles","orgHierarchy","storedData","updateOrgChildren","orgs","toggleAll","toggleFlag","updateFlag","division","sendInvitationError","userSelectedOrg","originalObject","organizationHierarchyRoot","array","text","loader","storedDatas","sendInvitation","validEmails","emailAddressError","emailArray","Array","emailAddress","createOrgDivisionInvitation","selectOrgFromList","goToOrg","tlo","createOrgCompanyInvitation","createPersonInvitation","orgProfile","factory","newGrant","newGrantsInStorage","updateStorage","storageType","pullFromStorage","scope","resourceId","packagesBeingRequested","packages","applicationCheckbox","reduce","packageCheckbox","requests","package","claimGrants","packageRequestObject","pkgId","packageGrants","NewGrant","newGrantClaims","loaderType","appsBeingRequestedforPopup","administratorRights","claim","claimsPromises","map","grantPersonPackage","claimsData","claimData","searchType","categoryError","optsParser","unparsedCategory","goToClaimSelection","newGrantSearch","searchUpdate","queryArray","queryOptions","getPersonGrantableCount","getPersonGrantableApps","applicationList","grantableAppsError","payload","storedRequests","stateParams","newOrgGrantClaims","grantOrganizationPackage","newOrgGrant","newOrgGrantSearch","getOrganizationGrantableCount","getOrganizationGrantableApps","orgAppRequests","foundOrgs","foundPersons","foundPackages","qsArray","getOrg","Deferred","dfr","cached","getOrganizationSecured","getPackage","pkg","p","context","retriveOrgPendingApps","calls","each","pkgReq","creator","personData","packageData","isEmpty","when","apply","getPackageRequestsCount","orgAppRequestsCount","administrator","submitted","orgRegistrationRequests","start","window","performance","now","end","getOrgRegistrationRequests","regReq","registrant","getOrgRegistrationRequestsCount","orgRegistrationRequestsCount","time","ServicePackage","organizationAppRequest","getAllDetails","getPackageDetails","reviewApprovals","organizationAppRequestReview","handleSuccess","requestData","handlePackageApproval","organizationRequest","requestedPackage","orgRequests","getAllOrganizationRequests","viewRequest","requestID","organizationRequestReview","approvedCount","deniedCount","getApprovalCounts","approval","denyOrgRegistrationRequest","rejectReason","approveOrgRegistrationRequest","approveOrganizationRequests","packageRequestCalls","packageRequest","pendingRequests","getAllUserPendingPackageData","storageData","submitCalls","pendingRequestsReview","goBack","PersonRequest","personRequest","userRegistrationRequestsCount","getPersonRegistrationRequestData","approvePersonRegistrationRequest","personRequestReview","denyPersonRegistrationRequest","approvePersonRequest","usersAppRequests","getPackageRequests","userAppRequestsCount","title","usersRegistrationRequests","searchByOrg","searchByPerson","val","getRegistrationRequests","getRegistrationRequestsCount","searchValue","orgRoles","currentParentOrg","timer","searchOrgId","searchterms","pageError","organizationArray","flatArray","childDivision","Error","addPerson","newPerson","add","searchNow","searchParams","qsArrayNameSearch","personCount","noRecords","orgsResponse","handleAll","orgClick","clickedOrd","$translateProvider","$locationProvider","$urlRouterProvider","$injector","localStorageServiceProvider","$cuiIconProvider","$cuiI18nProvider","$paginationProvider","$compileProvider","$cuiResizeHandlerProvider","$location","path","hasTrailingSlash","newPath","substr","setPrefix","customDependency","customDependencyName","dependencyType","customDependencyVersion","replace","setLocaleCodesAndNames","languageKeys","getLocaleCodesAndNames","returnRegisterAvailableLanguageKeys","languageKey","useLoader","registerAvailableLanguageKeys","uniformLanguageTag","determinePreferredLanguage","fallbackLanguage","setLocalePreference","iconSets","iconSet","defaultViewBox","paginationOptions","setPaginationOptions","breakpointOption","setBreakpoint","debugInfoEnabled","run","$rootScope","$templateCache","$cuiI18n","routing","evalRouteRequest","Menu","$cuiIcon","PubSub","Theme","CuiRouteHistoryFactory","cuiApiInterceptor","cuiApiInterceptorConfig","apiUris","serviceUrl","stopIfInvalidPayload","debugServiceUrl","interceptors","interceptor","languageNameObject","LanguageKey","setLocales","$on","event","toState","toParams","fromState","fromParams","clearAll","preventDefault","attachAccessInfo","isObject","getRoles","getEntitlements","publish","handleStateChange","route","userInfo","setUser","authenticateUser","redirect","initApi","stateStack","e","routeTextArray","uiroute","uirouteparams","getIconSets","iconSettings","namespace","cache","base","pendingNotificationFlag","charAt","toLowerCase","directive","$animate","restrict","link","attrs","elem","enabled","defaultTitle","getTitle","newTitle","getDefaultTitle","setDefaultTitle","newDefaultTitle","showIf","links","activeTitle","label","currentState","current","close","toggle","pubSubSubscription","subscribe","unsubscribe","routes","truncate","idx","transclude","closeAfter","onClose","$parse","require","element","ctrl","checkIfUnique","$eval","unique","$viewValue","newValues","oldValues","CustomAPI","localStorage","authInfo","myCUI","populateUserInfo","info","redirectOpts","roleList","cuid","setEntitlements","getNotificationDetails","canGrantAppToUser","getPersonPendingApps","pendingApps","totalCount","jwtAuthHandler","covAuth","originUri","authRedirect","location","href","appRedirect","api","retryUnseured","envDefs","dataCallDefs","cuiObject","logout","covLogout","setAuthHandler","solutionInstancesUrl","setServiceUrl","covAuthInfo","apiFactory","setPersonData","getPersonData","sessionInfo","getCovAuthInfo","handleCovAuthResponse","selfRedirect","setAuthInfo","newAuthInfo","SharedService","create","details","for","apiHelpers","omitBy","isUndefined","param","buildPackageRequests","arrayOfApps","numberOfApps","isArray","requestReasonRequired","_reason","_error","createPackageRequest","collection","returnAsCollection","keyValue","collectionData","asObject","dataKey","BaseExtensions","Countries","Languages","Timezones","$translate","baseFactory","apiError","countries","getLanguageCode","getCurrentLanguageCode","theme","timezones","stateName","numberOfStates","counter","stateParamsFromStack","generateHiddenPassword","join","permitted","isPermitted","logic","isOrgAdmin","canGrantAppToOrg","errorName","personResponse","orgResponse","GetCountries","locale","setCountries","args","getCountryByCode","countryCode","countryObject","code","proposedLanguage","CustomAPIExtension","cmd","cmdType","accepts","call","contentType","storage","dataStorage","initStorageIfUndefined","saveToLocaStorage","deleteUserStorage","getUserStorage","appendToType","getDataThatMatches","comparison","matches","isMatch","replaceDataThatMatches","newData","deleteDataThatMatches","getLocaleCode","snapRemote","shouldShowMobileNav","innerWidth","onresize","debounce","open","hide","show","stateMenuOptions","factoryName","getOrganizationAdmins","getOrganizationSecurityAdmins","response","getOrganizationPasswordPolicy","getOrganizationAuthenticationPolicy","getAuthenticationPolicy","getOrganizationWithAttributes","authPolicyId","organizationProfile","callsToComplete","callsCompleted","CommonAPI","personRequestFactory","getPersonRegistrationRequest","registrationResponse","registrationRequest","organizationData","handleRequestApproval","decision","approvePersonRegistration","denyPersonRegistration","self","pub","build","timezone","_registrationData","InvitedSubmit","servicePackageRequest","personRealm","uniqBy","makeNonceCall","method","tag","result","isUsernameOrEmailTaken","defered","stringParams","valid","getOrganizationsCountNonce","getOrganizationsNonce","securedInitiate","invitationId","targetOrganization","submitData","postUserRegistrationNonce","packageRequestData","postPersonRequestNonce","getOrgAppsNonce","results","getOrgAppsCountNonce","getPasswordPoliciesNonce","message","toggleFor","listToSort","b","dateCreated","creation","activeTheme","defaultTheme","getTheme","setTheme","cssClass","getDefaultTheme","setDefaultTheme","clearActiveTheme","useDefaultTheme","setActiveDefaultTheme","getDefault","setDefault","useDefault","setActiveDefault","GetTimezones","setTimezones","getTimezoneById","timezoneById","newUser","newEntitlements","setRoles","newRoles","getTodaysDate","today","dd","getDate","yyyy","getFullYear","mmm","toString","substring","initStatusHistory","getPersonDetailedStatusHistory","initPasswordChangeHistory","getPasswordCangeHistory","history","statusHistory","passwordChangeHistory","countResponse","facebook","google","twitter","setSocialAccount","socialAccount","socialName","linked","initUser","tempUser","initSecurityQuestions","userSecurityQuestions","tempUserSecurityQuestions","allSecurityQuestions","allSecurityQuestionsDup","getSecurityQuestionAccount","allChallengeQuestions0","allChallengeQuestions1","challengeQuestionsTexts","selectTextsForQuestions","userQuestion","initSocialLogin","socialLoginAccounts","getSocialLoginAccounts","respons","respons1","initMFA","mfaConfg","getPersonAttributes","userAttributesTemplate","attributes","attribute","initPasswordPolicy","buildPersonPasswordAccount","currentPassword","saving","toggleOffFunctions","resetAllData","toggleAllOff","toggleOff","pushToggleOff","toggleOffObject","function","resetPasswordFields","userPasswordAccount","passwordRe","checkIfRepeatedSecurityAnswer","secQuestion","securityAnswerRepeatedIndex","findIndex","secQuestionToCompareTo","z","section","setLocaleByDisplayName","updatePassword","updatePersonPassword","passwordUpdateSuccess","saveChallengeQuestions","updateSecurityQuestionAccount","updatePersonMFAConfig","mfa","confg","updatePersonAttributes","unlinkSocialLogin","unlinkSocialLoginAccount","configId","updateSocialLogin","socialLoingUrl","sid","getItem","setPhone","phone","initRegisteredDate","lastDate","activeStatusList","tempUserWithoutLastLogin","activatedDate","lifetimeError","validNewPasswordHistory","validNewPasswordDisallowed","validNewPasswordReHistory","validNewPasswordReDisallowed","validateDisallowed","disallowedFlag","requestorId","requestorType","appRequestsObject","newAppRequestsObject","buildReason","tempApp","arrayOfAppsBeingRequested","arrayOfPackagesBeingRequested","arrayOfPackageRequests","reasonRequired","servicePackageStorage","packageServices","newServicePackageArray","checkStorage","packageDetails","getPersonPendingPackages","servicePackages","pendingPackageData","packageDetailCalls","pendingPackages","pendingPackage","approvePackage","denyPackage","myApplicationDetails","manageApplications","checkedLocalStorage","popupCount","getCountsOfcategories","loadStoredData","getPersonAppCategories","myApplications","displayable","applicationReview","applicationRequestArray","requestsValid","attempting","requestsPromises","newAppRequest","loadingDone","orgApplications","categoriesFlag","statusFlag","unparsedAppList","categoryList","getListOfCategories","categoryCount","serviceCategoryInCategoryList","getApplicationsFromGrants","parentPackage","uniq","getOrganizationPackages","pendingAppRequests","applicationSearch","doneReloading","getPersonRequestableCount","doneLoading","document","ready","otherwise","bootstrap"],"mappings":"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","file":"app.js","sourcesContent":["(function(angular, $) {\r\n\r\n\tlet appConfig\r\n\tlet packageJson\r\n\tlet i18nPackageJson\r\n\r\n\t$.get('./appConfig.json')\r\n\t.then(function(configData) {\r\n\t\tappConfig = Object.assign({}, appConfig, configData)\r\n\t\t//return $.get('./appConfig-env.json')\r\n\t\treturn $.get('./package.json')\r\n\t})\r\n\t/*.then(function(envConfigData) {\r\n\t\tappConfig = Object.assign({}, appConfig, envConfigData)\r\n\t\treturn $.get('./package.json')\r\n\t})*/\r\n\t.then(function(packageJsonData) {\r\n\t\tpackageJson = Object.assign({}, packageJson, packageJsonData)\r\n\t\tif (appConfig.languageResources.dependencyOrigin === 'cui-idm-b2x') {\r\n\t\t\treturn $.get('./node_modules/@covisint/cui-i18n/package.json')\r\n\t\t}\r\n\t\telse return undefined\r\n\t})\r\n\t.then(function(i18nPackageJsonData) {\r\n\t\tif (i18nPackageJsonData !== undefined) {\r\n\t\t\ti18nPackageJson = Object.assign({}, i18nPackageJson, i18nPackageJsonData)\t\r\n\t\t}\r\n\t})\r\n\t.always(function() {\r\n\r\nangular.module('user', [])\r\n.config(['$stateProvider', function($stateProvider) {\r\n\r\n\tconst templateBase = 'app/modules/user/';\r\n\r\n    const returnCtrlAs = function(name, asPrefix) {\r\n        return name + 'Ctrl as ' + (asPrefix? asPrefix : '') + (asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name);\r\n    };\r\n\r\n    const loginRequired = true;\r\n\r\n    $stateProvider\r\n        .state('user', {\r\n            url: '/user',\r\n            template: '<div ui-view></div>',\r\n            access:loginRequired\r\n        })\r\n        .state('user.profile', {\r\n            url: '/profile',\r\n            templateUrl: templateBase + 'profile/user-profile.html',\r\n            controller: returnCtrlAs('userProfile'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.history',{\r\n            url: '/history',\r\n            templateUrl: templateBase + 'history/user-history.html',\r\n            controller: returnCtrlAs('userHistory'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.appRequestHistory',{\r\n            url: '/appRequestHistory?name&page&pageSize&sortBy&status',\r\n            templateUrl: templateBase + 'appHistory/app-requestHistory.html',\r\n            controller: returnCtrlAs('appRequestHistory'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.appGrantHistory',{\r\n            url: '/appGrantHistory?name&page&pageSize&sortBy&status',\r\n            templateUrl: templateBase + 'appHistory/app-grantHistory.html',\r\n            controller: returnCtrlAs('appGrantHistory'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.roles',{\r\n            url: '/roles',\r\n            templateUrl: templateBase + 'roles/user-roles.html',\r\n            controller: returnCtrlAs('userRoles'),\r\n            access:loginRequired\r\n        });\r\n\r\n}]);\r\n\r\nangular.module('user')\r\n.controller('appGrantHistoryCtrl', function(Loader, User, $scope, API, APIError, $filter,$pagination,$q,$state,$stateParams) {\r\n\r\n    const appGrantHistory = this\r\n    const scopeName = 'appGrantHistory.'\r\n    appGrantHistory.search = Object.assign({}, $stateParams)\r\n    appGrantHistory.search.page = appGrantHistory.search.page || 1;\r\n    appGrantHistory.paginationPageSize = appGrantHistory.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    appGrantHistory.search.pageSize = appGrantHistory.paginationPageSize;\r\n    appGrantHistory.searchBy='name'\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    appGrantHistory.pageGrantedChange = (newpage) => {\r\n        appGrantHistory.updateSearch('page', newpage)\r\n    }\r\n\r\n    appGrantHistory.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'eventdate':\r\n                switchBetween('sortBy', '+eventDate', '-eventDate')\r\n                break\r\n            case 'eventType':\r\n                switchBetween('sortBy', '+eventType', '-eventType')\r\n                break\r\n            case 'actorId':\r\n                switchBetween('sortBy', '+actorId', '-actorId')\r\n                break\r\n            case 'status':\r\n                appGrantHistory.search.page = 1\r\n                appGrantHistory.search['status'] = updateValue\r\n                break\r\n            case 'search':\r\n                if(appGrantHistory.searchBy==='name')\r\n                    appGrantHistory.search['name'] = updateValue\r\n                else\r\n                    appGrantHistory.search['eventType'] = updateValue\r\n                break\r\n\r\n        }\r\n\r\n        let queryParams = [['page', String(appGrantHistory.search.page)], ['pageSize', String(appGrantHistory.search.pageSize)]];\r\n        if(appGrantHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appGrantHistory.search['sortBy']])\r\n        if(appGrantHistory.search.status)\r\n            queryParams.push(['status',appGrantHistory.search['status']])\r\n        if(appGrantHistory.search.name)\r\n            queryParams.push(['name',appGrantHistory.search['name']])\r\n        if(appGrantHistory.search.eventType)\r\n            queryParams.push(['eventType',appGrantHistory.search['eventType']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('user.appGrantHistory', appGrantHistory.search, { notify:false })\r\n            console.log(appGrantHistory.search);\r\n             appGrantHistory.grantedHistory = [];\r\n             API.cui.getPersonApplicationsGrantHistory(opts)\r\n             .then(res => {\r\n               appGrantHistory.grantedHistory=res;\r\n                // if(appGrantHistory.grantedHistory.length>0)\r\n                //     getPkgDetailsGrant(appGrantHistory.grantedHistory);\r\n                $scope.$digest()\r\n             })\r\n             .fail(err =>{\r\n                APIError.onFor(scopeName + 'initHistory')\r\n                console.log(err)\r\n             })\r\n          //onLoadGranted(true,opts)\r\n    }\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            appGrantHistory.search[property] = undefined\r\n            return\r\n        }\r\n        appGrantHistory.search[property] = appGrantHistory.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n     const getCountsOfStatus=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['status',qsValue]]\r\n        }\r\n        API.cui.getPersonApplicationsGrantHistory(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                appGrantHistory.popupGrantedCount=res.length;\r\n                console.log(appGrantHistory.popupGrantedCount);\r\n            }else if (qsValue===\"active\") {\r\n                appGrantHistory.activeCount=res.length;\r\n                console.log(appGrantHistory.activeCount);\r\n            }\r\n            else{\r\n                appGrantHistory.suspendedCount=res.length;\r\n                console.log(appGrantHistory.suspendedCount);\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    appGrantHistory.user=User.user\r\n\r\n    let queryParams = [['page', String(appGrantHistory.search.page)], ['pageSize', String(appGrantHistory.search.pageSize)]];\r\n        if(appGrantHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appGrantHistory.search['sortBy']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n    Loader.onFor(scopeName + 'initHistory')\r\n     API.cui.getPersonApplicationsGrantHistory(opts)\r\n     .then(res => {\r\n        appGrantHistory.grantedHistory=res;\r\n        // if(appGrantHistory.grantedHistory.length>0)\r\n        //     getPkgDetailsGrant(appGrantHistory.grantedHistory);\r\n        // if(appGrantHistory.requestedHistory.length>0)\r\n        //     getPkgDetailsRequested(appGrantHistory.requestedHistory);\r\n        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)\r\n    \r\n        return API.cui.getPersonApplicationsGrantHistoryCount(opts)\r\n     })\r\n     .then(res =>{\r\n        console.log(res)\r\n        appGrantHistory.count=res\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$apply();\r\n     })\r\n     .fail(err =>{\r\n        APIError.onFor(scopeName + 'initHistory')\r\n        console.log(err)\r\n     })\r\n     .always( ()=>{\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$digest()\r\n     })\r\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n    \r\n})\r\nangular.module('user')\r\n.controller('appRequestHistoryCtrl', function(Loader, User, $scope, API, APIError, $filter,$pagination,$q,$state,$stateParams) {\r\n\r\n    const appRequestHistory = this\r\n    const scopeName = 'appRequestHistory.'\r\n    appRequestHistory.search = Object.assign({}, $stateParams)\r\n    appRequestHistory.search.page = appRequestHistory.search.page || 1;\r\n    appRequestHistory.paginationPageSize = appRequestHistory.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    appRequestHistory.search.pageSize = appRequestHistory.paginationPageSize;\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    appRequestHistory.pageChange = (newpage) => {\r\n        appRequestHistory.updateSearch('page', newpage)\r\n    }\r\n\r\n    appRequestHistory.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name')\r\n                break\r\n            case 'requesteddate':\r\n                switchBetween('sortBy', '+requestedDate', '-requestedDate')\r\n                break\r\n            case 'decisiondate':\r\n                switchBetween('sortBy', '+evaluationDate', '-evaluationDate')\r\n                break\r\n            case 'eventdate':\r\n                switchBetween('sortBy', '+eventDate', '-eventDate')\r\n                break\r\n            case 'eventType':\r\n                switchBetween('sortBy', '+eventType', '-eventType')\r\n                break\r\n            case 'actorId':\r\n                switchBetween('sortBy', '+actorId', '-actorId')\r\n                break\r\n            case 'evaluator':\r\n                switchBetween('sortBy', '+evaluatorId', '-evaluatorId')\r\n                break\r\n            case 'status':\r\n                appRequestHistory.search.page = 1\r\n                appRequestHistory.search['grant.status'] = updateValue\r\n                break\r\n        }\r\n\r\n        let queryParams = [['page', String(appRequestHistory.search.page)], ['pageSize', String(appRequestHistory.search.pageSize)]];\r\n        if(appRequestHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appRequestHistory.search['sortBy']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('user.appRequestHistory', appRequestHistory.search, { notify:false })\r\n            console.log(appRequestHistory.search);\r\n            appRequestHistory.requestedHistory = [];\r\n             API.cui.getPersonApplicationsRequestHistory(opts)\r\n             .then(res => {\r\n                appRequestHistory.requestedHistory=res;\r\n                // if(appRequestHistory.requestedHistory.length>0)\r\n                //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\r\n                $scope.$digest()\r\n             })\r\n             .fail(err =>{\r\n                APIError.onFor(scopeName + 'initHistory')\r\n                console.log(err)\r\n             })\r\n              //onLoad(true,opts)\r\n    }\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            appRequestHistory.search[property] = undefined\r\n            return\r\n        }\r\n        appRequestHistory.search[property] = appRequestHistory.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n/*\r\n     const onLoad = (previouslyLoaded,opts) => {\r\n        console.log(appRequestHistory.search);\r\n        appRequestHistory.requestedHistory = [];\r\n         API.cui.getPersonApplicationsRequestHistory({personId:User.user.id,'qs':[['sortBy',appRequestHistory.search['sortBy']]] })\r\n         .then(res => {\r\n            appRequestHistory.requestedHistory=res;\r\n            // if(appRequestHistory.requestedHistory.length>0)\r\n            //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\r\n            $scope.$digest()\r\n         })\r\n         .fail(err =>{\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            console.log(err)\r\n         })\r\n     }*/\r\n\r\n/*     const onLoadGranted = (previouslyLoaded) => {\r\n        appRequestHistory.grantedHistory = [];\r\n         API.cui.getPersonApplicationsGrantHistory({personId:User.user.id,'qs':[['sortBy',appRequestHistory.search['sortBy']]] })\r\n         .then(res => {\r\n           appRequestHistory.grantedHistory=res;\r\n            // if(appRequestHistory.grantedHistory.length>0)\r\n            //     getPkgDetailsGrant(appRequestHistory.grantedHistory);\r\n            $scope.$digest()\r\n         })\r\n         .fail(err =>{\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            console.log(err)\r\n         })\r\n     }*/\r\n\r\n     const getCountsOfStatus=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['status',qsValue]]\r\n        }\r\n        API.cui.getPersonApplicationsGrantHistory(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                appRequestHistory.popupGrantedCount=res.length;\r\n                console.log(appRequestHistory.popupGrantedCount);\r\n            }else if (qsValue===\"active\") {\r\n                appRequestHistory.activeCount=res.length;\r\n                console.log(appRequestHistory.activeCount);\r\n            }\r\n            else{\r\n                appRequestHistory.suspendedCount=res.length;\r\n                console.log(appRequestHistory.suspendedCount);\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n\r\n    const getCountsOfApproved=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['status',qsValue]]\r\n        }\r\n        API.cui.getPersonApplicationsRequestHistory(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                appRequestHistory.popuprequestedCount=res.length;\r\n                console.log(appRequestHistory.popuprequestedCount);\r\n            }else if (qsValue===\"active\") {\r\n                appRequestHistory.yesCount=res.length;\r\n                console.log(appRequestHistory.yesCount);\r\n            }\r\n            else{\r\n                appRequestHistory.noCount=res.length;\r\n                console.log(appRequestHistory.noCount);\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    appRequestHistory.user=User.user\r\n\r\n    let queryParams = [['page', String(appRequestHistory.search.page)], ['pageSize', String(appRequestHistory.search.pageSize)]];\r\n        if(appRequestHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appRequestHistory.search['sortBy']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n    Loader.onFor(scopeName + 'initHistory')\r\n     API.cui.getPersonApplicationsRequestHistory(opts)\r\n     .then(res => {\r\n        appRequestHistory.requestedHistory=res;\r\n        // if(appRequestHistory.requestedHistory.length>0)\r\n        //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\r\n/*        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)*/\r\n/*        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)*/\r\n       /* Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$apply();*/\r\n        return API.cui.getPersonApplicationsRequestHistoryCount(opts) \r\n     })\r\n     .then(res => {\r\n        appRequestHistory.count=res\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$apply();\r\n     })\r\n     .fail(err =>{\r\n        APIError.onFor(scopeName + 'initHistory')\r\n        console.log(err)\r\n     })\r\n     .always( ()=>{\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$digest()\r\n     })\r\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n    \r\n})\r\nangular.module('user')\r\n.controller('userHistoryCtrl', function(Loader, User, UserHistory, $scope) {\r\n\r\n    const userHistory = this\r\n    const scopeName = 'userHistory.'\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    UserHistory.injectUI(userHistory, $scope, User.user.id)\r\n    userHistory.user=User.user;  //give user info to userhistory\r\n    userHistory.lastLogin=User.user.lastLoginDate\r\n    userHistory.userName=User.user.name;\r\n    Loader.onFor(scopeName + 'initHistory')\r\n    UserHistory.initUserHistory(User.user.id)\r\n    .then(res => {\r\n        angular.merge(userHistory, res)\r\n        Loader.offFor(scopeName + 'initHistory')\r\n    })\r\n\r\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n    \r\n})\r\nangular.module('user')\r\n.controller('userProfileCtrl', function(Loader, User, UserProfile, $scope) {\r\n\r\n    const userProfile = this\r\n    const scopeName = 'userProfile.'\r\n    //$cuiIconProvider.iconSet('cui','node_modules/@covisint/cui-icons/dist/icons/icons-out.svg','0 0 48 48')\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    //Error handler for email inline Edit tag\r\n    //Commenting out Inline Editing changes as they might not needed\r\n    // userProfile.email=function(value){\r\n    //     let EMAIL_REGXP=/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i\r\n    //     if (!angular.isDefined(value)) {\r\n    //         userProfile.emailError={};\r\n    //     }else{\r\n    //         userProfile.emailError={\r\n    //             required: value===\"\" || !value,\r\n    //             email:!EMAIL_REGXP.test(value)\r\n    //         }\r\n    //     }\r\n    //     userProfile.noSaveEmail= value===\"\" || !value || !EMAIL_REGXP.test(value)\r\n    // }\r\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    userProfile.maskAnswers=true;\r\n    userProfile.inputType = 'password';\r\n    userProfile.updateUIMasking=function(){\r\n         if(userProfile.maskAnswers){\r\n            userProfile.inputType='password';\r\n        }\r\n        else{\r\n            userProfile.inputType='text';\r\n        }\r\n    }\r\n    \r\n    UserProfile.injectUI(userProfile, $scope, User.user.id)\r\n\r\n    Loader.onFor(scopeName + 'initProfile')\r\n\r\n    UserProfile.initUserProfile(User.user.id, User.user.organization.id)\r\n    .then(res => {\r\n        angular.merge(userProfile, res)\r\n        Loader.offFor(scopeName + 'initProfile')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('user')\r\n.controller('userRolesCtrl', function(Loader, User, UserProfile, $scope, API, APIError, $timeout, $state) {\r\n    'use strict';\r\n\r\n    const userRoles = this\r\n    const scopeName = 'userRoles.'\r\n    userRoles.user=User.user\r\n    userRoles.grantedHistoryError=false\r\n    userRoles.getRolesDetailsError=false\r\n    userRoles.appCheckbox={}\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    var handleError = function handleError(err) {\r\n        userRoles.loading = false;\r\n        $scope.$digest();\r\n        console.log('Error', err);\r\n    };\r\n\r\n    \r\n\r\n    let init = function init(){\r\n        userRoles.success=false\r\n        Loader.onFor(scopeName + 'initHistory')\r\n        API.cui.getPersonRolesOnly({personId:User.user.id})\r\n        .then(res =>{\r\n            userRoles.rolesDetails=res;\r\n            initiGrantable();\r\n        })\r\n        .fail(err =>{\r\n            Loader.offFor(scopeName + 'initHistory')\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            userRoles.getRolesDetailsError=true\r\n            initiGrantable();\r\n        })\r\n    };\r\n\r\n    let initiGrantable = function initiGrantable(){\r\n        API.cui.getPersonRolesGrantable({personId:User.user.id})\r\n            .then(res =>{\r\n                userRoles.rolesGrantable=res\r\n                Loader.offFor(scopeName + 'initHistory')\r\n                $scope.$digest()\r\n            })\r\n            .fail(err =>{\r\n                Loader.offFor(scopeName + 'initHistory')\r\n                APIError.onFor(scopeName + 'initHistory')\r\n                userRoles.grantedHistoryError=true\r\n                $scope.$digest()\r\n            })\r\n    };\r\n\r\n    init();\r\n    \r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n    userRoles.assignRoles = () =>{\r\n       let roles =[]\r\n       angular.forEach(userRoles.appCheckbox,function(dsd,appId){\r\n       /*Object.keys(userRoles.appCheckbox).forEach(function(appId) {*/\r\n           if(dsd){\r\n                let test={\r\n                \"id\":appId\r\n               }\r\n               roles.push(test)\r\n           }\r\n        });\r\n        let rolesSubmitData={\r\n        \"userId\": User.user.id,\r\n        \"roles\": roles\r\n        }\r\n        console.log(rolesSubmitData)\r\n        \r\n       Loader.onFor(scopeName + 'initHistory')\r\n        API.cui.assignPersonRoles({data:rolesSubmitData})\r\n        .then(res =>{\r\n            console.log(res)\r\n            Loader.offFor(scopeName + 'initHistory')\r\n            $scope.$digest()\r\n            userRoles.success=true\r\n             $timeout(() => {\r\n                init();\r\n            }, 3000);\r\n            \r\n        })\r\n        .fail(err =>{\r\n            Loader.offFor(scopeName + 'initHistory')\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            userRoles.rolessubmitError=true\r\n            $scope.$digest()\r\n        })\r\n    }\r\n/*    userRoles.checkrequest = (roleId) =>{\r\n        if (!userRoles.selectedCheckbox[roleId]) {\r\n            userRoles.selectedCheckbox[roleId] = roleId\r\n        } else {\r\n            delete userRoles.selectedCheckbox[roleId]\r\n        }\r\n        if(Object.keys(userRoles.selectedCheckbox).length<0){\r\n            \r\n        }else{\r\n            userRoles.appCheckboxValid=true\r\n        }\r\n    }*/\r\n     $scope.$watch(\"userRoles.appCheckbox\", function(n) {\r\n       let count=0\r\n       angular.forEach(userRoles.appCheckbox,function(dsd,key){\r\n        console.log(key)\r\n        if(dsd)\r\n            count+=1\r\n       })\r\n       if(count>0){\r\n        userRoles.appCheckboxValid=true\r\n       }else{\r\n        userRoles.appCheckboxValid=false\r\n       }\r\n    }, true);\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n});\r\n\r\n\r\nangular.module('registration',[])\r\n.config(['$stateProvider', function($stateProvider) {\r\n\r\n\tconst templateBase = 'app/modules/registration/';\r\n\r\n    const returnCtrlAs = function(name, asPrefix) {\r\n        return name + 'Ctrl as ' + (asPrefix? asPrefix : '') + (asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name);\r\n    };\r\n\r\n    $stateProvider\r\n\t.state('registration', {\r\n\t\turl: '/register',\r\n        template: '<div ui-view></div>'\r\n    })\r\n    .state('registration.walkup', {\r\n        url: '/walkup',\r\n        templateUrl:templateBase + 'userWalkup/userWalkup.html',\r\n        controller: returnCtrlAs('userWalkup'),\r\n        menu: {\r\n            desktop: false,\r\n            mobile: false\r\n        }\r\n    })\r\n    .state('registration.invitation', {\r\n        url: '/invitation?inviteId&pin',\r\n        templateUrl:templateBase + 'userInvited/userInvited.html',\r\n        controller: returnCtrlAs('userInvited'),\r\n        menu: {\r\n            desktop: false,\r\n            mobile: false\r\n        }\r\n    });\r\n\r\n}]);\r\n\r\nangular.module('registration')\r\n.controller('divisionCtrl',['$scope', 'API', function($scope, API) {\r\n    var newDivision = this;\r\n    newDivision.userLogin = {};\r\n    newDivision.orgSearch = {};\r\n\r\n    newDivision.passwordPolicies = [  // WORKAROUND CASE #5\r\n        {\r\n            'allowUpperChars': true,\r\n            'allowLowerChars': true,\r\n            'allowNumChars': true,\r\n            'allowSpecialChars': true,\r\n            'requiredNumberOfCharClasses': 3\r\n        },\r\n        {\r\n            'disallowedChars':'^&*)(#$'\r\n        },\r\n        {\r\n            'min': 8,\r\n            'max': 18\r\n        },\r\n        {\r\n            'disallowedWords': ['password', 'admin']\r\n        }\r\n    ];\r\n\r\n    API.cui.getSecurityQuestions()\r\n    .then(function(res){\r\n            // Removes first question as it is blank\r\n            res.splice(0,1);\r\n\r\n            // Splits questions to use between both dropdowns\r\n            var numberOfQuestions = res.length,\r\n            numberOfQuestionsFloor = Math.floor(numberOfQuestions/2);\r\n\r\n            newDivision.userLogin.challengeQuestions1 = res.slice(0,numberOfQuestionsFloor);\r\n            newDivision.userLogin.challengeQuestions2 = res.slice(numberOfQuestionsFloor);\r\n\r\n            // Preload question into input\r\n            newDivision.userLogin.question1 = newDivision.userLogin.challengeQuestions1[0];\r\n            newDivision.userLogin.question2 = newDivision.userLogin.challengeQuestions2[0];\r\n            return API.cui.getOrganizations();\r\n    })\r\n    .then(function(res) {\r\n        newDivision.organizationList = res;\r\n        $scope.$digest();\r\n    })\r\n    .fail(function(err){\r\n        console.log(err);\r\n    });\r\n\r\n    var searchOrganizations = function() {\r\n        // this if statement stops the search from executing\r\n        // when the controller first fires  and the search object is undefined/\r\n        // once pagination is impletemented this won't be needed\r\n        if (newDivision.orgSearch) {\r\n            API.cui.getOrganizations({'qs': [['name', newDivision.orgSearch.name]]})\r\n            .then(function(res){\r\n                newDivision.organizationList = res;\r\n                $scope.$apply();\r\n            })\r\n            .fail(function(err){\r\n                console.log(err);\r\n            });\r\n        }\r\n    };\r\n\r\n    $scope.$watchCollection('newDivision.orgSearch', searchOrganizations);\r\n\r\n}]);\r\n\r\nangular.module('registration')\r\n.controller('tloCtrl',['$scope', 'API', function($scope, API) {\r\n\tvar newTLO = this;\r\n\tnewTLO.userLogin = {};\r\n\r\n  var handleError=function(err){\r\n    console.log('Error\\n',err);\r\n  };\r\n\r\n  newTLO.passwordPolicies = [ // WORKAROUND CASE #5\r\n    {\r\n      'allowUpperChars': true,\r\n      'allowLowerChars': true,\r\n      'allowNumChars': true,\r\n      'allowSpecialChars': true,\r\n      'requiredNumberOfCharClasses': 3\r\n    },\r\n    {\r\n      'disallowedChars':'^&*)(#$'\r\n    },\r\n    {\r\n      'min': 8,\r\n      'max': 18\r\n    },\r\n    {\r\n      'disallowedWords': ['password', 'admin']\r\n    }\r\n  ];\r\n\r\n\r\n  API.cui.getSecurityQuestions()\r\n  .then(function(res){\r\n    // Removes first question as it is blank\r\n    res.splice(0,1);\r\n\r\n    // Splits questions to use between both dropdowns\r\n    var numberOfQuestions = res.length,\r\n    numberOfQuestionsFloor = Math.floor(numberOfQuestions/2);\r\n\r\n    newTLO.userLogin.challengeQuestions1 = res.slice(0,numberOfQuestionsFloor);\r\n    newTLO.userLogin.challengeQuestions2 = res.slice(numberOfQuestionsFloor);\r\n\r\n    // Preload question into input\r\n    newTLO.userLogin.question1 = newTLO.userLogin.challengeQuestions1[0];\r\n    newTLO.userLogin.question2 = newTLO.userLogin.challengeQuestions2[0];\r\n  })\r\n  .fail(handleError);\r\n\r\n}]);\r\n\r\nangular.module('registration')\r\n.controller('userCSVCtrl', function(API,APIError,Base,localStorageService,$scope,$state,$http) {\r\n\r\n    const userCSV = this\r\n\r\n    userCSV.submitError = false\r\n    userCSV.initializing = true\r\n    APIError.offFor('userCSV.initializing')\r\n\tvar organization_id='OIESO-CLOUD13807765';\r\n\t\t\r\n\tif (!Base.user.entitlements.length>0) {\r\n\t\tuserCSV.initializing = false;\r\n\t\t$state.go('misc.notAuth');\t\r\n\t}\r\n\t\r\n\t API.cui.initiateNonce()\r\n    .then(res => {\r\n        return API.cui.getSecurityQuestionsNonce()\r\n    })\r\n    .then(res => {\r\n        res.splice(0, 1) // Split questions\r\n        let numberOfQuestions = res.length\r\n        let numberOfQuestionsFloor = Math.floor(numberOfQuestions/2)\r\n\r\n\t\tvar challengeQuestions1 = res.slice(0, numberOfQuestionsFloor)\r\n        var challengeQuestions2 = res.slice(numberOfQuestionsFloor)\r\n\r\n\t\t\r\n\t\tvar securityQuestionAccount = {\r\n\t\t\tversion: '1',\r\n\t\t\tquestions: [{\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\tid: challengeQuestions1[0].id,\r\n\t\t\t\t\ttype: 'question',\r\n\t\t\t\t\trealm: 'IESO-CLOUD'\r\n\t\t\t\t},\r\n\t\t\t\tanswer: 'test',\r\n\t\t\t\tindex: 1\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tquestion: {\r\n\t\t\t\t\tid: challengeQuestions2[0].id,\r\n\t\t\t\t\ttype: 'question',\r\n\t\t\t\t\trealm: 'IESO-CLOUD'\r\n\t\t\t\t},\r\n\t\t\t\tanswer: 'test',\r\n\t\t\t\tindex: 2\r\n\t\t\t}]\r\n\t\t}\r\n\t\t$scope.security = JSON.stringify(securityQuestionAccount);\r\n        return API.cui.getOrganizationNonce({organizationId: organization_id})\r\n    })\r\n\t.then(res => {\r\n\t\t$scope.organization = JSON.stringify(res);\t\r\n\t})\r\n\r\n\r\n    userCSV.submit = () => {\r\n\t   userCSV.submitting=true;\r\n\t   var csvfile = $scope.csvFile;\r\n\t   \r\n\t   if (typeof csvfile == 'undefined') {\r\n\t\t\tuserCSV.errorMessage=\"No file found, please try again.\";\r\n\t\t\tuserCSV.submitError=true;\r\n\t   } else {\r\n\t\t   if ((csvfile.name).match(/.csv$/i)) {\r\n\t\t\t\tuserCSV.errorMessage=\"\";\r\n\t\t\t\t$http({\r\n\t\t\t\t\t'method'  : 'POST',\r\n\t\t\t\t\t'url'     : 'http://localhost:3000/upload/csv',\r\n\t\t\t\t\t'headers' : {\r\n\t\t\t\t\t\t'Content-Type': undefined\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'data'    : { \r\n\t\t\t\t\t\t'security' : $scope.security,\r\n\t\t\t\t\t\t'organization' : $scope.organization,\r\n\t\t\t\t\t\t'csvfile' : $scope.csvFile\r\n\t\t\t\t\t},\r\n\t\t\t\t\ttransformRequest: function (data, headersGetter) {\r\n\t\t\t\t\t\tvar formData = new FormData();\r\n\t\t\t\t\t\tangular.forEach(data, function (value, key) {\r\n\t\t\t\t\t\t\tformData.append(key, value);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tvar headers = headersGetter();\r\n\t\t\t\t\t\tdelete headers['Content-Type'];\r\n\r\n\t\t\t\t\t\treturn formData;\r\n\t\t\t\t\t}\r\n\t\t\t\t}).then(function(data) {\r\n\t\t\t\t\t$state.go('misc.success-csv');\r\n\t\t\t\t});\t\r\n\t\t   } else {\r\n\t\t\t\tuserCSV.errorMessage=\"You have chosen a file that is not a .csv file\";\r\n\t\t\t\tuserCSV.submitError=true;\r\n\t\t   }\r\n\t   }\r\n\t   userCSV.submitting=false;\r\n    }\r\n})\r\nangular.module('registration')\r\n.controller('userInvitedCtrl', function(APIError, localStorageService, Registration, $scope, $state,$q,LocaleService, $window,Base,$stateParams,$pagination,$filter) {\r\n\r\n    const userInvited = this\r\n    let encodedString = btoa($stateParams.inviteId+':'+$stateParams.pin)\r\n    userInvited.applications = {}\r\n    userInvited.userLogin = {}\r\n    userInvited.applications.numberOfSelected = 0\r\n    userInvited.submitError = false\r\n    userInvited.languages=[];\r\n    userInvited.showOrgInfo = false\r\n    userInvited.pageSize = userInvited.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    // need to initialize to avoid undefined error when preselecting apps based on invitation data\r\n    userInvited.applications.selected={}\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    //for detectig browser time\r\n    var d = new Date();\r\n    var tz = d.toTimeString();\r\n\r\n    //for detectig browser language\r\n    var lang = $window.navigator.language || $window.navigator.userLanguage;\r\n\r\n    if (lang.indexOf('en-')>=0) { userInvited.browserPreference='en'; }\r\n    else if (lang.indexOf('zh')>=0) {userInvited.browserPreference='zh'; }\r\n    else if (lang.indexOf('pl')>=0) { userInvited.browserPreference='pl'; }\r\n    else if (lang.indexOf('pt')>=0) { userInvited.browserPreference='pt'; }\r\n    else if (lang.indexOf('tr')>=0) { userInvited.browserPreference='tr'; }\r\n    else if (lang.indexOf('fr')>=0) { userInvited.browserPreference='fr'; }\r\n    else if (lang.indexOf('ja')>=0) { userInvited.browserPreference='ja'; }\r\n    else if (lang.indexOf('es')>=0) { userInvited.browserPreference='es'; }\r\n    else if (lang.indexOf('de')>=0) { userInvited.browserPreference='de'; }\r\n    else if (lang.indexOf('ru')>=0) { userInvited.browserPreference='ru'; }\r\n    else if (lang.indexOf('it')>=0) { userInvited.browserPreference='it'; }\r\n    else { \r\n        console.log(lang+ \"not supported\")\r\n        userInvited.browserPreference='en'; \r\n    }\r\n    //LocaleService.setLocaleByDisplayName(appConfig.languages[userInvited.browserPreference])\r\n    userInvited.initializing = true\r\n\r\n    if (!localStorageService.get('userInvited.user')) {\r\n        // If registration is not saved in localstorage we need to initialize \r\n        // these arrays so ng-model treats them as arrays rather than objects \r\n        userInvited.user = { addresses: [] }\r\n        userInvited.user.addresses[0] = { streets: [] }\r\n        userInvited.user.phones = []\r\n    } \r\n    else {\r\n        userInvited.user = localStorageService.get('userInvited.user');\r\n        \r\n    }\r\n\r\n    Object.keys(Base.languages).forEach(function(id,index){\r\n        userInvited.languages[index]={\r\n            id:id\r\n        }\r\n    })\r\n    Object.values(Base.languages).forEach(function(language,index){\r\n        userInvited.languages[index].name=language;\r\n    })\r\n    userInvited.user.language=_.find(userInvited.languages,{id:userInvited.browserPreference})\r\n    Registration.initInvitedRegistration(encodedString)\r\n    .then(res => {\r\n        const questions = res.securityQuestions\r\n\r\n        // Split questions to use between 2 dropdowns\r\n        questions.splice(0, 1)\r\n        const numberOfQuestionsFloor = Math.floor(questions.length / 2)\r\n\r\n        userInvited.userLogin.challengeQuestions1 = questions.slice(0, numberOfQuestionsFloor)\r\n        userInvited.userLogin.challengeQuestions2 = questions.slice(numberOfQuestionsFloor)\r\n\r\n        // Preload questions into input\r\n        userInvited.userLogin.question1 = userInvited.userLogin.challengeQuestions1[0]\r\n        userInvited.userLogin.question2 = userInvited.userLogin.challengeQuestions2[0]\r\n\r\n        // Populate organization Data\r\n        userInvited.organization = res.organization\r\n        userInvited.invitationData=res.invitationData\r\n\r\n        //Check restrict Email flag\r\n        userInvited.user.email=\"\"\r\n        if (userInvited.invitationData.restrictEmail) {\r\n            userInvited.user.email=userInvited.invitationData.email\r\n            userInvited.emailRe=userInvited.user.email\r\n        }\r\n        userInvited.initializing = false\r\n    })\r\n    .catch(error => {\r\n        console.error(error)\r\n        if (error.responseJSON && error.responseJSON.apiMessage.indexOf(encodedString)>0) {\r\n                userInvited.initializing=false\r\n                APIError.onFor('RegistrationFactory.inValidInvite')\r\n        }else{\r\n            $state.go('misc.loadError')\r\n        }\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    userInvited.applications.updateNumberOfSelected = (checkboxValue) => {\r\n        // Update the number of selected apps everytime on of the boxes is checked/unchecked\r\n        if (checkboxValue !== null) {\r\n            userInvited.applications.numberOfSelected += 1;\r\n        } else {\r\n            userInvited.applications.numberOfSelected -= 1;\r\n        }\r\n        userInvited.applications.process()\r\n    }\r\n\r\n    userInvited.applications.updateSelected = (application, checkboxValue, index) => {\r\n        if (checkboxValue === true) {\r\n            userInvited.applications.selected[index]=application.id+','+application.packageId+','+application.name+','+application.showTac\r\n            userInvited.applications.numberOfSelected += 1;\r\n        } else {\r\n            delete userInvited.applications.selected[index]          \r\n            userInvited.applications.numberOfSelected -= 1;\r\n        }\r\n    }\r\n\r\n    userInvited.getAppicationTaC = () => {\r\n        angular.forEach(userInvited.applications.processedSelected, app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true' && app.tac===undefined) {\r\n                Registration.getTac(app.packageId)\r\n                .then(res =>{\r\n                    app.tac=res;\r\n                })\r\n                .catch(err=> {\r\n                    console.log(err);\r\n                })\r\n            };\r\n        })\r\n    }\r\n\r\n    //Check TAC flag for selected applications\r\n    userInvited.checkTacFlag = (selectedApplications) => {\r\n        let TacCount=0;\r\n        angular.forEach(selectedApplications,app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true') {\r\n                TacCount++;\r\n            };\r\n        })\r\n        return TacCount\r\n    }\r\n\r\n    userInvited.showTac= (index) => {\r\n        if (userInvited.applications.processedSelected[index].tac) {\r\n            userInvited.tacContent=userInvited.applications.processedSelected[index].tac.tacText\r\n            userInvited.applications.step=3\r\n        }\r\n    } \r\n\r\n    userInvited.applications.process = () => {\r\n        // Process the selected apps when you click next after selecting the apps you need\r\n        // returns number of apps selected\r\n        let oldSelected\r\n        let index=0;\r\n        if (userInvited.applications.processedSelected) {\r\n            oldSelected = userInvited.applications.processedSelected\r\n        }\r\n\r\n        // Fixes issue where adding and removing selected apps would leave objects with null values\r\n        angular.forEach(userInvited.applications.selected, (app, i) => {\r\n            if (app === null) delete userInvited.applications.selected[i]\r\n        })\r\n\r\n        userInvited.applications.processedSelected = []\r\n\r\n        angular.forEach(userInvited.applications.selected, function(app, i) {\r\n            if (app !== null) {\r\n                userInvited.applications.processedSelected.push({\r\n                    id: app.split(',')[0],\r\n                    packageId: app.split(',')[1],\r\n                    name: app.split(',')[2],\r\n                    // this fixes an issue where removing an app from the selected list that the user \r\n                    // had accepted the terms for would carry over that acceptance to the next app on the list\r\n                    acceptedTos: ((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].acceptedTos : false),\r\n                    showTac:app.split(',')[3],\r\n                    tac:((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].tac :undefined)\r\n                })\r\n            }\r\n            index++;\r\n        })\r\n        return userInvited.checkTacFlag(userInvited.applications.processedSelected)\r\n        \r\n    }\r\n\r\n    userInvited.submit = () => {\r\n        userInvited.submitting = true\r\n        userInvited.submitError = false\r\n\r\n        const registrationData = {\r\n            profile: userInvited.user,\r\n            organization: userInvited.organization,\r\n            login: userInvited.userLogin,\r\n            applications: userInvited.applications,\r\n            userCountry: userInvited.userCountry,\r\n            requestReason:userInvited.reason\r\n        }\r\n\r\n        Registration.invitedSubmit(registrationData,encodedString,$stateParams.inviteId)\r\n        .then(() => {\r\n            userInvited.success = true\r\n            userInvited.submitting = false\r\n            $state.go('misc.success')\r\n        })\r\n        .catch(error => {\r\n            userInvited.submitError = true\r\n            userInvited.submitting = false\r\n            if (error.responseJSON) {\r\n                userInvited.errorMessage = error.responseJSON.apiMessage\r\n            }\r\n            else {\r\n                userInvited.errorMessage = 'Error submitting registration request'\r\n            }\r\n        })\r\n    }\r\n\r\n    userInvited.selectOrganization = () => {\r\n        userInvited.applications.numberOfSelected = 0 // Restart applications count\r\n        userInvited.applications.processedSelected = undefined // Restart applications selected\r\n\r\n        Registration.selectOrganization(userInvited.organization, userInvited.pageSize)\r\n        .then(res => {\r\n            const grants = res.grants\r\n            userInvited.appCount=res.appCount\r\n            if (!grants.length) userInvited.applications.list = undefined\r\n            else {\r\n                userInvited.applications.list = grants\r\n                //Preselect the applications selected by admin\r\n                if (userInvited.invitationData.servicePackage) {\r\n                    let flagObject=userInvited.preSelectApps(userInvited.applications.list,false,false)\r\n                    // Check whether we found main apps and sub apps in the current pagination\r\n                    if(flagObject.appsFoundFlag&&flagObject.subappsFoundFlag){\r\n                        userInvited.applications.process()\r\n                    }\r\n                    // application or subapplication was not retrieved in current set of pagination\r\n                    // need to retrieve all apps and pre selects them\r\n                    else{\r\n                        userInvited.getAllOrgApps(flagObject)\r\n                        .then(() =>{\r\n                            userInvited.applications.process()\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            // userInvited.reRenderPaginate && userInvited.reRenderPaginate()\r\n            userInvited.passwordRules = res.passwordRules\r\n        })\r\n        .fail((error) => {\r\n            console.error('Error getting organization information', error)\r\n            APIError.onFor('userInvited.orgInfo', error)\r\n        })\r\n        .always(() => {\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    //Updates the selected apps and count and set the found flags\r\n    userInvited.selectAndUpdateFlags = (application, flags) => {\r\n        userInvited.applications.selected[application.id]=application.id+','+application.servicePackage.id+','+$filter('cuiI18n')(application.name)+','+application.servicePackage.personTacEnabled\r\n        flags[application.id]=true\r\n        if (application.bundledApps&&Object.keys(flags).length===1) {\r\n            application.bundledApps.forEach(app=>{\r\n                flags[app.id]=false\r\n            })\r\n        }\r\n        return flags;\r\n    }\r\n    \r\n    userInvited.preSelectApps= (appList,appsFoundFlag,subappsFoundFlag) => {\r\n        let bundledAppFlags={}\r\n        let subappFlags={}\r\n        appList.forEach(application => {\r\n            if(appsFoundFlag!==true&&userInvited.invitationData.servicePackage.id===application.servicePackage.id){\r\n                bundledAppFlags=userInvited.selectAndUpdateFlags(application,bundledAppFlags)\r\n            }\r\n            if(subappsFoundFlag!==true&&userInvited.invitationData.subPackage){\r\n                // If subpackages\r\n                if (userInvited.invitationData.subPackage.id.indexOf(',')>0) {\r\n                    // If multiple subpackages Then subPackage.id will be string like \"id1,id2,...idn\"\r\n                    let subPackages=userInvited.invitationData.subPackage.id.split(',')\r\n                    subPackages.forEach(subPackage=>{\r\n                        subappFlags[subPackage]=subappFlags[subPackage]||{}\r\n                        if (application.servicePackage.id.indexOf(subPackage)>0) {\r\n                            subappFlags[subPackage]=userInvited.selectAndUpdateFlags(application,subappFlags[subPackage])\r\n                        }\r\n                    })                    \r\n                }\r\n                else{\r\n                    // Single Subpackage\r\n                    if (application.servicePackage.id.indexOf(userInvited.invitationData.subPackage.id)>0) {\r\n                        subappFlags[userInvited.invitationData.subPackage.id]={}\r\n                        subappFlags[userInvited.invitationData.subPackage.id]=userInvited.selectAndUpdateFlags(application,subappFlags[userInvited.invitationData.subPackage.id])\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        //Check whether we found all the main apps,\r\n        let count=0\r\n        let iteration=0\r\n        angular.forEach(bundledAppFlags,function(flag){\r\n            iteration++\r\n            if (flag===false) {\r\n                count++\r\n            }\r\n            if (iteration===Object.keys(bundledAppFlags).length) {\r\n                if (count===0) {\r\n                    appsFoundFlag=true\r\n                }\r\n            }\r\n        })\r\n        //Check wether we found all the subapps,\r\n        count=0\r\n        iteration=0\r\n        let iterationOut=0\r\n        let countOut=0\r\n        angular.forEach(subappFlags,function(subpackage){\r\n            iterationOut++\r\n            if (Object.keys(subpackage).length!==0) {\r\n                angular.forEach(subpackage,function(flag){\r\n                    iteration++\r\n                    if (flag===false) {\r\n                        count++\r\n                    }\r\n                    if (iteration===Object.keys(subpackage).length) {\r\n                        if (count===0) {\r\n                            subappsFoundFlag=true\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                countOut++\r\n            }\r\n            if (iterationOut===Object.keys(subappFlags).length) {\r\n                if (countOut===0) {\r\n                    subappsFoundFlag=true\r\n                }\r\n                else{\r\n                    subappsFoundFlag=false\r\n                }\r\n\r\n            }\r\n        })\r\n        userInvited.applications.numberOfSelected=Object.keys(userInvited.applications.selected).length\r\n        return {\r\n            appsFoundFlag:appsFoundFlag,\r\n            subappsFoundFlag:subappsFoundFlag\r\n        }\r\n    }\r\n\r\n    userInvited.getAllOrgApps=(flagObject) => {\r\n        let deferred=$q.defer()\r\n        let tempAllApps=[]\r\n        let tempAppsCount=userInvited.appCount\r\n        let page=0\r\n        let apiPromises=[]\r\n        do{\r\n            page++\r\n            apiPromises.push(Registration.getOrgAppsByPage(page,200,userInvited.organization.id))\r\n            tempAppsCount=tempAppsCount-200\r\n        }while(tempAppsCount>200)\r\n        $q.all(apiPromises)\r\n        .then(res=>{\r\n            res.forEach(appList=>{\r\n                userInvited.preSelectApps(appList,flagObject.appsFoundFlag,flagObject.subappsFoundFlag)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    userInvited.pageChange = (newpage) => {\r\n        userInvited.updatingApps = true\r\n        Registration.getOrgAppsByPage(newpage,userInvited.pageSize,userInvited.organization.id)\r\n        .then((res) => {\r\n            userInvited.page=newpage\r\n            if (!res.length) userInvited.applications.list = undefined\r\n            else {\r\n                userInvited.applications.list = res\r\n                userInvited.updatingApps = false\r\n            }\r\n        })\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n    /* -------------------------------------------- WATCHERS START -------------------------------------------- */\r\n\r\n    $scope.$watch('userInvited.user', (a) => {\r\n        if (a && Object.keys(a).length !== 0) {\r\n            localStorageService.set('userInvited.user', a);\r\n        }\r\n    }, true)\r\n\r\n    userInvited.checkDuplicateEmail = (value) => {\r\n        if (value &&value!==\"\") {\r\n            $q.all([Registration.isEmailTaken(value).promise])\r\n            .then(res => {\r\n                userInvited.isEmailTaken=res[0]\r\n            })\r\n        }\r\n        else{\r\n            userInvited.isEmailTaken=true;\r\n        }        \r\n    }\r\n    \r\n    userInvited.checkDuplicateEmail(userInvited.user.email)\r\n    userInvited.customErrors = {\r\n        userName: {\r\n            usernameTaken: Registration.isUsernameTaken\r\n        },\r\n        email: {\r\n            email: function(){\r\n                var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n                if (userInvited.user.email) {\r\n                    return EMAIL_REGEXP.test(userInvited.user.email)\r\n                }else{\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        answersMatch: {\r\n            answersMatch:function(){\r\n                if (userInvited.userLogin && userInvited.userLogin.challengeAnswer2) {\r\n                    return userInvited.userLogin.challengeAnswer2!==userInvited.userLogin.challengeAnswer1;\r\n                }else{\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Error handlers for Inline Edits in review page\r\n    userInvited.inlineEdit = {\r\n        firstName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.firstNameError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.firstNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveFirstName=value===\"\" || !value\r\n        },\r\n        lastName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.lastNameError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.lastNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveLastName=value===\"\" || !value\r\n        },\r\n        email:function(value){\r\n            var EMAIL_REGXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.emailError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.emailError={\r\n                    required: value===\"\" || !value,\r\n                    email:!EMAIL_REGXP.test(value)\r\n                }\r\n                //emailTaken:\r\n                if (!userInvited.inlineEdit.emailError.required && !userInvited.inlineEdit.emailError.email) {\r\n                    userInvited.checkDuplicateEmail(value)\r\n                }\r\n                  \r\n            }\r\n            userInvited.inlineEdit.noSaveEmail=value===\"\" || !value || !EMAIL_REGXP.test(value)\r\n        },\r\n        //For autocomplete need to handle differently\r\n        country:function(value){\r\n            console.log(value)\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.countryError={\r\n                    required:true\r\n                }\r\n            }else{\r\n                userInvited.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n            userInvited.inlineEdit.noSaveCountry=value===undefined \r\n        },\r\n        address1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.address1Error={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.address1Error={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveAddress1=value===\"\" || !value\r\n        },\r\n        telephone:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.telephoneError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.telephoneError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveTelephone=value===\"\" || !value\r\n        },\r\n        userId:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.userIdError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.userIdError={\r\n                    required: value===\"\" || !value,\r\n                } \r\n                //usernameTaken: \r\n                if (!userInvited.inlineEdit.userIdError.required) {\r\n                    $q.all([Registration.isUsernameTaken(value).promise])\r\n                    .then(res => {\r\n                        userInvited.inlineEdit.userIdError.usernameTaken=!res[0]\r\n                        userInvited.inlineEdit.noSaveUserId=value===\"\" || !value ||userInvited.inlineEdit.userIdError.usernameTaken\r\n                    })\r\n                }\r\n                 \r\n            }\r\n             userInvited.inlineEdit.noSaveUserId=value===\"\" || !value\r\n        },\r\n        challengeAnswer1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.challengeAnswer1Error={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.challengeAnswer1Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userInvited.userLogin.challengeAnswer2\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveChallengeAnswer1=value===\"\" || !value||value===userInvited.userLogin.challengeAnswer2\r\n        },\r\n        challengeAnswer2:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.challengeAnswer2Error={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.challengeAnswer2Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userInvited.userLogin.challengeAnswer1\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveChallengeAnswer2=value===\"\" || !value || value===userInvited.userLogin.challengeAnswer1\r\n        },\r\n        //on save functions needed to show error when pressed enter\r\n        updateFirstNameError:function(){\r\n            userInvited.inlineEdit.firstName(userInvited.user.name.given)\r\n        },\r\n        updateLastNameError:function(){\r\n            userInvited.inlineEdit.lastName(userInvited.user.name.surname)\r\n        },\r\n        updateEmailError: function() {\r\n            userInvited.emailRe=userInvited.user.email;\r\n            userInvited.inlineEdit.email(userInvited.user.email)\r\n        },\r\n        updateCountryError: function() {\r\n            if (userInvited.userCountry) {\r\n                userInvited.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n        },\r\n        updateAddress1Error:function(){\r\n            userInvited.inlineEdit.address1(userInvited.user.addresses[0].streets[0])\r\n        },\r\n        updateTelephoneError:function(){\r\n            userInvited.inlineEdit.telephone(userInvited.user.phones[0].number)\r\n        },\r\n        updateUserIdError:function(){\r\n            userInvited.inlineEdit.userId(userInvited.userLogin.username)\r\n        },\r\n        updateChallengeAnswer1Error:function(){\r\n            userInvited.inlineEdit.challengeAnswer1(userInvited.userLogin.challengeAnswer1)\r\n        },\r\n        updateChallengeAnswer2Error:function(){\r\n            userInvited.inlineEdit.challengeAnswer2(userInvited.userLogin.challengeAnswer2)\r\n        },\r\n\r\n    }\r\n\r\n    /* --------------------------------------------- WATCHERS END --------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('registration')\r\n.controller('userWalkupCtrl', function(APIError, localStorageService, Registration, $scope, $state,$q,LocaleService, $window,Base,$pagination,$filter) {\r\n\r\n    const userWalkup = this\r\n\r\n    userWalkup.applications = {}\r\n    userWalkup.userLogin = {}\r\n    userWalkup.applications.numberOfSelected = 0\r\n    userWalkup.submitError = false\r\n    userWalkup.languages=[];\r\n    userWalkup.orgPaginationSize = userWalkup.orgPaginationSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    userWalkup.appPaginationSize = userWalkup.appPaginationSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    //for detectig browser time\r\n    var d = new Date();\r\n    var tz = d.toTimeString();\r\n\r\n    //for detectig browser language\r\n    var lang = $window.navigator.language || $window.navigator.userLanguage;\r\n\r\n    if (lang.indexOf('en-')>=0) { userWalkup.browserPreference='en'; }\r\n    else if (lang.indexOf('zh')>=0) {userWalkup.browserPreference='zh'; }\r\n    else if (lang.indexOf('pl')>=0) { userWalkup.browserPreference='pl'; }\r\n    else if (lang.indexOf('pt')>=0) { userWalkup.browserPreference='pt'; }\r\n    else if (lang.indexOf('tr')>=0) { userWalkup.browserPreference='tr'; }\r\n    else if (lang.indexOf('fr')>=0) { userWalkup.browserPreference='fr'; }\r\n    else if (lang.indexOf('ja')>=0) { userWalkup.browserPreference='ja'; }\r\n    else if (lang.indexOf('es')>=0) { userWalkup.browserPreference='es'; }\r\n    else if (lang.indexOf('de')>=0) { userWalkup.browserPreference='de'; }\r\n    else if (lang.indexOf('ru')>=0) { userWalkup.browserPreference='ru'; }\r\n    else if (lang.indexOf('it')>=0) { userWalkup.browserPreference='it'; }\r\n    else { \r\n        console.log(lang+ \"not supported\")\r\n        userWalkup.browserPreference='en'; \r\n    }\r\n    //LocaleService.setLocaleByDisplayName(appConfig.languages[userWalkup.browserPreference])\r\n    userWalkup.initializing = true\r\n\r\n    if (!localStorageService.get('userWalkup.user')) {\r\n        // If registration is not saved in localstorage we need to initialize \r\n        // these arrays so ng-model treats them as arrays rather than objects \r\n        userWalkup.user = { addresses: [] }\r\n        userWalkup.user.addresses[0] = { streets: [] }\r\n        userWalkup.user.phones = []\r\n    } \r\n    else {\r\n        userWalkup.user = localStorageService.get('userWalkup.user');\r\n        \r\n    }\r\n\r\n    Object.keys(Base.languages).forEach(function(id,index){\r\n        userWalkup.languages[index]={\r\n            id:id\r\n        }\r\n    })\r\n    Object.values(Base.languages).forEach(function(language,index){\r\n        userWalkup.languages[index].name=language;\r\n    })\r\n    userWalkup.user.language=_.find(userWalkup.languages,{id:userWalkup.browserPreference})\r\n    Registration.initWalkupRegistration(userWalkup.orgPaginationSize)\r\n    .then(res => {\r\n        const questions = res.securityQuestions\r\n\r\n        // Split questions to use between 2 dropdowns\r\n        questions.splice(0, 1)\r\n        const numberOfQuestionsFloor = Math.floor(questions.length / 2)\r\n\r\n        userWalkup.userLogin.challengeQuestions1 = questions.slice(0, numberOfQuestionsFloor)\r\n        userWalkup.userLogin.challengeQuestions2 = questions.slice(numberOfQuestionsFloor)\r\n\r\n        // Preload questions into input\r\n        userWalkup.userLogin.question1 = userWalkup.userLogin.challengeQuestions1[0]\r\n        userWalkup.userLogin.question2 = userWalkup.userLogin.challengeQuestions2[0]\r\n\r\n        // Populate organization list\r\n        userWalkup.organizationList = res.organizations\r\n        userWalkup.organizationCount = res.organizationCount\r\n        userWalkup.orgReRenderPaginate && userWalkup.orgReRenderPaginate()\r\n\r\n        userWalkup.initializing = false\r\n    })\r\n    .catch(error => {\r\n        $state.go('misc.loadError')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    userWalkup.applications.checkOrUncheckBundledApps = (checkboxValue,application) => {\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp => {\r\n                if (checkboxValue !== null) {\r\n                    bundledApp=_.find(userWalkup.applications.list,{id:bundledApp.id})\r\n                    userWalkup.applications.selected[bundledApp.id]=bundledApp.id+','+bundledApp.servicePackage.id+','+$filter('cuiI18n')(bundledApp.name)+','+application.servicePackage.personTacEnabled\r\n                    userWalkup.applications.numberOfSelected += 1;\r\n\r\n                } else {\r\n                    userWalkup.applications.selected[bundledApp.id]=null\r\n                    userWalkup.applications.numberOfSelected -= 1;\r\n                } \r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    userWalkup.applications.updateNumberOfSelected = (checkboxValue,application) => {\r\n        // Update the number of selected apps everytime on of the boxes is checked/unchecked\r\n        if (checkboxValue !== null) {\r\n            userWalkup.applications.numberOfSelected += 1;\r\n        } else {\r\n            userWalkup.applications.numberOfSelected -= 1;\r\n        }\r\n        userWalkup.applications.checkOrUncheckBundledApps(checkboxValue,application)\r\n        userWalkup.applications.process()\r\n    }\r\n\r\n    userWalkup.applications.updateSelected = (application, checkboxValue, index) => {\r\n        let bundledApps=_.filter(userWalkup.applications.processedSelected,{packageId:application.packageId})\r\n        bundledApps.forEach(bundledApp => {\r\n            if (checkboxValue !== null) {\r\n                userWalkup.applications.selected[bundledApp.id]=bundledApp.id+','+bundledApp.packageId+','+bundledApp.name+','+bundledApp.showTac\r\n                userWalkup.applications.numberOfSelected += 1;\r\n            } else {\r\n                delete userWalkup.applications.selected[bundledApp.id]          \r\n                userWalkup.applications.numberOfSelected -= 1;\r\n            }\r\n        })\r\n    }\r\n\r\n    userWalkup.getAppicationTaC = () => {\r\n        angular.forEach(userWalkup.applications.processedSelected, app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true') {\r\n                Registration.getTac(app.packageId)\r\n                .then(res =>{\r\n                    app.tac=res;\r\n                })\r\n                .catch(err=> {\r\n                    console.log(err);\r\n                })\r\n            };\r\n        })\r\n    }\r\n\r\n    //Check TAC flag for selected applications\r\n    userWalkup.checkTacFlag = (selectedApplications) => {\r\n        let TacCount=0;\r\n        angular.forEach(selectedApplications,app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true') {\r\n                TacCount++;\r\n            };\r\n        })\r\n        return TacCount\r\n    }\r\n\r\n    userWalkup.showTac= (index) => {\r\n        if (userWalkup.applications.processedSelected[index].tac) {\r\n            userWalkup.tacContent=userWalkup.applications.processedSelected[index].tac.tacText\r\n            userWalkup.applications.step=3\r\n        }\r\n    } \r\n\r\n    userWalkup.applications.process = () => {\r\n        // Process the selected apps when you click next after selecting the apps you need\r\n        // returns number of apps selected\r\n        let oldSelected\r\n        let index=0;\r\n        if (userWalkup.applications.processedSelected) {\r\n            oldSelected = userWalkup.applications.processedSelected\r\n        }\r\n\r\n        // Fixes issue where adding and removing selected apps would leave objects with null values\r\n        angular.forEach(userWalkup.applications.selected, (app, i) => {\r\n            if (app === null) delete userWalkup.applications.selected[i]\r\n        })\r\n\r\n        userWalkup.applications.processedSelected = []\r\n\r\n        angular.forEach(userWalkup.applications.selected, function(app, i) {\r\n            if (app !== null) {\r\n                userWalkup.applications.processedSelected.push({\r\n                    id: app.split(',')[0],\r\n                    packageId:app.split(',')[1],\r\n                    name: app.split(',')[2],\r\n                    // this fixes an issue where removing an app from the selected list that the user \r\n                    // had accepted the terms for would carry over that acceptance to the next app on the list\r\n                    acceptedTos: ((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].acceptedTos : false),\r\n                    showTac:app.split(',')[3]\r\n                })\r\n            }\r\n            index++;\r\n        })\r\n        return userWalkup.checkTacFlag(userWalkup.applications.processedSelected)\r\n        \r\n    }\r\n\r\n    userWalkup.submit = () => {\r\n        userWalkup.submitting = true\r\n        userWalkup.submitError = false\r\n\r\n        const registrationData = {\r\n            profile: userWalkup.user,\r\n            organization: userWalkup.organization,\r\n            login: userWalkup.userLogin,\r\n            applications: userWalkup.applications,\r\n            userCountry: userWalkup.userCountry,\r\n            requestReason:userWalkup.reason\r\n        }\r\n\r\n        Registration.walkupSubmit(registrationData)\r\n        .then(() => {\r\n            userWalkup.success = true\r\n            userWalkup.submitting = false\r\n            $state.go('misc.success')\r\n        })\r\n        .catch(error => {\r\n            userWalkup.submitError = true\r\n            userWalkup.submitting = false\r\n            if (error.responseJSON) {\r\n                userWalkup.errorMessage = error.responseJSON.apiMessage\r\n            }\r\n            else {\r\n                userWalkup.errorMessage = 'Error submitting registration request'\r\n            }\r\n        })\r\n    }\r\n\r\n    userWalkup.selectOrganization = (organization) => {\r\n        userWalkup.organization = organization\r\n        userWalkup.applications.numberOfSelected = 0 // Restart applications count\r\n        userWalkup.applications.processedSelected = undefined // Restart applications selected\r\n\r\n        Registration.selectOrganization(organization,userWalkup.appPaginationSize)\r\n        .then(res => {\r\n            const grants = res.grants\r\n            userWalkup.appCount=res.appCount\r\n            userWalkup.appReRenderPaginate && userWalkup.appReRenderPaginate()\r\n            if (!grants.length) userWalkup.applications.list = undefined\r\n            else {\r\n                userWalkup.applications.list = grants\r\n            }\r\n\r\n            userWalkup.passwordRules = res.passwordRules\r\n        })\r\n        .fail((error) => {\r\n            console.error('Error getting organization information', error)\r\n            APIError.onFor('userWalkup.orgInfo', error)\r\n        })\r\n        .always(() => {\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    userWalkup.orgPaginationPageHandler = (newPage) => {\r\n        userWalkup.updatingOrgs = true\r\n        Registration.getOrgsByPageAndName(newPage,userWalkup.orgPaginationSize)\r\n        .then((res) => {\r\n            userWalkup.orgPaginationCurrentPage=newPage\r\n            userWalkup.organizationList = res\r\n            userWalkup.updatingOrgs = false\r\n            $scope.$digest()\r\n        })\r\n        .fail((err) => {\r\n            console.error(\"There was an error in fetching organization list for page \"+newPage +err)\r\n            userWalkup.updatingOrgs = false\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    userWalkup.appPaginationPageHandler = (newPage) => {\r\n        userWalkup.updatingApps = true\r\n        Registration.getOrgAppsByPage(newPage,userWalkup.appPaginationSize,userWalkup.organization.id)\r\n        .then((res) => {\r\n            userWalkup.appPaginationCurrentPage=newPage\r\n            if (!res.length) {\r\n                userWalkup.updatingApps=false\r\n                userWalkup.applications.list = undefined\r\n            }\r\n            else {\r\n                userWalkup.applications.list = res\r\n                userWalkup.updatingApps = false\r\n            }\r\n            $scope.$digest()\r\n        })\r\n        .fail((err) =>{\r\n            userWalkup.updatingApps =false\r\n            $scope.$digest()\r\n            console.error(\"There was an error in fetching app list for page \"+newPage +err)\r\n        })\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n    /* -------------------------------------------- WATCHERS START -------------------------------------------- */\r\n\r\n    $scope.$watch('userWalkup.user', (a) => {\r\n        if (a && Object.keys(a).length !== 0) {\r\n            localStorageService.set('userWalkup.user', a);\r\n        }\r\n    }, true)\r\n\r\n    $scope.$watch('userWalkup.orgFilterByname', (a) => {\r\n        if (a!==undefined) {\r\n            userWalkup.updatingOrgs=true\r\n            Registration.getOrgsByPageAndName(1,userWalkup.orgPaginationSize,a)\r\n            .then((res)=> {\r\n                userWalkup.organizationList = res\r\n                userWalkup.updatingOrgs=false\r\n                $scope.$digest()\r\n            })\r\n            .fail((err) => {\r\n                userWalkup.updatingOrgs=false\r\n                $scope.$digest()\r\n                 console.error(\"There was an error in filtering orgs by name \"+err)\r\n            })  \r\n        }\r\n              \r\n    })\r\n\r\n    userWalkup.checkDuplicateEmail = (value) => {\r\n        if (value &&value!==\"\") {\r\n            $q.all([Registration.isEmailTaken(value).promise])\r\n            .then(res => {\r\n                userWalkup.isEmailTaken=res[0]\r\n            })\r\n        }\r\n        else{\r\n            userWalkup.isEmailTaken=true;\r\n        }        \r\n    }\r\n    \r\n    userWalkup.checkDuplicateEmail(userWalkup.user.email)\r\n    userWalkup.customErrors = {\r\n        userName: {\r\n            usernameTaken: Registration.isUsernameTaken\r\n        },\r\n        email: {\r\n            email: function(){\r\n                var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n                if (userWalkup.user.email) {\r\n                    return EMAIL_REGEXP.test(userWalkup.user.email)\r\n                }else{\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        answersMatch: {\r\n            answersMatch:function(){\r\n                if (userWalkup.userLogin && userWalkup.userLogin.challengeAnswer2) {\r\n                    return userWalkup.userLogin.challengeAnswer2!==userWalkup.userLogin.challengeAnswer1;\r\n                }else{\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Error handlers for Inline Edits in review page\r\n    userWalkup.inlineEdit = {\r\n        firstName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.firstNameError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.firstNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveFirstName=value===\"\" || !value\r\n        },\r\n        lastName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.lastNameError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.lastNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveLastName=value===\"\" || !value\r\n        },\r\n        email:function(value){\r\n            var EMAIL_REGXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.emailError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.emailError={\r\n                    required: value===\"\" || !value,\r\n                    email:!EMAIL_REGXP.test(value)\r\n                }\r\n                //emailTaken:\r\n                if (!userWalkup.inlineEdit.emailError.required && !userWalkup.inlineEdit.emailError.email) {\r\n                    userWalkup.checkDuplicateEmail(value)\r\n                }\r\n                  \r\n            }\r\n            userWalkup.inlineEdit.noSaveEmail=value===\"\" || !value || !EMAIL_REGXP.test(value)\r\n        },\r\n        //For autocomplete need to handle differently\r\n        country:function(value){\r\n            console.log(value)\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.countryError={\r\n                    required:true\r\n                }\r\n            }else{\r\n                userWalkup.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n            userWalkup.inlineEdit.noSaveCountry=value===undefined \r\n        },\r\n        address1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.address1Error={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.address1Error={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveAddress1=value===\"\" || !value\r\n        },\r\n        telephone:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.telephoneError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.telephoneError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveTelephone=value===\"\" || !value\r\n        },\r\n        userId:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.userIdError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.userIdError={\r\n                    required: value===\"\" || !value,\r\n                } \r\n                //usernameTaken: \r\n                if (!userWalkup.inlineEdit.userIdError.required) {\r\n                    $q.all([Registration.isUsernameTaken(value).promise])\r\n                    .then(res => {\r\n                        userWalkup.inlineEdit.userIdError.usernameTaken=!res[0]\r\n                        userWalkup.inlineEdit.noSaveUserId=value===\"\" || !value ||userWalkup.inlineEdit.userIdError.usernameTaken\r\n                    })\r\n                }\r\n                 \r\n            }\r\n             userWalkup.inlineEdit.noSaveUserId=value===\"\" || !value\r\n        },\r\n        challengeAnswer1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.challengeAnswer1Error={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.challengeAnswer1Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userWalkup.userLogin.challengeAnswer2\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveChallengeAnswer1=value===\"\" || !value||value===userWalkup.userLogin.challengeAnswer2\r\n        },\r\n        challengeAnswer2:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.challengeAnswer2Error={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.challengeAnswer2Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userWalkup.userLogin.challengeAnswer1\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveChallengeAnswer2=value===\"\" || !value || value===userWalkup.userLogin.challengeAnswer1\r\n        },\r\n        //on save functions needed to show error when pressed enter\r\n        updateFirstNameError:function(){\r\n            userWalkup.inlineEdit.firstName(userWalkup.user.name.given)\r\n        },\r\n        updateLastNameError:function(){\r\n            userWalkup.inlineEdit.lastName(userWalkup.user.name.surname)\r\n        },\r\n        updateEmailError: function() {\r\n            userWalkup.emailRe=userWalkup.user.email;\r\n            userWalkup.inlineEdit.email(userWalkup.user.email)\r\n        },\r\n        updateCountryError: function() {\r\n            if (userWalkup.userCountry) {\r\n                userWalkup.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n        },\r\n        updateAddress1Error:function(){\r\n            userWalkup.inlineEdit.address1(userWalkup.user.addresses[0].streets[0])\r\n        },\r\n        updateTelephoneError:function(){\r\n            userWalkup.inlineEdit.telephone(userWalkup.user.phones[0].number)\r\n        },\r\n        updateUserIdError:function(){\r\n            userWalkup.inlineEdit.userId(userWalkup.userLogin.username)\r\n        },\r\n        updateChallengeAnswer1Error:function(){\r\n            userWalkup.inlineEdit.challengeAnswer1(userWalkup.userLogin.challengeAnswer1)\r\n        },\r\n        updateChallengeAnswer2Error:function(){\r\n            userWalkup.inlineEdit.challengeAnswer2(userWalkup.userLogin.challengeAnswer2)\r\n        },\r\n\r\n    }\r\n\r\n    /* --------------------------------------------- WATCHERS END --------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization', [])\r\n.config(['$stateProvider', ($stateProvider) =>  {\r\n\r\n    const templateBase = 'app/modules/organization/';\r\n\r\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\r\n\r\n    const loginRequired = true;\r\n\r\n    $stateProvider\r\n        .state('organization', {\r\n            url: '/organization',\r\n            template: '<div ui-view></div>',\r\n            access: loginRequired\r\n        })\r\n        // Profile --------------------------------------------------\r\n        .state('organization.profile', {\r\n            url: '/profile/:orgId?userId',\r\n            templateUrl: templateBase + 'profile/organization-profile.html',\r\n            controller: returnCtrlAs('orgProfile'),\r\n            access: loginRequired\r\n        })\r\n        // Directory ------------------------------------------------\r\n        .state('organization.directory', {\r\n            abstract:true,\r\n            template: '<div ui-view></div>'\r\n        })\r\n        .state('organization.directory.userList', {\r\n            url: '/directory/:orgId?page&pageSize&sortBy&status&fullName',\r\n            templateUrl: templateBase + 'directory/user-list/directory-userList.html',\r\n            controller: returnCtrlAs('orgDirectory'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.directory.userDetails', {\r\n            url: '/user-details?userId&orgId',\r\n            views: {\r\n                '': {\r\n                    templateUrl: templateBase + 'directory/user-details/directory-userDetails.html',\r\n                    controller: returnCtrlAs('userDetails')\r\n                },\r\n                'profile@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/profile/userDetails-profile.html',\r\n                    controller: returnCtrlAs('userDetailsProfile')\r\n                },\r\n                'applications@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/applications/userDetails-applications.html',\r\n                    controller: returnCtrlAs('userDetailsApps')\r\n                },\r\n                'roles@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/roles/userDetails-roles.html',\r\n                    controller: returnCtrlAs('userDetailsRoles')\r\n                },\r\n                'history@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/history/userDetails-history.html',\r\n                    controller: returnCtrlAs('userDetailsHistory')\r\n                }\r\n            },\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.directory.userAppDetails', {\r\n            url: '/user-app-details/:appId?userId&orgId',\r\n            templateUrl: templateBase + 'directory/user-app-details/directory-userAppDetails.html',\r\n            controller: returnCtrlAs('userAppDetails'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.directory.orgDetails', {\r\n            url: '/org-details?orgId&page&pageSize',\r\n            views: {\r\n                '': {\r\n                    templateUrl: templateBase + 'directory/org-details/directory-orgDetails.html',\r\n                    controller: returnCtrlAs('orgDetails')\r\n                },\r\n                'profile@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/profile/orgDetails-profile.html',\r\n                    controller: returnCtrlAs('orgDetailsProfile')\r\n                },\r\n                'applications@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/applications/orgDetails-applications.html',\r\n                    controller: returnCtrlAs('orgDetailsApps')\r\n                },\r\n                'users@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/users/orgDetails-users.html',\r\n                    controller: returnCtrlAs('orgDetailsUsers')\r\n                },\r\n                'hierarchy@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/hierarchy/orgDetails-hierarchy.html',\r\n                    controller: returnCtrlAs('orgDetailsHierarchy')\r\n                }\r\n            },\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        // Hierarchy ------------------------------------------------\r\n        .state('organization.hierarchy', {\r\n            url: '/hierarchy/:orgId',\r\n            templateUrl: templateBase + 'hierarchy/organization-hierarchy.html',\r\n            controller: returnCtrlAs('orgHierarchy'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        // applications----------------------------------------------\r\n        .state('organization.applications', {\r\n            url: '/applications/:orgId?name&page&pageSize&service.category&sortBy&refine',\r\n            templateUrl: templateBase + 'applications/organization-applications.html',\r\n            controller: returnCtrlAs('organizationApplications'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.applicationDetails', {\r\n            url: '/applications/:appId/details/:orgId',\r\n            templateUrl: templateBase + 'applications/applicationDetails/organization-applicationDetails.html',\r\n            controller: returnCtrlAs('orgApplicationDetails'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.newRequest', {\r\n            url: '/request',\r\n            templateUrl: templateBase + 'applications/appRequest/newRequest/appRequest-newRequest.html',\r\n            controller: returnCtrlAs('orgAppRequest'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.newRequestReview', {\r\n            url: '/request/review',\r\n            templateUrl: templateBase + 'applications/appRequest/newRequestReview/appRequest-newRequestReview.html',\r\n            controller: returnCtrlAs('orgAppRequestReview'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.search', {\r\n            url: '/search?name&category&page&pageSize',\r\n            templateUrl: templateBase + 'applications/search/orgApplications-search.html',\r\n            controller: returnCtrlAs('orgAppSearch'),\r\n            access: loginRequired\r\n        })\r\n        // Roles ----------------------------------------------------\r\n        .state('organization.roles', {\r\n            url: '/roles?orgID',\r\n            templateUrl: templateBase + 'roles/organization-roles.html',\r\n            controller: returnCtrlAs('orgRoles'),\r\n            access:loginRequired\r\n        })\r\n        // Requests -------------------------------------------------\r\n        .state('organization.requests', {\r\n            url: '/requests',\r\n            template: '<div ui-view></div>',\r\n            access: loginRequired\r\n        })\r\n        .state('organization.requests.newGrant', {\r\n            url: '/new-grant?orgId&userId',\r\n            templateUrl: templateBase + 'requests/newGrant/requests-newGrant.html',\r\n            controller: returnCtrlAs('newGrant'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToUserLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newGrantSearch', {\r\n            url: '/search?type&category&name&orgId&userId&page&pageSize&sortBy',\r\n            templateUrl: templateBase + 'requests/newGrant/search/search.html',\r\n            controller: returnCtrlAs('newGrantSearch'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToUserLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newGrantClaims', {\r\n            url: '/claims?orgId&userId',\r\n            templateUrl: templateBase + 'requests/newGrant/claims/claims.html',\r\n            controller: returnCtrlAs('newGrantClaims'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToUserLogic\r\n            }\r\n        })\r\n        // Org Grant\r\n        .state('organization.requests.newOrgGrant', {\r\n            url: '/new-org-grant?orgId',\r\n            templateUrl: templateBase + 'requests/newOrgGrant/requests-newGrant.html',\r\n            controller: returnCtrlAs('newOrgGrant'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToOrgLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newOrgGrantSearch', {\r\n            url: '/search-org?type&category&name&orgId&page&pageSize&sortBy',\r\n            templateUrl: templateBase + 'requests/newOrgGrant/search/search.html',\r\n            controller: returnCtrlAs('newOrgGrantSearch'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToOrgLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newOrgGrantClaims', {\r\n            url: '/claims-org?orgId',\r\n            templateUrl: templateBase + 'requests/newOrgGrant/claims/claims.html',\r\n            controller: returnCtrlAs('newOrgGrantClaims'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToOrgLogic\r\n            }\r\n        })\r\n        .state('organization.requests.pendingRequests', {\r\n            url: '/pending-requests?userId&orgId',\r\n            templateUrl: templateBase + 'requests/pendingRequestsReview/requests-pendingRequests.html',\r\n            controller: returnCtrlAs('pendingRequests'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.requests.pendingRequestsReview', {\r\n            url: '/pending-requests/review?userId&orgId',\r\n            templateUrl: templateBase + 'requests/pendingRequestsReview/requests-pendingRequestsReview.html',\r\n            controller: returnCtrlAs('pendingRequestsReview'),\r\n            access: loginRequired\r\n        })\r\n        // Approval of Org requests\r\n        .state('organization.requests.organizationRequest', {\r\n            url: '/organization-request?orgId&userId',\r\n            templateUrl: templateBase + 'requests/organizationRequest/requests-organization.html',\r\n            controller: returnCtrlAs('organizationRequest'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.organizationRequestReview', {\r\n            url: '/organization-request-review?orgId',\r\n            templateUrl: templateBase + 'requests/organizationRequest/requests-organizationReview.html',\r\n            controller: returnCtrlAs('organizationRequestReview'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.organizationAppRequest', {\r\n            url: '/organization-app-request?orgId&userId',\r\n            templateUrl: templateBase + 'requests/organizationAppRequests/requests-organization.html',\r\n            controller: returnCtrlAs('organizationAppRequest'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.organizationAppRequestReview', {\r\n            url: '/organization-app-request-review?orgId',\r\n            templateUrl: templateBase + 'requests/organizationAppRequests/requests-organizationReview.html',\r\n            controller: returnCtrlAs('organizationAppRequestReview'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.personRequest', {\r\n            url: '/person-request?userId&orgId',\r\n            templateUrl: templateBase + 'requests/personRequest/requests-person.html',\r\n            controller: returnCtrlAs('personRequest'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.requests.personRequestReview', {\r\n            url: '/person-request-review?userId&orgId',\r\n            templateUrl: templateBase + 'requests/personRequest/requests-personReview.html',\r\n            controller: returnCtrlAs('personRequestReview'),\r\n            access: loginRequired\r\n        })\r\n\r\n        // ADMIN...\r\n        .state('organization.requests.usersRegistrationRequests', {\r\n            url:'/userRequests',\r\n            templateUrl: templateBase + 'requests/usersRequests/usersRegistrationRequests/requests-RegistrationRequests.html',\r\n            controller: returnCtrlAs('usersRegistrationRequests'),\r\n            access: appConfig.orgAdminLogic\r\n        })\r\n        .state('organization.requests.usersAppRequests', {\r\n            url:'/applicationRequests',\r\n            templateUrl: templateBase + 'requests/usersRequests/usersAppRequests/requests-AppRequests.html',\r\n            controller: returnCtrlAs('usersAppRequests'),\r\n            access: appConfig.orgAdminLogic\r\n        })\r\n        .state('invitation', {\r\n            url: '/invitation',\r\n            template: '<div ui-view></div>',\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.inviteSelect', {\r\n            url: '/select',\r\n            templateUrl:templateBase + 'invitation/invitation.html',\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.inviteUser', {\r\n            url: '/user',\r\n            templateUrl:templateBase + 'invitation/user/user.html',\r\n            controller: returnCtrlAs('user'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.division', {\r\n            url: '/division',\r\n            templateUrl:templateBase + 'invitation/division/division.html',\r\n            controller: returnCtrlAs('division'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.tlo', {\r\n            url: '/tlo',\r\n            templateUrl:templateBase + 'invitation/tlo/tlo.html',\r\n            controller: returnCtrlAs('tlo'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        // Org Requests/ADMIN\r\n        .state('organization.requests.orgRegistrationRequests', {\r\n            url:'/orgRequests?page&pageSize',\r\n            templateUrl: templateBase + 'requests/orgRequests/orgRegistrationRequests/requests-RegistrationRequests.html',\r\n            controller: returnCtrlAs('orgRegistrationRequests'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.orgAppRequests', {\r\n            url:'/orgApplicationRequests?pageSize&page',\r\n            templateUrl: templateBase + 'requests/orgRequests/orgAppRequests/requests-AppRequests.html',\r\n            controller: returnCtrlAs('orgAppRequests'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        });\r\n}]);\r\n\r\nangular.module('organization')\r\n.controller('orgAppRequestCtrl', function(API,DataStorage,Loader,User,$scope,$state,$stateParams) {\r\n\r\n    const orgAppRequest = this;\r\n    const orgAppsBeingRequested = DataStorage.getType('orgAppsBeingRequested');\r\n    const loaderName = 'orgAppRequest.loading';\r\n    orgAppRequest.stateParamsOrgId=User.user.organization.id;\r\n\r\n    orgAppRequest.orgAppsBeingRequested = [];\r\n    orgAppRequest.numberOfOrgRequests = 0;\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(loaderName);\r\n\r\n    if (orgAppsBeingRequested) {\r\n        orgAppRequest.numberOfOrgRequests = Object.keys(orgAppsBeingRequested).length;\r\n    }\r\n    \r\n    API.cui.getOrgAppCategories({organizationId:orgAppRequest.stateParamsOrgId})\r\n    .then((res)=>{\r\n        orgAppRequest.categories = res;\r\n        Loader.offFor(loaderName);\r\n        $scope.$digest();\r\n    })\r\n    .fail((err)=>{\r\n         Loader.offFor(loaderName);\r\n    });\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgAppRequest.searchCallback = function(searchWord) {\r\n        $state.go('organization.search', {name: searchWord});\r\n    };\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgAppRequestReviewCtrl', function(API,APIError,BuildPackageRequests,DataStorage,Loader,User,$q,$state,$timeout,AppRequests,$stateParams) {\r\n\r\n    const orgAppRequestReview = this\r\n    const loaderName = 'orgAppRequestReview.'\r\n    orgAppRequestReview.stateParamsOrgId=$stateParams.orgId;\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(loaderName + 'loading')\r\n    /*orgAppRequestReview.appsRequests = DataStorage.getType('orgAppsBeingRequested', User.user.id)*/\r\n    Loader.offFor(loaderName + 'loading')\r\n\r\n     if(Object.keys(AppRequests.get()).length===0 && DataStorage.getType('orgAppsBeingRequested', User.user.id)) {\r\n        AppRequests.set(DataStorage.getType('orgAppsBeingRequested', User.user.id));\r\n    }\r\n\r\n\r\n    const appRequests=AppRequests.get(),\r\n        appsBeingRequested=Object.keys(appRequests);\r\n\r\n    if (appsBeingRequested.length===0) {\r\n        $state.go('organization.search',{orgId:orgAppRequestReview.stateParamsOrgId});\r\n    }\r\n\r\n    orgAppRequestReview.appRequests=[];\r\n\r\n    for(let i=0; i < appsBeingRequested.length; i += 2){\r\n        const applicationGroup = [];\r\n        applicationGroup.push(appRequests[appsBeingRequested[i]]);\r\n        if (appRequests[appsBeingRequested[i+1]]) {\r\n            applicationGroup.push(appRequests[appsBeingRequested[i+1]]);\r\n        }\r\n        //get Terms And Conditions for requested packages\r\n        applicationGroup.forEach(app=>{\r\n            if (app.servicePackage.organizationTacEnabled) {\r\n                API.cui.getOrgTacOfPackage({packageId:app.servicePackage.id})\r\n                .then(res=>{\r\n                    app.tac=res;\r\n                })\r\n                .fail(err=>{\r\n                    console.log(\"There was an error fetching Tac\")\r\n                    console.log(err)\r\n                })\r\n            }\r\n        })\r\n        orgAppRequestReview.appRequests.push(applicationGroup);\r\n    }\r\n\r\n    orgAppRequestReview.numberOfRequests=0;\r\n    appsBeingRequested.forEach(() => {\r\n        orgAppRequestReview.numberOfRequests += 1;\r\n    });\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgAppRequestReview.removeApplicationRequest = (requestId) => {\r\n        delete orgAppRequestReview.appRequests[requestId]\r\n\r\n        if (Object.keys(orgAppRequestReview.appRequests).length === 0) {\r\n            DataStorage.deleteType('orgAppsBeingRequested')\r\n            $state.go('organization.applications',{orgId:orgAppRequestReview.stateParamsOrgId})\r\n        } \r\n        else {\r\n            DataStorage.setType('orgAppsBeingRequested', orgAppRequestReview.appRequests)\r\n        }\r\n    }\r\n\r\n    orgAppRequestReview.submit = () => {\r\n        let requestArray = []\r\n\r\n        Loader.onFor(loaderName + 'attempting')\r\n        \r\n        /*Object.keys(orgAppRequestReview.appRequests).forEach((request) => {\r\n            requestArray.push(orgAppRequestReview.appRequests[request])\r\n        })\r\n*/\r\n         orgAppRequestReview.appRequests.forEach((appRequestGroup,i) => {\r\n            appRequestGroup.forEach((appRequest,x) => {\r\n                 requestArray[i+x] = appRequest;\r\n            })\r\n            \r\n        })\r\n\r\n        $q.all(BuildPackageRequests(User.user.organization.id, 'organization', requestArray))\r\n        .then(() => {\r\n            Loader.offFor(loaderName + 'attempting')\r\n            DataStorage.deleteType('orgAppsBeingRequested')\r\n            AppRequests.clear(); // clears app requests if the request goes through\r\n            DataStorage.setType('orgAppsBeingRequested',{});\r\n            orgAppRequestReview.success=true\r\n            $timeout(() => {\r\n                 $state.go('organization.applications',{orgId:User.user.organization.id});\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n            APIError.onFor(loaderName + 'requestError')\r\n            Loader.offFor(loaderName + 'attempting')\r\n        })\r\n    }\r\n\r\n    orgAppRequestReview.updateSearch = (nameSearch) => {\r\n        orgAppRequestReview.search = nameSearch;\r\n    };\r\n\r\n    orgAppRequestReview.showTac= (application)=>{\r\n        if (application.tac) {\r\n            orgAppRequestReview.tacContent=application.tac.tacText\r\n            orgAppRequestReview.step=2\r\n        }\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgApplicationDetailsCtrl', function(API,APIHelpers,APIError,Loader,Sort,User,$q,$scope,$state,$stateParams) {\r\n\r\n    const orgApplicationDetails = this;\r\n    const organizationId = User.user.organization.id;\r\n    const serviceId = $stateParams.appId;\r\n    const loaderName = 'orgApplicationDetails.';\r\n    orgApplicationDetails.stateParamsOrgId=$stateParams.orgId\r\n\r\n    orgApplicationDetails.sortFlag = true;\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const checkIfRequestable = (organizationId, relatedAppsArray) => {\r\n    \tif (relatedAppsArray) {\r\n\t    \tAPI.cui.getOrganizationRequestableApps({organizationId: organizationId})\r\n\t    \t.then((res) => {\r\n\t    \t\trelatedAppsArray.forEach((app) => {\r\n\t    \t\t\tlet requestable = _.find(res, (id) => { return app.id = id });\r\n\t    \t\t\tif (requestable) {\r\n\t    \t\t\t\tapp.requestable = true;\r\n\t    \t\t\t}\r\n\t    \t\t});\r\n\t    \t})\r\n            .then(() => {\r\n                $scope.$digest();\r\n            });\r\n    \t}\r\n    };\r\n\r\n    const getGrantArrayData = (grantArray) => {\r\n        let promises = [];\r\n\r\n        Loader.onFor(loaderName + 'loadingPageData');\r\n\r\n        grantArray.forEach((grant) => {\r\n            promises.push(\r\n                API.cui.getPerson({personId: grant.grantee.id})\r\n                .then((res) => {\r\n                    grant.person = res;\r\n                    return API.cui.getOrganization({organizationId: grant.person.organization.id});\r\n                })\r\n                .then((res) => {\r\n                    grant.organization = res;\r\n                    return API.cui.getPersonPackageClaims({grantee: grant.person.organization.id, packageId: grant.servicePackage.id});\r\n                })\r\n                .then((res) => {\r\n                    grant.claims = res.packageClaims;\r\n                })\r\n            );\r\n        });\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n            orgApplicationDetails.grantList = grantArray;\r\n            Loader.offFor(loaderName + 'loadingPageData');\r\n        })\r\n        .catch((error) => {\r\n            Loader.offFor(loaderName + 'loadingPageData');\r\n            APIError.onFor(loaderName + 'grants: ', error);\r\n        });\r\n    };\r\n\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(loaderName + 'app');\r\n\r\n    API.cui.getOrganizationHierarchy({organizationId: User.user.organization.id})\r\n    .then((res) => {\r\n        orgApplicationDetails.organizationList = APIHelpers.flattenOrgHierarchy(res);\r\n        return API.cui.getOrganizationGrantedApps({organizationId: organizationId, qs: [['service.id', serviceId]]});\r\n    })\r\n    .then((res) => {\r\n    \torgApplicationDetails.application = res[0];\r\n    \treturn API.cui.getOrganizationRequestableApps({organizationId: organizationId, qs: [['service.id', serviceId]]});\r\n    })\r\n    .then((res) => {\r\n    \torgApplicationDetails.application.bundledApps = res[0].bundledApps;\r\n    \torgApplicationDetails.application.relatedApps = res[0].relatedApps;\r\n    \t/*return API.cui.getPackageGrants    ({qs: [\r\n    \t\t['grantedPackageId', orgApplicationDetails.application.servicePackage.id],\r\n    \t\t['granteeType', 'person']\r\n    \t]});*/\r\n        Loader.offFor(loaderName + 'app');\r\n        checkIfRequestable(organizationId, orgApplicationDetails.application.relatedApps);\r\n         $scope.$apply();\r\n    })\r\n   /* .then((res) => {\r\n        Loader.offFor(loaderName + 'app');\r\n        orgApplicationDetails.unparsedGrantList = res;\r\n        getGrantArrayData(orgApplicationDetails.unparsedGrantList);*/\r\n        /*Loader.onFor(loaderName + 'user');*/\r\n        /*checkIfRequestable(organizationId, orgApplicationDetails.application.relatedApps);*/\r\n        /*return API.cui.getPersons({qs: [\r\n            ['organization.id', organizationId]\r\n        ]});*//*Loader.offFor(loaderName + 'user');*/\r\n   /* })*/\r\n    /*.then((res) => {\r\n        orgApplicationDetails.grantList = res;\r\n        Loader.offFor(loaderName + 'user');\r\n        $scope.$apply();\r\n    })*/\r\n    .fail((error) => {\r\n    \tAPIError.onFor(loaderName + 'grants: ', error);\r\n        Loader.offFor(loaderName + 'user');\r\n    });\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgApplicationDetails.sort = (sortValue) => { \r\n        Sort.listSort(orgApplicationDetails.userList, sortValue, orgApplicationDetails.sortFlag);\r\n        orgApplicationDetails.sortFlag =! orgApplicationDetails.sortFlag;\r\n    };\r\n\r\n    orgApplicationDetails.parseGrantUsersByStatus = (status) => {\r\n        if (status === 'all') {\r\n            orgApplicationDetails.grantList = orgApplicationDetails.unparsedGrantList;\r\n        }\r\n        else {\r\n            let filteredGrantUsers = _.filter(orgApplicationDetails.unparsedGrantList, function(grant) {\r\n                return grant.person.status === status;\r\n            });\r\n            orgApplicationDetails.grantList = filteredGrantUsers;\r\n        }\r\n    };\r\n\r\n    orgApplicationDetails.newGrants = () => {\r\n        $state.go('applications.orgApplications.newGrant', {appId: serviceId});\r\n    };\r\n\r\n    orgApplicationDetails.switchDivision = (organization) => {\r\n        Loader.onFor(loaderName + 'loadingPageData');\r\n\r\n        API.cui.getGrants({qs: [\r\n            ['grantedPackageId', orgApplicationDetails.application.servicePackage.id],\r\n            ['granteeType', 'person'],\r\n            ['organization.id', organization.id]\r\n        ]})\r\n        .then((res) => {\r\n            orgApplicationDetails.unparsedGrantList = res;\r\n            getGrantArrayData(orgApplicationDetails.unparsedGrantList);\r\n            Loader.offFor(loaderName + 'loadingPageData');\r\n        })\r\n        .fail((error) => {\r\n            APIError.onFor(loaderName + 'grants: ', error);\r\n        });\r\n    };\r\n\r\n    orgApplicationDetails.requestRelatedApp = (service) => {\r\n        let data = {\r\n            requestor: {\r\n                id: organizationId,\r\n                type: 'organization'  \r\n            } ,\r\n            'servicePackage': {\r\n                id: service.packageId\r\n            }\r\n        };\r\n\r\n        Loader.onFor(loaderName + 'appRequest');\r\n\r\n        API.cui.postRequest({data: data})\r\n        .then(() => {\r\n            service.requestable = false;\r\n            Loader.offFor(loaderName + 'appRequest');\r\n            $scope.$digest();\r\n        })\r\n        .fail((error) => {\r\n            APIError.onFor(loaderName + 'appRequest')\r\n            console.log(error);\r\n            $scope.$digest();\r\n        });\r\n    };\r\n\r\n\r\n    orgApplicationDetails.mobileTabs = (tab) =>{\r\n\r\n        if(tab == 'bundled'){\r\n            orgApplicationDetails.mobileTabs.bundled   =   true;\r\n            orgApplicationDetails.mobileTabs.related   =   false;\r\n        }else if(tab == 'related'){\r\n            orgApplicationDetails.mobileTabs.bundled   =   false;\r\n            orgApplicationDetails.mobileTabs.related   =   true;\r\n        }\r\n    };\r\n\r\n    orgApplicationDetails.suspendApplication = (organization) => {\r\n        Loader.onFor(loaderName + 'app');\r\n\r\n        var suspendObj= {\r\n                \"grantee\":{\r\n                  \"id\":orgApplicationDetails.application.owningOrganization.id,\r\n                  \"type\":\"organization\",\r\n                  \"realm\":orgApplicationDetails.application.realm\r\n                },\r\n                \"servicePackage\":{\r\n                  \"id\":orgApplicationDetails.application.servicePackage.id,\r\n                  \"type\":\"servicepackage\",\r\n                  \"realm\":orgApplicationDetails.application.realm\r\n                },\r\n                \"justification\":\"Suspending Organization Application\"\r\n                };\r\n\r\n        API.cui.suspendOrgPkg({data: suspendObj})\r\n        .then((res) => {\r\n            orgApplicationDetails.success='true';\r\n            Loader.offFor(loaderName + 'app');\r\n            $timeout(() => {\r\n                $state.go('applications.orgApplications.applicationList');\r\n            }, 3000);\r\n        })\r\n        .fail((error) => {\r\n            Loader.offFor(loaderName + 'app');\r\n            orgApplicationDetails.suspendError=true;\r\n            $scope.$apply();\r\n            /*APIError.onFor(loaderName + 'grants: ', error);*/\r\n        });\r\n    };\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n});\r\nangular.module('organization')\r\n.controller('organizationApplicationsCtrl', function(API,Sort,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\r\n    const organizationApplications = this;\r\n    organizationApplications.stateParamsOrgId=$stateParams.orgId\r\n\r\n    organizationApplications.loading = true;\r\n    organizationApplications.search = {orgId:organizationApplications.stateParamsOrgId};\r\n    organizationApplications.search.page = organizationApplications.search.page || 1;\r\n    organizationApplications.paginationPageSize = organizationApplications.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    organizationApplications.search.pageSize = organizationApplications.paginationPageSize;\r\n\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) organizationApplications.search[property] = undefined;\r\n        organizationApplications.search[property] === firstValue ? organizationApplications.search[property] = secondValue : organizationApplications.search[property] = firstValue;\r\n    };*/\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) {\r\n            organizationApplications.search[property] = undefined;\r\n            return\r\n        }\r\n        organizationApplications.search[property] = organizationApplications.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }*/\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            organizationApplications.search[property] = undefined\r\n            return\r\n        }\r\n        organizationApplications.search[property] = organizationApplications.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    const getPackageServices = (ArrayOfPackages) => {\r\n        let services = [];\r\n\r\n        ArrayOfPackages.forEach((servicePackage) => {\r\n            API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\r\n            .then((res) => {\r\n                res.forEach((service) => {\r\n                    services.push(service);\r\n                });\r\n            });\r\n        });\r\n\r\n        return services;\r\n    };\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            organizationApplications.loading = false;\r\n        }\r\n        else {\r\n            organizationApplications.search.name = $stateParams.name;\r\n            organizationApplications.search.category = $stateParams.category;\r\n            organizationApplications.search.sortBy = $stateParams.sortBy;\r\n            organizationApplications.search.refine = $stateParams.refine;\r\n            if($stateParams.page)\r\n                organizationApplications.search.page = parseInt($stateParams.page);\r\n            if($stateParams.pageSize)\r\n                organizationApplications.search.pageSize = parseInt($stateParams.pageSize);\r\n\r\n            \r\n            API.cui.getOrgAppCategories({organizationId:organizationApplications.stateParamsOrgId})\r\n            .then((res)=>{\r\n                organizationApplications.categories = res;\r\n                $scope.$digest();\r\n            })\r\n            .fail((err)=>{\r\n               \r\n            });\r\n\r\n        }\r\n\r\n        let queryParams = [['page', String(organizationApplications.search.page)], ['pageSize', String(organizationApplications.search.pageSize)]];\r\n        const promises = [];\r\n        const opts = {\r\n            organizationId: organizationApplications.stateParamsOrgId,\r\n            qs: queryParams\r\n        };\r\n\r\n        if (organizationApplications.search.name) queryParams.push(['service.name', organizationApplications.search.name]);\r\n        if (organizationApplications.search.category) queryParams.push(['service.category', organizationApplications.search.category]);\r\n        // sortBy: +/-service.name, +/-service.creation, +/-grant.instant\r\n        if (organizationApplications.search.sortBy) queryParams.push(['sortBy', organizationApplications.search.sortBy]);\r\n\r\n        switch (organizationApplications.search.refine) {\r\n            case 'active':\r\n            case 'suspended':\r\n                queryParams.push(['grant.status', organizationApplications.search.refine]);\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n              /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                break;\r\n            case 'pending':\r\n                /*promises.push(\r\n                    API.cui.getOrgPendingServicePackages({qs: [['requestor.id', organizationId], ['requestor.type', 'organization']]})\r\n                    .then((res) => {\r\n                        return getPackageServices(res);\r\n                    }),\r\n                    API.cui.getOrganizationRequestableCount({organizationId: organizationId})\r\n                );*/\r\n                queryParams.push(['grant.status', organizationApplications.search.refine]);\r\n               /* promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n            case undefined:\r\n                /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n        }\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n            organizationApplications.appList = res[0];\r\n            organizationApplications.count = res[1];\r\n            /*organizationApplications.count = res[0].length;*/\r\n            organizationApplications.loading = false;\r\n            if (organizationApplications.reRenderPaginate) organizationApplications.reRenderPaginate();\r\n        })\r\n        .catch(err => {\r\n            organizationApplications.loadingError=true\r\n            organizationApplications.loading = false;\r\n        })\r\n    };\r\n    // get Organization to display name\r\n    API.cui.getOrganization({organizationId:organizationApplications.stateParamsOrgId})\r\n    .then(res => {\r\n        organizationApplications.organization=res;\r\n    })\r\n    onLoad(false);\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    organizationApplications.pageChange = (newpage) => {\r\n        organizationApplications.updateSearch('page', newpage);\r\n    };\r\n\r\n    organizationApplications.updateSearchByName = () => {\r\n        organizationApplications.updateSearch('name',organizationApplications.search['name'])\r\n    }\r\n\r\n    organizationApplications.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType){\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name');\r\n                break;\r\n            case 'date':\r\n                switchBetween('sortBy', '+grant.instant', '-grant.instant');\r\n                break;\r\n            case 'status':\r\n                organizationApplications.search.page = 1;\r\n                organizationApplications.search.refine = updateValue;\r\n                break;\r\n            case 'category':\r\n                organizationApplications.search.page = 1;\r\n                organizationApplications.search.category = $filter('cuiI18n')(updateValue);\r\n                break;\r\n            case 'name':\r\n                organizationApplications.search.page = 1\r\n                break\r\n        }\r\n\r\n        // Updates URL, doesn't change state\r\n        $state.transitionTo('organization.applications', organizationApplications.search, {notify: false});\r\n        onLoad(true);\r\n    };\r\n\r\n    organizationApplications.goToDetails = (application) => {\r\n        const opts = {\r\n            appId: application.id,\r\n            orgId: application.owningOrganization.id\r\n        };\r\n        $state.go('organization.applicationDetails', opts);\r\n    };\r\n\r\n    // ON CLICK FUNCTIONS END ---------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgAppSearchCtrl',function(API,DataStorage,Loader,User,$pagination,$q,$state,$stateParams) {\r\n\r\n    const orgAppSearch = this;\r\n    const loaderName = 'orgAppSearch.loading';\r\n    orgAppSearch.stateParamsOrgId=User.user.organization.id;\r\n\r\n    orgAppSearch.packageRequests = DataStorage.getType('orgAppsBeingRequested', User.user.id) || {};\r\n    orgAppSearch.appCheckbox = {};\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const processNumberOfRequestedApps = (pkgRequest) => {\r\n        if (pkgRequest) orgAppSearch.numberOfRequests++;\r\n        else orgAppSearch.numberOfRequests--;\r\n    };\r\n\r\n    const updateViewList = (list) => {\r\n        let deferred= $q.defer()\r\n        orgAppSearch.viewList=[]\r\n        let qs=[]\r\n        let apiPromises = []\r\n        angular.forEach(list, (app,parentIndex) => {\r\n            // Child App and Parent app requested by user\r\n            if(app.servicePackage.parent&&app.relatedApps){\r\n                let flag=false\r\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\r\n                    if (_.find(list,{id:realtedApp.id})) {\r\n                        flag=true\r\n                    }\r\n                    else{\r\n                        qs.push(['service.id',realtedApp.id])\r\n                    }\r\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\r\n                        apiPromises.push(API.cui.getOrganizationsRequestableApps({organizationId: User.user.organization.id,qs:qs}))\r\n                        qs=[]\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                orgAppSearch.viewList.push(app)\r\n            }\r\n        })\r\n        $q.all(apiPromises)\r\n        .then(res => {\r\n            angular.forEach(res, (app) => {\r\n                if (orgAppSearch.search.name) {\r\n                    app[0].expanded=true\r\n                }\r\n                orgAppSearch.viewList.push(...app)\r\n                orgAppSearch.list.push(...app)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"There was an error loading parent requestable apps\")\r\n                deferred.reject(err)\r\n        })\r\n        return deferred.promise\r\n    }\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName);\r\n        }\r\n        else { \r\n            Loader.onFor(loaderName);\r\n            // pre populate fields based on state params on first load\r\n            let numberOfRequests = 0;\r\n\r\n            Object.keys(orgAppSearch.packageRequests).forEach(function(appId) { \r\n                // Gets the list of package requests saved in memory\r\n                // This sets the checkboxes back to marked when the user clicks back after being in request review\r\n                orgAppSearch.appCheckbox[appId] = true;\r\n                numberOfRequests++;\r\n            });\r\n            \r\n            orgAppSearch.numberOfRequests = numberOfRequests;\r\n\r\n            orgAppSearch.search = {};\r\n            orgAppSearch.search.name = $stateParams.name;\r\n            orgAppSearch.search.category = $stateParams.category;\r\n            orgAppSearch.search.page = parseInt($stateParams.page);\r\n            orgAppSearch.search.pageSize = parseInt($stateParams.pageSize);\r\n        }\r\n\r\n        let query = [];\r\n\r\n        if (orgAppSearch.search.name) query.push(['service.name',orgAppSearch.search.name]);\r\n        if (orgAppSearch.search.category) query.push(['service.category',orgAppSearch.search.category]);\r\n\r\n        orgAppSearch.search.pageSize = orgAppSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0] || 25;\r\n        query.push(['pageSize',String(orgAppSearch.search.pageSize)]);\r\n\r\n        orgAppSearch.search.page = orgAppSearch.search.page || 1;\r\n        query.push(['page',String(orgAppSearch.search.page)]);\r\n\r\n        let opts = {\r\n            organizationId: User.user.organization.id,\r\n            useCuid:true,\r\n            qs: query\r\n        };\r\n        \r\n        const promises = [API.cui.getOrganizationsRequestableApps(opts), API.cui.getOrganizationRequestableCount(opts)];\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n             orgAppSearch.list = res[0];\r\n             orgAppSearch.count = res[1];\r\n             updateViewList(res[0])\r\n             .then(() =>{\r\n                Loader.offFor(loaderName);\r\n             })\r\n             \r\n        });\r\n    };\r\n\r\n    onLoad(false);\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgAppSearch.pageChange = (newpage) => {\r\n        orgAppSearch.updateSearch('page', newpage);\r\n    };\r\n\r\n    orgAppSearch.updateSearch = function(updateType, updateValue) {\r\n        if (updateType!=='page') {\r\n            orgAppSearch.search.page = 1\r\n        }\r\n        orgAppSearch.search.orgId=orgAppSearch.stateParamsOrgId\r\n        // Update current URL without changing the state\r\n        $state.transitionTo('organization.search', orgAppSearch.search, {notify:false});\r\n        onLoad(true);\r\n    };\r\n\r\n    orgAppSearch.toggleRequest = function(application) {\r\n        if (!orgAppSearch.packageRequests[application.id]) orgAppSearch.packageRequests[application.id] = application;\r\n        else delete orgAppSearch.packageRequests[application.id];\r\n\r\n        DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests);\r\n        processNumberOfRequestedApps(orgAppSearch.packageRequests[application.id]);\r\n    };\r\n\r\n   /* orgAppSearch.saveRequestsAndCheckout = function() {\r\n        DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests);\r\n        $state.go('organization.newRequestReview');\r\n    };*/\r\n\r\n    \r\n    orgAppSearch.saveRequestsAndCheckout = function() {\r\n        let qs = []\r\n        //needed to set a flag for related apps to display in review page\r\n        angular.forEach(orgAppSearch.packageRequests,(request)=>{\r\n            if (request.relatedApps) {\r\n                request.relatedAppSelectedCount=0\r\n                request.relatedApps.forEach(relatedApp=>{\r\n                    if(_.find(orgAppSearch.packageRequests,{id:relatedApp.id})){\r\n                        relatedApp.selected=true\r\n                        request.relatedAppSelectedCount++\r\n                    }\r\n                    else{\r\n                        relatedApp.selected=false\r\n                    }\r\n                })\r\n            }\r\n            // If Selected Related app full details not available need to fetch it\r\n            if (!request.servicePackage) {\r\n                qs.push(['service.id',request.id])\r\n            }\r\n        })\r\n        if (qs.length!==0) {\r\n            API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs})\r\n            .then(res => {\r\n                res.forEach(app =>{\r\n                    orgAppSearch.packageRequests[app.id] = app\r\n                })\r\n                /*AppRequests.set(orgAppSearch.packageRequests);*/\r\n                DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests)\r\n                $state.go('organization.newRequestReview');\r\n            })\r\n        }\r\n        else{\r\n            /*AppRequests.set(orgAppSearch.packageRequests);*/\r\n            DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests)\r\n            $state.go('organization.newRequestReview');\r\n        }\r\n    };\r\n    //Related apps will always appear inside body, So need to select parent if it is selected \r\n    orgAppSearch.checkRelatedAppsBody= function(relatedApp, parent){\r\n        if (_.find(orgAppSearch.list,{id:relatedApp.id})) {\r\n            orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:relatedApp.id}))\r\n        }\r\n        else{\r\n            orgAppSearch.list.push(relatedApp)\r\n            orgAppSearch.toggleRequest(relatedApp)\r\n        }           \r\n        orgAppSearch.checkRelatedAndBundledApps(_.find(orgAppSearch.list,{id:relatedApp.id}),parent)\r\n    };\r\n\r\n//Deselect Child apps If it has any and select parent if checked from parent body \r\n    orgAppSearch.checkRelatedAndBundledApps=function(application,parent){\r\n        //if unchecked the checkbox\r\n        if (!orgAppSearch.packageRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!parent) {\r\n                application.relatedApps&&application.relatedApps.forEach((relatedApp)=>{\r\n                    if (orgAppSearch.appCheckbox[relatedApp.id]) {\r\n                        orgAppSearch.appCheckbox[relatedApp.id]=!orgAppSearch.appCheckbox[relatedApp.id]\r\n                        orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:relatedApp.id}))\r\n                    }\r\n                })\r\n                orgAppSearch.checkBundledApps(application,false)\r\n            }      \r\n        }else{\r\n            if (parent) {\r\n                if (!orgAppSearch.appCheckbox[parent.id]) {\r\n                    orgAppSearch.appCheckbox[parent.id]=true\r\n                    orgAppSearch.toggleRequest(parent)\r\n                    orgAppSearch.checkBundledApps(parent,true)\r\n                }\r\n            }else\r\n            orgAppSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    orgAppSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                orgAppSearch.appCheckbox[bundledApp.id]=check\r\n                if (_.find(orgAppSearch.list,{id:bundledApp.id}))\r\n                    orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:bundledApp.id}))\r\n            })\r\n        }\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsCtrl', function(API, Loader, $scope, $stateParams,APIError,APIHelpers,$timeout,$q) {\r\n\r\n    const orgDetails = this\r\n    const scopeName = 'orgDetails.'\r\n    orgDetails.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userList\"\r\n    }\r\n    orgDetails.mobileHandler = 'profile'\r\n    orgDetails.profileUsersSwitch = 'profile'\r\n    orgDetails.appsHierarchySwitch = 'apps'\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(scopeName + 'orgInfo')\r\n/*\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        orgDetails.user = res\r\n        CuiMobileNavFactory.setTitle(res.name.given + '.' + res.name.surname)\r\n    })\r\n    .fail(error => {\r\n        console.error('Failed getting user information')\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(scopeName + 'userInfo')\r\n        $scope.$digest()\r\n    })*/\r\n\r\n\r\n    const apiPromises = [\r\n        API.cui.getOrganization({ organizationId: $stateParams.orgId  })\r\n    ]\r\n\r\n    $q.all(apiPromises)\r\n    .then(([organization]) => {\r\n        // CuiMobileNavFactory.setTitle(user.name.given + '.' + user.name.surname)\r\n        orgDetails.organization = Object.assign({}, organization);\r\n        Loader.offFor(scopeName + 'orgInfo')\r\n    })\r\n    .catch(() => {\r\n        Loader.offFor(scopeName + 'orgInfo')\r\n        APIError.onFor('orgDetails.org')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------------- ON CLICK START ---------------------------------------------- */\r\n\r\n    /* --------------------------------------------- ON CLICK END ---------------------------------------------- */\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsAppsCtrl',function(API,$stateParams,$q,$state,DataStorage,$pagination,Loader,$filter,$scope) {\r\n    'use strict';\r\n\r\n\t\r\n    const orgDetailsApps = this;\r\n    const scopeName = 'orgDetailsApps.'\r\n    orgDetailsApps.stateParamsOrgId=$stateParams.orgId\r\n\r\n    Loader.onFor('orgDetailsApps.init')\r\n    orgDetailsApps.search = {orgId:orgDetailsApps.stateParamsOrgId};\r\n    orgDetailsApps.search.page = orgDetailsApps.search.page || 1;\r\n    orgDetailsApps.paginationPageSize = orgDetailsApps.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    orgDetailsApps.search.pageSize = orgDetailsApps.paginationPageSize;\r\n\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) orgDetailsApps.search[property] = undefined;\r\n        orgDetailsApps.search[property] === firstValue ? orgDetailsApps.search[property] = secondValue : orgDetailsApps.search[property] = firstValue;\r\n    };*/\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) {\r\n            orgDetailsApps.search[property] = undefined;\r\n            return\r\n        }\r\n        orgDetailsApps.search[property] = orgDetailsApps.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }*/\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            orgDetailsApps.search[property] = undefined\r\n            return\r\n        }\r\n        orgDetailsApps.search[property] = orgDetailsApps.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    const getPackageServices = (ArrayOfPackages) => {\r\n        let services = [];\r\n\r\n        ArrayOfPackages.forEach((servicePackage) => {\r\n            API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\r\n            .then((res) => {\r\n                res.forEach((service) => {\r\n                    services.push(service);\r\n                });\r\n            });\r\n        });\r\n\r\n        return services;\r\n    };\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.offFor('orgDetailsApps.init')\r\n        }\r\n        else {\r\n            orgDetailsApps.search.name = $stateParams.name;\r\n            orgDetailsApps.search.category = $stateParams.category;\r\n            orgDetailsApps.search.sortBy = $stateParams.sortBy;\r\n            orgDetailsApps.search.refine = $stateParams.refine;\r\n            if($stateParams.page)\r\n                orgDetailsApps.search.page = parseInt($stateParams.page);\r\n            if($stateParams.pageSize)\r\n                orgDetailsApps.search.pageSize = parseInt($stateParams.pageSize);\r\n\r\n            \r\n            API.cui.getOrgAppCategories({organizationId:orgDetailsApps.stateParamsOrgId})\r\n            .then((res)=>{\r\n                orgDetailsApps.categories = res;\r\n                $scope.$digest();\r\n            })\r\n            .fail((err)=>{\r\n               \r\n            });\r\n\r\n        }\r\n\r\n        let queryParams = [['page', String(orgDetailsApps.search.page)], ['pageSize', String(orgDetailsApps.search.pageSize)]];\r\n        const promises = [];\r\n        const opts = {\r\n            organizationId: orgDetailsApps.stateParamsOrgId,\r\n            qs: queryParams\r\n        };\r\n\r\n        if (orgDetailsApps.search.name) queryParams.push(['service.name', orgDetailsApps.search.name]);\r\n        if (orgDetailsApps.search.category) queryParams.push(['service.category', orgDetailsApps.search.category]);\r\n        // sortBy: +/-service.name, +/-service.creation, +/-grant.instant\r\n        if (orgDetailsApps.search.sortBy) queryParams.push(['sortBy', orgDetailsApps.search.sortBy]);\r\n\r\n        switch (orgDetailsApps.search.refine) {\r\n            case 'active':\r\n            case 'suspended':\r\n                queryParams.push(['grant.status', orgDetailsApps.search.refine]);\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n              /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                break;\r\n            case 'pending':\r\n                /*promises.push(\r\n                    API.cui.getOrgPendingServicePackages({qs: [['requestor.id', organizationId], ['requestor.type', 'organization']]})\r\n                    .then((res) => {\r\n                        return getPackageServices(res);\r\n                    }),\r\n                    API.cui.getOrganizationRequestableCount({organizationId: organizationId})\r\n                );*/\r\n                queryParams.push(['grant.status', orgDetailsApps.search.refine]);\r\n               /* promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n            case undefined:\r\n                /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n        }\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n            orgDetailsApps.appList = res[0];\r\n            orgDetailsApps.count = res[1];\r\n            /*orgDetailsApps.count = res[0].length;*/\r\n            Loader.offFor('orgDetailsApps.init')\r\n            if (orgDetailsApps.reRenderPaginate) orgDetailsApps.reRenderPaginate();\r\n        })\r\n        .catch(err => {\r\n            orgDetailsApps.loadingError=true\r\n            Loader.offFor('orgDetailsApps.init')\r\n        })\r\n    };\r\n    // get Organization to display name\r\n    API.cui.getOrganization({organizationId:orgDetailsApps.stateParamsOrgId})\r\n    .then(res => {\r\n        orgDetailsApps.organization=res;\r\n    })\r\n    onLoad(false);\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    orgDetailsApps.pageChange = (newpage) => {\r\n        orgDetailsApps.updateSearch('page', newpage);\r\n    };\r\n\r\n    orgDetailsApps.updateSearchByName = () => {\r\n        orgDetailsApps.updateSearch('name',orgDetailsApps.search['name'])\r\n    }\r\n\r\n    orgDetailsApps.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType){\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name');\r\n                break;\r\n            case 'date':\r\n                switchBetween('sortBy', '+grant.instant', '-grant.instant');\r\n                break;\r\n            case 'status':\r\n                orgDetailsApps.search.page = 1;\r\n                orgDetailsApps.search.refine = updateValue;\r\n                break;\r\n            case 'category':\r\n                orgDetailsApps.search.page = 1;\r\n                orgDetailsApps.search.category = $filter('cuiI18n')(updateValue);\r\n                break;\r\n            case 'name':\r\n                orgDetailsApps.search.page = 1\r\n                break\r\n        }\r\n\r\n        // Updates URL, doesn't change state\r\n        $state.transitionTo('organization.directory.orgDetails', orgDetailsApps.search, {notify: false});\r\n        onLoad(true);\r\n    };\r\n\r\n    orgDetailsApps.goToDetails = (application) => {\r\n        const opts = {\r\n            appId: application.id,\r\n            orgId: application.owningOrganization.id\r\n        };\r\n        $state.go('organization.applicationDetails', opts);\r\n    };\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsHierarchyCtrl',function(API,APIError,Loader,User,$scope,$state,$stateParams) {\r\n\t'use strict';\r\n    const orgDetailsHierarchy = this\r\n    const pageLoader = 'orgDetailsHierarchy.loading'\r\n    orgDetailsHierarchy.stateParamsOrgId=$stateParams.orgId\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    const addExpandedProperty = (childOrgs,parentOrg) => {\r\n\r\n        childOrgs.forEach(org => {\r\n            // Need to remove org if it is pending\r\n            if (org.status===\"PENDING\") {\r\n                parentOrg.children.splice(index,1)\r\n                return\r\n            }\r\n            if (org.children) {\r\n                org.expanded=false\r\n                addExpandedProperty(org.children,org)\r\n            }\r\n        })\r\n    }\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    Loader.onFor(pageLoader)\r\n    API.cui.getOrganizationHierarchy({organizationId:orgDetailsHierarchy.stateParamsOrgId })\r\n    .done(res => {\r\n        // Put hierarchy response in an array as the hierarchy directive expects an array\r\n        orgDetailsHierarchy.organizationHierarchy = [res]\r\n        // add expended property to all the org with children directive needs it to work for \r\n        // expandable and collapsable function\r\n        if (orgDetailsHierarchy.organizationHierarchy[0].children) {\r\n            addExpandedProperty(orgDetailsHierarchy.organizationHierarchy[0].children,orgDetailsHierarchy.organizationHierarchy[0])\r\n        }\r\n    })\r\n    .fail(err => {\r\n        APIError.onFor(pageLoader, err)\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(pageLoader)\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n    /* */\r\n    orgDetailsHierarchy.goToOrgPrfile = (org) => {\r\n        $state.go('organization.directory.orgDetails',{orgId:org.id})\r\n    }\r\n\r\n    orgDetailsHierarchy.toggleExpand = (object) => {\r\n        object.expanded=!object.expanded\r\n        // let updateOrgChildren= (orgs) => {\r\n        //     orgs.forEach(org => {\r\n        //         if (org.id===object.id) {\r\n        //             org.expanded=object.expanded\r\n        //             return;\r\n        //         }\r\n        //         if (org.children) {\r\n        //             updateOrgChildren(org.children)\r\n        //         }\r\n        //     })\r\n            \r\n        //     if (true) {};\r\n        // }\r\n        // updateOrgChildren(orgDetailsHierarchy.organizationHierarchy[0].children)\r\n        $scope.$digest()\r\n    }\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsProfileCtrl', function(Loader, Organization,$stateParams,$q,APIError) {\r\n\r\n\tconst orgDetailsProfile = this\r\n    const scopeName = 'orgDetailsProfile.'\r\n\r\n    orgDetailsProfile.stateParamsOrgId=$stateParams.orgId\r\n    let orgPromise=[]    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    Loader.onFor('orgDetailsProfile.init')\r\n    orgPromise.push(Organization.getOrganization($stateParams.orgId))\r\n    $q.all(orgPromise)\r\n    .then(res => {\r\n        if (orgPromise.length!==0) {\r\n            orgDetailsProfile.organization=res[0]\r\n        }\r\n            Organization.initOrganizationProfile(orgDetailsProfile.organization.id, orgDetailsProfile.organization.passwordPolicy.id, orgDetailsProfile.organization.authenticationPolicy.id)\r\n        .then(res => {\r\n            orgDetailsProfile.securityAdmins = res.admins\r\n            orgDetailsProfile.passwordPolicy = res.passwordPolicy\r\n            orgDetailsProfile.authenticationPolicy=res.authenticationPolicy\r\n            Loader.offFor('orgDetailsProfile.init')\r\n        })\r\n        .catch(err => {\r\n            console.error(\"there was an error fetching additional org details\" +err)\r\n            Loader.offFor('orgDetailsProfile.init')\r\n            APIError.onFor('orgDetailsProfile.init')\r\n        })\r\n    })\r\n    .catch(err => {\r\n        console.error(\"there was an error fetching org details\" +err)\r\n        Loader.offFor('orgDetailsProfile.init')\r\n        APIError.onFor('orgDetailsProfile.init')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsUsersCtrl', function(API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,UserList,$filter,$pagination,$q,$state,$stateParams) {\r\n    \r\n    const orgDetailsUsers = this\r\n    const scopeName = 'orgDetailsUsers.'\r\n    orgDetailsUsers.stateParamsOrgId=$stateParams.orgId\r\n    orgDetailsUsers.search = {}\r\n    orgDetailsUsers.sortBy = {}\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        orgDetailsUsers.search[property] === firstValue\r\n            ? orgDetailsUsers.search[property] = secondValue\r\n            : orgDetailsUsers.search[property] = firstValue\r\n    }\r\n\r\n    const getUserListAppCount = (userList) => {\r\n        userList.forEach(user => {\r\n            API.cui.getPersonGrantedAppCount({personId: user.id})\r\n            .then(res => {\r\n                user.appCount = res\r\n            })\r\n            .fail(error => {\r\n                user.appCount = '...'\r\n            })\r\n        })\r\n    }\r\n\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    const initDirectory = (organizationId) => {\r\n        orgDetailsUsers.search['organization.id'] = organizationId || $stateParams.orgId || User.user.organization.id\r\n        orgDetailsUsers.search.pageSize = orgDetailsUsers.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        let apiCalls = [\r\n            UserList.getUsers({ qs: APIHelpers.getQs(orgDetailsUsers.search) }),\r\n            UserList.getUserCount({ qs: [['organization.id', orgDetailsUsers.search['organization.id']]] }),\r\n            API.cui.getOrganization({organizationId: orgDetailsUsers.search['organization.id']})\r\n        ]\r\n\r\n        Loader.onFor(scopeName + 'userList')\r\n        APIError.offFor(scopeName + 'userList')\r\n\r\n        $q.all(apiCalls)\r\n        .then(([users, userCount, organization]) => {\r\n            orgDetailsUsers.organization = organization\r\n            // orgDetailsUsers.organizationList = APIHelpers.flattenOrgHierarchy(orgHierarchy)\r\n            orgDetailsUsers.userList = users\r\n            orgDetailsUsers.userCount = userCount\r\n            orgDetailsUsers.statusData = APIHelpers.getCollectionValuesAndCount(users, 'status', true)\r\n            CuiMobileNavFactory.setTitle(organization.name)\r\n            orgDetailsUsers.reRenderPagination && orgDetailsUsers.reRenderPagination()\r\n            getUserListAppCount(orgDetailsUsers.userList)\r\n        })\r\n        .catch(error => {\r\n            APIError.onFor(scopeName + 'userList')\r\n        })\r\n        .finally(() => {\r\n            Loader.offFor(scopeName + 'userList')\r\n        })\r\n    }\r\n\r\n    orgDetailsUsers.search = Object.assign({}, $stateParams)\r\n    initDirectory()\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n\r\n    // headers=\"['cui-name', 'username', 'status']\" \r\n\r\n    orgDetailsUsers.sortingCallbacks = {\r\n      name () {\r\n          orgDetailsUsers.sortBy.sortBy = 'name'\r\n          orgDetailsUsers.sort(['name.given', 'name.surname'], orgDetailsUsers.sortBy.sortType)\r\n      },\r\n      username () {\r\n          orgDetailsUsers.sortBy.sortBy = 'username'\r\n          orgDetailsUsers.sort('username', orgDetailsUsers.sortBy.sortType)\r\n      },\r\n      status () {\r\n          orgDetailsUsers.sortBy.sortBy = 'status'\r\n          orgDetailsUsers.sort('status', orgDetailsUsers.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgDetailsUsers.sort = (sortBy, order) => {\r\n        cui.log('sort', sortBy, order)\r\n\r\n      orgDetailsUsers.userList = _.orderBy(orgDetailsUsers.userList, sortBy, order)\r\n    }\r\n\r\n    orgDetailsUsers.updateSearchParams = (page) => {\r\n        if (page) orgDetailsUsers.search.page = page \r\n        $state.transitionTo('organization.directory.orgDetails', orgDetailsUsers.search, {notify: false})\r\n        initDirectory(orgDetailsUsers.search['organization.id'])\r\n    }\r\n\r\n    orgDetailsUsers.updateSearchByName = (name) => {\r\n        orgDetailsUsers.updateSearchParams()\r\n    }\r\n    orgDetailsUsers.actionCallbacks = {\r\n        sort (sortType) {\r\n            switch(sortType) {\r\n            case 'name':\r\n                switchBetween('sortBy', '+person.name', '-person.name')\r\n                break\r\n            case 'username':\r\n                switchBetween('sortBy', '+person.username', '-person.username')\r\n                break\r\n            case 'status':\r\n                switchBetween('sortBy', '+person.status', '-person.status')\r\n                break\r\n            }\r\n\r\n            // if (!orgDetailsUsers.search.hasOwnProperty('sortBy')) orgDetailsUsers.search['sortBy'] = '+' + sortType\r\n            // else if (orgDetailsUsers.search.sortBy.slice(1) !== sortType) orgDetailsUsers.search.sortBy = '+' + sortType\r\n            // else switchBetween('sortBy', '+' + sortType, '-' + sortType)\r\n            orgDetailsUsers.updateSearchParams()\r\n        },\r\n        refine (refineType) {\r\n            if (refineType === 'all') delete orgDetailsUsers.search['status']\r\n            else {\r\n                if (!orgDetailsUsers.search.hasOwnProperty('status')) orgDetailsUsers.search['status'] = refineType\r\n                else orgDetailsUsers.search.status = refineType\r\n            }\r\n            orgDetailsUsers.updateSearchParams()\r\n        }\r\n    }\r\n\r\n    orgDetailsUsers.userClick = (clickedUser) => {\r\n        const stateOpts = {\r\n            userId: clickedUser.id,\r\n            orgId: clickedUser.organization.id,\r\n        }\r\n        if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\r\n        else $state.go('organization.directory.userDetails', stateOpts)\r\n    }\r\n\r\n    orgDetailsUsers.getOrgMembers = (organization) => {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')(organization.name))\r\n        initDirectory(organization.id)\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDirectoryCtrl',function($scope,$stateParams,API,$filter,Sort,$state,$q,User,$pagination) {\r\n    'use strict';\r\n\r\n    const orgDirectory = this;\r\n\r\n    orgDirectory.loading = true;\r\n    orgDirectory.sortFlag = false;\r\n    orgDirectory.userList = [];\r\n    orgDirectory.unparsedUserList = [];\r\n    orgDirectory.statusList = ['active', 'locked', 'pending', 'suspended', 'rejected', 'removed'];\r\n    orgDirectory.statusCount = [0,0,0,0,0,0,0];\r\n    orgDirectory.paginationPageSize = orgDirectory.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const handleError = function handleError(err) {\r\n        orgDirectory.loading = false;\r\n        $scope.$digest();\r\n        console.log('Error', err);\r\n    };\r\n\r\n    const getStatusList = function(users) {\r\n        let statusList = [];\r\n        let statusCount = [orgDirectory.unparsedUserList.length];\r\n\r\n        users.forEach(function(user) {\r\n            if (user.status) {\r\n                let statusInStatusList = _.some(statusList, function(status, i) {\r\n                    if (angular.equals(status, user.status)) {\r\n                        statusCount[i+1] ? statusCount[i+1]++ : statusCount[i+1] = 1;\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                });\r\n\r\n                if (!statusInStatusList) {\r\n                    statusList.push(user.status);\r\n                    statusCount[statusList.length] = 1;\r\n                }\r\n            }\r\n        });\r\n        orgDirectory.statusCount = statusCount;\r\n        return statusList;\r\n    };\r\n\r\n    const flattenHierarchy = (orgChildrenArray) => {\r\n        if (orgChildrenArray) {\r\n            let childrenArray = orgChildrenArray;\r\n            let orgList = [];\r\n\r\n            childrenArray.forEach(function(childOrg) {\r\n                if (childOrg.children) {\r\n                    let newChildArray = childOrg.children;\r\n                    delete childOrg['children'];\r\n                    orgList.push(childOrg);\r\n                    orgList.push(flattenHierarchy(newChildArray));\r\n                }\r\n                else {\r\n                    orgList.push(childOrg);\r\n                }\r\n            });\r\n            return _.flatten(orgList);\r\n        }\r\n    };\r\n\r\n    const getUserListAppCount = (userArray) => {\r\n        let userList = userArray;\r\n\r\n        userList.forEach((user) => {\r\n            API.cui.getPersonGrantedCount({personId: user.id})\r\n            .then((res) => {\r\n                user.appCount = res;\r\n            })\r\n            .fail((error) => {\r\n                user.appCount = 0;\r\n            });\r\n        });\r\n\r\n        return userList;\r\n    };\r\n\r\n    const getPeopleAndCount = () => {\r\n        const getPersonOptions = {\r\n            'qs': [\r\n                ['organization.id', String(orgDirectory.organization.id)],\r\n                ['pageSize', String(orgDirectory.paginationPageSize)],\r\n                ['page', String(1)]\r\n            ]\r\n        };\r\n\r\n        const countPersonOptions = {\r\n            'qs': ['organization.id', String(orgDirectory.organization.id)]\r\n        };\r\n\r\n        $q.all([API.cui.getPersons(getPersonOptions), API.cui.countPersons(countPersonOptions)])\r\n        .then((res) => {\r\n            orgDirectory.unparsedUserList = angular.copy(res[0]);\r\n            orgDirectory.statusList = getStatusList(orgDirectory.userList);\r\n            orgDirectory.orgPersonCount = res[1];\r\n            orgDirectory.userList = orgDirectory.unparsedUserList = getUserListAppCount(orgDirectory.unparsedUserList);\r\n            orgDirectory.loading = false;\r\n            orgDirectory.reRenderPagination && orgDirectory.reRenderPagination();\r\n        });\r\n    };\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    API.cui.getOrganizationHierarchy({organizationId: User.user.organization.id})\r\n    .then((res) => {\r\n        orgDirectory.organization = res;\r\n        orgDirectory.organizationList = flattenHierarchy(res.children);\r\n        getPeopleAndCount();\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    orgDirectory.getOrgMembers = (organization) => {\r\n        orgDirectory.loading = true;\r\n        orgDirectory.organization = organization;\r\n        API.cui.getPersons({'qs': [['organization.id', String(orgDirectory.organization.id)]]})\r\n        .then(function(res) {\r\n            orgDirectory.userList = orgDirectory.unparsedUserList = getUserListAppCount(res);\r\n            orgDirectory.statusList = getStatusList(orgDirectory.userList);\r\n            return API.cui.countPersons({'qs': ['organization.id', String(orgDirectory.organization.id)]});\r\n        })\r\n        .then(function(res) {\r\n            orgDirectory.orgPersonCount = res;\r\n            orgDirectory.loading = false;\r\n            $scope.$digest();\r\n        })\r\n        .fail(handleError);\r\n    };\r\n\r\n    orgDirectory.sort = function sort(sortType) {\r\n        Sort.listSort(orgDirectory.userList, sortType, orgDirectory.sortFlag);\r\n        orgDirectory.sortFlag =! orgDirectory.sortFlag;\r\n    };\r\n\r\n    orgDirectory.parseUsersByStatus = function parseUsersByStatus(status) {\r\n        if (status === 'all') {\r\n            orgDirectory.userList = orgDirectory.unparsedUserList;\r\n        }\r\n        else {\r\n            let filteredUsers = _.filter(orgDirectory.unparsedUserList, function(user) {\r\n                return user.status === status;\r\n            });\r\n            orgDirectory.userList = filteredUsers;\r\n        }\r\n    };\r\n\r\n    orgDirectory.paginationHandler = function paginationHandler(page) {\r\n        API.cui.getPersons({'qs': [['organization.id', String(orgDirectory.organization.id)],\r\n                                    ['pageSize', String(orgDirectory.paginationPageSize)], ['page', String(page)]]})\r\n        .then(function(res) {\r\n            orgDirectory.userList = orgDirectory.unparsedUserList = getUserListAppCount(res);\r\n            orgDirectory.statusList = getStatusList(orgDirectory.userList);\r\n        })\r\n        .fail(handleError);\r\n    };\r\n\r\n    orgDirectory.userClick = (clickedUser) => {\r\n        switch (clickedUser.status) {\r\n            case 'active':\r\n            case 'unactivated':\r\n            case 'inactive':\r\n                $state.go('organization.directory.userDetails', {userID: clickedUser.id, orgID: clickedUser.organization.id});\r\n                break;\r\n            case 'pending':\r\n                $state.go('organization.requests.personRequest', {userID: clickedUser.id, orgID: clickedUser.organization.id});\r\n                break;\r\n        }\r\n    };\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n    // WATCHERS START --------------------------------------------------------------------------------\r\n\r\n    $scope.$watch('orgDirectory.paginationPageSize', function(newValue, oldValue) {\r\n        if (newValue && oldValue && newValue !== oldValue) {\r\n            API.cui.getPersons({'qs': [['organization.id', String(orgDirectory.organization.id)],\r\n                                ['pageSize', String(orgDirectory.paginationPageSize)], ['page', 1]]})\r\n            .then(function(res) {\r\n                orgDirectory.userList = orgDirectory.unparsedUserList = getUserListAppCount(res);\r\n                orgDirectory.paginationCurrentPage = 1;\r\n                orgDirectory.statusList = getStatusList(orgDirectory.userList);\r\n            })\r\n            .fail(handleError);\r\n        }\r\n    });\r\n\r\n    // WATCHERS END ----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('userAppDetailsCtrl', function(API, $scope, $stateParams, $state, $q, APIHelpers, Loader, APIError,DataStorage,$timeout) {\r\n    let userAppDetails = this\r\n    userAppDetails.relatedApps=[]\r\n    userAppDetails.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    userAppDetails.dropDown={\r\n        claims:false,\r\n        suspend:false,\r\n        unsuspend:false,\r\n        remove:false\r\n    }\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    const getClaims = (app) => {\r\n        let deferred=$q.defer()\r\n        const packageId = app.servicePackage.id\r\n\r\n        Loader.onFor(loaderName + 'claims')\r\n        API.cui.getPersonPackageClaims({ grantee:$stateParams.userId, packageId })\r\n        .then(userClaims => {\r\n            APIError.offFor(loaderName + 'claims')\r\n            deferred.resolve(userClaims)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'claims')\r\n            deferred.reject(err)\r\n        })\r\n        .always(() => {\r\n            Loader.offFor(loaderName + 'claims')\r\n            $scope.$digest()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    // Returns claims that are associated with a package id\r\n    const getPackageClaims = (packageId) => {\r\n        let deferred=$q.defer()\r\n        API.cui.getPackageClaims({qs: [['packageId', packageId]]})\r\n        .then(packageClaims => {\r\n            APIError.offFor(loaderName + 'packageClaims')\r\n            deferred.resolve(packageClaims)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package claims')\r\n            APIError.onFor(loaderName + 'packageClaims')\r\n            deferred.reject(err)\r\n        })\r\n        .always(() => {\r\n            Loader.offFor(loaderName + 'packageClaims')\r\n            $scope.$digest()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    const getFormattedClaimData = () => {\r\n        $q.all([getClaims(userAppDetails.app),getPackageClaims(userAppDetails.app.servicePackage.id)])\r\n        .then(res => {            \r\n            userAppDetails.userClaims = res[0]\r\n            userAppDetails.packageClaims=res[1]\r\n            userAppDetails.claimSelection={}\r\n            //initialize and preselect claims which are already granted to user\r\n            userAppDetails.packageClaims.forEach(packageClaim => {\r\n                userAppDetails.claimSelection[packageClaim.claimId] = {}\r\n                let grantedClaim=_.find(userAppDetails.userClaims.packageClaims,{claimId:packageClaim.claimId})\r\n                if (grantedClaim) {\r\n                    packageClaim.claimValues.forEach(claimValue => {\r\n                        if (_.find(grantedClaim.claimValues,{claimValueId:claimValue.claimValueId})) {\r\n                            userAppDetails.claimSelection[packageClaim.claimId][claimValue.claimValueId]=true\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const getApp= (updating)=>{\r\n        if (!updating) {\r\n            Loader.onFor(loaderName + 'app')\r\n        }\r\n        API.cui.getPersonGrantedApps(opts)\r\n        .then(res => {\r\n            APIError.offFor(loaderName + 'app')\r\n            userAppDetails.app = Object.assign({}, res[0])\r\n            if (!updating) {\r\n                getFormattedClaimData()\r\n                getRelatedApps(userAppDetails.app)\r\n            }\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'app')\r\n        })\r\n        .done(() => {\r\n            Loader.offFor(loaderName + 'app')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n    const getRelatedApps=(app) => {\r\n        const packageId = app.servicePackage.id\r\n        let qs\r\n        if (app.servicePackage.parent) {\r\n            qs=[['servicePackage.id',app.servicePackage.parent.id]]\r\n        }else{\r\n            qs=[['servicePackage.parentPackage.id',app.servicePackage.id]]\r\n        }\r\n        Loader.onFor(loaderName + 'relatedApps')\r\n        let apiPromises=[\r\n        API.cui.getPersonRequestableApps({personId:API.getUser(),'qs':[['servicePackage.parentPackage.id',packageId]] }),\r\n        API.cui.getPersonGrantedApps({personId:API.getUser(),'qs':qs })\r\n        ]\r\n        $q.all(apiPromises)\r\n        .then(res=>{\r\n            APIError.offFor(loaderName + 'relatedApps')\r\n            userAppDetails.relatedApps=userAppDetails.relatedApps.concat(res[0])\r\n            userAppDetails.relatedApps=userAppDetails.relatedApps.concat(res[1])\r\n        })\r\n        .catch(err => {\r\n            APIError.onFor(loaderName + 'relatedApps')\r\n        })\r\n        .finally(()=>{\r\n            Loader.offFor(loaderName + 'relatedApps')\r\n        })\r\n    }\r\n\r\n    const buildData = (type) => {\r\n        let reason\r\n        if (type==\"suspend\") {\r\n            reason=userAppDetails.suspendReason\r\n        }else{\r\n            reason=userAppDetails.unsuspendReason\r\n        }\r\n        return {\r\n            grantee:{\r\n                id:$stateParams.userId,\r\n                type:'person'\r\n            },\r\n            servicePackage:{\r\n                id:userAppDetails.app.servicePackage.id\r\n            },\r\n            justification:reason\r\n        }\r\n\r\n    }\r\n\r\n    const buildClaimData = () => {\r\n\r\n        const buildPackageClaims = (claimsObject) => {\r\n            if (Object.keys(claimsObject).length === 0) {\r\n                return undefined;\r\n            } // if there's no claims in this claim object\r\n            let packageClaims = []\r\n            Object.keys(claimsObject).forEach(claimId => {\r\n                if (Object.keys(claimsObject[claimId]).length === 0) {\r\n                    return;\r\n                } // if no claimValues selected for that claimId\r\n                let claimValues =[]\r\n                Object.keys(claimsObject[claimId]).forEach(claimValueId => {\r\n                    if (claimsObject[claimId][claimValueId]) {//If checked\r\n                        claimValues.push({claimValueId:claimValueId})\r\n                    }\r\n                })\r\n                // const claimValues = Object.keys(claimsObject[claimId]).reduce((claims, claimValueId) => {\r\n                //     claims.push({ claimValueId })\r\n                //     return claims\r\n                // },[])\r\n                if (claimValues.length!==0) {\r\n                    packageClaims.push({\r\n                        claimId,\r\n                        claimValues\r\n                    })\r\n                }\r\n            })\r\n            return packageClaims\r\n        }\r\n        return {\r\n                data: {\r\n                    grantee: {\r\n                        id: $stateParams.userId,\r\n                        type: 'person'\r\n                    },\r\n                    servicePackage: {\r\n                        id: userAppDetails.app.servicePackage.id,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    packageClaims: buildPackageClaims(userAppDetails.claimSelection)\r\n                }\r\n            }\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    const loaderName = 'userAppDetails.'\r\n\r\n    const qs = {\r\n        'service.id': $stateParams.appId\r\n    }\r\n\r\n    const opts = {\r\n        personId: $stateParams.userId,\r\n        qs: APIHelpers.getQs(qs)\r\n    }\r\n    userAppDetails.app=DataStorage.getType('userAppDetail')\r\n    if (userAppDetails.app&& userAppDetails.app.id===$stateParams.appId) {        \r\n        getFormattedClaimData()\r\n        getRelatedApps(userAppDetails.app)\r\n        // Update application detail for any new changes during reload\r\n        // Commenting out as API is not giving full details for service.id query parameter get\r\n        //it is relying on previous page details which has full details\r\n         getApp(true)\r\n    }\r\n    else{\r\n        getApp(false)\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\r\n\r\n    userAppDetails.goToDetails = (application) => {\r\n        $state.go('applications.userAppDetails', {\r\n            'packageId':application.packageId,\r\n            'appId':application.id\r\n        })\r\n    }\r\n\r\n    userAppDetails.toggleDropDown= (type) => {\r\n        Object.keys(userAppDetails.dropDown).forEach(key => {\r\n            if (key===type) {\r\n                userAppDetails.dropDown[key]=!userAppDetails.dropDown[key]\r\n            }else{\r\n                userAppDetails.dropDown[key]=false\r\n            }\r\n        })\r\n    }\r\n    userAppDetails.suspendApp = () => {\r\n        Loader.onFor(loaderName + 'suspend')\r\n        APIError.offFor(loaderName + 'suspend')\r\n        let data=buildData('suspend')\r\n        API.cui.suspendPersonApp({data:data})\r\n        .then(res => {\r\n            userAppDetails.app.grant.status=\"suspended\"\r\n            userAppDetails.suspendAppSuccess=true\r\n            Loader.offFor(loaderName + 'suspend')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.dropDown.suspend=false\r\n                userAppDetails.suspendAppSuccess=false\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'suspend')\r\n            Loader.offFor(loaderName + 'suspend')\r\n            $scope.$digest()\r\n            console.log('There was an error suspending user App', + err)\r\n        })\r\n    }\r\n\r\n    userAppDetails.unsuspendApp = () => {\r\n        Loader.onFor(loaderName + 'unsuspend')\r\n        APIError.offFor(loaderName + 'unsuspend')\r\n        let data=buildData('unsuspend')\r\n        API.cui.unsuspendPersonApp({data:data})\r\n        .then(res => {\r\n            userAppDetails.app.grant.status=\"active\"\r\n            userAppDetails.unsuspendAppSuccess=true\r\n            Loader.offFor(loaderName + 'unsuspend')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.dropDown.unsuspend=false\r\n                userAppDetails.unsuspendAppSuccess=false\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'unsuspend')\r\n            Loader.offFor(loaderName + 'unsuspend')\r\n            $scope.$digest()\r\n            console.log('There was an error suspending user App', + err)\r\n        })\r\n    }\r\n\r\n    userAppDetails.removeApp = () => {\r\n        Loader.onFor(loaderName + 'remove')\r\n        APIError.offFor(loaderName + 'remove')\r\n        API.cui.revokePersonApp({personId:$stateParams.userId,packageId:userAppDetails.app.servicePackage.id})\r\n        .then(res => {\r\n            // userAppDetails.app.grant.status=\"removeed\"\r\n            userAppDetails.removeAppSuccess=true\r\n            Loader.offFor(loaderName + 'remove')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.removeAppSuccess=false\r\n                $state.go('organization.directory.userDetails',userAppDetails.prevState.params)\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'remove')\r\n            Loader.offFor(loaderName + 'remove')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                APIError.offFor(loaderName + 'remove')\r\n            },3000)\r\n            console.log('There was an error removing user App', + err)\r\n        })\r\n    }\r\n\r\n    userAppDetails.modifyClaims = () => {\r\n        Loader.onFor(loaderName + 'modifyClaims')\r\n        APIError.offFor(loaderName + 'modifyClaims')\r\n        API.cui.grantClaims(buildClaimData())\r\n        .then(res => {\r\n            userAppDetails.modifyClaimsSuccess=true\r\n            Loader.offFor(loaderName + 'modifyClaims')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.dropDown.claims=false\r\n                userAppDetails.modifyClaimsSuccess=false\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'modifyClaims')\r\n            Loader.offFor(loaderName + 'modifyClaims')\r\n            $scope.$digest()\r\n            console.log('There was an error updating user\\'s app claims', + err)\r\n        })\r\n        \r\n    }\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userDetailsCtrl', function(API, Loader, $scope, $stateParams,APIError,APIHelpers,$timeout,$q) {\r\n\r\n    const userDetails = this\r\n    const scopeName = 'userDetails.'\r\n    userDetails.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userList\"\r\n    }\r\n    userDetails.stateParamsOrgId=$stateParams.orgId\r\n    userDetails.mobileHandler = 'profile'\r\n    userDetails.profileRolesSwitch = 'profile'\r\n    userDetails.appsHistorySwitch = 'apps'\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(scopeName + 'userInfo')\r\n/*\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        userDetails.user = res\r\n        CuiMobileNavFactory.setTitle(res.name.given + '.' + res.name.surname)\r\n    })\r\n    .fail(error => {\r\n        console.error('Failed getting user information')\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(scopeName + 'userInfo')\r\n        $scope.$digest()\r\n    })*/\r\n\r\n\r\n    const apiPromises = [\r\n        API.cui.getPerson({\r\n            personId: $stateParams.userId\r\n        }),\r\n        API.cui.getOrganization({ organizationId: $stateParams.orgId  }),\r\n        API.cui.getPersonPassword({\r\n            personId: $stateParams.userId\r\n        })\r\n    ]\r\n\r\n    $q.all(apiPromises)\r\n    .then(([ user, organization ,password]) => {\r\n        // CuiMobileNavFactory.setTitle(user.name.given + '.' + user.name.surname)\r\n       userDetails.user = Object.assign({}, user)\r\n        userDetails.organization = Object.assign({}, organization);\r\n        userDetails.passwordAccount= Object.assign({}, password)\r\n        return API.cui.getPasswordPolicy({ policyId: userDetails.organization.passwordPolicy.id })\r\n    })\r\n    .then(res => {\r\n        userDetails.passwordPolicy = res\r\n\r\n        res.rules.forEach(rule => {\r\n            if (rule.type === 'history') {\r\n                userDetails.numberOfPasswords = rule.numberOfPasswords\r\n            }\r\n        })\r\n        Loader.offFor(scopeName + 'userInfo')\r\n    })\r\n    .catch(() => {\r\n        Loader.offFor(scopeName + 'userInfo')\r\n        APIError.onFor('userDetails.user')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------------- ON CLICK START ---------------------------------------------- */\r\n    userDetails.suspend = (personId) => {\r\n\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:true\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\r\n\r\n        const name = 'userDetails.suspend'\r\n\r\n        userDetails.suspend.reset = () => {\r\n            Loader.offFor(name)\r\n            APIError.offFor(name)\r\n            userDetails.user.suspendReason = ''\r\n            userDetails.suspend.success && delete userDetails.suspend.success\r\n        }\r\n\r\n        userDetails.suspend.reset()\r\n\r\n        userDetails.suspend.confirm = () => {\r\n            Loader.onFor(name)\r\n            APIError.offFor(name)\r\n\r\n            const reason = encodeURIComponent(userDetails.user.suspendReason)\r\n\r\n            API.cui.suspendPerson({\r\n                qs: APIHelpers.getQs({\r\n                    personId,\r\n                    reason\r\n                })\r\n            })\r\n            .then(\r\n                res => {\r\n                    APIError.offFor(name)\r\n                    userDetails.suspend.success = true\r\n                    userDetails.user.status = 'suspended'\r\n                    $timeout(userDetails.suspend.cancel, 1500)\r\n                },\r\n                err => {\r\n                    APIError.onFor(name)\r\n                }\r\n            )\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.suspend.cancel = () => {\r\n            userDetails.suspend.begun = false\r\n            userDetails.suspend.reset()\r\n        }\r\n    }\r\n\r\n    userDetails.unsuspend = (personId) => {\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:true\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\r\n\r\n        const name = 'userDetails.unsuspend'\r\n\r\n        userDetails.unsuspend.reset = () => {\r\n            Loader.offFor(name)\r\n            APIError.offFor(name)\r\n            userDetails.user.unsuspendReason = ''\r\n            userDetails.unsuspend.success && delete userDetails.unsuspend.success\r\n        }\r\n\r\n        userDetails.unsuspend.reset()\r\n\r\n        userDetails.unsuspend.confirm = () => {\r\n            Loader.onFor(name)\r\n            APIError.offFor(name)\r\n\r\n            const reason = encodeURIComponent(userDetails.user.unsuspendReason)\r\n\r\n            API.cui.unsuspendPerson({\r\n                qs: APIHelpers.getQs({\r\n                    personId,\r\n                    reason\r\n                })\r\n            })\r\n            .then(\r\n                res => {\r\n                    APIError.offFor(name)\r\n                    userDetails.unsuspend.success = true\r\n                    userDetails.user.status = 'active'\r\n                    $timeout(userDetails.unsuspend.cancel, 1500)\r\n                },\r\n                err => {\r\n                    APIError.onFor(name)\r\n                }\r\n            )\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.unsuspend.cancel = () => {\r\n            userDetails.unsuspend.begun = false\r\n            userDetails.unsuspend.reset()\r\n        }\r\n    }\r\n\r\n    userDetails.resetPassword = () => {\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:true\r\n\r\n            \r\n            if(userDetails.resetPassword.begun){\r\n                const name = 'userDetails.unsuspend'\r\n\r\n            Loader.onFor(name)\r\n            APIError.offFor(name)\r\n            API.cui.resetPersonPassword({\r\n                qs: [['subject', $stateParams.userId]],\r\n            })\r\n            .then(\r\n                res => {\r\n                    APIError.offFor(name)\r\n                    userDetails.resetPasswordValue=res\r\n                    userDetails.resetPassword.begun = true\r\n                },\r\n                err => {\r\n                    APIError.onFor(name)\r\n                }\r\n            )\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    userDetails.specifyPassword = () => {\r\n        errorTimer && $timeout.cancel(errorTimer) // cancel the timer if there's one pending\r\n        let errorTimer\r\n\r\n        const name = 'userDetails.specifyPassword'\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:true\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\r\n\r\n        userDetails.specifyPassword.reset = () => {\r\n            Loader.offFor(name)\r\n            APIError.offFor(name)\r\n            APIError.offFor('userDetails.passwordHistory')\r\n            userDetails.specifyPassword.success && delete userDetails.specifyPassword.success\r\n            userDetails.specifyPassword.passwordHistoryError = false\r\n            userDetails.specifyPassword.newPassword = ''\r\n            userDetails.specifyPassword.newPasswordConfirm = ''\r\n        }\r\n\r\n        userDetails.specifyPassword.validate = (password, formObject, input) => {\r\n            const validSwitch = (input, isValidBoolean) => {\r\n                switch (input) {\r\n                    case 'newPassword':\r\n                        userDetails.specifyPassword.validNewPassword = isValidBoolean\r\n                    case 'newPasswordConfirm':\r\n                        userDetails.specifyPassword.validNewPasswordRe = isValidBoolean\r\n                }\r\n            }\r\n\r\n            const validateData = {\r\n                userId: $stateParams.userId,\r\n                organizationId: $stateParams.orgId,\r\n                password: password,\r\n                operations: ['PASSWORD_SPECIFY']\r\n            }\r\n\r\n            API.cui.validatePassword({data: validateData})\r\n            .then(res => {\r\n                let validPasswordHistory = false\r\n\r\n                res.forEach(rule => {\r\n                    if (rule.type === 'HISTORY' && rule.isPassed) {\r\n                        validPasswordHistory = true\r\n                        return\r\n                    }\r\n                })\r\n\r\n                if (validPasswordHistory) {\r\n                    validSwitch(input, true)\r\n                    formObject[input].$setValidity(input, true)\r\n                    $scope.$digest()\r\n                }\r\n                else {\r\n                    validSwitch(input, false)\r\n                    formObject[input].$setValidity(input, false)\r\n                    $scope.$digest()\r\n                }\r\n            })\r\n            .fail(err => {\r\n                validSwitch(input, false)\r\n                formObject[input].$setValidity(input, false)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.specifyPassword.confirm = () => {\r\n            APIError.offFor(name)\r\n            Loader.onFor(name)\r\n\r\n          /*  if (!userDetails.specifyPassword.form.$valid) {\r\n                angular.forEach(userDetails.specifyPassword.form.$error, error => {\r\n                    angular.forEach(error, errorField => errorField.$setTouched())\r\n                })\r\n                APIError.onFor(name)\r\n                return\r\n            }*/\r\n\r\n            API.cui.getPersonPassword({personId: $stateParams.userId})\r\n            .then(res => {\r\n                return API.cui.specifyPersonPassword({\r\n                    data: {\r\n                        subject: $stateParams.userId,\r\n                        password: userDetails.specifyPassword.newPassword\r\n                    }\r\n                })\r\n            })\r\n            .then(res => {\r\n                return API.cui.expirePersonPassword({\r\n                    qs: [['subject', $stateParams.userId]],\r\n                    data: {\r\n                        subject: $stateParams.userId,\r\n                        password: userDetails.specifyPassword.newPassword,\r\n                        passwordPolicyId: userDetails.passwordPolicy.id,\r\n                        authenticationPolicyId: userDetails.organization.authenticationPolicy.id\r\n                    }\r\n                })\r\n            })\r\n            .then(res => {\r\n                userDetails.specifyPassword.success = true\r\n                $timeout(userDetails.specifyPassword.cancel, 1500)\r\n            }, err => {\r\n                console.log(err)\r\n                APIError.onFor(name)\r\n                errorTimer = $timeout(() => APIError.offFor(name), 1500)\r\n            })\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.specifyPassword.cancel = () => {\r\n            userDetails.specifyPassword.begun = false\r\n            userDetails.specifyPassword.reset()\r\n        }\r\n    }\r\n\r\n    userDetails.unlockUser = () => {\r\n        Loader.onFor('userDetails.unlockUser')\r\n        APIError.offFor('userDetails.unlockUser')\r\n        //Need to call two API's One is unlock Password Account and Update person stutus to active\r\n        API.cui.unlockPersonPassword({qs:[['subject', $stateParams.userId]]})\r\n        .then(res => {\r\n            userDetails.user.stutus='active'\r\n            API.cui.updatePerson({personId:$stateParams.userId, data:userDetails.user})\r\n            .then(res => {\r\n                userDetails.unlockUserSuccess=true\r\n            })\r\n            .fail(err => {\r\n                APIError.onFor('userDetails.unlockUser')\r\n                $timeout(() => {APIError.offFor('userDetails.unlockUser')},3000)\r\n            })\r\n            .always(() => {\r\n                Loader.offFor('userDetails.unlockUser')\r\n                $scope.$digest()\r\n            })\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor('userDetails.unlockUser')\r\n            $timeout(() => {APIError.offFor('userDetails.unlockUser')},3000)\r\n        })\r\n        .always(() => {\r\n            Loader.offFor('userDetails.unlockUser')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    /* --------------------------------------------- ON CLICK END ---------------------------------------------- */\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userDetailsAppsCtrl',function(API,$stateParams,$q,$state,DataStorage) {\r\n    'use strict';\r\n\r\n\tconst userDetailsApps = this,\r\n        userId = $stateParams.userId,\r\n        organizationId = $stateParams.orgId;\r\n\r\n    let apiPromises = [];\r\n\r\n    userDetailsApps.loading = true;\r\n    userDetailsApps.appList = [];\r\n\r\n    const getPackageServices = (servicePackage) => {\r\n        return API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\r\n        .then((res) => {\r\n            res.forEach((pendingService) => {\r\n                pendingService.grant = { \r\n                    status: 'pending'\r\n                };\r\n                pendingService.servicePackage=servicePackage\r\n                userDetailsApps.appList.push(pendingService);\r\n            });\r\n        });\r\n    };\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    apiPromises.push(\r\n        // Get user's granted applications\r\n        API.cui.getPersonGrantedApps({personId: userId})\r\n        .then((res) => {\r\n            res.forEach((grantedApp) => {\r\n                userDetailsApps.appList.push(grantedApp);\r\n            });\r\n        })\r\n    );\r\n\r\n    apiPromises.push(\r\n        // Get user's pending service packages\r\n        API.cui.getPersonPendingServicePackages({qs: [['requestor.id', userId],['requestor.type', 'person']]})\r\n        .then((res) => {\r\n            let pendingServicePromises = [];\r\n\r\n            res.forEach((servicePackage) => {\r\n                // For each packages get its services\r\n                pendingServicePromises.push(getPackageServices(servicePackage));\r\n            });\r\n\r\n            $q.all(pendingServicePromises)\r\n            .then(() => {\r\n                userDetailsApps.loading = false;\r\n            })\r\n            .catch((error) => {\r\n                userDetailsApps.loading = false;\r\n                console.log(error);\r\n            });\r\n        })\r\n    );\r\n\r\n    apiPromises.push(\r\n        // Get categories of applications\r\n        API.cui.getCategories()\r\n        .then((res) => {\r\n            userDetailsApps.appCategories = res;\r\n        })\r\n    );\r\n\r\n    apiPromises.push(\r\n        // Get user's granted applications count\r\n        API.cui.getPersonGrantedAppCount({personId: userId})\r\n        .then((res) => {\r\n            userDetailsApps.appCount = res;\r\n        })\r\n    );\r\n\r\n    $q.all(apiPromises)\r\n    .catch((error) => {\r\n        userDetailsApps.loading = false;\r\n        console.log(error);\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\r\n\r\n    userDetailsApps.goToDetails = (application) => {\r\n        DataStorage.setType('userAppDetail',application)\r\n        if (application.grant.status==='pending') {\r\n            $state.go('organization.requests.pendingRequests', {\r\n                    'userId': userId, \r\n                    'orgId': organizationId,\r\n                    'packageId': application.servicePackage.servicePackage.id\r\n                })\r\n        }\r\n        else\r\n        $state.go('organization.directory.userAppDetails',{appId:application.id,orgId:organizationId,userId:userId})\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n});\r\n\r\nangular.module('organization')\r\n.controller('userDetailsHistoryCtrl',function(API,$stateParams,$q) {\r\n\t'use strict';\r\n\r\n\tconst userDetailsHistory = this,\r\n        userId = $stateParams.userId,\r\n        organizationId = $stateParams.orgId;\r\n\r\n    let apiPromises = [];\r\n\r\n    userDetailsHistory.loading = true;\r\n    userDetailsHistory.sortClicked = false;\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n\tapiPromises.push(\r\n\t\tAPI.cui.getPersonStatusHistory({qs: [['userId', String(userId)]]})\r\n    \t.then((res) => {\r\n    \t\tuserDetailsHistory.personStatusHistory = res;\r\n    \t})\r\n    );\r\n\r\n    $q.all(apiPromises)\r\n    .then((res) => {\r\n    \tuserDetailsHistory.loading = false;\r\n    })\r\n    .catch((error) => {\r\n    \tuserDetailsHistory.loading = false;\r\n    \tconsole.log(error);\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('userDetailsProfileCtrl', function(Loader, UserProfile, $scope, $stateParams) {\r\n\r\n\tconst userDetailsProfile = this\r\n    const scopeName = 'userDetailsProfile.'\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    UserProfile.injectUI(userDetailsProfile, $scope, $stateParams.userId)\r\n\r\n    Loader.onFor(scopeName + 'initProfile')\r\n\r\n    UserProfile.initUserProfile($stateParams.userId, $stateParams.orgId)\r\n    .then(res => {\r\n        angular.merge(userDetailsProfile, res)\r\n        Loader.offFor(scopeName + 'initProfile')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userDetailsRolesCtrl',function(API,$stateParams,$q,$scope,APIError,$timeout) {\r\n\t'use strict';\r\n\r\n\tconst userDetailsRoles = this,\r\n        userId = $stateParams.userId,\r\n        organizationId = $stateParams.orgId;\r\n\r\n    let apiPromises = [];\r\n\r\n    userDetailsRoles.loading = true;\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    let init = function init(){\r\n\r\n    apiPromises.push(\r\n\t    API.cui.getPersonRoles({personId: userId})\r\n\t    .then((res) => {\r\n\t    \tuserDetailsRoles.assignedRoles = res;\r\n            API.cui.getPersonRolesGrantable({personId:userId})\r\n            .then(res =>{\r\n                userDetailsRoles.rolesGrantable=res;\r\n            })\r\n            .fail(err =>{\r\n                userDetailsRoles.grantedHistoryError=true;\r\n            })\r\n\t    })\r\n    );\r\n\r\n    apiPromises.push(\r\n        API.cui.getPersonRolesGrantable({personId:userId})\r\n        .then(res =>{\r\n            userDetailsRoles.rolesGrantable=res;\r\n        })\r\n        .fail(err =>{\r\n            userDetailsRoles.grantedHistoryError=true;\r\n        })\r\n    );\r\n\r\n    $q.all(apiPromises)\r\n    .then((res) => {\r\n    \tuserDetailsRoles.loading = false;\r\n        userDetailsRoles.success=false\r\n    })\r\n    .catch((error) => {\r\n\t\tuserDetailsRoles.loading = false;\r\n        userDetailsRoles.grantedHistoryError=true;\r\n        userDetailsRoles.success=false\r\n\t\tconsole.log(error);\r\n    });\r\n}\r\n\r\n     init();\r\n\r\n    userDetailsRoles.assignRoles = () =>{\r\n       let roles =[]\r\n       angular.forEach(userDetailsRoles.appCheckbox,function(dsd,appId){\r\n       /*Object.keys(userRoles.appCheckbox).forEach(function(appId) {*/\r\n           if(dsd){\r\n                let test={\r\n                \"id\":appId\r\n               }\r\n               roles.push(test)\r\n           }\r\n        });\r\n        let rolesSubmitData={\r\n        \"userId\": userId,\r\n        \"roles\": roles\r\n        }\r\n        console.log(rolesSubmitData)\r\n        \r\n       userDetailsRoles.loading = true\r\n        API.cui.assignPersonRoles({data:rolesSubmitData})\r\n        .then(res =>{\r\n            console.log(res)\r\n            $scope.$digest()\r\n            userDetailsRoles.success=true\r\n             $timeout(() => {\r\n                userDetailsRoles.loading = false\r\n\r\n                init();\r\n            }, 3000);\r\n            \r\n        })\r\n        .fail(err =>{\r\n            userDetailsRoles.loading=false\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            userDetailsRoles.rolessubmitError=true\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n     $scope.$watch(\"userDetailsRoles.appCheckbox\", function(n) {\r\n       let count=0\r\n       angular.forEach(userDetailsRoles.appCheckbox,function(dsd,key){\r\n        console.log(key)\r\n        if(dsd)\r\n            count+=1\r\n       })\r\n       if(count>0){\r\n        userDetailsRoles.appCheckboxValid=true\r\n       }else{\r\n        userDetailsRoles.appCheckboxValid=false\r\n       }\r\n    }, true);\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDirectoryCtrl', function(API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,UserList,$filter,$pagination,$q,$state,$stateParams) {\r\n    \r\n    const orgDirectory = this\r\n    const scopeName = 'orgDirectory.'\r\n    orgDirectory.stateParamsOrgId=$stateParams.orgId\r\n    orgDirectory.search = {}\r\n    orgDirectory.sortBy = {}\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        orgDirectory.search[property] === firstValue\r\n            ? orgDirectory.search[property] = secondValue\r\n            : orgDirectory.search[property] = firstValue\r\n    }\r\n\r\n    const getUserListAppCount = (userList) => {\r\n        userList.forEach(user => {\r\n            API.cui.getPersonGrantedAppCount({personId: user.id})\r\n            .then(res => {\r\n                user.appCount = res\r\n            })\r\n            .fail(error => {\r\n                user.appCount = '...'\r\n            })\r\n        })\r\n    }\r\n\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    const initDirectory = (organizationId) => {\r\n        orgDirectory.search['organization.id'] = organizationId || $stateParams.orgId || User.user.organization.id\r\n        orgDirectory.search.pageSize = orgDirectory.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        let apiCalls = [\r\n            UserList.getUsers({ qs: APIHelpers.getQs(orgDirectory.search) }),\r\n            UserList.getUserCount({ qs: [['organization.id', orgDirectory.search['organization.id']]] }),\r\n            API.cui.getOrganization({organizationId: orgDirectory.search['organization.id']})\r\n        ]\r\n\r\n        Loader.onFor(scopeName + 'userList')\r\n        APIError.offFor(scopeName + 'userList')\r\n\r\n        $q.all(apiCalls)\r\n        .then(([users, userCount, organization]) => {\r\n            orgDirectory.organization = organization\r\n            // orgDirectory.organizationList = APIHelpers.flattenOrgHierarchy(orgHierarchy)\r\n            orgDirectory.userList = users\r\n            orgDirectory.userCount = userCount\r\n            orgDirectory.statusData = APIHelpers.getCollectionValuesAndCount(users, 'status', true)\r\n            CuiMobileNavFactory.setTitle(organization.name)\r\n            orgDirectory.reRenderPagination && orgDirectory.reRenderPagination()\r\n            getUserListAppCount(orgDirectory.userList)\r\n        })\r\n        .catch(error => {\r\n            APIError.onFor(scopeName + 'userList')\r\n        })\r\n        .finally(() => {\r\n            Loader.offFor(scopeName + 'userList')\r\n        })\r\n    }\r\n\r\n    orgDirectory.search = Object.assign({}, $stateParams)\r\n    initDirectory()\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n\r\n    // headers=\"['cui-name', 'username', 'status']\" \r\n\r\n    orgDirectory.sortingCallbacks = {\r\n      name () {\r\n          orgDirectory.sortBy.sortBy = 'name'\r\n          orgDirectory.sort(['name.given', 'name.surname'], orgDirectory.sortBy.sortType)\r\n      },\r\n      username () {\r\n          orgDirectory.sortBy.sortBy = 'username'\r\n          orgDirectory.sort('username', orgDirectory.sortBy.sortType)\r\n      },\r\n      status () {\r\n          orgDirectory.sortBy.sortBy = 'status'\r\n          orgDirectory.sort('status', orgDirectory.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgDirectory.sort = (sortBy, order) => {\r\n        cui.log('sort', sortBy, order)\r\n\r\n      orgDirectory.userList = _.orderBy(orgDirectory.userList, sortBy, order)\r\n    }\r\n\r\n    orgDirectory.updateSearchParams = (page) => {\r\n        if (page) orgDirectory.search.page = page \r\n        $state.transitionTo('organization.directory.userList', orgDirectory.search, {notify: false})\r\n        initDirectory(orgDirectory.search['organization.id'])\r\n    }\r\n\r\n    orgDirectory.updateSearchByName = (name) => {\r\n        orgDirectory.updateSearchParams()\r\n    }\r\n    orgDirectory.actionCallbacks = {\r\n        sort (sortType) {\r\n            switch(sortType) {\r\n            case 'name':\r\n                switchBetween('sortBy', '+name.given', '-name.given')\r\n                break\r\n            case 'username':\r\n                switchBetween('sortBy', '+person.username', '-person.username')\r\n                break\r\n            case 'status':\r\n                switchBetween('sortBy', '+person.status', '-person.status')\r\n                break\r\n            }\r\n\r\n            // if (!orgDirectory.search.hasOwnProperty('sortBy')) orgDirectory.search['sortBy'] = '+' + sortType\r\n            // else if (orgDirectory.search.sortBy.slice(1) !== sortType) orgDirectory.search.sortBy = '+' + sortType\r\n            // else switchBetween('sortBy', '+' + sortType, '-' + sortType)\r\n            orgDirectory.updateSearchParams()\r\n        },\r\n        refine (refineType) {\r\n            if (refineType === 'all') delete orgDirectory.search['status']\r\n            else {\r\n                if (!orgDirectory.search.hasOwnProperty('status')) orgDirectory.search['status'] = refineType\r\n                else orgDirectory.search.status = refineType\r\n            }\r\n            orgDirectory.updateSearchParams()\r\n        }\r\n    }\r\n\r\n    orgDirectory.userClick = (clickedUser) => {\r\n        const stateOpts = {\r\n            userId: clickedUser.id,\r\n            orgId: clickedUser.organization.id,\r\n        }\r\n        if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\r\n        else $state.go('organization.directory.userDetails', stateOpts)\r\n    }\r\n\r\n    orgDirectory.getOrgMembers = (organization) => {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')(organization.name))\r\n        initDirectory(organization.id)\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgHierarchyCtrl', function(API,APIError,DataStorage,Loader,User,$scope,$state,$stateParams) {\r\n\r\n    const orgHierarchy = this\r\n    const pageLoader = 'orgHierarchy.loading'\r\n    orgHierarchy.stateParamsOrgId=$stateParams.orgId\r\n    orgHierarchy.expanded=false\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    const addExpandedProperty = (childOrgs, parentOrg) => {\r\n        childOrgs.forEach((org ,index) => {\r\n            // Need to remove org if it is pending\r\n            if (org.status===\"PENDING\") {\r\n                parentOrg.children.splice(index,1)\r\n                return\r\n            }\r\n            if (org.children) {\r\n                org.expanded=false\r\n                addExpandedProperty(org.children,org)\r\n            }\r\n        })\r\n    }\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    \r\n    const storedData = DataStorage.getType('orgHierarchy')\r\n\r\n    if (storedData) {\r\n        orgHierarchy.organizationHierarchy = storedData\r\n        // add expended property to all the org with children directive needs it to work for \r\n        // expandable and collapsable function\r\n        if (orgHierarchy.organizationHierarchy[0].children) {\r\n            addExpandedProperty(orgHierarchy.organizationHierarchy[0].children, orgHierarchy.organizationHierarchy[0])\r\n        }\r\n    }\r\n\r\n    if (!storedData) Loader.onFor(pageLoader)\r\n    // Loader.onFor(pageLoader)\r\n    API.cui.getOrganizationHierarchy({organizationId:orgHierarchy.stateParamsOrgId })\r\n    .done(res => {\r\n        // Put hierarchy response in an array as the hierarchy directive expects an array\r\n        orgHierarchy.organizationHierarchy = [res]\r\n        DataStorage.setType('orgHierarchy', orgHierarchy.organizationHierarchy)\r\n        // add expended property to all the org with children directive needs it to work for \r\n        // expandable and collapsable function\r\n        if (orgHierarchy.organizationHierarchy[0].children) {\r\n            addExpandedProperty(orgHierarchy.organizationHierarchy[0].children, orgHierarchy.organizationHierarchy[0])\r\n        }\r\n    })\r\n    .fail(err => {\r\n        APIError.onFor(pageLoader, err)\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(pageLoader)\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n    /* */\r\n    orgHierarchy.goToOrgPrfile = (org) => {\r\n        $state.go('organization.directory.orgDetails',{orgId:org.id})\r\n    }\r\n\r\n    orgHierarchy.toggleExpand = (object) => {\r\n        object.expanded=!object.expanded\r\n        let updateOrgChildren= (orgs) => {\r\n            orgs.forEach(org => {\r\n                if (org.id===object.id) {\r\n                    org.expanded=object.expanded\r\n                    return;\r\n                }\r\n                if (org.children) {\r\n                    updateOrgChildren(org.children)\r\n                }\r\n            })\r\n            \r\n            if (true) {};\r\n        }\r\n        updateOrgChildren(orgHierarchy.organizationHierarchy[0].children)\r\n        $scope.$digest()\r\n    }\r\n\r\n    orgHierarchy.toggleAll = (toggleFlag) => {\r\n        orgHierarchy.expanded=!orgHierarchy.expanded\r\n        let updateFlag= (orgs) => {\r\n            orgs.forEach(org => {\r\n                if (org.children) {\r\n                    org.expanded=!toggleFlag\r\n                    updateFlag(org.children)\r\n                }\r\n            })\r\n        }\r\n        updateFlag(orgHierarchy.organizationHierarchy[0].children)\r\n    }\r\n    /* */\r\n})\r\n\r\nangular.module('organization')\r\n.controller('divisionCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout,DataStorage) {\r\n\r\n    const division = this\r\n    division.sendInvitationError=''\r\n    const promises=[]\r\n    division.userSelectedOrg={}\r\n    division.userSelectedOrg.originalObject={}\r\n    division.userSelectedOrg.originalObject.name=User.user.organization.name\r\n    division.userSelectedOrg.originalObject.id=User.user.organization.id\r\n    division.stateParamsOrgId=User.user.organization.id\r\n    //division.emailSubject='Register as an adminstrator within '\r\n\r\n    const storedData = DataStorage.getType('orgHierarchy',User.user.id)\r\n\r\n    if (storedData) {\r\n        division.organizationHierarchyRoot = storedData\r\n        division.organizationHierarchy = storedData[0].children\r\n        const organizationList=[]\r\n        angular.forEach(division.organizationHierarchy,function(value){\r\n          let array={\r\n            \"id\":value.id,\r\n            \"name\":value.name[0].text\r\n          }\r\n          organizationList.push(array)\r\n        })\r\n        division.organizationList=organizationList\r\n    }else{\r\n      division.loader=true\r\n      API.cui.getOrganizationHierarchy({organizationId:User.user.organization.id })\r\n      .done(res => {\r\n          DataStorage.setType('orgHierarchy', [res],User.user.id)\r\n          const organizationList=[]\r\n          // Put hierarchy response in an array as the hierarchy directive expects an array\r\n          const storedDatas = DataStorage.getType('orgHierarchy',User.user.id)\r\n          division.organizationHierarchyRoot = storedDatas\r\n          division.organizationHierarchy = storedDatas[0].children\r\n          \r\n          angular.forEach(division.organizationHierarchy,function(value){\r\n            let array={\r\n              \"id\":value.id,\r\n              \"name\":value.name[0].text\r\n            }\r\n           \r\n            organizationList.push(array)\r\n          })\r\n          division.organizationList=organizationList\r\n          console.log(division.organizationList)\r\n         \r\n      })\r\n      .fail(err => {\r\n          APIError.onFor(pageLoader, err)\r\n      })\r\n      .always(() => {\r\n          division.loader=false\r\n          $scope.$digest()\r\n      })\r\n  }\r\n\r\n\r\n    division.sendInvitation = () => {\r\n           const promises=[]\r\n      const validEmails=[]\r\n      division.emailAddressError=false\r\n      division.sendInvitationError=false\r\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n      division.emailArray=new Array()\r\n      division.emailArray=division.emailAddress.split(',')      \r\n      angular.forEach(division.emailArray,function(email){\r\n        if(EMAIL_REGEXP.test(email)){\r\n            validEmails.push(email)\r\n          }\r\n      })\r\n      if(validEmails.length===division.emailArray.length){\r\n        division.loader=true\r\n        angular.forEach(division.emailArray,function(email){\r\n          let opts = {\r\n            \"email\":email,\r\n            \"invitor\":{\r\n              \"id\":User.user.id,\r\n              \"type\":\"person\"\r\n              },\r\n            \"targetOrganization\":{\r\n              \"id\":division.userSelectedOrg.originalObject.id,\r\n              \"type\":\"organization\"\r\n              }\r\n          }\r\n          promises.push(API.cui.createOrgDivisionInvitation({data:opts})) \r\n        })\r\n        \r\n        $q.all(promises)\r\n        .then((res) => {\r\n          division.loader=false\r\n          division.success=true\r\n           division.sendInvitationError=false;\r\n           $timeout(() => {\r\n                 $state.go('invitation.inviteSelect');\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n             division.loader=false\r\n             division.sendInvitationError=true\r\n        });\r\n      }else{\r\n         division.emailAddressError=true\r\n      }\r\n    }\r\n    division.goToOrgPrfile = (org) => {\r\n        division.userSelectedOrg.originalObject={}\r\n        division.userSelectedOrg.originalObject.name=org.name[0].text\r\n        division.userSelectedOrg.originalObject.id=org.id\r\n        division.selectOrgFromList=false\r\n        $scope.$digest()\r\n    }\r\n     division.goToOrg = () => {\r\n        \r\n    }\r\n})\r\n\r\nangular.module('organization')\r\n.controller('tloCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout) {\r\n\r\n    const tlo = this\r\n    tlo.sendInvitationError=''\r\n    const promises=[]\r\n    tlo.organization={}\r\n    tlo.organization.name=User.user.organization.name\r\n    tlo.stateParamsOrgId=User.user.organization.id\r\n    //tlo.emailSubject='Register as a new organization'\r\n\r\n    tlo.sendInvitation = () => {\r\n      const promises=[]\r\n      const validEmails=[]\r\n      tlo.emailAddressError=false\r\n      tlo.sendInvitationError=false\r\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n      tlo.emailArray=new Array()\r\n      tlo.emailArray=tlo.emailAddress.split(',')      \r\n      angular.forEach(tlo.emailArray,function(email){\r\n        if(EMAIL_REGEXP.test(email)){\r\n            validEmails.push(email)\r\n          }\r\n      })\r\n      if(validEmails.length===tlo.emailArray.length){\r\n        tlo.loader=true\r\n        angular.forEach(tlo.emailArray,function(email){\r\n          let opts = {\r\n            \"email\":email,\r\n            \"invitor\":{\r\n              \"id\":User.user.id,\r\n              \"type\":\"person\"\r\n              },\r\n            \"targetOrganization\":{\r\n              \"id\":User.user.organization.id,\r\n              \"type\":\"organization\"\r\n              }\r\n          }\r\n          promises.push(API.cui.createOrgCompanyInvitation({data:opts})) \r\n        })\r\n        \r\n        $q.all(promises)\r\n        .then((res) => {\r\n          tlo.loader=false\r\n          tlo.success=true\r\n           tlo.sendInvitationError=false;\r\n           $timeout(() => {\r\n                 $state.go('invitation.inviteSelect');\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n             tlo.loader=false\r\n             tlo.sendInvitationError=true\r\n        });\r\n      }else{\r\n         tlo.emailAddressError=true\r\n      }\r\n    }\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout,DataStorage) {\r\n\r\n    const user = this\r\n    user.sendInvitationError=''\r\n    const promises=[]\r\n    user.userSelectedOrg={}\r\n    user.userSelectedOrg.originalObject={}\r\n    user.userSelectedOrg.originalObject.name=User.user.organization.name\r\n    user.userSelectedOrg.originalObject.id=User.user.organization.id\r\n    user.stateParamsOrgId=User.user.organization.id\r\n    //user.emailSubject='Register as a user to join '\r\n    user.selectOrgFromList=false\r\n\r\n    const storedData = DataStorage.getType('orgHierarchy',User.user.id)\r\n\r\n    if (storedData) {\r\n        user.organizationHierarchyRoot = storedData\r\n        user.organizationHierarchy = storedData[0].children\r\n        const organizationList=[]\r\n        angular.forEach(user.organizationHierarchy,function(value){\r\n          let array={\r\n            \"id\":value.id,\r\n            \"name\":value.name[0].text\r\n          }\r\n          organizationList.push(array)\r\n        })\r\n        user.organizationList=organizationList\r\n    }else{\r\n      user.loader=true\r\n      API.cui.getOrganizationHierarchy({organizationId:User.user.organization.id })\r\n        .done(res => {\r\n            DataStorage.setType('orgHierarchy', [res],User.user.id)\r\n            const organizationList=[]\r\n            const storedDatas = DataStorage.getType('orgHierarchy',User.user.id)\r\n            // Put hierarchy response in an array as the hierarchy directive expects an array\r\n            user.organizationHierarchyRoot = storedDatas\r\n            user.organizationHierarchy = storedDatas[0].children\r\n            \r\n            angular.forEach(user.organizationHierarchy,function(value){\r\n              let array={\r\n                \"id\":value.id,\r\n                \"name\":value.name[0].text\r\n              }\r\n             \r\n              organizationList.push(array)\r\n            })\r\n            user.organizationList=organizationList\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(pageLoader, err)\r\n        })\r\n        .always(() => {\r\n            user.loader=false\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n   \r\n    user.customErrors = {\r\n      email: {\r\n          email: function(){\r\n              var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n              if (user.email) {\r\n                  return EMAIL_REGEXP.test(user.email)\r\n              }else{\r\n                  return true;\r\n              }\r\n          }\r\n      }\r\n    }\r\n\r\n    user.sendInvitation = () => {\r\n      const promises=[]\r\n      const validEmails=[]\r\n      user.emailAddressError=false\r\n      user.sendInvitationError=false\r\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n      user.emailArray=new Array()\r\n      user.emailArray=user.emailAddress.split(',')      \r\n      angular.forEach(user.emailArray,function(email){\r\n        if(EMAIL_REGEXP.test(email)){\r\n            validEmails.push(email)\r\n          }\r\n      })\r\n      if(validEmails.length===user.emailArray.length){\r\n        user.loader=true\r\n        angular.forEach(user.emailArray,function(email){\r\n          let opts = {\r\n            \"email\":email,\r\n            \"invitor\":{\r\n              \"id\":User.user.id,\r\n              \"type\":\"person\"\r\n              },\r\n            \"targetOrganization\":{\r\n              \"id\":user.userSelectedOrg.originalObject.id,\r\n              \"type\":\"organization\"\r\n              }\r\n          }\r\n          promises.push(API.cui.createPersonInvitation({data:opts})) \r\n        })\r\n        \r\n        $q.all(promises)\r\n        .then((res) => {\r\n          user.loader=false\r\n          user.success=true\r\n           user.sendInvitationError=false;\r\n           $timeout(() => {\r\n                 $state.go('invitation.inviteSelect');\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n             user.loader=false\r\n             user.sendInvitationError=true\r\n        });\r\n      }else{\r\n         user.emailAddressError=true\r\n      }\r\n      \r\n    }\r\n\r\n    user.goToOrgPrfile = (org) => {\r\n        user.userSelectedOrg.originalObject={}\r\n        user.userSelectedOrg.originalObject.name=org.name[0].text\r\n        user.userSelectedOrg.originalObject.id=org.id\r\n        user.selectOrgFromList=false\r\n        $scope.$digest()\r\n    }\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgProfileCtrl', function(DataStorage, Loader, Organization, User,$stateParams,$q,APIError) {\r\n\r\n    const orgProfile = this\r\n    const storedData = DataStorage.getType('orgProfile')\r\n    orgProfile.stateParamsOrgId=$stateParams.orgId\r\n    let orgPromise=[]\r\n    if (User.user.organization.id===$stateParams.orgId) {\r\n        orgProfile.organization = User.user.organization\r\n    }\r\n    else{\r\n        // Organization is different than user's org, need to get fresh\r\n        Loader.onFor('orgProfile.init')\r\n        orgPromise.push(Organization.getOrganization($stateParams.orgId))\r\n    }\r\n    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    if (storedData !== undefined) {\r\n        orgProfile.securityAdmins = storedData.admins\r\n        orgProfile.passwordPolicy = storedData.passwordPolicy\r\n        orgProfile.authenticationPolicy=storedData.authenticationPolicy\r\n    }\r\n    else Loader.onFor('orgProfile.init')\r\n    $q.all(orgPromise)\r\n    .then(res => {\r\n        if (orgPromise.length!==0) {\r\n            orgProfile.organization=res[0]\r\n        }\r\n            Organization.initOrganizationProfile(orgProfile.organization.id, orgProfile.organization.passwordPolicy.id, orgProfile.organization.authenticationPolicy.id)\r\n        .then(res => {\r\n            orgProfile.securityAdmins = res.admins\r\n            orgProfile.passwordPolicy = res.passwordPolicy\r\n            orgProfile.authenticationPolicy=res.authenticationPolicy\r\n            DataStorage.setType('orgProfile', res)\r\n            Loader.offFor('orgProfile.init')\r\n        })\r\n        .catch(err => {\r\n            console.error(\"there was an error fetching additional org details\" +err)\r\n            Loader.offFor('orgProfile.init')\r\n            APIError.onFor('orgProfile.init')\r\n        })\r\n    })\r\n    .catch(err => {\r\n        console.error(\"there was an error fetching org details\" +err)\r\n        Loader.offFor('orgProfile.init')\r\n        APIError.onFor('orgProfile.init')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.factory('NewGrant', (DataStorage, API, $stateParams) => {\r\n    let newGrant = {}\r\n    let newGrantsInStorage\r\n    /*\r\n        This Factory provides common platform to share common logic between granting an app to \r\n        User and Organization\r\n    */\r\n    // Not handling package requests as not needed\r\n    newGrant.updateStorage = (type,id,application) => {\r\n        let storageType\r\n        if(type===\"person\") storageType='newGrant'\r\n        else storageType='newOrgGrant'\r\n        DataStorage.setType(storageType, {\r\n            id: id,\r\n            type: type,\r\n            applications: application\r\n        })\r\n        // console.log(DataStorage.getType('newGrant'))\r\n    }\r\n\r\n    newGrant.pullFromStorage = (scope,resourceId,type) => {\r\n        // const newGrantsInStorage = DataStorage.getDataThatMatches('newGrant', { userId: $stateParams.userID })\r\n        if (type===\"person\") {\r\n            newGrantsInStorage = DataStorage.getType('newGrant')\r\n        }\r\n        else{\r\n            newGrantsInStorage = DataStorage.getType('newOrgGrant')\r\n        }      \r\n        if (newGrantsInStorage&&newGrantsInStorage.id==resourceId) {\r\n            scope.appsBeingRequested = Object.assign({}, newGrantsInStorage.applications)\r\n            scope.packagesBeingRequested = Object.assign({}, newGrantsInStorage.packages)\r\n        }\r\n        else {\r\n            scope.packagesBeingRequested = {}\r\n            scope.appsBeingRequested = {}\r\n        }\r\n\r\n        scope.numberOfRequests = Object.keys(scope.appsBeingRequested).length + Object.keys(scope.packagesBeingRequested).length\r\n\r\n        scope.applicationCheckbox = Object.keys(scope.appsBeingRequested).reduce((applications, appId) => {\r\n            applications[appId] = true\r\n            return applications\r\n        },{})\r\n\r\n        scope.packageCheckbox = Object.keys(scope.packagesBeingRequested).reduce((packages, appId) => {\r\n            packages[appId] = true\r\n            return packages\r\n        },{})\r\n\r\n        scope.requests = {\r\n            application: scope.appsBeingRequested,\r\n            package: scope.packagesBeingRequested\r\n        }\r\n    }\r\n\r\n    newGrant.claimGrants = (id, type,packageRequestObject) => {\r\n        let claimGrants = []\r\n\r\n        const buildPackageClaims = (claimsObject) => {\r\n            if (Object.keys(claimsObject).length === 0) {\r\n                return undefined;\r\n            } // if there's no claims in this claim object\r\n            let packageClaims = []\r\n            Object.keys(claimsObject).forEach(claimId => {\r\n                if (Object.keys(claimsObject[claimId]).length === 0) {\r\n                    return;\r\n                } // if no claimValues selected for that claimId\r\n                const claimValues = Object.keys(claimsObject[claimId]).reduce((claims, claimValueId) => {\r\n                    claims.push({ claimValueId })\r\n                    return claims\r\n                },[])\r\n\r\n                packageClaims.push({\r\n                    claimId,\r\n                    claimValues\r\n                })\r\n            })\r\n            return packageClaims\r\n        }\r\n\r\n        Object.keys(packageRequestObject).forEach(pkgId => {\r\n            claimGrants.push({\r\n                data: {\r\n                    grantee: {\r\n                        id: id,\r\n                        type: type\r\n                    },\r\n                    servicePackage: {\r\n                        id: pkgId,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    packageClaims: buildPackageClaims(packageRequestObject[pkgId].claims)\r\n                }\r\n            })\r\n        })\r\n\r\n       return claimGrants\r\n    }\r\n\r\n    newGrant.packageGrants = (id, type, packageRequestObject) => {\r\n        let packageGrants = []\r\n        let index=0\r\n        Object.keys(packageRequestObject).forEach(pkgId => {            \r\n            packageGrants.push({\r\n                packageId: pkgId,\r\n                data: {\r\n                    version:'123',\r\n                    status: 'active',\r\n                    grantee: {\r\n                        id: id,\r\n                        type: type\r\n                    },\r\n                    servicePackage: {\r\n                        id: pkgId,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    reason:packageRequestObject[pkgId].reason\r\n                }\r\n            })\r\n            if (type==='person') {\r\n                packageGrants[index].personId=id\r\n            }\r\n            else{\r\n                packageGrants[index].organizationId=id\r\n            }\r\n            index++\r\n        })\r\n\r\n        return packageGrants\r\n    }\r\n\r\n    return newGrant\r\n})\r\nangular.module('organization')\r\n.controller('newGrantClaimsCtrl', function(API,APIHelpers,DataStorage,Loader,NewGrant,$stateParams,$q,$scope,$state,$timeout) {\r\n    \r\n    const newGrantClaims = this\r\n    const loaderType = 'newGrantClaims.'\r\n    newGrantClaims.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    newGrantClaims.packageRequests = {}\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    NewGrant.pullFromStorage(newGrantClaims,$stateParams.userId,'person');\r\n    if (newGrantClaims.numberOfRequests===0) {\r\n        $state.go('organization.requests.newGrantSearch',{userId:$stateParams.userId})\r\n    }\r\n    //For PopUp\r\n    newGrantClaims.appsBeingRequestedforPopup=angular.copy(newGrantClaims.appsBeingRequested)\r\n    //Keep only one app among all bundled apps\r\n    angular.forEach(newGrantClaims.appsBeingRequested , (request) =>{\r\n        if (request.bundledApps) {\r\n            request.bundledApps.forEach(bundledApp => {\r\n                if (newGrantClaims.appsBeingRequested[bundledApp.id]) {\r\n                    delete newGrantClaims.appsBeingRequested[bundledApp.id]\r\n                }                    \r\n            })\r\n        }\r\n    })\r\n    // get the claims for each app being requested\r\n    Object.keys(newGrantClaims.appsBeingRequested).forEach((appId, i) => {\r\n        const app = newGrantClaims.appsBeingRequested[appId]\r\n\r\n        if (!newGrantClaims.packageRequests[app.servicePackage.id]) {\r\n            newGrantClaims.packageRequests[app.servicePackage.id] = {\r\n                claims: {},\r\n                administratorRights: false\r\n            }\r\n        }\r\n\r\n        Loader.onFor(loaderType + 'claims' + i)\r\n\r\n        const opts = {\r\n            qs: APIHelpers.getQs({\r\n                packageId: newGrantClaims.appsBeingRequested[appId].servicePackage.id\r\n            })\r\n        }\r\n\r\n        API.cui.getPackageClaims(opts)\r\n        .then(res => {\r\n            newGrantClaims['claims' + i] = Object.assign({}, res)\r\n            res.forEach(claim => {\r\n                newGrantClaims.packageRequests[app.servicePackage.id].claims[claim.claimId] = {}\r\n            })\r\n            Loader.offFor(loaderType + 'claims' + i)\r\n            $scope.$digest()\r\n        })\r\n        .fail(err => { \r\n            // claims endpoint throws an error when the package has no claims\r\n            newGrantClaims['claims' + i] = []\r\n            Loader.offFor(loaderType + 'claims' + i)\r\n            $scope.$digest()\r\n        })\r\n    })\r\n\r\n    Loader.onFor(loaderType + 'user')\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        newGrantClaims.user = Object.assign({}, res)\r\n        Loader.offFor(loaderType + 'user')\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    newGrantClaims.submit = () => {\r\n        Loader.onFor(loaderType + 'submit')\r\n        let claimsPromises=[]\r\n        // Grant Packages\r\n        $q.all(NewGrant.packageGrants($stateParams.userId ,'person', newGrantClaims.packageRequests).map(opts => API.cui.grantPersonPackage(opts)))\r\n        .then(res => {\r\n            // grant claims\r\n            let claimsData=NewGrant.claimGrants($stateParams.userId ,'person', newGrantClaims.packageRequests)\r\n            claimsData.forEach(claimData => {\r\n                if(claimData.data.packageClaims&&claimData.data.packageClaims.length!==0){\r\n                    claimsPromises.push(API.cui.grantClaims(claimData))\r\n                }\r\n            })\r\n            return $q.all(claimsPromises)\r\n        })\r\n        .then(res => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newGrantClaims.success = true\r\n            DataStorage.setType('newGrant',{})\r\n            $timeout(() => {\r\n                $state.go('organization.directory.userList',{userId:$stateParams.userId,orgId:$stateParams.orgId})\r\n            }, 3000);\r\n        })\r\n        .catch(err => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newGrantClaims.error = true\r\n        })\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('newGrantCtrl', function(API, $stateParams, $scope, $state, $filter, Loader, DataStorage,NewGrant) {\r\n\r\n    const newGrant = this\r\n    newGrant.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n    newGrant.searchType = 'applications'\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                userId:<user for which the grant is being made>,\r\n                applications:<array of applications being granted>,\r\n                packages:<array of packages being granted>\r\n            }\r\n        ]\r\n    ****/\r\n    NewGrant.pullFromStorage(newGrant,$stateParams.userId,'person');\r\n    Loader.onFor('newGrant.user')\r\n    API.cui.getPerson({ personId:$stateParams.userId })\r\n    .then(res => {\r\n        newGrant.user = Object.assign({}, res)\r\n        Loader.offFor('newGrant.user')\r\n        $scope.$digest()\r\n    })\r\n\r\n    Loader.onFor('newGrant.categories')\r\n    API.cui.getCategories()\r\n    .then(res => {\r\n        newGrant.categories = res.slice()\r\n        Loader.offFor('newGrant.categories')\r\n        $scope.$digest()\r\n    })\r\n    .fail(err => {\r\n        Loader.offFor('newGrant.categories')\r\n        newGrant.categoryError=true\r\n        $scope.$digest()\r\n    })\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newGrant.searchCallback = (opts) => {\r\n        if (!opts) {\r\n            $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId});\r\n        } else if (typeof opts ==='string') {\r\n            $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId, name: opts});\r\n        } else {\r\n            const optsParser = {\r\n                category: (unparsedCategory) => {\r\n                    const category = $filter('cuiI18n')(unparsedCategory)\r\n                    $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId, category})\r\n                }\r\n            }\r\n            optsParser[opts.type](opts.value)\r\n        }\r\n    }\r\n\r\n    newGrant.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newGrantClaims', { userId: $stateParams.userId, orgId: $stateParams.orgId })\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('newGrantSearchCtrl', function ($scope, $state, $stateParams, API, DataStorage, Loader, $pagination, APIHelpers, NewGrant, $q) {\r\n    const newGrantSearch = this;\r\n    newGrantSearch.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    \r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                userId:<user for which the grant is being made>,\r\n                applications:<object of applications being granted>,\r\n                packages:<object of packages being granted>\r\n            }\r\n        ]\r\n    ****/\r\n\r\n    NewGrant.pullFromStorage(newGrantSearch,$stateParams.userId,'person');\r\n\r\n    Loader.onFor('newGrantSearch.user');\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        newGrantSearch.user = Object.assign({}, res);\r\n        Loader.offFor('newGrantSearch.user');\r\n        $scope.$digest();\r\n    })\r\n    .fail(err =>{\r\n        console.error(\"There was an error in fetching user details\" + err)\r\n        Loader.offFor('newGrantSearch.user');\r\n        $scope.$digest();\r\n    })\r\n\r\n    const searchUpdate = ({ previouslyLoaded }) => {\r\n        Loader.onFor('newGrantSearch.apps');\r\n        if (!previouslyLoaded) {\r\n          newGrantSearch.search = Object.assign({}, $stateParams);\r\n        }\r\n\r\n        const type = newGrantSearch.search.type || 'applications';\r\n\r\n        const queryParams = {\r\n            'service.name': newGrantSearch.search.name,\r\n            'service.category': newGrantSearch.search.category,\r\n            page: newGrantSearch.search.page || 1,\r\n            pageSize: newGrantSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0],\r\n            sortBy: newGrantSearch.search.sortBy\r\n        };\r\n\r\n        const queryArray = APIHelpers.getQs(queryParams);\r\n\r\n        const queryOptions = {\r\n            personId: $stateParams.userId,\r\n            qs: queryArray\r\n        };\r\n\r\n        if (type === 'applications') {\r\n          // TODO: REPLACE WITH REAL COUNT\r\n          $q.all([API.cui.getPersonGrantableCount(queryOptions), API.cui.getPersonGrantableApps(queryOptions)])\r\n          .then(res => {\r\n              newGrantSearch.applicationList = res[1].slice();\r\n              newGrantSearch.count = res[0];\r\n              if(newGrantSearch.reRenderPaginate) {\r\n                newGrantSearch.reRenderPaginate();\r\n              }\r\n              Loader.offFor('newGrantSearch.apps')\r\n          })\r\n          .catch(err => {\r\n            console.error('There was an error fetching grantable apps or/and its count' + err)\r\n            Loader.offFor('newGrantSearch.apps')\r\n            newGrantSearch.grantableAppsError=true\r\n          })\r\n        }\r\n    };\r\n\r\n    searchUpdate({\r\n        previouslyLoaded: false\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newGrantSearch.toggleRequest = ({ type, payload }) => {\r\n        if (payload) {\r\n            const storedRequests = newGrantSearch.requests[type]\r\n            storedRequests[payload.id] ? delete storedRequests[payload.id] : storedRequests[payload.id] = payload\r\n            if (storedRequests[payload.id]) {\r\n                newGrantSearch[type + 'Checkbox'][payload.id] = true;\r\n            } else if (newGrantSearch[type + 'Checkbox'][payload.id]) {\r\n                delete newGrantSearch[type + 'Checkbox'][payload.id];\r\n            }\r\n            newGrantSearch.numberOfRequests = Object.keys(newGrantSearch.applicationCheckbox).length + Object.keys(newGrantSearch.packageCheckbox).length\r\n            NewGrant.updateStorage('person',$stateParams.userId, newGrantSearch.requests.application)\r\n        }\r\n    }\r\n\r\n    newGrantSearch.updateSearch = () => {\r\n        const stateParams = Object.assign({}, newGrantSearch.search)\r\n        $state.transitionTo('organization.requests.newGrantSearch', stateParams, {notify:false})\r\n        searchUpdate({\r\n            previouslyLoaded: true\r\n        })\r\n    }\r\n\r\n    newGrantSearch.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newGrantClaims', { userId: $stateParams.userId, orgId: $stateParams.orgId })\r\n    }\r\n\r\n    //select parent if it is a child, deselect child if it is a parent\r\n    newGrantSearch.checkRelatedAppsBody= function(relatedApp){\r\n        newGrantSearch.toggleRequest(_.find(newGrantSearch.list,{id:relatedApp.id}))   \r\n        newGrantSearch.checkRelatedAndBundledApps(_.find(newGrantSearch.list,{id:relatedApp.id}))\r\n    };\r\n\r\n    //deselect child if it is a parent, select parent if it is a child \r\n    newGrantSearch.checkRelatedAndBundledApps=function(type,application){\r\n        const storedRequests = newGrantSearch.requests[type]\r\n        //if unchecked the checkbox\r\n        if (!storedRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!application.servicePackage.parent) {\r\n                application.relatedApps && application.relatedApps.forEach((relatedApp)=>{\r\n                    // if (newGrantSearch[type + 'Checkbox'][relatedApp.id]) {\r\n                        // newGrantSearch[type + 'Checkbox'][relatedApp.id]=!newGrantSearch[type + 'Checkbox'][relatedApp.id]\r\n                        newGrantSearch.toggleRequest({type:'application', payload:_.find(newGrantSearch.applicationList,{id:relatedApp.id})})\r\n                    // }\r\n                })\r\n            }\r\n            newGrantSearch.checkBundledApps(application,false)           \r\n        }else{\r\n            if (application.servicePackage.parent) {\r\n                //Need to select the other parent(if it has any) If user clicks on expandabel title\r\n                newGrantSearch.applicationList.forEach(app=> {\r\n                    //if it is a parent and parent of selected app\r\n                    if (!app.servicePackage.parent&&app.servicePackage.id===application.servicePackage.parent.id&&!newGrantSearch['applicationCheckbox'][app.id]) {\r\n                       newGrantSearch['applicationCheckbox'][app.id]=!newGrantSearch['applicationCheckbox'][app.id]\r\n                       newGrantSearch.toggleRequest({type:'application', payload:app})\r\n                    }\r\n                })\r\n            }\r\n            newGrantSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    newGrantSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                // newGrantSearch['applicationCheckbox'][bundledApp.id]=check\r\n                newGrantSearch.toggleRequest({type:'application', payload:_.find(newGrantSearch.applicationList,{id:bundledApp.id})})\r\n            })\r\n        }\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('newOrgGrantClaimsCtrl', function(API,APIHelpers,DataStorage,Loader,NewGrant,$stateParams,$q,$scope,$state,$timeout) {\r\n    \r\n    const newOrgGrantClaims = this\r\n    const loaderType = 'newOrgGrantClaims.'\r\n    newOrgGrantClaims.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        }\r\n    }\r\n    if (API.user.organization.id===$stateParams.orgId) {\r\n        newOrgGrantClaims.prevState.name=\"organization.applications\"\r\n    }\r\n    else{\r\n        newOrgGrantClaims.prevState.name=\"organization.directory.orgDetails\"\r\n    }\r\n    newOrgGrantClaims.packageRequests = {}\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    NewGrant.pullFromStorage(newOrgGrantClaims,$stateParams.orgId,'organization');\r\n    if (newOrgGrantClaims.numberOfRequests===0) {\r\n        $state.go('organization.requests.newOrgGrantSearch',{orgId:$stateParams.orgId})\r\n    }\r\n        //For PopUp\r\n    newOrgGrantClaims.appsBeingRequestedforPopup=angular.copy(newOrgGrantClaims.appsBeingRequested)\r\n    //Keep only one app among all bundled apps\r\n    angular.forEach(newOrgGrantClaims.appsBeingRequested , (request) =>{\r\n        if (request.bundledApps) {\r\n            request.bundledApps.forEach(bundledApp => {\r\n                if (newOrgGrantClaims.appsBeingRequested[bundledApp.id]) {\r\n                    delete newOrgGrantClaims.appsBeingRequested[bundledApp.id]\r\n                }                    \r\n            })\r\n        }\r\n    })\r\n    // get the claims for each app being requested\r\n    Object.keys(newOrgGrantClaims.appsBeingRequested).forEach((appId, i) => {\r\n        const app = newOrgGrantClaims.appsBeingRequested[appId]\r\n\r\n        if (!newOrgGrantClaims.packageRequests[app.servicePackage.id]) {\r\n            newOrgGrantClaims.packageRequests[app.servicePackage.id] = {\r\n                claims: {},\r\n                administratorRights: false\r\n            }\r\n        }\r\n\r\n        Loader.onFor(loaderType + 'claims' + i)\r\n\r\n        // const opts = {\r\n        //     qs: APIHelpers.getQs({\r\n        //         packageId: newOrgGrantClaims.appsBeingRequested[appId].servicePackage.id\r\n        //     })\r\n        // }\r\n\r\n        // API.cui.getPackageClaims(opts)\r\n        // .then(res => {\r\n        //     newOrgGrantClaims['claims' + i] = Object.assign({}, res)\r\n        //     res.forEach(claim => {\r\n        //         newOrgGrantClaims.packageRequests[app.servicePackage.id].claims[claim.claimId] = {}\r\n        //     })\r\n        //     Loader.offFor(loaderType + 'claims' + i)\r\n        //     $scope.$digest()\r\n        // })\r\n        // .fail(err => { \r\n        //     // claims endpoint throws an error when the package has no claims\r\n        //     newOrgGrantClaims['claims' + i] = []\r\n        //     Loader.offFor(loaderType + 'claims' + i)\r\n        //     $scope.$digest()\r\n        // })\r\n    })\r\n\r\n    Loader.onFor(loaderType + 'org')\r\n    API.cui.getOrganization({ organizationId: $stateParams.orgId })\r\n    .then(res => {\r\n        newOrgGrantClaims.org = Object.assign({}, res)\r\n        Loader.offFor(loaderType + 'org')\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    newOrgGrantClaims.submit = () => {\r\n        Loader.onFor(loaderType + 'submit')\r\n        newOrgGrantClaims.success = false;\r\n        let claimsPromises=[]\r\n        // Grant Packages\r\n        $q.all(NewGrant.packageGrants($stateParams.orgId ,'organization', newOrgGrantClaims.packageRequests).map(opts => API.cui.grantOrganizationPackage(opts)))\r\n        // .then(res => {\r\n        //     // grant claims\r\n        //     let claimsData=NewGrant.claimGrants($stateParams.orgId ,'organization', newOrgGrantClaims.packageRequests)\r\n        //     claimsData.forEach(claimData => {\r\n        //         if(claimData.data.packageClaims&&claimData.data.packageClaims.length!==0){\r\n        //             claimsPromises.push(API.cui.grantClaims(claimData))\r\n        //         }\r\n        //     })\r\n        //     return $q.all(claimsPromises)\r\n        // })\r\n        .then(res => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newOrgGrantClaims.success = true\r\n            DataStorage.setType('newOrgGrant',{})\r\n            $timeout(() => {\r\n                $state.go('organization.applications',{orgId:$stateParams.orgId});\r\n            }, 3000);\r\n        })\r\n        .catch(err => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newOrgGrantClaims.error = true\r\n        })\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('newOrgGrantCtrl', function(API, $stateParams, $scope, $state, $filter, Loader, DataStorage,NewGrant) {\r\n\r\n    const newOrgGrant = this\r\n    newOrgGrant.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        }\r\n    }\r\n    if (API.user.organization.id===$stateParams.orgId) {\r\n        newOrgGrant.prevState.name=\"organization.applications\"\r\n    }\r\n    else{\r\n        newOrgGrant.prevState.name=\"organization.directory.orgDetails\"\r\n    }\r\n    \r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    newOrgGrant.searchType = 'applications'\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                id:<user/org for which the grant is being made>,\r\n                applications:<array of applications being granted>,\r\n                packages:<array of packages being granted>\r\n                type:person or organiztion\r\n            }\r\n        ]\r\n    ****/\r\n    NewGrant.pullFromStorage(newOrgGrant,$stateParams.orgId,'organization');\r\n    Loader.onFor('newOrgGrant.org')\r\n    API.cui.getOrganization({ organizationId:$stateParams.orgId })\r\n    .then(res => {\r\n        newOrgGrant.org = Object.assign({}, res)\r\n        Loader.offFor('newOrgGrant.org')\r\n        $scope.$digest()\r\n    })\r\n\r\n    Loader.onFor('newOrgGrant.categories')\r\n    API.cui.getCategories()\r\n    .then(res => {\r\n        newOrgGrant.categories = res.slice()\r\n        Loader.offFor('newOrgGrant.categories')\r\n        $scope.$digest()\r\n    })\r\n    .fail(err => {\r\n        Loader.offFor('newOrgGrant.categories')\r\n        newOrgGrant.categoryError=true\r\n        $scope.$digest()\r\n    })\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newOrgGrant.searchCallback = (opts) => {\r\n        if (!opts) {\r\n            $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId});\r\n        } else if (typeof opts ==='string') {\r\n            $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId, name: opts});\r\n        } else {\r\n            const optsParser = {\r\n                category: (unparsedCategory) => {\r\n                    const category = $filter('cuiI18n')(unparsedCategory)\r\n                    $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId, category})\r\n                }\r\n            }\r\n            optsParser[opts.type](opts.value)\r\n        }\r\n    }\r\n\r\n    newOrgGrant.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newOrgGrantClaims', { orgId: $stateParams.orgId })\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('newOrgGrantSearchCtrl', function ($scope, $state, $stateParams, API, DataStorage, Loader, $pagination, APIHelpers, NewGrant, $q, APIError) {\r\n    const newOrgGrantSearch = this;\r\n    newOrgGrantSearch.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        }\r\n    }\r\n\r\n    if (API.user.organization.id===$stateParams.orgId) {\r\n        newOrgGrantSearch.prevState.name=\"organization.applications\"\r\n    }\r\n    else{\r\n        newOrgGrantSearch.prevState.name=\"organization.directory.orgDetails\"\r\n    }\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    // const updateStorage = () => {\r\n    //     DataStorage.setType('newOrgGrant', {\r\n    //         id: $stateParams.orgId,\r\n    //         type:'organization',\r\n    //         applications: newOrgGrantSearch.requests.application,\r\n    //         packages: newOrgGrantSearch.requests.package\r\n    //     })\r\n    //     console.log(DataStorage.getType('newOrgGrant'))\r\n    // };\r\n\r\n    const updateViewList = (list) => {\r\n        let deferred= $q.defer()\r\n        newOrgGrantSearch.viewList=[]\r\n        let qs=[]\r\n        let apiPromises = []\r\n        angular.forEach(list, (app,parentIndex) => {\r\n            // Child App and Parent app requested by user\r\n            if(app.servicePackage.parent&&app.relatedApps){\r\n                let flag=false\r\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\r\n                    if (_.find(list,{id:realtedApp.id})) {\r\n                        flag=true\r\n                    }\r\n                    else{\r\n                        qs.push(['service.id',realtedApp.id])\r\n                    }\r\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\r\n                        apiPromises.push(API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs}))\r\n                        qs=[]\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                newOrgGrantSearch.viewList.push(app)\r\n            }\r\n        })\r\n        $q.all(apiPromises)\r\n        .then(res => {\r\n            angular.forEach(res, (app) => {\r\n                if (newOrgGrantSearch.search.name) {\r\n                    app[0].expanded=true\r\n                }\r\n                newOrgGrantSearch.viewList.push(...app)\r\n                newOrgGrantSearch.list.push(...app)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"There was an error loading parent requestable apps\")\r\n                deferred.reject(err)\r\n        })\r\n        return deferred.promise\r\n    }    \r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                id:<user/org for which the grant is being made>,\r\n                applications:<object of applications being granted>,\r\n                packages:<object of packages being granted>\r\n                type:<person or org>\r\n            }\r\n        ]\r\n    ****/\r\n\r\n    NewGrant.pullFromStorage(newOrgGrantSearch,$stateParams.orgId,'organization');\r\n\r\n    Loader.onFor('newOrgGrantSearch.org');\r\n    API.cui.getOrganization({ organizationId: $stateParams.orgId })\r\n    .then(res => {\r\n        newOrgGrantSearch.org = Object.assign({}, res);\r\n        Loader.offFor('newOrgGrantSearch.org');\r\n        $scope.$digest();\r\n    })\r\n    .fail(err => {\r\n        console.error('There was an error retreiving organization details '+err)\r\n        Loader.offFor('newOrgGrantSearch.org');\r\n        $scope.$digest();\r\n    })\r\n\r\n    const searchUpdate = ({ previouslyLoaded }) => {\r\n        Loader.onFor('newOrgGrantSearch.apps');\r\n        if (!previouslyLoaded) {\r\n          newOrgGrantSearch.search = Object.assign({}, $stateParams);\r\n        }\r\n\r\n        const type = newOrgGrantSearch.search.type || 'applications';\r\n\r\n        const queryParams = {\r\n            'service.name': newOrgGrantSearch.search.name,\r\n            'service.category': newOrgGrantSearch.search.category,\r\n            page: newOrgGrantSearch.search.page || 1,\r\n            pageSize: newOrgGrantSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0],\r\n            sortBy: newOrgGrantSearch.search.sortBy\r\n        };\r\n\r\n        const queryArray = APIHelpers.getQs(queryParams);\r\n\r\n        const queryOptions = {\r\n            organizationId: $stateParams.orgId,\r\n            qs: queryArray\r\n        };\r\n\r\n        if (type === 'applications') {\r\n          // TODO: REPLACE WITH REAL COUNT\r\n          $q.all([API.cui.getOrganizationGrantableCount(queryOptions), API.cui.getOrganizationGrantableApps(queryOptions)])\r\n          .then(res => {\r\n              newOrgGrantSearch.applicationList = res[1].slice();\r\n              newOrgGrantSearch.count = res[0];\r\n              if(newOrgGrantSearch.reRenderPaginate) {\r\n                newOrgGrantSearch.reRenderPaginate();\r\n              }\r\n              updateViewList(res[1])\r\n             .then(() =>{\r\n                Loader.offFor('newOrgGrantSearch.apps');\r\n             })\r\n          })\r\n          .catch(err =>{\r\n            console.error(\"There was an error in retreiving grantable apps. \"+err)\r\n            APIError.onFor('newOrgGrantSearch.apps')\r\n            Loader.offFor('newOrgGrantSearch.apps');\r\n          })\r\n        }\r\n    };\r\n\r\n    searchUpdate({\r\n        previouslyLoaded: false\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newOrgGrantSearch.toggleRequest = ({ type, payload }) => {\r\n        if (payload) {\r\n            const storedRequests = newOrgGrantSearch.requests[type]\r\n            storedRequests[payload.id] ? delete storedRequests[payload.id] : storedRequests[payload.id] = payload\r\n            if (storedRequests[payload.id]) {\r\n                newOrgGrantSearch[type + 'Checkbox'][payload.id] = true;\r\n            } else if (newOrgGrantSearch[type + 'Checkbox'][payload.id]) {\r\n                delete newOrgGrantSearch[type + 'Checkbox'][payload.id];\r\n            }\r\n            newOrgGrantSearch.numberOfRequests = Object.keys(newOrgGrantSearch.applicationCheckbox).length + Object.keys(newOrgGrantSearch.packageCheckbox).length\r\n\r\n            NewGrant.updateStorage('organization',$stateParams.orgId, newOrgGrantSearch.requests.application)\r\n        }\r\n    }\r\n\r\n    newOrgGrantSearch.updateSearch = () => {\r\n        const stateParams = Object.assign({}, newOrgGrantSearch.search)\r\n        $state.transitionTo('organization.requests.newOrgGrantSearch', stateParams, {notify:false})\r\n        searchUpdate({\r\n            previouslyLoaded: true\r\n        })\r\n    }\r\n\r\n    newOrgGrantSearch.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newOrgGrantClaims', { orgId: $stateParams.orgId })\r\n    }\r\n\r\n        //select parent if it is a child, deselect child if it is a parent\r\n    newOrgGrantSearch.checkRelatedAppsBody= function(relatedApp){\r\n        newOrgGrantSearch.toggleRequest(_.find(newOrgGrantSearch.list,{id:relatedApp.id}))   \r\n        newOrgGrantSearch.checkRelatedAndBundledApps(_.find(newOrgGrantSearch.list,{id:relatedApp.id}))\r\n    };\r\n\r\n    //deselect child if it is a parent, select parent if it is a child \r\n    newOrgGrantSearch.checkRelatedAndBundledApps=function(type,application){\r\n        const storedRequests = newOrgGrantSearch.requests[type]\r\n        //if unchecked the checkbox\r\n        if (!storedRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!application.servicePackage.parent) {\r\n                application.relatedApps && application.relatedApps.forEach((relatedApp)=>{\r\n                    // if (newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]) {\r\n                        // newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]=!newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]\r\n                        newOrgGrantSearch.toggleRequest({type:'application', payload:_.find(newOrgGrantSearch.applicationList,{id:relatedApp.id})})\r\n                    // }\r\n                })\r\n            }\r\n            newOrgGrantSearch.checkBundledApps(application,false)           \r\n        }else{\r\n            if (application.servicePackage.parent) {\r\n                //Need to select the other parent(if it has any) If user clicks on expandabel title\r\n                newOrgGrantSearch.applicationList.forEach(app=> {\r\n                    //if it is a parent and parent of selected app\r\n                    if (!app.servicePackage.parent&&app.servicePackage.id===application.servicePackage.parent.id&&!newOrgGrantSearch['applicationCheckbox'][app.id]) {\r\n                       newOrgGrantSearch['applicationCheckbox'][app.id]=!newOrgGrantSearch['applicationCheckbox'][app.id]\r\n                       newOrgGrantSearch.toggleRequest({type:'application', payload:app})\r\n                    }\r\n                })\r\n            }\r\n            newOrgGrantSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    newOrgGrantSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                // newOrgGrantSearch['applicationCheckbox'][bundledApp.id]=check\r\n                newOrgGrantSearch.toggleRequest({type:'application', payload:_.find(newOrgGrantSearch.applicationList,{id:bundledApp.id})})\r\n            })\r\n        }\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgAppRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,DataStorage) {\r\n\r\n    const scopeName = 'orgAppRequests.'\r\n\tconst orgAppRequests = this\r\n    orgAppRequests.search = {}\r\n\torgAppRequests.sortBy = {}\r\n\r\n\torgAppRequests.search=Object.assign({},$stateParams)\r\n\tif(!orgAppRequests.search.page)\r\n\t\torgAppRequests.search.page=1\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n\t\tvar foundOrgs = [];\r\n\t\tvar foundPersons = [];\r\n\t\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n      orgAppRequests.search['isApprovable'] = true;\r\n      orgAppRequests.search.pageSize = orgAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\t\t\tvar qsArray = APIHelpers.getQs(orgAppRequests.search);\r\n\r\n\t    orgAppRequests.data = []\r\n      Loader.onFor(scopeName + 'data')\r\n      APIError.offFor(scopeName + 'data')\r\n\r\n\r\n\t\t\tvar getOrg = function(orgId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (orgId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPerson = function(personId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (personId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPackage = function(packageId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (packageId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar done = function(context) {\r\n  \t\t\t$timeout(function() {\r\n\t        Loader.offFor(scopeName + 'data')\r\n\t        cui.log('done', context);\r\n\t        cui.log('data', orgAppRequests.data);\r\n\r\n\t        orgAppRequests.reRenderPagination && orgAppRequests.reRenderPagination()\r\n  \t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\t/*qsArray.push(['requestor.type','organization'])getPackageRequests*/\r\n\t\t\tqsArray.push(['requestor.id',User.user.organization.id])\r\n\t\t\tAPI.cui.retriveOrgPendingApps({ qs: ['requestor.id',User.user.organization.id] }).then(function(res) {\r\n\t\t\t\tvar calls = [];\r\n\r\n\t\t\t\t_.each(res, function(pkgReq) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\t\tvar data = pkgReq\r\n        \torgAppRequests.data.push(data);\r\n\r\n        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t        calls.push(\r\n\t        \tgetPerson(pkgReq.creator).then(function(person) {\r\n\t        \t\tdata.personData = person || {};\r\n\t        \t\tvar pkgId = (pkgReq && pkgReq.servicePackage) ? pkgReq.servicePackage.id : '';\r\n\t          \treturn getPackage(pkgId);\r\n\t\t\t\t\t\t}).then(function(pkg) {\r\n\t        \t\tdata.packageData = pkg;\r\n\t        \t\tvar orgId = pkgReq.requestor.id;\r\n\t\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t\t}).then(function(org) {\r\n\t\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t}).fail(function() {\r\n\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\treturn $.Deferred().resolve(calls);\r\n\t\t\t}).then(function(calls) {\r\n\t\t\t\t// do the cached calls\r\n\t\t\t\treturn $.when.apply($, calls);\r\n\t\t\t}).then(function() {\r\n\t\t\t\t// do the count (used for pagination)\r\n\t\t\t\treturn API.cui.getPackageRequestsCount();\r\n\t\t\t}).then(function(count) {\r\n\t\t\t\t// apply the count\r\n\t\t\t\torgAppRequests.userCount = count;\r\n\t\t\t\tAPI.user.orgAppRequestsCount=count\r\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t\t\t}).fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n      }).always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('App Requests'))\r\n      \tdone('finally');\r\n      });\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    orgAppRequests.sortingCallbacks = {\r\n      administrator () {\r\n          orgAppRequests.sortBy.sortBy = 'administrator'\r\n          orgAppRequests.sort(['personData.name.given', 'personData.name.surname'], orgAppRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          orgAppRequests.sortBy.sortBy = 'submitted'\r\n          orgAppRequests.sort('personData.creation', orgAppRequests.sortBy.sortType)\r\n      },\r\n      request () {\r\n          orgAppRequests.sortBy.sortBy = 'request'\r\n          orgAppRequests.sort('packageData.name', orgAppRequests.sortBy.sortType)\r\n      },\r\n      organization () {\r\n          orgAppRequests.sortBy.sortBy = 'organization'\r\n          orgAppRequests.sort('personData.organization.name', orgAppRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgAppRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      orgAppRequests.data = _.orderBy(orgAppRequests.data, sortBy, order)\r\n    }\r\n\r\n\t\torgAppRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id &&\r\n\t\t\t\trequest.packageData && request.packageData.id) {\r\n\t\t\t\tDataStorage.setType('organizationAppRequest',request)\r\n\t\t\t\t$state.go('organization.requests.organizationAppRequest', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id,\r\n\t\t\t\t\t'packageId': request.packageData.id\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('orgAppRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    orgAppRequests.updateSearchParams = (page) => {\r\n        if (page) orgAppRequests.search.page = page\r\n        $state.transitionTo('organization.requests.orgAppRequests', orgAppRequests.search, {notify: false})\r\n        init()\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('orgRegistrationRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,DataStorage) {\r\n\r\n    const scopeName = 'orgRegistrationRequests.'\r\n\tconst orgRegistrationRequests = this\r\n    orgRegistrationRequests.search = {}\r\n\torgRegistrationRequests.sortBy = {}\r\n\r\n\torgRegistrationRequests.search=Object.assign({},$stateParams)\r\n\tif(!orgRegistrationRequests.search.page)\r\n\t\torgRegistrationRequests.search.page=1\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\tvar foundOrgs = [];\r\n\tvar foundPersons = [];\r\n\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n    orgRegistrationRequests.search.pageSize = orgRegistrationRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\tvar qsArray = APIHelpers.getQs(orgRegistrationRequests.search);\r\n\t\t\t//cui.log('qsArray', qsArray);\r\n\r\n\torgRegistrationRequests.data = []\r\n    Loader.onFor(scopeName + 'data')\r\n    APIError.offFor(scopeName + 'data')\r\n\r\n\tvar getOrg = function(orgId) {\r\n\t\treturn $.Deferred(function (dfr) {\r\n\t\t\tif (orgId.length) {\r\n\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\tif (cached) {\r\n\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdfr.resolve({});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tvar getPerson = function(personId) {\r\n\t\treturn $.Deferred(function (dfr) {\r\n\t\t\tif (personId&&personId.length) {\r\n\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\tif (cached) {\r\n\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdfr.resolve({});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tvar getPackage = function(packageId) {\r\n\t\treturn $.Deferred(function (dfr) {\r\n\t\t\tif (packageId.length) {\r\n\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\tif (cached) {\r\n\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdfr.resolve({});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tvar done = function(context) {\r\n\t\t$timeout(function() {\r\n    Loader.offFor(scopeName + 'data')\r\n    cui.log('done', context);\r\n\t\t\tcui.log('data', orgRegistrationRequests.data);\r\n\r\n    orgRegistrationRequests.reRenderPagination && orgRegistrationRequests.reRenderPagination()\r\n\t\t});\r\n\t};\r\n\r\n\tvar start = window.performance.now();\r\n\tvar end;\r\n\tAPI.cui.getOrgRegistrationRequests({ qs: qsArray })\r\n\t.then(function(res) {\r\n\t\tvar calls = [];\r\n\t\t_.each(res, function(regReq) {\r\n\t\t\t//Needed as some requests will not contain security admin details\r\n\t\t\t//And they need to be removed\r\n\t\t\tif (regReq.registrant) {\r\n\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\tvar data = regReq\r\n\t        \torgRegistrationRequests.data.push(data);\r\n\r\n\t        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t\t        calls.push(\r\n\t\t\t        getPerson(regReq.registrant&&regReq.registrant.id)\r\n\t\t\t        .then(function(person) {\r\n\t\t\t        \tdata.personData = person || {};\r\n\t\t\t        \tvar pkgId = (! _.isEmpty(regReq.packages)) ? regReq.packages[0].id : '';\r\n\t\t\t            return getPackage(pkgId);\r\n\t\t\t\t\t})\r\n\t\t\t        .then(function(pkg) {\r\n\t\t\t        \tdata.packageData = pkg;\r\n\t\t\t        \tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\r\n\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t})\r\n\t\t\t        .then(function(org) {\r\n\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\r\n\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t\t      \t\t})\r\n\t\t      \t\t.fail(function() {\r\n\t\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t\t      \t\t})\r\n\t\t\t    );\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn $.Deferred().resolve(calls);\r\n\t})\r\n\t.then(function(calls) {\r\n\t\t// do the cached calls\r\n\t\treturn $.when.apply($, calls);\r\n\t})\r\n\t.then(function() {\r\n\t\t// do the count (used for pagination)\r\n\t\treturn API.cui.getOrgRegistrationRequestsCount();\r\n\t})\r\n\t.then(function(count) {\r\n\t\t// apply the count\r\n\t\torgRegistrationRequests.userCount = count;\r\n\t\tAPI.user.orgRegistrationRequestsCount=count\r\n\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t})\r\n\t.fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n    })\r\n\t.always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('Registration Requests'))\r\n      \tdone('finally');\r\n\t\tvar end = window.performance.now();\r\n\t\tvar time = end - start;\r\n\t\tcui.log('time', time);\r\n\t\t});\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    orgRegistrationRequests.sortingCallbacks = {\r\n      administrator () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'administrator'\r\n          orgRegistrationRequests.sort(['personData.name.given', 'personData.name.surname'], orgRegistrationRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'submitted'\r\n          orgRegistrationRequests.sort('personData.creation', orgRegistrationRequests.sortBy.sortType)\r\n      },\r\n      request () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'request'\r\n          orgRegistrationRequests.sort('packageData.name', orgRegistrationRequests.sortBy.sortType)\r\n      },\r\n      organization () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'organization'\r\n          orgRegistrationRequests.sort('personData.organization.name', orgRegistrationRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgRegistrationRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      orgRegistrationRequests.data = _.orderBy(orgRegistrationRequests.data, sortBy, order)\r\n    }\r\n\r\n\r\n\t\torgRegistrationRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id) {\r\n\t\t\t\tDataStorage.setType('organizationRegRequest',request)\r\n\t\t\t\t$state.go('organization.requests.organizationRequest', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id \r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('orgRegistrationRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    orgRegistrationRequests.updateSearchParams = (page) => {\r\n    \t//cui.log('updateSearchParams', page);\r\n        if (page) orgRegistrationRequests.search.page = page\r\n        // WHY transition to this same route? if setting notify:false? what is the purpose? just to add an item to history?\r\n        $state.transitionTo('organization.requests.orgRegistrationRequests', orgRegistrationRequests.search, {notify: false})\r\n        init()\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('organizationAppRequestCtrl', function(APIError, DataStorage, Loader, $state, $stateParams, $timeout,API,$scope,$q, ServicePackage ) {\r\n    'use strict'\r\n\r\n    const organizationAppRequest = this\r\n    const userId = $stateParams.userId\r\n    const organizationId = $stateParams.orgId\r\n\r\n    // HELPER FUNCTIONS START------------------------------------------------------\r\n    let getAllDetails= () => {\r\n        let promises=[]\r\n        API.cui.getOrganization({organizationId:organizationId})\r\n        .then(res =>{\r\n            organizationAppRequest.request.personData.organization=res\r\n            $scope.$digest()\r\n        })\r\n        if (organizationAppRequest.request.packageData) {\r\n            ServicePackage.getPackageDetails(organizationAppRequest.request.packageData.id)\r\n            .then(packageData => {\r\n                organizationAppRequest.request.packageData=angular.merge(organizationAppRequest.request.packageData,packageData)\r\n            })\r\n            .catch(err => {\r\n                APIError.onFor('organizationAppRequest.packageServices')\r\n                console.log('There was an error in fetching following package service details' +err)\r\n            })\r\n            .finally(() => {\r\n                Loader.offFor('organizationAppRequest.init')\r\n            })\r\n        }\r\n        else{\r\n            Loader.offFor('organizationAppRequest.init')\r\n        }\r\n    }\r\n    // HELPER FUNCTIONS END------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationAppRequest.init')\r\n    organizationAppRequest.request=DataStorage.getType('organizationAppRequest')\r\n    console.log(organizationAppRequest.request)\r\n    if (!organizationAppRequest.request) {\r\n        APIError.onFor('organizationAppRequest.noRequest')\r\n        Loader.offFor('organizationAppRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else if (organizationAppRequest.request.personData.id!==userId || organizationAppRequest.request.personData.organization.id!==organizationId) {\r\n        APIError.onFor('organizationAppRequest.noRequest')\r\n        Loader.offFor('organizationAppRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else{\r\n        getAllDetails()\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationAppRequest.reviewApprovals = () => {\r\n        DataStorage.setType('organizationRegRequest', organizationAppRequest.request)\r\n        $state.go('organization.requests.organizationAppRequestReview', { userId: userId, orgId: organizationId })\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('organizationAppRequestReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout,APIError,API,$scope) {\r\n    'use strict'\r\n\r\n    const organizationAppRequestReview = this\r\n    const orgId = $stateParams.orgId\r\n\r\n    organizationAppRequestReview.success = false\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('organizationAppRequestReview.submitting')\r\n        organizationAppRequestReview.success = true\r\n        DataStorage.setType('organizationAppRequest',{})\r\n        $scope.$digest()\r\n            $timeout(() => {\r\n                $state.go('organization.requests.orgAppRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving org app request ${err.responseJSON}`)\r\n        if (err&&err.responseJSON.apiMessage==='The service request does not exist') {\r\n            organizationAppRequestReview.errorMessage='request-approve-or-rejected'\r\n        }else{\r\n            organizationAppRequestReview.errorMessage=undefined\r\n        }\r\n        Loader.offFor('organizationAppRequestReview.submitting')\r\n        organizationAppRequestReview.error = true\r\n        $scope.$digest()\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationAppRequestReview.init')\r\n\r\n    const requestData = DataStorage.getType('organizationAppRequest')\r\n    if (!requestData) {\r\n        APIError.onFor('organizationAppRequestReview.noRequest')\r\n        // $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else if (requestData.personData.organization.id!==orgId) {\r\n        APIError.onFor('organizationAppRequestReview.noRequest')\r\n        // $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else{\r\n        Loader.offFor('organizationAppRequestReview.init')\r\n    }\r\n    organizationAppRequestReview.packageData = requestData.packageData\r\n    organizationAppRequestReview.personData = requestData.personData\r\n    organizationAppRequestReview.organization = requestData.organization\r\n    organizationAppRequestReview.request = requestData.request\r\n    organizationAppRequestReview.justification=requestData.justification\r\n    organizationAppRequestReview.id=requestData.id\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationAppRequestReview.submit = () => {\r\n        Loader.onFor('organizationAppRequestReview.submitting')\r\n        organizationAppRequestReview.packageData.id=organizationAppRequestReview.id\r\n        ServicePackage.handlePackageApproval(organizationAppRequestReview.packageData)\r\n        .then(handleSuccess)\r\n        .fail(handleError)\r\n        // if (organizationAppRequestReview.packageData.approval === 'approved'){\r\n        //     API.cui.denyOrgRegistrationRequest({qs:[['requestId',requestData.id],['reason',organizationAppRequestReview.request.rejectReason]]})\r\n        //     .then(handleSuccess)\r\n        //     .fail(handleError)\r\n        // }\r\n        // //all approval then call registration endpoint directly\r\n        // else (organizationAppRequestReview.deniedCount===0) {\r\n        //     API.cui.approveOrgRegistrationRequest({qs:[['requestId',requestData.id]]})\r\n        //     .then(handleSuccess)\r\n        //     .fail(handleError)\r\n        // }\r\n        // else {\r\n        //     API.cui.approvePersonRegistration({qs: [['requestId',requestData.registrant.requestId]]})\r\n        //     let packageRequestCalls = []\r\n\r\n        //     organizationAppRequestReview.packages.forEach(packageRequest => {\r\n        //         packageRequest.id=packageRequest.requestId\r\n        //         packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n        //     })\r\n\r\n        //     $q.all(packageRequestCalls)\r\n        //     .then( res =>{\r\n        //         Loader.offFor('organizationAppRequestReview.submitting')\r\n        //         organizationAppRequestReview.success = true\r\n        //             $timeout(() => {\r\n        //                 $state.go('organization.requests.orgRegistrationRequests')\r\n        //         }, 3000) \r\n        //     })\r\n        //     // .catch(handleError)\r\n        // }\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('organizationRequestCtrl', function(APIError, DataStorage, Loader, $state, $stateParams, $timeout,API,$scope,$q, ServicePackage ) {\r\n    'use strict'\r\n\r\n    const organizationRequest = this\r\n    const userId = $stateParams.userId\r\n    const organizationId = $stateParams.orgId\r\n\r\n    // HELPER FUNCTIONS START------------------------------------------------------\r\n    let getAllDetails= () => {\r\n        let promises=[]\r\n        API.cui.getOrganization({organizationId:organizationId})\r\n        .then(res =>{\r\n            organizationRequest.request.personData.organization=res\r\n            $scope.$digest()\r\n        })\r\n        if (organizationRequest.request.packages&&organizationRequest.request.packages.length!==0) {\r\n            organizationRequest.request.packages.forEach((requestedPackage ,index)=>{\r\n                ServicePackage.getPackageDetails(requestedPackage.id)\r\n                .then(packageData => {\r\n                    requestedPackage=angular.merge(requestedPackage,packageData)\r\n                })\r\n                .catch(err => {\r\n                    APIError.onFor('organizationRequest.packageServices')\r\n                    console.log('There was an error in fetching following package service details' +err)\r\n                    Loader.offFor('organizationRequest.init')\r\n                })\r\n                .finally(() => {\r\n                        if (index===organizationRequest.request.packages.length-1) {\r\n                        Loader.offFor('organizationRequest.init')\r\n                    }\r\n                })\r\n            })\r\n            // $q.all(promises)\r\n            // .then(res => {\r\n            //     organizationRequest.packageData =res\r\n                \r\n            // })\r\n            // .catch(err => {\r\n            //     APIError.onFor('organizationRequest.packageServices')\r\n            //     console.log('There was an error in fetching one or more package service details' +err)\r\n            //     Loader.offFor('organizationRequest.init')\r\n            // })\r\n        }\r\n        else{\r\n            Loader.offFor('organizationRequest.init')\r\n        }\r\n    }\r\n    // HELPER FUNCTIONS END------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationRequest.init')\r\n    organizationRequest.request=DataStorage.getType('organizationRegRequest')\r\n    console.log(organizationRequest.request)\r\n    if (!organizationRequest.request) {\r\n        APIError.onFor('organizationRequest.noRequest')\r\n        Loader.offFor('organizationRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else if (organizationRequest.request.personData.id!==userId || organizationRequest.request.personData.organization.id!==organizationId) {\r\n        APIError.onFor('organizationRequest.noRequest')\r\n        Loader.offFor('organizationRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else{\r\n        getAllDetails()\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationRequest.reviewApprovals = () => {\r\n        DataStorage.setType('organizationRegRequest', organizationRequest.request)\r\n        $state.go('organization.requests.organizationRequestReview', { userId: userId, orgId: organizationId })\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgRequestsCtrl',function(API,$stateParams,$q,$state) {\r\n    'use strict';\r\n\r\n    const orgRequests = this,\r\n    \t\tuserId = $stateParams.userID,\r\n    \t\torgId = $stateParams.orgID;\r\n\r\n    let apiPromises = [];\r\n\r\n    orgRequests.loading = true;\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    apiPromises.push(\r\n    \tAPI.cui.getOrganization({organizationId: orgId})\r\n    \t.then((res) => {\r\n    \t\torgRequests.organization = res;\r\n            console.log('orgRequests.organization',orgRequests.organization);\r\n    \t})\r\n    );\r\n\r\n    apiPromises.push(\r\n        API.cui.getAllOrganizationRequests({qs: ['organizationId', orgId]})\r\n        .then((res) => {\r\n            console.log('orgReqs', res);\r\n        })\r\n    );\r\n\r\n    $q.all(apiPromises)\r\n    .then(() => {\r\n        orgRequests.loading = false;\r\n    })\r\n    .catch((error) => {\r\n        orgRequests.loading = false;\r\n        console.log(error);\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    orgRequests.viewRequest = (requestId) => {\r\n        $state.go('requests.organizationRequest', {orgID: orgId, requestID: requestId});\r\n    };\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('organizationRequestReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout,APIError,API,$scope) {\r\n    'use strict'\r\n\r\n    const organizationRequestReview = this\r\n    const orgId = $stateParams.orgId\r\n\r\n    organizationRequestReview.success = false\r\n    organizationRequestReview.approvedCount = 0\r\n    organizationRequestReview.deniedCount = 0\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    organizationRequestReview.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    organizationRequestReview.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('organizationRequestReview.submitting')\r\n            organizationRequestReview.success = true\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                $state.go('organization.requests.orgRegistrationRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving org registration ${err}`)\r\n        Loader.offFor('organizationRequestReview.submitting')\r\n        organizationRequestReview.error = true\r\n        $scope.$digest()\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationRequestReview.init')\r\n\r\n    const requestData = DataStorage.getType('organizationRegRequest')\r\n    if (!requestData) {\r\n        APIError.onFor('organizationRequestReview.noRequest')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else if (requestData.personData.organization.id!==orgId) {\r\n        APIError.onFor('organizationRequestReview.noRequest')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else if (requestData.personData.status!==\"pending\") {\r\n        APIError.onFor('organizationRequestReview.active')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else{\r\n        Loader.offFor('organizationRequestReview.init')\r\n    }\r\n    organizationRequestReview.packages = requestData.packages\r\n    organizationRequestReview.personData = requestData.personData\r\n    organizationRequestReview.organization = requestData.organization\r\n    organizationRequestReview.request = requestData.request\r\n    organizationRequestReview.justification=requestData.justification\r\n    organizationRequestReview.id=requestData.id\r\n    if (organizationRequestReview.packages&&organizationRequestReview.packages.length > 0) {\r\n    \tgetApprovalCounts(organizationRequestReview.packages)\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationRequestReview.submit = () => {\r\n        Loader.onFor('organizationRequestReview.submitting')\r\n\r\n        if (organizationRequestReview.request.approval === 'denied'){\r\n            API.cui.denyOrgRegistrationRequest({qs:[['requestId',requestData.id],['reason',organizationRequestReview.request.rejectReason]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        //all approval then call registration endpoint directly\r\n        else if (organizationRequestReview.deniedCount===0) {\r\n            API.cui.approveOrgRegistrationRequest({qs:[['requestId',requestData.id]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else {\r\n            API.cui.approveOrganizationRequests({qs: [['requestId',requestData.registrant.requestId]]})\r\n            .then(res =>{\r\n                let packageRequestCalls = []\r\n\r\n                organizationRequestReview.packages.forEach(packageRequest => {\r\n                    packageRequest.id=packageRequest.requestId\r\n                    packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n                })\r\n\r\n                $q.all(packageRequestCalls)\r\n                .then( res =>{\r\n                    Loader.offFor('organizationRequestReview.submitting')\r\n                    organizationRequestReview.success = true\r\n                        $timeout(() => {\r\n                            $state.go('organization.requests.orgRegistrationRequests')\r\n                    }, 3000) \r\n                })\r\n                .catch(err => {\r\n                    console.log(\"Org approval success but One or more package approval/denied failed\" +err)\r\n                    organizationRequestReview.error = true\r\n                })\r\n            })            \r\n            .fail(handleError)\r\n        }\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('pendingRequestsCtrl', function(API, DataStorage, Loader, ServicePackage, $q, $state, $stateParams,$timeout) {\r\n    'use strict'\r\n\r\n    const pendingRequests = this\r\n    const userId = $stateParams.userId\r\n    const orgId = $stateParams.orgId\r\n\r\n    pendingRequests.success = false\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n    pendingRequests.approvedCount = 0\r\n    pendingRequests.deniedCount = 0\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    pendingRequests.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    pendingRequests.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('pendingRequests.init')\r\n\r\n    $q.all([\r\n        API.cui.getPerson({personId: userId}),\r\n        ServicePackage.getAllUserPendingPackageData(userId)\r\n    ])\r\n    .then(res => {\r\n        pendingRequests.user = res[0]\r\n        pendingRequests.packages = res[1]\r\n        Loader.offFor('pendingRequests.init')\r\n    })\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    pendingRequests.reviewApprovals = () => {\r\n        const storageData = {\r\n            user: pendingRequests.user,\r\n            packages: pendingRequests.packages   \r\n        }\r\n        \r\n        DataStorage.setType('appRequests', storageData)\r\n        $state.go('organization.requests.pendingRequestsReview', { userId: userId, orgId: orgId })\r\n    }\r\n\r\n    pendingRequests.submit = () => {\r\n        let submitCalls = []\r\n        getApprovalCounts(pendingRequests.packages)\r\n        if (pendingRequests.deniedCount===0) {\r\n            pendingRequests.submitting=true\r\n            pendingRequests.packages.forEach(packageRequest => {\r\n                submitCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n            })\r\n\r\n            $q.all(submitCalls)\r\n            .then(() => {\r\n                pendingRequests.success = true\r\n                pendingRequests.submitting=false\r\n                $timeout(() => {\r\n                    $state.go('organization.requests.usersAppRequests')\r\n                }, 3000)\r\n            })\r\n            .catch(err => {\r\n                pendingRequests.submitting=false\r\n                console.log(\"There was an error in approving application requests\" + err);\r\n                pendingRequests.error=true\r\n            })\r\n        }\r\n        else{\r\n            pendingRequests.reviewApprovals()\r\n        }\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('pendingRequestsReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout) {\r\n    'use strict'\r\n\r\n    const pendingRequestsReview = this\r\n    const userId = $stateParams.userId\r\n    const orgId = $stateParams.orgId\r\n\r\n    pendingRequestsReview.success = false\r\n    pendingRequestsReview.approvedCount = 0\r\n    pendingRequestsReview.deniedCount = 0\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    pendingRequestsReview.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    pendingRequestsReview.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('pendingRequestsReview.init')\r\n\r\n    const requestData = DataStorage.getType('appRequests')\r\n\r\n    pendingRequestsReview.pendingRequests = requestData.packages\r\n    pendingRequestsReview.user = requestData.user\r\n\r\n    if (pendingRequestsReview.pendingRequests.length > 0) {\r\n        getApprovalCounts(pendingRequestsReview.pendingRequests)\r\n    }\r\n\r\n    Loader.offFor('pendingRequestsReview.init')\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    pendingRequestsReview.submit = () => {\r\n        let submitCalls = []\r\n        pendingRequestsReview.submitting=true\r\n        pendingRequestsReview.pendingRequests.forEach(packageRequest => {\r\n            submitCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n        })\r\n\r\n        $q.all(submitCalls)\r\n        .then(() => {\r\n            pendingRequestsReview.success = true\r\n            pendingRequestsReview.submitting=false\r\n            $timeout(() => {\r\n                $state.go('organization.requests.usersAppRequests',)\r\n            }, 3000)\r\n        })\r\n        .catch(err => {\r\n            console.log(\"There was an error in approving user application requests\" + err)\r\n            pendingRequestsReview.submitting=false\r\n            pendingRequestsReview.error=true\r\n        })\r\n    }\r\n\r\n    pendingRequestsReview.goBack = () => {\r\n        $state.go('organization.requests.pendingRequests', { userId: userId, orgId: orgId })\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('personRequestCtrl', function(APIError, DataStorage, Loader, PersonRequest, ServicePackage, $state, $stateParams, $timeout,API,$scope) {\r\n    'use strict'\r\n\r\n    const personRequest = this\r\n    const userId = $stateParams.userId\r\n    const organizationId = $stateParams.orgId\r\n\r\n    personRequest.success = false\r\n\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        personRequest.approvedCount = 0\r\n        personRequest.deniedCount = 0\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    personRequest.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    personRequest.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('personRequest.submitting')\r\n            personRequest.success = true\r\n            API.user.userRegistrationRequestsCount=API.user.userRegistrationRequestsCount-1\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                $state.go('organization.requests.usersRegistrationRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving user registration ${err}`)\r\n        Loader.offFor('personRequest.submitting')\r\n        personRequest.error = true\r\n        $scope.$digest()\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('personRequest.init')\r\n\r\n    PersonRequest.getPersonRegistrationRequestData(userId, organizationId)\r\n    .then(res => {\r\n        if (!res.request) {\r\n            APIError.onFor('personRequest.noRequest')\r\n            $timeout(() => $state.go('organization.requests.usersRegistrationRequests'), 5000)\r\n        }\r\n        else {\r\n            personRequest.request = res    \r\n            Loader.offFor('personRequest.init')\r\n        }\r\n    })\r\n\r\n    ServicePackage.getAllUserPendingPackageData(userId)\r\n    .then(res => {\r\n        personRequest.packages = res\r\n    })\r\n    .catch(err => {\r\n        APIError.onFor('personRequest.noRequest')\r\n        $timeout(() => $state.go('organization.requests.usersRegistrationRequests'), 5000)\r\n    })\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    personRequest.reviewApprovals = () => {\r\n        DataStorage.setType('userPersonRequest', { personRequest })\r\n        $state.go('organization.requests.personRequestReview', { userId: userId, orgId: organizationId })\r\n    }\r\n\r\n    personRequest.submit = () => {\r\n        Loader.onFor('personRequest.submitting')\r\n        if (personRequest.packages&&personRequest.packages.length > 0) {\r\n            getApprovalCounts(personRequest.packages)\r\n        }\r\n        if (personRequest.request.request.approval==='denied') {\r\n            //To enter denied Reason\r\n            personRequest.reviewApprovals()\r\n            // API.cui.denyPersonRegistrationRequest({qs:[['requestId',personRequest.request.request.id],['reason',personRequestReview.request.rejectReason|\"\"]]})\r\n            // .then(handleSuccess)\r\n            // .fail(handleError)\r\n        }\r\n        else if (personRequest.deniedCount===0) {\r\n            API.cui.approvePersonRegistrationRequest({qs:[['requestId',personRequest.request.request.id]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else{\r\n            //To enter denied Reason\r\n            personRequest.reviewApprovals()\r\n            // API.cui.approvePersonRequest({qs:[['requestId',personRequest.request.request.registrant.requestId||personRequestReview.request.id]]})\r\n            // .then(res => {\r\n            //     let packageRequestCalls = []\r\n\r\n            //     personRequest.packages.forEach(packageRequest => {\r\n            //         packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n            //     })\r\n\r\n            //     $q.all(packageRequestCalls)\r\n            //     .then(() => {\r\n            //         Loader.offFor('personRequest.submitting')\r\n            //         personRequest.success = true\r\n            //         $timeout(() => {\r\n            //             $state.go('organization.requests.usersRegistrationRequests')\r\n            //         }, 3000)  \r\n            //     })\r\n            //     .catch(err => {\r\n            //         console.log(\"User approval successful but there was an error approving/denying package requests\" +err)\r\n            //         personRequest.error = true\r\n            //         personRequest.errorMessage=\"app-approval-error\"\r\n            //     })\r\n            // })\r\n            // .fail(handleError)\r\n        }        \r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('personRequestReviewCtrl', function(DataStorage, Loader, PersonRequest, ServicePackage, $q, $state, $stateParams, $timeout,API,$scope) {\r\n    'use strict'\r\n\r\n    const personRequestReview = this\r\n    const userId = $stateParams.userId\r\n    const orgId = $stateParams.orgId\r\n\r\n    personRequestReview.success = false\r\n    personRequestReview.approvedCount = 0\r\n    personRequestReview.deniedCount = 0\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    personRequestReview.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    personRequestReview.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('personRequestReview.submitting')\r\n            personRequestReview.success = true\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                $state.go('organization.requests.usersRegistrationRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving user registration ${err}`)\r\n        Loader.offFor('personRequestReview.submitting')\r\n        personRequestReview.error = true\r\n        $scope.$digest()\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('personRequestReview.init')\r\n\r\n    const requestData = DataStorage.getType('userPersonRequest').personRequest\r\n    if (!requestData) {\r\n        $state.go('organization.requests.personRequest',{userId:userId, orgId:orgId})\r\n    };\r\n\r\n    personRequestReview.packages = requestData.packages\r\n    personRequestReview.person = requestData.request.person\r\n    personRequestReview.organization = requestData.request.organization\r\n    personRequestReview.request = requestData.request.request\r\n\r\n    if (personRequestReview.packages.length > 0) {\r\n    \tgetApprovalCounts(personRequestReview.packages)\r\n    }\r\n\r\n    Loader.offFor('personRequestReview.init')\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    personRequestReview.submit = () => {\r\n        Loader.onFor('personRequestReview.submitting')\r\n\r\n        if (personRequestReview.request.approval==='denied') {\r\n            API.cui.denyPersonRegistrationRequest({qs:[['requestId',personRequestReview.request.id],['reason',personRequestReview.request.rejectReason|\"\"]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else if (personRequestReview.deniedCount===0) {\r\n            API.cui.approvePersonRegistrationRequest({qs:[['requestId',personRequestReview.request.id]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else{\r\n            API.cui.approvePersonRequest({qs:[['requestId',personRequestReview.request.registrant.requestId||personRequestReview.request.id]]})\r\n            .then(res => {\r\n                let packageRequestCalls = []\r\n\r\n                personRequestReview.packages.forEach(packageRequest => {\r\n                    packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n                })\r\n\r\n                $q.all(packageRequestCalls)\r\n                .then(() => {\r\n                    Loader.offFor('personRequestReview.submitting')\r\n                    personRequestReview.success = true\r\n                    $timeout(() => {\r\n                        $state.go('organization.requests.usersRegistrationRequests')\r\n                    }, 3000)  \r\n                })\r\n                .catch(err => {\r\n                    console.log(\"User approval successful but there was an error approving/denying package requests\" +err)\r\n                    personRequestReview.error = true\r\n                    personRequestReview.errorMessage=\"app-approval-error\"\r\n                })\r\n            })\r\n            .fail(handleError)\r\n        }        \r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('usersAppRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User) {\r\n\r\n    const scopeName = 'usersAppRequests.'\r\n\t\tconst usersAppRequests = this\r\n    usersAppRequests.search = {}\r\n\t\tusersAppRequests.sortBy = {}\r\n\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n\t\tvar foundOrgs = [];\r\n\t\tvar foundPersons = [];\r\n\t\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n      usersAppRequests.search['isApprovable'] = true;\r\n      usersAppRequests.search.pageSize = usersAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\t\t\tvar qsArray = APIHelpers.getQs(usersAppRequests.search);\r\n\r\n\t    usersAppRequests.data = []\r\n      Loader.onFor(scopeName + 'data')\r\n      APIError.offFor(scopeName + 'data')\r\n\r\n\r\n\t\t\tvar getOrg = function(orgId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (orgId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPerson = function(personId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (personId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPackage = function(packageId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (packageId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar done = function(context) {\r\n  \t\t\t$timeout(function() {\r\n\t        Loader.offFor(scopeName + 'data')\r\n\t        cui.log('done', context);\r\n\t        cui.log('data', usersAppRequests.data);\r\n\r\n\t        usersAppRequests.reRenderPagination && usersAppRequests.reRenderPagination()\r\n  \t\t\t});\r\n\t\t\t};\r\n\r\n\r\n\t\t\tAPI.cui.getPackageRequests({ qs: qsArray }).then(function(res) {\r\n\t\t\t\tvar calls = [];\r\n\r\n\t\t\t\t_.each(res, function(pkgReq) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\t\tvar data = {};\r\n        \tusersAppRequests.data.push(data);\r\n\r\n        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t        calls.push(\r\n\t        \tgetPerson(pkgReq.requestor.id).then(function(person) {\r\n\t        \t\tdata.personData = person || {};\r\n\t        \t\tvar pkgId = (pkgReq && pkgReq.servicePackage) ? pkgReq.servicePackage.id : '';\r\n\t          \treturn getPackage(pkgId);\r\n\t\t\t\t\t\t}).then(function(pkg) {\r\n\t        \t\tdata.packageData = pkg;\r\n\t        \t\tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\r\n\t\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t\t}).then(function(org) {\r\n\t\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t}).fail(function() {\r\n\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\treturn $.Deferred().resolve(calls);\r\n\t\t\t}).then(function(calls) {\r\n\t\t\t\t// do the cached calls\r\n\t\t\t\treturn $.when.apply($, calls);\r\n\t\t\t}).then(function() {\r\n\t\t\t\t// do the count (used for pagination)\r\n\t\t\t\treturn API.cui.getPackageRequestsCount();\r\n\t\t\t}).then(function(count) {\r\n\t\t\t\t// apply the count\r\n\t\t\t\tusersAppRequests.userCount = count;\r\n\t\t\t\tAPI.user.userAppRequestsCount=count\r\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t\t\t}).fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n      }).always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('App Requests'))\r\n      \tdone('finally');\r\n      });\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    usersAppRequests.sortingCallbacks = {\r\n      name () {\r\n          usersAppRequests.sortBy.sortBy = 'name'\r\n          usersAppRequests.sort(['personData.name.given', 'personData.name.surname'], usersAppRequests.sortBy.sortType)\r\n      },\r\n      title () {\r\n          usersAppRequests.sortBy.sortBy = 'title'\r\n          usersAppRequests.sort('personData.title', usersAppRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          usersAppRequests.sortBy.sortBy = 'submitted'\r\n          usersAppRequests.sort('personData.creation', usersAppRequests.sortBy.sortType)\r\n      },\r\n      application () {\r\n          usersAppRequests.sortBy.sortBy = 'application'\r\n          usersAppRequests.sort('packageData.name', usersAppRequests.sortBy.sortType)\r\n      },\r\n      division () {\r\n          usersAppRequests.sortBy.sortBy = 'division'\r\n          usersAppRequests.sort('personData.organization.name', usersAppRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    usersAppRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      usersAppRequests.data = _.orderBy(usersAppRequests.data, sortBy, order)\r\n    }\r\n\r\n\t\tusersAppRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id &&\r\n\t\t\t\trequest.packageData && request.packageData.id) {\r\n\t\t\t\t$state.go('organization.requests.pendingRequests', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id,\r\n\t\t\t\t\t'packageId': request.packageData.id\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('usersAppRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    usersAppRequests.updateSearchParams = (page) => {\r\n        if (page) usersAppRequests.search.page = page\r\n        $state.transitionTo('organization.requests.usersAppRequests', usersAppRequests.search, {notify: false})\r\n        init()\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('usersRegistrationRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,$scope) {\r\n\r\n    const scopeName = 'usersRegistrationRequests.'\r\n\t\tconst usersRegistrationRequests = this\r\n    usersRegistrationRequests.search = {}\r\n\t\tusersRegistrationRequests.sortBy = {}\r\n\tusersRegistrationRequests.searchByOrg=[]\r\n      usersRegistrationRequests.searchByPerson=[]\r\n\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\t\tvar foundOrgs = [];\r\n\t\tvar foundPersons = [];\r\n\t\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n      usersRegistrationRequests.search.pageSize = usersRegistrationRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\t\t\tvar qsArray = APIHelpers.getQs(usersRegistrationRequests.search);\r\n\t\t\t//cui.log('qsArray', qsArray);\r\n\t\t\tif(usersRegistrationRequests.searchByOrg.length>0){\r\n\t\t\t\tusersRegistrationRequests.searchByOrg.forEach(function(val){\r\n\t\t\t\t\tqsArray.push(['organization.id',val.id])\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t}else if(usersRegistrationRequests.searchByPerson.length>0){\r\n\t\t\t\tusersRegistrationRequests.searchByPerson.forEach(function(val){\r\n\t\t\t\t\tqsArray.push(['registrant.id',val.id])\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse{}\r\n\r\n\t    usersRegistrationRequests.data = []\r\n      Loader.onFor(scopeName + 'data')\r\n      APIError.offFor(scopeName + 'data')\r\n\r\n\t\t\tvar getOrg = function(orgId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (orgId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPerson = function(personId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (personId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPackage = function(packageId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (packageId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar done = function(context) {\r\n  \t\t\t$timeout(function() {\r\n\t        Loader.offFor(scopeName + 'data')\r\n\t        cui.log('done', context);\r\n\t\t\t\t\tcui.log('data', usersRegistrationRequests.data);\r\n\r\n\t        usersRegistrationRequests.reRenderPagination && usersRegistrationRequests.reRenderPagination()\r\n  \t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar start = window.performance.now();\r\n\t\t\tvar end;\r\n\t\t\tAPI.cui.getRegistrationRequests({ qs: qsArray }).then(function(res) {\r\n\t\t\t\tvar calls = [];\r\n\r\n\t\t\t\t_.each(res, function(regReq) {\r\n\t\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\t\tvar data = {};\r\n        \tusersRegistrationRequests.data.push(data);\r\n\r\n        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t        calls.push(\r\n\t\t        getPerson(regReq.registrant.id).then(function(person) {\r\n\t\t        \tdata.personData = person || {};\r\n\t\t        \tvar pkgId = (! _.isEmpty(regReq.packages)) ? regReq.packages[0].id : '';\r\n\t\t          return getPackage(pkgId);\r\n\t\t\t\t\t\t}).then(function(pkg) {\r\n\t\t        \tdata.packageData = pkg;\r\n\t\t        \tconsole.log(data.personData.organization.id)\r\n\t\t        \tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\r\n\t\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t\t}).then(function(org) {\r\n\t\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t}).fail(function() {\r\n\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t})\r\n\t\t      );\r\n\t\t\t\t});\r\n\t\t\t\treturn $.Deferred().resolve(calls);\r\n\t\t\t}).then(function(calls) {\r\n\t\t\t\t// do the cached calls\r\n\t\t\t\treturn $.when.apply($, calls);\r\n\t\t\t}).then(function() {\r\n\t\t\t\t// do the count (used for pagination)\r\n\t\t\t\treturn API.cui.getRegistrationRequestsCount();\r\n\t\t\t}).then(function(count) {\r\n\t\t\t\t// apply the count\r\n\t\t\t\tusersRegistrationRequests.userCount = count;\r\n\t\t\t\tAPI.user.userRegistrationRequestsCount=count\r\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t\t\t}).fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n      }).always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('Registration Requests'))\r\n      \tdone('finally');\r\n\t\t\t\tvar end = window.performance.now();\r\n\t\t\t\tvar time = end - start;\r\n\t\t\t\tcui.log('time', time);\r\n      });\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    usersRegistrationRequests.sortingCallbacks = {\r\n      name () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'name'\r\n          usersRegistrationRequests.sort(['personData.name.given', 'personData.name.surname'], usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      title () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'title'\r\n          usersRegistrationRequests.sort('personData.title', usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'submitted'\r\n          usersRegistrationRequests.sort('personData.creation', usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      application () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'application'\r\n          usersRegistrationRequests.sort('packageData.name', usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      division () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'division'\r\n          usersRegistrationRequests.sort('personData.organization.name', usersRegistrationRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    usersRegistrationRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      usersRegistrationRequests.data = _.orderBy(usersRegistrationRequests.data, sortBy, order)\r\n    }\r\n\r\n\r\n\t\tusersRegistrationRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id) {\r\n\t\t\t\t$state.go('organization.requests.personRequest', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id \r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('usersRegistrationRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    usersRegistrationRequests.updateSearchParams = (page) => {\r\n    \t//cui.log('updateSearchParams', page);\r\n        if (page) usersRegistrationRequests.search.page = page\r\n        // WHY transition to this same route? if setting notify:false? what is the purpose? just to add an item to history?\r\n        $state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.search, {notify: false})\r\n        init()\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n    usersRegistrationRequests.searchBy='person'\r\n    usersRegistrationRequests.updateSearchByName = () =>{     \r\n    \t//console.log(usersRegistrationRequests.searchBy)\r\n    \tif(usersRegistrationRequests.searchBy==='org'&&usersRegistrationRequests.searchValue){\r\n    \t\tLoader.onFor(scopeName + 'data')\r\n      \t\tAPIError.offFor(scopeName + 'data')\r\n      \t\t usersRegistrationRequests.searchByOrg=[]\r\n    \t\tAPI.cui.getOrganizations({qs:[['name',usersRegistrationRequests.searchValue+'*']]})\r\n    \t\t.then((res) =>{\r\n    \t\t\tconsole.log(res)\r\n    \t\t\tusersRegistrationRequests.searchByOrg=res\r\n    \t\t\tLoader.offFor(scopeName + 'data')\r\n    \t\t\tif(res.length>0){\r\n    \t\t\t\t$state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.searchByOrg, {notify: false})\r\n        \t\t\tinit()\r\n        \t\t}else{\r\n        \t\t\tusersRegistrationRequests.data=[]\r\n        \t\t\t$scope.$apply()\r\n        \t\t}\r\n    \t\t})\r\n    \t\t.fail((err) =>{\r\n    \t\t\tconsole.log(err)\r\n    \t\t})\r\n    \t}else if (usersRegistrationRequests.searchBy==='person'&&usersRegistrationRequests.searchValue){\r\n    \t\tLoader.onFor(scopeName + 'data')\r\n      \t\tAPIError.offFor(scopeName + 'data')\r\n      \t\t usersRegistrationRequests.searchByPerson=[]\r\n    \t\tAPI.cui.getPersons({qs:[['fullName',usersRegistrationRequests.searchValue]]})\r\n    \t\t.then(res =>{\r\n    \t\t\tconsole.log(res)\r\n    \t\t\tusersRegistrationRequests.searchByPerson=res\r\n    \t\t\tLoader.offFor(scopeName + 'data')\r\n    \t\t\tif(res.length>0){\r\n    \t\t\t\t$state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.searchByPerson, {notify: false})\r\n        \t\t\tinit()\r\n        \t\t}else{\r\n        \t\t\tusersRegistrationRequests.data=[]\r\n        \t\t\t$scope.$apply()\r\n        \t\t}\r\n    \t\t})\r\n    \t\t.fail(err =>{\r\n    \t\t\t\tconsole.log(err)\r\n    \t\t})\r\n    \t}else{\r\n    \t\tusersRegistrationRequests.searchByOrg=[]\r\n            usersRegistrationRequests.searchByPerson=[]\r\n    \t\t$state.transitionTo('organization.requests.usersRegistrationRequests', {notify: false})\r\n    \t\tinit()\r\n    \t}\r\n    \t\t/*return undefined*/\r\n    }\r\n\t\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('orgRolesCtrl', function($scope) {\r\n    'use strict';\r\n\r\n    const orgRoles = this;\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    var handleError = function handleError(err) {\r\n        orgRoles.loading = false;\r\n        $scope.$digest();\r\n        console.log('Error', err);\r\n    };\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('misc', [])\r\n    .config(['$stateProvider', function($stateProvider) {\r\n\r\n        const templateBase = 'app/modules/misc/';\r\n\r\n        const returnCtrlAs = function(name, asPrefix) {\r\n            return name + 'Ctrl as ' + (asPrefix ? asPrefix : '') + (asPrefix ? name[0].toUpperCase() + name.slice(1, name.length) : name);\r\n        };\r\n\r\n        const loginRequired = true;\r\n        $stateProvider\r\n            .state('welcome', {\r\n                url: '/welcome',\r\n                templateUrl: templateBase + 'welcome/welcome.html'\r\n            })\r\n            .state('search', {\r\n                url: '/search?page&pageSize',\r\n                templateUrl: templateBase + 'search/search.html',\r\n                controller: returnCtrlAs('search'),\r\n                access: {\r\n                    permittedLogic:appConfig.accessByAnyAdmin\r\n                }\r\n            })\r\n            .state('misc', {\r\n                url: '/status',\r\n                templateUrl: templateBase + 'status/status.html'\r\n            })\r\n            .state('misc.404', {\r\n                url: '/404',\r\n                templateUrl: templateBase + 'status/status-404.html'\r\n            })\r\n            .state('misc.notAuth', {\r\n                url: '/notAuthorized',\r\n                templateUrl: templateBase + 'status/status-notAuth.html'\r\n            })\r\n            .state('misc.pendingStatus', {\r\n                url: '/pendingStatus',\r\n                templateUrl: templateBase + 'status/status-pendingStatus.html'\r\n            })\r\n            .state('misc.success', {\r\n                url: '/success',\r\n                templateUrl: templateBase + 'status/status-success.html'\r\n            })\r\n            .state('misc.loadError', {\r\n                url: '/error',\r\n                templateUrl: templateBase + 'status/status-loadError.html'\r\n            });\r\n\r\n    }]);\r\n\r\nangular.module('misc')\r\n    .controller('searchCtrl', ['API', '$scope', '$stateParams', '$state', '$q', '$pagination','APIHelpers','Loader', 'APIError',\r\n    function(API, $scope, $stateParams, $state, $q, $pagination,APIHelpers,Loader,APIError) {\r\n        let search = this;\r\n        search.currentParentOrg = API.user.organization.id;\r\n\r\n        search.users = null;\r\n        search.timer = null\r\n        search.searchType = \"organizations\";\r\n        search.searchOrgId = \"\";\r\n        search.searchterms=\"\"\r\n        search.count=1000\r\n        search.pageError=false\r\n\r\n        // search.keypress = function() {\r\n        //     search.users = [];\r\n        //     if (search.timer) { clearTimeout(search.timer); }\r\n        //     search.timer = window.setTimeout(function() {\r\n        //         search.searchNow();\r\n        //     }, 200);\r\n        // }\r\n\r\n        /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\r\n\r\n        search.flattenOrgHierarchy = function(orgHierarchy) {\r\n            /*\r\n                Takes the organization hierarchy response and returns a flat object array containing the id's and name's of\r\n                the top level organization as well as it's divisions.\r\n            */\r\n\r\n            if (orgHierarchy) {\r\n                let organizationArray = [];\r\n\r\n                organizationArray.push({\r\n                    id: orgHierarchy.id,\r\n                    name: orgHierarchy.name\r\n                });\r\n\r\n                if (orgHierarchy.children) {\r\n                    orgHierarchy.children.forEach((division) => {\r\n                        organizationArray.push({\r\n                            id: division.id,\r\n                            name: division.name\r\n                        });\r\n\r\n                        if (division.children) {\r\n                            let flatArray = _.flatten(division.children);\r\n\r\n                            flatArray.forEach((childDivision) => {\r\n                                organizationArray.push({\r\n                                    id: childDivision.id,\r\n                                    name: childDivision.name\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                return organizationArray;\r\n            } else {\r\n                throw new Error('No organization hierarchy object provided');\r\n            }\r\n        }\r\n\r\n        search.addPerson = function(newPerson) {\r\n\r\n            // Prevent Duplicates\r\n            var add = true;\r\n            search.users.forEach(function(person) {\r\n                if (newPerson.id == person.id) { add = false; }\r\n            })\r\n\r\n            if (newPerson.status == 'pending') { add = false; }\r\n            if (add) { search.users.push(newPerson) }\r\n\r\n        }\r\n\r\n        search.searchNow = function(type) {\r\n            search.pageError=false\r\n            if (type) {\r\n                search.searchParams.page=1\r\n            }\r\n            Loader.onFor('search.loading')\r\n            search.users = [];\r\n            search.orgs = [];\r\n            let qsArray=APIHelpers.getQs(search.searchParams)\r\n            //Need to filter out pending and unactive\r\n            qsArray.push(['status','active'],['status','suspended'])\r\n            // if (search.searchterms|| !type) {\r\n\r\n                if (search.searchType == \"people\") {\r\n                    let qsArrayNameSearch=angular.copy(qsArray)\r\n                    qsArrayNameSearch.push(['fullName', search.searchterms],['status','locked'])\r\n                    const promises= [API.cui.countPersons({qs:qsArrayNameSearch}),API.cui.getPersons({qs: qsArrayNameSearch})]\r\n                    $q.all(promises)\r\n                    .then(res=>{\r\n                        search.personCount=res[0]\r\n                        search.users=res[1]\r\n                        if (search.users.length===0) {\r\n                            search.noRecords=true\r\n                        }\r\n                        Loader.offFor('search.loading')\r\n                    })                    \r\n                    .catch(error => {\r\n                        Loader.offFor('search.loading')\r\n                        search.pageError=true\r\n                    })\r\n                    //     qsArray.push(['email', search.searchterms])\r\n                    // API.cui.getPersons({\r\n                    //         qs: qsArray\r\n                    //     })\r\n                    //     .done(personResponse => {\r\n\r\n                    //         personResponse.forEach(function(x) {\r\n                    //             search.addPerson(x);\r\n                    //         })\r\n\r\n                    //         $scope.$digest()\r\n                    //     })\r\n                    //     .fail(error => {\r\n\r\n                    //     })\r\n\r\n                }\r\n                if (search.searchType == \"organizations\") {\r\n                    qsArray.push(['name', search.searchterms + \"*\"])\r\n                    API.cui.getOrganizations({qs: qsArray})\r\n                    .done(orgsResponse => {\r\n                        search.orgs = orgsResponse;\r\n                        if (search.orgs.length===0) {\r\n                            search.noRecords=true\r\n                        }\r\n                    })\r\n                    .fail(error => {\r\n                        search.pageError=true\r\n                    })\r\n                    .always(handleAll)\r\n                }\r\n            // }\r\n        }\r\n\r\n        const handleAll= () => {\r\n            Loader.offFor('search.loading')\r\n            $scope.$digest()\r\n        }\r\n\r\n        /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\r\n\r\n        /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n        search.searchParams = Object.assign({}, $stateParams)\r\n        search.searchParams.pageSize = search.searchParams.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n        if (!search.searchParams.page) {\r\n            search.searchParams.page=1\r\n        }\r\n        search.sortBy = {}\r\n        search.organizationList = null;\r\n        // API.cui.getOrganizationsCount({qs:APIHelpers.getQs(search.searchParams)})\r\n        // .then(count=>{\r\n        //     search.orgCount=count\r\n        //     return API.cui.getOrganizations({qs:APIHelpers.getQs(search.searchParams)})\r\n        // })\r\n        Loader.onFor('search.loading')\r\n        let qs=APIHelpers.getQs(search.searchParams)\r\n        qs.push(['status','active'],['status','suspended'])\r\n        API.cui.getOrganizations({qs:qs})\r\n        .then(res => {\r\n            search.orgs = res\r\n            if (search.orgs.length===0) {\r\n                search.noRecords=true\r\n            }\r\n        })\r\n        .fail(error => {\r\n            search.pageError=true\r\n        })\r\n        .always(handleAll)\r\n\r\n        /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n\r\n        /* -------------------------------------------- ON CLICK FUNCTIONS START --------------------------------------------- */\r\n        search.updateSearchParams = function(page) {\r\n            if (page) {\r\n                search.searchParams.page=page\r\n            }\r\n            $state.transitionTo('search', search.searchParams, {notify: false})\r\n            search.searchNow()\r\n        }\r\n\r\n        search.userClick = function(clickedUser) {\r\n\r\n            const stateOpts = {\r\n                userId: clickedUser.id,\r\n                orgId: clickedUser.organization.id,\r\n            }\r\n            if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\r\n            else $state.go('organization.directory.userDetails', stateOpts)\r\n\r\n        }\r\n\r\n        search.orgClick = function(clickedOrd) {\r\n            const stateOpts = {\r\n                orgId: clickedOrd.id,\r\n            }\r\n            $state.go('organization.directory.orgDetails', stateOpts)\r\n        }\r\n\r\n        /* -------------------------------------------- ON CLICK FUNCTIONS END --------------------------------------------- */\r\n    }]);\r\n\r\nangular.module('common',['translate','ngMessages','cui.authorization','cui-ng','ui.router','snap','LocalStorageModule'])\r\n.config(($translateProvider,$locationProvider,$urlRouterProvider,$injector,\r\n    localStorageServiceProvider,$cuiIconProvider,$cuiI18nProvider,$paginationProvider,\r\n    $stateProvider,$compileProvider,$cuiResizeHandlerProvider) => {\r\n\r\n    $urlRouterProvider.rule(($injector, $location) => {\r\n        const path = $location.path()\r\n        const hasTrailingSlash = path[path.length-1] === '/'\r\n\r\n        if (hasTrailingSlash) {\r\n            const newPath = path.substr(0, path.length-1)\r\n            return newPath\r\n        }\r\n    })\r\n\r\n    localStorageServiceProvider.setPrefix('cui');\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    const templateBase = 'app/modules/common/';\r\n\r\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\r\n\r\n    $stateProvider\r\n    .state('auth', {\r\n        url: '/auth?xsrfToken&cuid',\r\n        controller: returnCtrlAs('auth'),\r\n        templateUrl: templateBase + 'auth/auth.html',\r\n        access:true\r\n    });\r\n\r\n    if (appConfig.languages) {\r\n        if (!appConfig.languageResources) {\r\n            console.error('You need to configure languageResources in your appConfig.json.');\r\n        }\r\n\r\n        /*\r\n        *   This section will dynamically generate the correct path to versioned i18n assets \r\n        *   based off of current i18n version in use in the project.\r\n        *\r\n        *   This requires a proper appConfig.json setup. Please refer to the documentation in\r\n        *   ./docs/features/cui-framework/cui-i18n.md for information on how to setup the appConfig.\r\n        *\r\n        *   Note: Grunt tasks will not automatically work with all of the possible setups of i18n assets.\r\n        */\r\n\r\n        if (appConfig.languageResources.hasOwnProperty('customDependencyName')) {\r\n            // Loading in custom i18n project\r\n            const customDependency = appConfig.languageResources.customDependencyName\r\n            const dependencyType = appConfig.languageResources.dependencyType || 'dependencies'\r\n            const customDependencyVersion = packageJson[dependencyType][customDependency].split('#v')[1]\r\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, customDependencyVersion)\r\n        }\r\n        else if (appConfig.languageResources.hasOwnProperty('dependencyOrigin') && appConfig.languageResources.dependencyOrigin === 'cui-idm-b2x') {\r\n            // Loading in i18n dependency through B2X (generator projects)\r\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, i18nPackageJson.version)\r\n        }\r\n        else {\r\n            // Loading in standalone cui-i18n dependency\r\n            const dependencyType = appConfig.languageResources.dependencyType || 'dependencies'\r\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, packageJson[dependencyType]['@covisint/cui-i18n'])\r\n        }\r\n\r\n        $cuiI18nProvider.setLocaleCodesAndNames(appConfig.languages);\r\n        let languageKeys = Object.keys($cuiI18nProvider.getLocaleCodesAndNames());\r\n\r\n        const returnRegisterAvailableLanguageKeys = () => {\r\n            // Reroute unknown language to prefered language\r\n            let object = {'*': languageKeys[0]};\r\n            languageKeys.forEach(function(languageKey) {\r\n                // Redirect language keys such as en_US to en\r\n                object[languageKey + '*'] = languageKey;\r\n            });\r\n            return object;\r\n        };\r\n\r\n        $translateProvider.useLoader('LocaleLoader', appConfig.languageResources )\r\n        .registerAvailableLanguageKeys(languageKeys, returnRegisterAvailableLanguageKeys())\r\n        .uniformLanguageTag('java')\r\n        .determinePreferredLanguage()\r\n        .fallbackLanguage(languageKeys);\r\n\r\n        $cuiI18nProvider.setLocalePreference(languageKeys);\r\n    }\r\n\r\n    if (appConfig.iconSets) {\r\n        appConfig.iconSets.forEach((iconSet) => {\r\n            $cuiIconProvider.iconSet(iconSet.name, iconSet.path, iconSet.defaultViewBox || null);\r\n        });\r\n    }\r\n\r\n    // Pagination Results Per Page Options\r\n    if (appConfig.paginationOptions) {\r\n        $paginationProvider.setPaginationOptions(appConfig.paginationOptions)\r\n    }\r\n    else {\r\n        throw new Error(`You don't have paginationOptions set in your appConfig.json`)\r\n    }\r\n\r\n    // Cui Resize Handler Breakpoint Option\r\n    if (appConfig.breakpointOption) {\r\n        $cuiResizeHandlerProvider.setBreakpoint(appConfig.breakpointOption);\r\n    } else {\r\n        throw new Error('You don\\'t have breakpointOption set in your appConfig.json');\r\n    }\r\n\r\n    $compileProvider.debugInfoEnabled(false);\r\n\r\n});\r\n\r\nangular.module('common')\r\n.run(['LocaleService','$rootScope','$state','$http','$templateCache','$cuiI18n','User',\r\n    'cui.authorization.routing','cui.authorization.evalRouteRequest','Menu','API','$cuiIcon','$timeout','PubSub','APIError','Loader','Theme','CuiRouteHistoryFactory',\r\n(LocaleService,$rootScope,$state,$http,$templateCache,$cuiI18n,User,routing,evalRouteRequest,Menu,API,$cuiIcon,$timeout,PubSub,APIError,Loader,Theme,CuiRouteHistoryFactory) => {\r\n\r\n    if(window.cuiApiInterceptor) {\r\n        const cuiApiInterceptorConfig = {\r\n            apiUris: [ appConfig.serviceUrl ],\r\n            stopIfInvalidPayload: true\r\n        }\r\n\r\n        if(appConfig.debugServiceUrl) {\r\n            cuiApiInterceptorConfig.apiUris.push(appConfig.debugServiceUrl)\r\n        }\r\n\r\n        const interceptors = [\r\n            'Get',\r\n            'PrePut',\r\n            'PrePost',\r\n            'PostPut',\r\n            'PostPost'\r\n        ]\r\n\r\n        interceptors.forEach(interceptor => window.cuiApiInterceptor[`start${ interceptor }Interceptor`](cuiApiInterceptorConfig))\r\n    }\r\n\r\n    // Add locales here\r\n    const languageNameObject = $cuiI18n.getLocaleCodesAndNames();\r\n\r\n    for (var LanguageKey in languageNameObject) {\r\n        LocaleService.setLocales(LanguageKey, languageNameObject[LanguageKey]);\r\n    }\r\n\r\n    $rootScope.$on('$stateChangeStart', (event, toState, toParams, fromState, fromParams) => {\r\n        Theme.clear() \r\n        APIError.clearAll()\r\n        Loader.clearAll()\r\n        event.preventDefault();\r\n\r\n        function attachAccessInfo(toState) {\r\n            if (toState.access) {\r\n                if (! _.isObject(toState.access)) {\r\n                    toState.access = {};\r\n                }\r\n                toState.access.roles = User.getRoles();\r\n                toState.access.entitlements = User.getEntitlements();\r\n            } else {\r\n                toState.access = {};                \r\n            }\r\n        }\r\n\r\n        function go(toState, toParams, fromState, fromParams) {\r\n            // NB... detailed access logic is evaluated upstream, in cui.authorization.evalRouteRequest...\r\n            attachAccessInfo(toState);\r\n            evalRouteRequest(toState, toParams, fromState, fromParams,'misc.notAuth');\r\n            PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams }); \r\n            Menu.handleStateChange(toState.menu);\r\n        }\r\n\r\n        const route = () => {\r\n            if (appConfig.debugServiceUrl) {\r\n                /**\r\n                    appConfig.debugServiceUrl can be pointed at a localhost server to act as a mock API.\r\n                        Ex: 'debugServiceUrl': 'http://localhost:8001'\r\n                    mock api server source code \r\n                        https://github.com/thirdwavellc/cui-api-mock\r\n                    NB this workaround is not calling new evalRouteRequest() logic.\r\n                **/\r\n                let userInfo = {};\r\n                API.cui.getPerson({personId: 'personId'})\r\n                .then((res) => {\r\n                    userInfo = res;\r\n                    return API.cui.getOrganization({ organizationId: res.organization.id });\r\n                })\r\n                .then((res) => {\r\n                    userInfo.organization = res;\r\n                    API.setUser(userInfo);\r\n                });\r\n                routing(toState, toParams, fromState, fromParams, []);\r\n                PubSub.publish('stateChange',{ toState,toParams,fromState,fromParams }); // this is required to make the ui-sref-active-nested directive work\r\n                Menu.handleStateChange(toState.menu );\r\n            }\r\n            else {\r\n                /* deprecated...\r\n                if (!toState.access || !toState.access.loginRequired) {\r\n                    Menu.handleStateChange(toState.menu);\r\n                    routing(toState, toParams, fromState, fromParams, User.getEntitlements());\r\n                    PubSub.publish('stateChange',{ toState,toParams,fromState,fromParams }); // this is required to make the ui-sref-active-nested directive work with a multi-module approach\r\n                    return;\r\n                }\r\n                else if (User.get() !== '[cuid]') {\r\n                    routing(toState, toParams, fromState, fromParams, User.getEntitlements());\r\n                    PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams });\r\n                    Menu.handleStateChange(toState.menu);\r\n                }\r\n                else {\r\n                    API.authenticateUser({ toState,toParams,fromState,fromParams })\r\n                    .then((res) => {\r\n                        const { toState, toParams, fromState, fromParams } = res.redirect;\r\n                        // Determine if user is able to access the particular route we're navigating to\r\n                        routing(toState, toParams, fromState, fromParams, res.roleList);\r\n                        PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams }); // this is required to make the ui-sref-active-nested directive work with a multi-module approach\r\n                        // Menu handling\r\n                        Menu.handleStateChange(res.redirect.toState.menu);\r\n                    });\r\n                }\r\n                */\r\n                if (!toState.access || User.get() !== '[cuid]') {\r\n                    // ...route needs no User info... or ...route needs User and we have User info...\r\n                    cui.log('stateChangeStart2', toState, toParams);\r\n                    go(toState, toParams, fromState, fromParams);\r\n                } else {\r\n                    // ..route needs (loggedIn) User and we need User info...\r\n                    API.authenticateUser({toState, toParams, fromState, fromParams}).then((res) => {\r\n                        cui.log('stateChangeStart3', res.redirect.toState, res.redirect.toParams);\r\n                        go(res.redirect.toState, res.redirect.toParams, res.redirect.fromState, res.redirect.fromParams);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        if (_.isEmpty(API.cui)) {\r\n            // async load API.cui\r\n            API.initApi().then(() => {\r\n                route();\r\n            });\r\n        } else {\r\n            route();\r\n        }\r\n    });\r\n\r\n    // $state.stateStack is a stack of states used by base.goBack()\r\n    $state.stateStack = []\r\n\r\n    $rootScope.$on('$stateChangeSuccess', (e, { toState, toParams, fromState, fromParams }) => {\r\n        // For base.goBack()\r\n        $state.stateStack.push({\r\n            name: fromState.name,\r\n            params: fromParams || {}\r\n        })\r\n\r\n        // routeHistory POC\r\n        var routeTextArray = toState.name.split('.');\r\n        CuiRouteHistoryFactory.add({\r\n            text: routeTextArray[routeTextArray.length - 1],\r\n            uiroute: toState.name,\r\n            uirouteparams: toParams\r\n        });\r\n\r\n        cui.log('on $stateChangeSuccess', toState, toParams, fromState, fromParams, $state.stateStack);\r\n    })\r\n\r\n    angular.forEach($cuiIcon.getIconSets(), (iconSettings, namespace) => {\r\n        $http.get(iconSettings.path, {\r\n            cache: $templateCache\r\n        });\r\n    });\r\n\r\n}]);\r\n\r\nangular.module('common')\r\n.controller('authCtrl', ['$state',function($state) {\r\n    $state.go('welcome');\r\n}]);\r\n\r\nangular.module('common')\r\n.controller('baseCtrl', function(Base, $scope) {\r\n\r\n    $scope.base = Base\r\n    $scope.base.pendingNotificationFlag=false\r\n})\r\n\r\n.filter('capitalize', function() {\r\n    return function(input) {\r\n      return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\r\n    }\r\n})\r\n\r\n.filter('capitalize', function() {\r\n    return function(input) {\r\n      return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.directive('disableAnimate', ($animate) => ({\r\n\r\n\t/*\r\n\t\tUse this directive to disable the animation window that is introduced by ng-animate.\r\n\t\tAdd the 'disable-animate' attribute to an element you need to disable ng-animate on.\r\n\r\n\t\tExample: \t<p disable-animate> Element you need to disable ng-animate on. </p>\r\n\t*/\r\n\r\n\trestrict: 'A',\r\n\tlink: (attrs, elem) => {\r\n\t\t$animate.enabled(elem, false)\r\n\t}\r\n}))\r\n\r\nangular.module('common')\r\n.factory('CuiMobileNavFactory', (PubSub,User,$filter) => {\r\n    return {\r\n        title: User.user.organization.name,\r\n        defaultTitle: User.user.organization.name,\r\n        getTitle: function() {\r\n            return this.title\r\n        },\r\n        setTitle: function(newTitle) {\r\n            this.title = newTitle\r\n            PubSub.publish('mobileNavTitleChange')\r\n        },\r\n        getDefaultTitle: function() {\r\n            return this.defaultTitle\r\n        },\r\n        setDefaultTitle: function(newDefaultTitle) {\r\n            this.defaultTitle = newDefaultTitle\r\n        }\r\n    }\r\n})\r\n.directive('cuiMobileNav', (CuiMobileNavFactory,PubSub,$state) => ({\r\n    restrict: 'E',\r\n    scope: {\r\n        showIf: '=',\r\n        links: '=',\r\n        activeTitle:'@activeTitle',\r\n        label: '=?'\r\n    },\r\n    link: (scope, elem, attrs) => {\r\n        // attrs.activeTitle ? scope.activeTitle = attrs.activeTitle : scope.activeTitle = CuiMobileNavFactory.getDefaultTitle()\r\n        scope.currentState = $state.current.name\r\n\r\n        scope.close = () => scope.showIf = false\r\n        scope.toggle = () => scope.showIf =! scope.showIf\r\n\r\n        const pubSubSubscription = PubSub.subscribe('mobileNavTitleChange', () => {\r\n            // scope.activeTitle = CuiMobileNavFactory.getTitle()\r\n        })\r\n\r\n        scope.$on('$destroy', () => {\r\n            PubSub.unsubscribe(pubSubSubscription)\r\n        })\r\n    },\r\n    template: `\r\n        <nav class=\"cui-breadcrumb--mobile\" id=\"breadcrumb-button\" aria-hidden=\"true\" ng-click=\"toggle()\" off-click=\"close()\">\r\n            <ul class=\"cui-breadcrumb__links\">\r\n                <li class=\"cui-breadcrumb__link cui-breadcrumb__link--current\">\r\n                    <span class=\"cui-breadcrumb__mobile-link\" ng-if=\"links[currentState]\" class=\"active\"><span class=\"cui-mobile-only\" ng-if=\"activeTitle\">{{activeTitle}}.</span>{{links[currentState].label}}</span>\r\n                    <span class=\"cui-breadcrumb__mobile-link\" ng-if=\"!links[currentState]\" class=\"active\"><span class=\"cui-mobile-only\" ng-if=\"activeTitle\">{{activeTitle}}.</span>{{label}}</span>\r\n                </li>\r\n                <div class=\"cui-popover cui-popover--menu cui-breadcrumb__popover cui-popover--top cui-popover__categories-popover\" tether target=\"#breadcrumb-button\" attachment=\"top left\" target-attachment=\"bottom left\" offset=\"-10px 0\" ng-if=\"showIf\">\r\n                    <li class=\"cui-breadcrumb__link cui-popover__row\" ng-repeat=\"(state, stateDetails) in links\" ng-if=\"currentState!==state\">\r\n                        <a class=\"cui-breadcrumb__mobile-link\" ui-sref=\"{{state}}(stateDetails.stateParams)\">{{stateDetails.label}}</a>\r\n                    </li>\r\n                </div>\r\n            </ul>\r\n        </nav>\r\n    `\r\n}))\r\n\r\n/*\r\nTODO\r\n    -strategically handle jumps?\r\n        - best bet is to just display last 3 routes in markup\r\n*/\r\n\r\nangular.module('common')\r\n.factory('CuiRouteHistoryFactory', () => {\r\n    var routes = [];\r\n    /*\r\n        route: {\r\n            text: '',\r\n            uiroute: '',\r\n            uirouteparams: ''\r\n        }\r\n    */\r\n    return {\r\n        add: function(route) {\r\n            routes.push(route);\r\n            return;\r\n        },\r\n        remove: function(route) {\r\n            _.remove(routes, {text: route.text});\r\n            return;\r\n        },\r\n        truncate: function(route) {\r\n            // Remove everything that follows route\r\n            var idx = routes.indexOf(route);\r\n            cui.log('truncate before', routes, route, idx);\r\n            if (idx !== -1) {\r\n                routes = routes.slice(0, idx);\r\n            }\r\n            cui.log('truncate after', routes);\r\n            return;\r\n        },\r\n        clear: function() {\r\n            routes = [];\r\n            return;\r\n        },\r\n        get: function() {\r\n            return routes;\r\n        }\r\n    }\r\n})\r\n.directive('cuiRouteHistory', (CuiRouteHistoryFactory, $state) => ({\r\n    restrict: 'E',\r\n    link: (scope, elem, attrs) => {\r\n        //scope.currentState = $state.current.name;\r\n        scope.routes = CuiRouteHistoryFactory.get();\r\n        scope.go = function(route) {\r\n            if (route.uiroute && route.uiroute !== $state.current.name) {\r\n                CuiRouteHistoryFactory.truncate(route);\r\n                if (route.uirouteparams) {\r\n                    $state.go(route.uiroute, route.uirouteparams);   \r\n                } else {\r\n                    $state.go(route.uiroute);   \r\n                }\r\n            }\r\n        };\r\n    },\r\n    template: `\r\n        <nav class=\"cui-breadcrumb\">\r\n            <ul class=\"cui-breadcrumb__links\">\r\n              <li class=\"cui-breadcrumb__link\" ng-repeat=\"route in routes | limitTo:-3\">\r\n                <span ng-class=\"{'cui-breadcrumb__route':!$last, 'cui-breadcrumb__routelast':$last}\" ng-click=\"go(route)\">{{route.text}}</span>\r\n              </li>\r\n            </ul>\r\n        </nav>\r\n    `\r\n    //            <a ng-if=\"route.uiroute !== null\" ui-sref=\"{{route.uiroute}}\">{{route.text}}</a>\r\n}))\r\n\r\nangular.module('common')\r\n.directive('cuiSuccessPane', ($state,$timeout) => ({\r\n\r\n\t/*****\r\n\t\t--- Usage ---\r\n\r\n        <cui-success-pane show-if=\"scope.variable\" close-after=\"5000\" on-close=\"scope.functionName()\">\r\n      \t\t<p class=\"cui-modal__secondary-message\">This is extra content</p>\r\n      \t\t<p class=\"cui-modal__secondary-message\">{{scope.object.name}}</p>\r\n    \t</cui-success-pane>\r\n\r\n        --- Optional Paramaters ---\r\n\r\n            close-after - specify how long before the success pane automatically closes\r\n                        - if timer is not specified, the pane will stay open until clicked\r\n\r\n            on-close    - specify what scope function to fire when the modal closes\r\n\t*****/\r\n\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n        showIf: '=',\r\n        closeAfter: '=',\r\n        onClose: '&'\r\n    },\r\n    link: (scope) => {\r\n        scope.close = () => {\r\n            scope.showIf =! scope.showIf\r\n        }\r\n\r\n        if (scope.closeAfter) {\r\n            $timeout(() => {\r\n                if (scope.onClose) {\r\n                    scope.onClose() && scope.onClose()();\r\n                }\r\n                scope.close()\r\n            }, scope.closeAfter)\r\n        }\r\n    },\r\n    template: `\r\n        <div class=\"cui-modal\" ng-if=\"showIf\" ng-click=\"close()\">\r\n            <div class=\"cui-modal__pane\">\r\n                <div class=\"cui-modal__icon\">\r\n                    <cui-icon cui-svg-icon=\"cui:check-with-border\" class=\"cui-modal__icon\"></cui-icon>\r\n                </div>\r\n                <span class=\"cui-modal__primary-message\">{{'cui-success' | translate}}</span>\r\n                <ng-transclude></ng-transclude>\r\n            </div>\r\n        </div>\r\n    `\r\n}))\r\n\r\nangular.module('common')\r\n.directive('unique', ['$parse', ($parse) => {\r\n  return {\r\n    restrict: 'A',\r\n    require: 'ngModel',\r\n    link: (scope, element, attrs, ctrl) => {\r\n      const checkIfUnique = (values) => {\r\n        ctrl.$setValidity('unique', values[0] !== (values[1] || ''));\r\n      };\r\n\r\n      scope.$watch(()=> [scope.$eval(attrs.unique), ctrl.$viewValue], checkIfUnique, (newValues,oldValues) => angular.equals(newValues,oldValues));\r\n    }\r\n  };\r\n}]);\r\nangular.module('common')\r\n.factory('API',['$state','User','$rootScope','$window','$location','CustomAPI','$q','localStorageService','Loader','$timeout','Base','LocaleService',\r\n($state,User,$rootScope,$window,$location,CustomAPI,$q,localStorage,Loader,$timeout,Base,LocaleService) => {\r\n\r\n    let authInfo = {}\r\n    let myCUI = {}\r\n\r\n    Base.authInfo = authInfo\r\n\r\n    const populateUserInfo = (info, redirectOpts) => {\r\n        const deferred = $q.defer()\r\n        let userInfo, roleList\r\n        authInfo = info\r\n        User.set(info)\r\n\r\n        $q.all([\r\n            myCUI.getPersonRoles({ personId: authInfo.cuid }),\r\n            myCUI.getPerson({ personId: authInfo.cuid })                        \r\n        ])\r\n        .then(res => {\r\n            roleList = res[0].map(x => x.name)\r\n            User.setEntitlements(roleList)\r\n            userInfo = res[1]\r\n            return myCUI.getOrganization({ organizationId: res[1].organization.id })\r\n        })\r\n        .then(res => {\r\n            userInfo.organization = res\r\n            User.set(userInfo)\r\n            deferred.resolve({ roleList, redirect: redirectOpts })\r\n        })\r\n        \r\n        return deferred.promise\r\n    }\r\n\r\n    const getNotificationDetails = (userInfo) => {\r\n        if (!Base.canGrantAppToUser()) {\r\n            myCUI.getPersonPendingApps({personId: userInfo.id})\r\n            .then((res) => {\r\n                userInfo.pendingApps=res.map(x=> x.name)\r\n                User.set(userInfo)\r\n            })\r\n        }\r\n        else{\r\n            $q.all([\r\n                myCUI.getRegistrationRequestsCount(),\r\n                myCUI.getPackageRequestsCount(),\r\n                myCUI.getOrgRegistrationRequestsCount(),\r\n                myCUI.getPackageRequestsCount({qs:[['requestor.id',userInfo.organization.id],['requestor.type','organization']]})\r\n            ])\r\n            .then(res => {\r\n                userInfo.userRegistrationRequestsCount=res[0]\r\n                userInfo.userAppRequestsCount=res[1]\r\n                userInfo.orgRegistrationRequestsCount=res[2]\r\n                userInfo.orgAppRequestsCount=res[3]\r\n                userInfo.totalCount=res[0]+res[1]+res[2]+res[3]\r\n                User.set(userInfo)\r\n            })\r\n        }\r\n        \r\n    }\r\n    const jwtAuthHandler = () => {\r\n        return myCUI.covAuth({\r\n            originUri: appConfig.originUri,\r\n            authRedirect: window.location.href.split('#')[0] + '#/auth',\r\n            appRedirect: $location.path()\r\n        })\r\n    }\r\n\r\n    const initApi = () => {\r\n        let deferred = $q.defer()\r\n        Loader.onFor('wholeApp','custom-api-loading')\r\n        cui.api({\r\n            retryUnseured: true,\r\n            envDefs: ['https://cuijs.run.covisintrnd.com/defs/env.json'],\r\n            dataCallDefs: [\r\n                'https://cuijs.run.covisintrnd.com/defs/auth.json',\r\n                'app/json/idm-call-defs.json',\r\n                CustomAPI\r\n            ]\r\n        })\r\n        .then((cuiObject) => {\r\n            Base.logout = cuiObject.covLogout\r\n            angular.copy(cuiObject, myCUI)\r\n            myCUI.setAuthHandler(jwtAuthHandler)\r\n            // overwrite the service url to get the solution instance id\r\n            appConfig.solutionInstancesUrl && myCUI.setServiceUrl(appConfig.solutionInstancesUrl)\r\n            return myCUI.covAuthInfo({originUri: appConfig.originUri})\r\n        })\r\n        .then(()=>{\r\n            // reset the service url\r\n            appConfig.debugServiceUrl\r\n                ? myCUI.setServiceUrl(appConfig.debugServiceUrl)\r\n                : myCUI.setServiceUrl(appConfig.serviceUrl)\r\n            $timeout(()=> Loader.offFor('wholeApp'),50)\r\n            deferred.resolve()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    let apiFactory = {\r\n        cui: myCUI,\r\n        getUser: User.get,\r\n        setUser: User.set,\r\n        setPersonData: User.setPersonData,\r\n        getPersonData: User.getPersonData,\r\n        user: User.user,\r\n        initApi,\r\n        authenticateUser: (redirectOpts) => {\r\n            const deferred = $q.defer()\r\n            const sessionInfo = myCUI.getCovAuthInfo()\r\n            if(redirectOpts.toState.name!=='auth') {\r\n                localStorage.set('appRedirect',redirectOpts) // set the redirect to whatever the last state before auth was\r\n                Loader.onFor('wholeApp','redirecting-to-sso') // don't need to turn this loader off since covAuth takes us to another page\r\n                appConfig.solutionInstancesUrl && myCUI.setServiceUrl(appConfig.solutionInstancesUrl)\r\n                jwtAuthHandler() // force redirect to SSO\r\n            }\r\n            else {\r\n                Loader.onFor('wholeApp','getting-user-info')\r\n                myCUI.handleCovAuthResponse({ selfRedirect: true })\r\n                .then((res)=>{\r\n                    populateUserInfo(res,localStorage.get('appRedirect'))\r\n                    .then((res) => {\r\n                        deferred.resolve(res)\r\n                        $timeout(()=> Loader.offFor('wholeApp'),50)\r\n                    })\r\n                })\r\n            }\r\n            return deferred.promise\r\n        },\r\n        setAuthInfo: function(newAuthInfo) {\r\n            angular.copy(newAuthInfo[0], authInfo)\r\n        },\r\n        authInfo: authInfo\r\n    }\r\n\r\n    return apiFactory\r\n\r\n}])\r\n\r\nangular.module('common')\r\n.factory('APIError', (SharedService) => {\r\n    const APIError = Object.create(SharedService)\r\n    APIError.details = Object.assign({}, APIError.details)\r\n    APIError.for = APIError.details\r\n    return APIError\r\n})\r\nangular.module('common')\r\n.factory('APIHelpers', (API,$filter) => {\r\n    'use strict'\r\n\r\n    const apiHelpers = {\r\n\r\n        getQs(opts) {\r\n            /**\r\n                return a qs array from an object of key value pairs\r\n                where the key is the search param and the value is the search value (accepts undefined values)\r\n            **/\r\n\r\n            return Object.keys(_(opts).omitBy(_.isUndefined).value())\r\n            .reduce((query, param) => {\r\n                return query.concat([[param, opts[param]]])\r\n            }, [])\r\n        },\r\n\r\n        buildPackageRequests(arrayOfApps) {\r\n            /**\r\n                returns an array of API package request promises\r\n                based on an array of apps that we want to request\r\n\r\n                the reason for the request should be under app._reason\r\n                if it does not have a reason and the service package\r\n                for that app requires one, we return undefined and\r\n                attach an _error property (app._error = true) on that app\r\n            **/\r\n\r\n            const numberOfApps = arrayOfApps.length\r\n\r\n            if (!_.isArray(arrayOfApps) || numberOfApps === 0) {\r\n                throw new Error ('The argument passed to APIHelpers.buildPackageRequests should be an array of apps, with 1 or more apps.')\r\n                return undefined\r\n            }\r\n\r\n            let error = false\r\n            for (let i=0; i < numberOfApps; i += 1) {\r\n                if (arrayOfApps[i].servicePackage.requestReasonRequired && !arrayOfApps[i]._reason) {\r\n                    arrayOfApps[i]._error = true\r\n                    if (!error) {\r\n                        error = true;\r\n                    }\r\n                }\r\n            }\r\n            if (error) {\r\n                return undefined;\r\n            }\r\n\r\n            let packagesBeingRequested = []\r\n            let packageRequests = []\r\n            for (let i=0; i < numberOfApps; i += 1) {\r\n                if (packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id) >= 0) {\r\n                    // if the service package is already being requested, simply append to the reason.\r\n                    // if the app doesn't have a reason and we got to this point then the package\r\n                    // doesn't require a reason\r\n                    if (arrayOfApps[i]._reason) {\r\n                        packageRequests[packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id)].reason +=\r\n                            ('\\n' + $filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(arrayOfApps[i].name) + ': ' + arrayOfApps[i].name._reason)\r\n                    }\r\n                }\r\n                else {\r\n                    // cache the ids in another array so that we can look for an existing package request\r\n                    // without having to search through the array of requests.\r\n                    packagesBeingRequested.push(arrayOfApps[i].servicePackage.id)\r\n                    packageRequests.push({\r\n                        requestor: {\r\n                            id: API.getUser(),\r\n                            type: 'person'\r\n                        },\r\n                        servicePackage: {\r\n                            id: arrayOfApps[i].servicePackage.id,\r\n                            type: 'servicePackage'\r\n                        },\r\n                        reason: arrayOfApps[i]._reason || ''\r\n                    })\r\n                }\r\n            }\r\n            return packageRequests.map(data => API.cui.createPackageRequest({ data }))\r\n        },\r\n\r\n        flattenOrgHierarchy(orgHierarchy) {\r\n            /*\r\n                Takes the organization hierarchy response and returns a flat object array containing the id's and name's of\r\n                the top level organization as well as it's divisions.\r\n            */\r\n\r\n            if (orgHierarchy) {\r\n                let organizationArray = [];\r\n\r\n                organizationArray.push({\r\n                    id: orgHierarchy.id,\r\n                    name: orgHierarchy.name\r\n                });\r\n\r\n                if (orgHierarchy.children) {\r\n                    orgHierarchy.children.forEach((division) => {\r\n                        organizationArray.push({\r\n                            id: division.id,\r\n                            name: division.name\r\n                        });\r\n\r\n                        if (division.children) {\r\n                            let flatArray = _.flatten(division.children);\r\n                            \r\n                            flatArray.forEach((childDivision) => {\r\n                                organizationArray.push({\r\n                                    id: childDivision.id,\r\n                                    name: childDivision.name\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                return organizationArray;\r\n            }\r\n            else {\r\n                throw new Error ('No organization hierarchy object provided');\r\n            }\r\n        },\r\n\r\n        getCollectionValuesAndCount(collection, key, returnAsCollection) {\r\n            // Given a collection and a key, will return an object containing each different value found\r\n            // for the given key as well as the count of that key. If the optional parameter `returnAsCollection`\r\n            // is provided, will return data as a collection instead of an object. This was done as in some \r\n            // cases (such as ng-repeat) it is easier to work with the data when its in an array.\r\n\r\n            // One area this method is handy is when you are getting all the different status values of a user list\r\n            // and need the count of each status.\r\n\r\n            let data = {\r\n                all: 0\r\n            }\r\n\r\n            collection.forEach(object => {\r\n                if (object.hasOwnProperty(key)) {\r\n                    let keyValue = object[key]\r\n                    if (data.hasOwnProperty(keyValue)) {\r\n                        data[keyValue] += 1\r\n                        data.all += 1\r\n                    }\r\n                    else {\r\n                        data[keyValue] = 1\r\n                        data.all += 1\r\n                    }\r\n                }\r\n            })\r\n\r\n            if (!returnAsCollection) return data\r\n            else {\r\n                let collectionData = []\r\n\r\n                Object.keys(data).forEach(dataKey => {\r\n                    let asObject = {\r\n                        value: dataKey,\r\n                        count: data[dataKey]\r\n                    }\r\n\r\n                    collectionData.push(asObject)\r\n                })\r\n\r\n                return collectionData\r\n            }\r\n        }\r\n    };\r\n\r\n    return apiHelpers\r\n\r\n});\r\n\r\nangular.module('common')\r\n.factory('Base', (APIError, BaseExtensions, Countries, Languages, LocaleService, Loader, Menu, Theme, Timezones, User, $state, $translate) => {\r\n\r\n    const baseFactory = {\r\n        apiError: APIError,\r\n        appConfig: appConfig,\r\n        countries: Countries,\r\n        getLanguageCode: Languages.getCurrentLanguageCode,\r\n        languages: Languages.all,\r\n        loader: Loader,\r\n        menu: Menu,\r\n        theme: Theme,\r\n        timezones: Timezones.all,\r\n        user: User.user,\r\n\r\n        goBack: (stateName,stateParams) => {\r\n            const numberOfStates = $state.stateStack.length\r\n            let i = numberOfStates - 1 // Last state user visited\r\n            let counter = 0\r\n            let stateParamsFromStack\r\n            do {\r\n                if ($state.stateStack[i].name === stateName) {\r\n                    stateParamsFromStack = $state.stateStack[i].params\r\n                }\r\n                i--\r\n                counter++\r\n            } while (!stateParamsFromStack && i >= 0 && counter <= 20) // limit our attempts to 20\r\n            if (stateParamsFromStack) stateParams=stateParamsFromStack\r\n            if (!stateParams) $state.go(stateName)\r\n            else $state.go(stateName, stateParams)\r\n        },\r\n\r\n        generateHiddenPassword: (password) => Array(password.length+1).join('•')\r\n    }\r\n\r\n    return Object.assign({}, baseFactory, BaseExtensions)\r\n\r\n})\r\n\r\nangular.module('common')\r\n\t.factory('BaseExtensions', ['cui.authorization.permitted', 'User', (permitted, User) => {\r\n\r\n\t\tfunction test() {\r\n\t\t\tcui.log('base extensions test');\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttest: function() {\r\n\t\t\t\treturn test();\r\n\t\t\t},\r\n\t\t\tisPermitted: function(logic) {\r\n\t\t\t\t//cui.log('isPermitted', logic, User.getRoles(), User.getEntitlements());\r\n\t\t\t\treturn permitted(logic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\tisOrgAdmin: function() {\r\n\t\t\t\t//cui.log('isOrgAdmin', appConfig.orgAdminLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t\treturn permitted(appConfig.orgAdminLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\tcanGrantAppToUser: function(){\r\n\t\t\t\treturn permitted(appConfig.grantAppToUserLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\tcanGrantAppToOrg: function(){\r\n\t\t\t\treturn permitted(appConfig.grantAppToOrgLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\taccessByAnyAdmin: function(){\r\n\t\t\t\treturn permitted(appConfig.accessByAnyAdmin, User.getRoles(), User.getEntitlements());\r\n\t\t\t}\r\n\t\t}\r\n\t}])\r\n\r\nangular.module('common')\r\n.factory('CommonAPI', (API, APIError, $q) => {\r\n\t'use strict'\r\n\r\n\t// This service handles basic API calls that are done throughout the project.\r\n\t// API calls that are more specific are handled in their own services.\r\n\r\n\tconst errorName = 'CommonAPIFactory.'\r\n\r\n\tconst getPerson = (userId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getPerson')\r\n\r\n\t\tAPI.cui.getPerson({ personId: userId })\r\n\t\t.done(personResponse => {\r\n\t\t\tdefer.resolve(personResponse)\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting person information')\r\n\t\t\tAPIError.onFor(errorName + 'getPerson')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganization = (organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getOrganization')\r\n\r\n\t\tAPI.cui.getOrganization({ organizationId: organizationId })\r\n\t\t.done(orgResponse => {\r\n\t\t\tdefer.resolve(orgResponse)\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting organization information')\r\n\t\t\tAPIError.onFor(errorName + 'getOrganization')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganizationHierarchy = (organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getOrgHierarchy')\r\n\r\n\t\tAPI.cui.getOrganizationHierarchy({ organizationId: organizationId })\r\n\t\t.done(orgHierarchy => {\r\n\t\t\tdefer.resolve(orgHierarchy)\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting organization hierarchy')\r\n\t\t\tAPIError.onFor(errorName + 'getOrgHierarchy')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetPerson: getPerson,\r\n\t\tgetOrganization: getOrganization,\r\n\t\tgetOrganizationHierarchy: getOrganizationHierarchy\r\n\t}\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('Countries', function($http, $rootScope, $translate) {\r\n\r\n    let countries = []\r\n\r\n    const GetCountries = (locale) => {\r\n        return $http.get(appConfig.languageResources.url + 'countries/' + locale + '.json')\r\n    }\r\n\r\n    const setCountries = (language) => {\r\n        language = language || 'en'\r\n\r\n        if (language.indexOf('_') > -1) {\r\n            language = language.split('_')[0]\r\n        }\r\n\r\n        GetCountries(language)\r\n        .then(res => {\r\n            countries.length = 0\r\n\r\n            res.data.forEach(country => {\r\n                countries.push(country)\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    $rootScope.$on('languageChange',function(e, args) {\r\n        setCountries(args)\r\n    })\r\n\r\n    const getCountryByCode = (countryCode) => {\r\n        return _.find(countries, function(countryObject) {\r\n            return countryObject.code === countryCode\r\n        })\r\n    }\r\n\r\n    setCountries($translate.proposedLanguage())\r\n\r\n    return {\r\n        list: countries,\r\n        getCountryByCode: getCountryByCode\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('CustomAPI', (CustomAPIExtension) => {\r\n\r\n    const calls = [\r\n        {\r\n            cmd: 'getPackageClaims',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.claim.v1+json',\r\n            call: '/service/v3/claims',\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonPackageClaims',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',\r\n            call: `/service/v3/persons/${ '{grantee}' }/packages/${ '{packageId}' }/claims`,\r\n            type: 'GET' \r\n        },\r\n        {\r\n            cmd: 'getCategories',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.category.v1+json',\r\n            call: `/service/v3/categories`,\r\n            type: 'GET' \r\n        },\r\n        {\r\n            cmd: 'getPersonRequestableApps',            \r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/requestable`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonRequestableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/requestable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantedApps',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantedAppCount',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationRequestableApps',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationRequestableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/requestable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantedApps',            \r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantedCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantableApps',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/grantable`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/grantable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantableApps',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/grantable`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/grantable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonStatusHistory',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.status.history.v1+json',\r\n            call: '/person/v3/persons/statusHistory',\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonPasswordChangeHistory',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.authn.password.change.history.req.v1+json',\r\n            call: `/authentication/v4/passwords/changeHistory`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonPendingServicePackages',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.request.v1+json',\r\n            call: `/service/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPackage',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.v1+json',\r\n            call: `/service/v3/packages/${ '{packageId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'denyPackage',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            type: 'POST',\r\n            call: `/service/v3/requests/tasks/deny`,\r\n        },\r\n        {\r\n            cmd: 'approvePackage',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            type: 'POST',\r\n            call: `/service/v3/requests/tasks/approve`\r\n        },\r\n        {\r\n            cmd: 'grantClaims',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',\r\n            call: `/service/v3/packages/grants/claims`,\r\n            type: 'PUT'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationRegistrationRequest',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.organization.request.v1+json',\r\n            call: `/organization/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonRegistrationRequest',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: `/person/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'approvePersonRegistration',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: `/person/v3/requests/tasks/approve`,\r\n            type: 'POST'\r\n        },\r\n        {\r\n            cmd: 'denyPersonRegistration',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: `/person/v3/requests/tasks/deny`,\r\n            type: 'POST'\r\n        },\r\n        {\r\n            cmd: 'getAllOrganizationRequests',\r\n            accepts: 'application/vnd.com.covisint.platform.organization.request.v1+json',\r\n            call: `/organization/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonEntitlements',\r\n            cmdType: 'secured',\r\n            contentType: 'application/vnd.com.covisint.platform.person.privilege.v1+json',\r\n            accepts: 'application/vnd.com.covisint.platform.person.privilege.v1+json',\r\n            call: `/person/v3/persons/privileges/${ '{personId}'}`,\r\n            type: 'GET'\r\n        },\r\n        {   cmd: 'getPersonGrantedCount',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            call: `/person/v3/persons/count`,\r\n            type: 'GET' \r\n        },\r\n        {\r\n            cmd: 'suspendOrgPkg',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.grant.status.request.v1+json',\r\n            contentType: 'application/vnd.com.covisint.platform.package.grant.status.request.v1+json',\r\n            call: `/service/v3/grants/tasks/organization/package/suspend`,\r\n            type: 'POST'\r\n        }\r\n    ]\r\n\r\n    return calls.concat(CustomAPIExtension)\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('CustomAPIExtension', () => {\r\n\r\n\t/* \t\r\n\t\tAny calls added here will be added to the API.cui object.\r\n\t*/\r\n\r\n    const calls = [\r\n    \t/* ---------- Registration Nonce Calls ---------- */\r\n    \t{\r\n    \t\tcmd: 'initiateNonce',\r\n    \t\tcmdType: 'unsecured',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/json',\r\n    \t\tcall: '/registration/v1/registrations/open/initiate'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'getOrganizationNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.organization.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/organizations/{organizationId}'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'getOrganizationsNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.organization.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/organizations'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'getSecurityQuestionsNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.securityquestion.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/securityQuestions'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'postUserRegistrationNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'POST',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n    \t\tcontentType: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/persons/registration'\r\n    \t},\r\n    \t{\r\n            cmd: 'getPasswordPoliciesNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'application/vnd.com.covisint.platform.password.policy.v1+json',\r\n            call: '/registration/v1/registrations/passwords/policies/{policyId}'\r\n        },\r\n        {\r\n            cmd: 'postPersonRequestNonce',\r\n            cmdType: 'nonce',\r\n            type: 'POST',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            contentType: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: '/registration/v1/registrations/persons/requests'\r\n        },\r\n        {\r\n        \tcmd: 'getOrgPackageGrantsNonce',\r\n        \tcmdType: 'nonce',\r\n        \ttype: 'GET',\r\n        \taccepts: 'application/vnd.com.covisint.platform.package.grant.v1+json',\r\n        \tcall: '/registration/v1/registrations/organizations/{organizationId}/packages'\r\n        },\r\n\t\t{\r\n\t\t\tcmd: 'validateUsernameEmailNonce',\r\n\t\t\tcmdType: 'nonce',\r\n\t\t\ttype: 'POST',\r\n\t\t\taccepts: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n\t\t\tcontentType: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n\t\t\tcall: '/registration/v1/registrations/persons/registration/validate'\r\n\t\t},\r\n        {\r\n            cmd: 'securedInitiate',\r\n            cmdType: 'unsecured',\r\n            type: 'GET',\r\n            accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json',\r\n            call: '/registration/v1/registrations/securedInvite/initiate/{invitationId}'\r\n        },\r\n        {\r\n            cmd: 'getOrgAppsNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: '/registration/v1/applications/organizations/{organizationId}'\r\n        },\r\n        {\r\n            cmd: 'getOrgAppsCountNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'text/plain',\r\n            call: '/registration/v1/applications/organizations/{organizationId}/count'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationsCountNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'text/plain',\r\n            call: '/registration/v1/registrations/organizations/count'\r\n        },\r\n        //New Calls-S\r\n        {cmd: \"getOrgRegistrationRequests\",call:\"/registration/v1/organization/requests\",type:\"GET\",accepts:\"application/vnd.com.covisint.platform.organization.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.organization.request.v1+json\"},\r\n        {cmd: \"getOrgRegistrationRequestsCount\",call: \"/registration/v1/organization/requests/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: 'approveOrgRegistrationRequest', call:'/registration/v1/organization/requests/tasks/approve', type:'POST', accepts:'application/vnd.com.covisint.platform.organization.request.v1+json'},\r\n        {cmd: 'denyOrgRegistrationRequest', call:'/registration/v1/organization/requests/tasks/deny', type:'POST', accepts:'application/vnd.com.covisint.platform.organization.request.v1+json'},\r\n                // ADMIN... imported from Coke...\r\n        {cmd: 'getPackageByQuery',accepts: 'application/vnd.com.covisint.platform.package.v1+json',call: `/service/v3/packages`,type: 'GET' },\r\n        {cmd: \"getPersonByQuery\",call: \"/person/v3/persons\",type: \"GET\",accepts: \"application/vnd.com.covisint.platform.person.v1+json\"  },\r\n        {cmd: \"getRegistrationRequests\",call:\"/registration/v1/person/requests\",type:\"GET\",accepts:\"application/vnd.com.covisint.platform.person.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.person.request.v1+json\"},\r\n        {cmd: \"createRegistrationRequest\",\"cmdType\": \"unsecured\",call:\"/registration/v1/person/requests\",type:\"POST\",accepts:\"application/vnd.com.covisint.platform.person.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.person.request.v1+json\"},\r\n        {cmd: \"getOrganizationSecured\",\"cmdType\": \"secured\",\"call\": \"/organization/v3/organizations/{organizationId}\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.organization.v1+json\"},\r\n        {cmd: \"getPasswordPolicySecured\",\"cmdType\": \"secured\",\"call\": \"/authn/v4/passwords/policies/{policyId}\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.password.policy.v1+json\"},\r\n        {cmd: 'grantClaims',accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',contentType:\"application/vnd.com.covisint.platform.package.grant.claim.v1+json\",call: '/service/v3/packages/grants/claims',type: 'PUT' },\r\n        {cmd: 'initiateRegistration', cmdType: 'unsecured', call: '/registration/v1/registrations/open/initiate', type: 'GET', accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json'},\r\n        {cmd: 'initiateSecuredRegistration', cmdType: 'unsecured', call: '/registration/v1/registrations/securedInvite/initiate/{id}', type: 'GET', accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json'},\r\n        {cmd: 'createRegistrationNonce',cmdType: 'nonce',call:'/registration/v1/registrations/persons/registration',type:'POST',accepts:'application/vnd.com.covisint.platform.person.password.account.v1+json',contentType:'application/vnd.com.covisint.platform.person.password.account.v1+json'},\r\n        {cmd: 'createRegistrationRequestNonceWithPkg',cmdType: 'nonce',call:'/registration/v1/registrations/persons/requests',type:'POST',accepts:'application/vnd.com.covisint.platform.person.request.v1+json',contentType:'application/vnd.com.covisint.platform.person.request.v1+json'},\r\n        {cmd: 'approvePersonRegistrationRequest', call:'/registration/v1/person/requests/tasks/approve', type:'POST', accepts:'application/vnd.com.covisint.platform.person.request.v1+json'},\r\n        {cmd: 'denyPersonRegistrationRequest', call:'/registration/v1/person/requests/tasks/deny', type:'POST', accepts:'application/vnd.com.covisint.platform.person.request.v1+json'},\r\n        {cmd: 'validateRegistrationNonce',cmdType:'nonce',call: '/registration/v1/registrations/persons/registration/validate', type:'POST', accepts: 'text/plain'},\r\n        //{cmd: 'getOrganizationNonce',cmdType:'nonce',call: '/registration/v1/registrations/organizations/{id}', type:'GET', accepts: 'application/vnd.com.covisint.platform.organization.v1+json'},\r\n        {cmd: 'getPasswordPolicyNonce',cmdType:'nonce',call: '/registration/v1/registrations/passwords/policies/{id}', type:'GET', accepts: 'application/vnd.com.covisint.platform.password.policy.v1+json'},\r\n        {cmd: 'getAttributeTemplatesNonce',cmdType:'nonce',call: '/registration/v1/registrations/attributeTemplates', type:'GET', accepts: 'application/vnd.com.covisint.platform.attribute.template.v1+json'},\r\n        {cmd: \"getOrganizationPackagesSecured\",\"cmdType\": \"secured\",\"call\": \"/service/v3/organizations/{organizationId}/packages\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.package.grant.v1+json\"},\r\n        {cmd: \"validatePasswordSecured\",call: \"/person/v3/persons/password/validate\",type: \"POST\",accepts: \"application/vnd.com.covisint.platform.password.validation.response.v1+json\",\"contentType\": \"application/vnd.com.covisint.platform.password.validation.v1+json\"},\r\n        {cmd: \"getPackageRequestsCount\",call: \"/service/v3/requests/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: \"getOrganizationPackagesCount\",call: \"/service/v3/organizations/{organizationId}/packages/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: \"getRegistrationRequestsCount\",call: \"/registration/v1/person/requests/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: \"getPackagesRequestedCount\",call: \"/service/v3/persons/{personId}/packages/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: 'validatePasswordNonce',cmdType:'nonce',call: '/registration/v1/registrations/persons/password/validate', type:'POST', accepts: 'application/vnd.com.covisint.platform.password.validation.response.v1+json',contentType:'application/vnd.com.covisint.platform.password.validation.v1+json'}\r\n\r\n\r\n    ];\r\n\r\n    return calls\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('DataStorage', (API, localStorageService) => {\r\n\r\n    let storage = localStorageService.get('dataStorage') || {}\r\n    let dataStorage = {}\r\n\r\n    const initStorageIfUndefined = () => {\r\n        if (!storage[API.getUser()]) {\r\n            storage[API.getUser()] = {}\r\n        }\r\n    }\r\n\r\n    const saveToLocaStorage = () => {\r\n        localStorageService.set('dataStorage', storage)\r\n    }\r\n\r\n    /****************************************\r\n        FOR OBJECT AND ARRAY TYPE DATA\r\n    ****************************************/\r\n\r\n    // completely overrides a type\r\n    dataStorage.setType = (type, data) => {\r\n        initStorageIfUndefined()\r\n        storage[API.getUser()][type] = data\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    dataStorage.getType = (type) => {\r\n        if (!storage[API.getUser()]) {\r\n            return undefined\r\n        }\r\n        return storage[API.getUser()][type]\r\n    }\r\n\r\n    dataStorage.deleteType = (type) => {\r\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\r\n            return\r\n        }\r\n        delete storage[API.getUser()][type]\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    // deletes the storage for just the currently logged in user\r\n    dataStorage.deleteUserStorage = () => {\r\n        if (storage[API.getUser()]) {\r\n            delete storage[API.getUser()]\r\n        }\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    // deletes the storage for every user in local storage\r\n    dataStorage.clear = () => {\r\n        storage = {}\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    dataStorage.getUserStorage = () => storage[API.getUser()]\r\n\r\n    /****************************************\r\n        FOR ARRAY TYPE DATA ONLY\r\n    ****************************************/\r\n\r\n    // appends to a certain type\r\n    // NOTE: Make sure to use data that you can later distinguish between using dataThatMatches\r\n    // I recommend using replaceDataThatMatches instead unless you know what you're doing\r\n    dataStorage.appendToType = (type, data) => {\r\n        initStorageIfUndefined()\r\n        if (!storage[API.getUser()][type]) {\r\n            storage[API.getUser()][type] = [data]\r\n        } \r\n        else if (!_.isArray(storage[API.getUser()][type])) {\r\n            throw new Error('Tried appending to an existing data type that is not an array in dataStorage.')\r\n            return\r\n        } \r\n        else {\r\n            storage[API.getUser()][type].push(data)\r\n        }\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    // returns ALL data that matches against a given comparison or undefined if no results\r\n    dataStorage.getDataThatMatches = (type, comparison) => {\r\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\r\n            return undefined\r\n        } \r\n        else if (!_.isArray(storage[API.getUser()][type])) {\r\n            throw new Error('Tried using DataStorage.getDataThatMatches on a type that isn\\'t an array. Use .getType(type) instead.')\r\n            return\r\n        } \r\n        else {\r\n            const matches = storage[API.getUser()][type].filter(x => {\r\n                return _.isMatch(x, comparison)\r\n            })\r\n            if (matches.length > 0) {\r\n                return matches\r\n            } \r\n            else {\r\n                return undefined\r\n            }\r\n        }\r\n    }\r\n\r\n    // replaces all data that matches against a certain comparison and appends\r\n    // new data to that type's array\r\n    dataStorage.replaceDataThatMatches = (type, comparison, newData) => {\r\n        dataStorage.deleteDataThatMatches(type, newData)\r\n        dataStorage.appendToType(type, newData)\r\n    }\r\n\r\n    dataStorage.deleteDataThatMatches = (type, comparison) => {\r\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\r\n            return\r\n        } \r\n        else if (!_.isArray(storage[API.getUser()][type])) {\r\n            throw new Error('Tried using DataStorage.deleteDataThatMatches on a type that isn\\'t an array. Use .deleteType(type) instead.')\r\n            return\r\n        } \r\n        else {\r\n            storage[API.getUser()][type] = storage[API.getUser()][type].filter(x => {\r\n                return !_.isMatch(x, comparison)\r\n            })\r\n        }\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    return dataStorage\r\n})\r\n\r\nangular.module('common')\r\n.factory('Languages',['$cuiI18n','LocaleService',function($cuiI18n,LocaleService){\r\n\r\n    var languages=$cuiI18n.getLocaleCodesAndNames();\r\n\r\n    return {\r\n        all:languages,\r\n        getCurrentLanguageCode : function(){\r\n            if (LocaleService.getLocaleCode().indexOf('_')>-1) {\r\n                return LocaleService.getLocaleCode().split('_')[0];\r\n            } else {\r\n                return LocaleService.getLocaleCode();\r\n            }\r\n        }\r\n    };\r\n}]);\r\nangular.module('common')\r\n.factory('Loader', (SharedService) => {\r\n    const Loader = Object.create(SharedService)\r\n    Loader.details = Object.assign({}, Loader.details)\r\n    Loader.for = Loader.details\r\n    return Loader\r\n})\r\n\r\nangular.module('common')\r\n.factory('Menu', (snapRemote, $rootScope, $window) => {\r\n\r\n    const shouldShowMobileNav = () => {\r\n        if ($window.innerWidth >= 1000) {\r\n            snapRemote.close()\r\n        }\r\n    }\r\n\r\n    // Fixes issue where opening up the mobile menu and then expanding into desktop mode \r\n    // would leave all content pushed to the right.\r\n    $window.onresize = _.debounce(function() {\r\n        shouldShowMobileNav()\r\n    }, 1000)\r\n\r\n    return {\r\n        desktop: {\r\n            state: 'open', // default state for desktop menu\r\n            enabled: true,\r\n            open: function() {\r\n                this.state = 'closed'\r\n            },\r\n            close: function() {\r\n                this.state = 'closed'\r\n            },\r\n            toggle: function() { \r\n                this.state === 'open' ? this.state = 'closed' : this.state = 'open' \r\n            },\r\n            hide: function() {\r\n                this.enabled = false\r\n            },\r\n            show: function() {\r\n                this.enabled = true\r\n            }\r\n        },\r\n\r\n        mobile: {\r\n            state: 'closed', // default state for mobile menu\r\n            enabled: true,\r\n            open: function() {\r\n                this.state = 'open'\r\n            },\r\n            close: function() {\r\n                this.state = 'close'\r\n            },\r\n            toggle: function() {\r\n                this.state === 'open' ? this.state = 'closed' : this.state = 'open'\r\n            },\r\n            hide: function() {\r\n                this.enabled = false\r\n            },\r\n            show: function() {\r\n                this.state = true\r\n            }\r\n        },\r\n\r\n        handleStateChange: function(stateMenuOptions){\r\n            if (!angular.isDefined(stateMenuOptions)){\r\n                this.desktop.show()\r\n                this.mobile.show()\r\n            }\r\n            else {\r\n                (angular.isDefined(stateMenuOptions.desktop) && stateMenuOptions.desktop=== false)? this.desktop.hide() : this.desktop.show()\r\n                (angular.isDefined(stateMenuOptions.mobile) && stateMenuOptions.mobile=== false)? this.mobile.hide() : this.mobile.show()\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('Organization', (API, $q) => {\r\n\r\n\tconst factoryName = 'organizationFactory.'\r\n\r\n\tconst getOrganizationAdmins = (organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getOrganizationSecurityAdmins({organizationId: organizationId})\r\n\t\t.done(response => defer.resolve(response))\r\n\t\t.fail(error => defer.reject(error))\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganizationPasswordPolicy = (policyId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getPasswordPolicy({policyId: policyId})\r\n\t\t.done(response => defer.resolve(response))\r\n\t\t.fail(error => defer.reject(error))\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganizationAuthenticationPolicy = (policyId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getAuthenticationPolicy({policyId: policyId})\r\n\t\t.done(response => defer.resolve(response))\r\n\t\t.fail(error => defer.reject(error))\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganization = (organizationId) => {\r\n\t\treturn API.cui.getOrganizationWithAttributes({organizationId:organizationId})\r\n\t}\r\n\r\n\tconst initOrganizationProfile = (organizationId, policyId, authPolicyId) => {\r\n\t\tconst defer = $q.defer()\r\n\t\tconst organizationProfile = {}\r\n\t\tconst callsToComplete = 3\r\n\t\tlet callsCompleted = 0\r\n\r\n\t\tgetOrganizationAdmins(organizationId)\r\n\t\t.then(response => organizationProfile['admins'] = response)\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\r\n\t\t})\r\n\r\n\t\tgetOrganizationPasswordPolicy(policyId)\r\n\t\t.then(response => organizationProfile['passwordPolicy'] = response)\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\r\n\t\t})\r\n\r\n\t\tgetOrganizationAuthenticationPolicy(authPolicyId)\r\n\t\t.then(response => organizationProfile['authenticationPolicy'] = response)\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetOrganizationAdmins: getOrganizationAdmins,\r\n\t\tgetOrganizationPasswordPolicy: getOrganizationPasswordPolicy,\r\n\t\tgetOrganizationAuthenticationPolicy:getOrganizationAuthenticationPolicy,\r\n\t\tgetOrganization:getOrganization,\r\n\t\tinitOrganizationProfile: initOrganizationProfile\r\n\t}\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('PersonRequest', (API, APIError, CommonAPI, $q) => {\r\n\t'use strict'\r\n\r\n\t/*\r\n\t\tUse this service as a helper when dealing with person requests.\r\n\r\n\t\tAllows you to get a person's registration request or a wrapper call that also gets you the person's and their\r\n\t\torganization's data.\r\n\t*/\r\n\r\n\tconst personRequestFactory = {}\r\n\tconst errorName = 'PersonRequestFactory.'\r\n\r\n\t/****************************************\r\n\t\t\t\tService Functions\r\n\t****************************************/\r\n\r\n\t// Returns the registration request associated with the userId\r\n\tpersonRequestFactory.getPersonRegistrationRequest = (userId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getPersonRegistrationRequest({qs: [['registrant.id', userId]]})\r\n\t\t.done(registrationResponse => {\r\n\t\t\tdefer.resolve(registrationResponse[0])\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting user\\'s registration request')\r\n\t\t\tAPIError.onFor(errorName + 'getRegistrationRequest')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\t/*\r\n\t\tWrapper call for: \tPersonRequest.getPersonRegistrationRequest()\r\n\t\t\t\t\t\t\tCommonAPI.getPerson()\r\n\t\t\t\t\t\t\tCommonAPI.getOrganization()\r\n\t*/\r\n\tpersonRequestFactory.getPersonRegistrationRequestData = (userId, organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\t\tlet callsCompleted = 0\r\n\t\tlet requestData = {}\r\n\r\n\t\tpersonRequestFactory.getPersonRegistrationRequest(userId)\r\n\t\t.then(registrationRequest => {\r\n\t\t\trequestData.request = registrationRequest\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\r\n\t\t})\r\n\r\n\t\tCommonAPI.getPerson(userId)\r\n\t\t.then(personData => {\r\n\t\t\trequestData.person = personData\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\t\r\n\t\t})\r\n\r\n\t\tCommonAPI.getOrganization(organizationId)\r\n\t\t.then(organizationData => {\r\n\t\t\trequestData.organization = organizationData\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\r\n\t\t})\r\n\t\t\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\t// Provided a decision ('approved' or 'denied') and the person request object\r\n\t// Handles the approval/denial of the person request\r\n\tpersonRequestFactory.handleRequestApproval = (decision, request) => {\r\n\t\tlet data = [['requestId', request.id]]\r\n\r\n\t\tif (decision === 'approved') {\r\n\t\t\tAPI.cui.approvePersonRegistration({qs: data})\r\n\t\t}\r\n\t\telse if (decision === 'denied') {\r\n\t\t\tif (request.rejectReason) {\r\n\t\t\t\tdata.push(['reason', request.rejectReason])\r\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error('Requires a decision of \"approved\" or \"denied\" and the request object.')\r\n\t\t}\r\n\t}\r\n\r\n\treturn personRequestFactory\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('Registration', (API, APIError, Base, $q) => {\r\n\r\n    const self = {}\r\n    const pub = {}\r\n\r\n    // Helper functions to build out the person and request objects needed for registration\r\n    const build = {\r\n        person: function(registrationData) {\r\n            const personData = Object.assign({}, registrationData.profile)\r\n\r\n            personData.addresses[0].country = registrationData.userCountry.originalObject.code\r\n            personData.organization = { id: registrationData.organization.id }\r\n            personData.language=registrationData.profile.language.id\r\n            personData.timezone=registrationData.profile.timezone.id\r\n\r\n            if (personData.phones[0]) {\r\n                personData.phones[0].type = 'main'\r\n            }\r\n\r\n            return personData\r\n        },\r\n        passwordAccount: function(registrationData) {\r\n            return {\r\n                version: '1',\r\n                username: registrationData.login.username,\r\n                password: registrationData.login.password,\r\n                passwordPolicy: registrationData.organization.passwordPolicy,\r\n                authenticationPolicy: registrationData.organization.authenticationPolicy\r\n            }\r\n        },\r\n        securityQuestionAccount: function(registrationData) {\r\n            return {\r\n                version: '1',\r\n                questions: [{\r\n                    question: {\r\n                        id: registrationData.login.question1.id,\r\n                        type: 'question',\r\n                        realm: registrationData.organization.realm\r\n                    },\r\n                    answer: registrationData.login.challengeAnswer1,\r\n                    index: 1\r\n                },\r\n                {\r\n                    question: {\r\n                        id: registrationData.login.question2.id,\r\n                        type: 'question',\r\n                        realm: registrationData.organization.realm\r\n                    },\r\n                    answer: registrationData.login.challengeAnswer2,\r\n                    index: 2\r\n                }]\r\n            }\r\n        }, \r\n        walkupSubmit: function(registrationData) {\r\n            const _registrationData = Object.assign({}, registrationData)\r\n\r\n            return {\r\n                person: this.person(_registrationData),\r\n                passwordAccount: this.passwordAccount(_registrationData),\r\n                securityQuestionAccount: this.securityQuestionAccount(_registrationData)\r\n            }\r\n        },\r\n        InvitedSubmit: function(registrationData,inviteId) {\r\n            const _registrationData = Object.assign({}, registrationData)\r\n\r\n            return {\r\n                person: this.person(_registrationData),\r\n                passwordAccount: this.passwordAccount(_registrationData),\r\n                securityQuestionAccount: this.securityQuestionAccount(_registrationData),\r\n                inviteId:inviteId\r\n            }\r\n        },\r\n        servicePackageRequest: function(personId, personRealm, packageData,requestReason) {\r\n            let request = {\r\n                registrant: {\r\n                    id: personId,\r\n                    type: 'person',\r\n                    realm: personRealm\r\n                },\r\n                justification: requestReason||'User Walkup Registration'\r\n            }\r\n\r\n            if (packageData && packageData.selected) {\r\n                request.packages = []\r\n                angular.forEach(packageData.selected, function(servicePackage) {\r\n                    // userWalkup.applications.selected is an array of strings that looks like\r\n                    // ['<appId>,<packageId>,<appName>']\r\n                    request.packages.push({\r\n                        id: servicePackage.split(',')[1],\r\n                        type: 'servicePackage'\r\n                    })\r\n                })\r\n                request.packages=_.uniqBy(request.packages,'id')    \r\n            }\r\n\r\n            return request\r\n        }\r\n    }\r\n\r\n    /**\r\n     * this method makes sure to make the call but before it calls cui.initiateNonce\r\n     * @param method method name\r\n     * @param args method arguments\r\n     * @returns {*} promise\r\n     */\r\n    self.makeNonceCall = ( method, ...args )=>{\r\n        const deferred = $.Deferred()\r\n        const tag = \"registration/self/makeNonceCall\"\r\n\r\n        API.cui.initiateNonce()\r\n        .then(res=>{\r\n\r\n            API.cui[method].apply( API.cui, args )\r\n            .then(result=>{\r\n                deferred.resolve(result)\r\n            })\r\n            .fail((error)=>{\r\n                deferred.reject(error)\r\n            })\r\n\r\n        })\r\n        .fail((error)=>{\r\n            console.error( tag, error )\r\n            deferred.reject(error)\r\n        })\r\n\r\n        return deferred.promise()\r\n    }\r\n\r\n    /**\r\n     * TODO: once the promise gets an error message, we are going to resolve as false. This is temporary.\r\n     * Makes an api call to know if the registrating user's username or email address\r\n     * appear already been taken.\r\n     * @param stringParams a param array having either or both userName and emalAddress.\r\n     * @returns {{promise, valid: (function(*=)), catch: (function(*))}}\r\n     */\r\n    self.isUsernameOrEmailTaken = stringParams => {\r\n        const tag = \"registration/self/isUsernameOrEmailTaken\";\r\n\r\n        return {\r\n            promise:(() => {\r\n                const defered = $q.defer()\r\n\r\n                if( stringParams ){\r\n\r\n                    self.makeNonceCall( \"validateUsernameEmailNonce\", {qs:stringParams} ).then( res => {\r\n                        defered.resolve( true )\r\n                    }).fail( error => {\r\n                        defered.resolve( false )\r\n                        console.error( tag + \".error\", error )\r\n                    })\r\n                }else{\r\n                    defered.resolve( true )\r\n                }\r\n\r\n                return defered.promise\r\n            })(),\r\n            valid: res => {\r\n                return res\r\n            },\r\n            catch: error => {\r\n                // do something with the error here\r\n                console.error( tag + \".catch\", \"there is an error, :) \")\r\n            }\r\n        }\r\n    }\r\n\r\n    pub.getOrganizations=()=>{\r\n        return self.makeNonceCall( \"getOrganizationsNonce\" )\r\n    }\r\n\r\n    pub.getSecurityQuestions=()=>{\r\n        return self.makeNonceCall( \"getSecurityQuestionsNonce\" )\r\n    }\r\n\r\n    // Returns organizations and security questions for the realm.\r\n    // Both must resolve for the walkup registration to work.\r\n    pub.initWalkupRegistration = (pageSize) => {    \r\n        const defer = $q.defer()\r\n        const data = {}\r\n        \r\n        APIError.offFor('RegistrationFactory.initWalkup')\r\n\r\n        API.cui.initiateNonce()\r\n        .then(() => {\r\n            //  2-13-2017 filter resuts by status is not available for count now.\r\n            return API.cui.getOrganizationsCountNonce()\r\n        })\r\n        .then((res) => {\r\n            data.organizationCount=res\r\n            return API.cui.getOrganizationsNonce({qs:[['page',1],['pageSize',pageSize],['status','active']]})\r\n        })\r\n        .then(res => {\r\n            data.organizations = res\r\n            return API.cui.getSecurityQuestionsNonce()\r\n        })\r\n        .then(res => {\r\n            data.securityQuestions = res\r\n            defer.resolve(data)\r\n        })\r\n        .fail(error => {\r\n            APIError.onFor('RegistrationFactory.initWalkup')\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n    // validates invite and Returns Target organization\r\n    //Must resolve for the Invited registration to work.\r\n    pub.initInvitedRegistration= (encodedString) =>{\r\n        const defer = $q.defer()\r\n        const data = {}\r\n        \r\n        APIError.offFor('RegistrationFactory.initInvited')\r\n\r\n        API.cui.securedInitiate({invitationId:encodedString})\r\n        .then((res) => {\r\n            data.invitationData=res;\r\n            return API.cui.getOrganizationNonce({organizationId:res.targetOrganization.id})\r\n        })\r\n        .then(res => {\r\n            data.organization = res\r\n            return API.cui.getSecurityQuestionsNonce()\r\n        })\r\n        .then(res => {\r\n            data.securityQuestions = res\r\n            defer.resolve(data)\r\n        })\r\n        .fail(error => {\r\n            APIError.onFor('RegistrationFactory.initInvited')\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    pub.walkupSubmit = (registrationData) => {\r\n        const defer = $q.defer()\r\n        const submitData = build.walkupSubmit(registrationData)\r\n\r\n        API.cui.initiateNonce()\r\n        .then(() => {\r\n            return API.cui.postUserRegistrationNonce({data: submitData})\r\n        })\r\n        .then(res => {\r\n            const packageRequestData = build.servicePackageRequest(res.person.id, res.person.realm, registrationData.applications,registrationData.requestReason)\r\n            return API.cui.postPersonRequestNonce({data: packageRequestData})\r\n        })\r\n        .then(res => {\r\n            defer.resolve(res)\r\n        })\r\n        .fail(error => {\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    pub.invitedSubmit = (registrationData,encodedString,invitationId) => {\r\n        const defer = $q.defer()\r\n        const submitData = build.InvitedSubmit(registrationData,invitationId)\r\n\r\n        API.cui.securedInitiate({invitationId:encodedString})\r\n        .then(() => {\r\n            return API.cui.postUserRegistrationNonce({qs:[['inviteId',invitationId]],data: submitData})\r\n        })\r\n        .then(res => {\r\n            const packageRequestData = build.servicePackageRequest(res.person.id, res.person.realm, registrationData.applications,registrationData.requestReason)\r\n            return API.cui.postPersonRequestNonce({data: packageRequestData})\r\n        })\r\n        .then(res => {\r\n            defer.resolve(res)\r\n        })\r\n        .fail(error => {\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    pub.getOrgAppsByPage = (page, pageSize, organizationId) => {\r\n        return API.cui.getOrgAppsNonce({organizationId: organizationId, qs:[['page',page],['pageSize',pageSize]]})\r\n    }\r\n\r\n    pub.getOrgsByPageAndName = (page,pageSize,name) => {\r\n        if (name!==undefined) {\r\n            return self.makeNonceCall(\"getOrganizationsNonce\",{qs:[['page',page],['pageSize',pageSize],['status','active'],['name',name]]})\r\n        }\r\n        else{\r\n            return self.makeNonceCall(\"getOrganizationsNonce\",{qs:[['page',page],['pageSize',pageSize],['status','active']]})\r\n        }\r\n        \r\n    }\r\n\r\n    pub.selectOrganization = (organization,pageSize)=>{\r\n        const deferred = $.Deferred()\r\n        const results = {\r\n            grants: []\r\n        }\r\n\r\n        API.cui.initiateNonce()\r\n        .then(res => {\r\n            return API.cui.getOrgAppsCountNonce({organizationId: organization.id})\r\n        })\r\n        .then(res => {\r\n            results.appCount=res\r\n            return pub.getOrgAppsByPage(1,pageSize,organization.id)\r\n        })\r\n        .then(res => {\r\n            res.forEach(grant => {\r\n                if (grant.servicePackage.requestable) results.grants.push(grant)\r\n            })\r\n            return API.cui.getPasswordPoliciesNonce({policyId: organization.passwordPolicy.id})\r\n        })\r\n        .then(res => {\r\n            results.passwordRules = res.rules\r\n            deferred.resolve(results)\r\n        })\r\n        .fail( error=>{\r\n            deferred.reject(error)\r\n        })\r\n\r\n        return deferred.promise()\r\n    }\r\n\r\n    pub.getTac = (packageId) => {\r\n        const deferred = $q.defer()\r\n        self.makeNonceCall(\"getOrgTacOfPackage\",{packageId:packageId})\r\n        .then(res =>{\r\n            deferred.resolve(res);\r\n        })\r\n        .fail(err =>{\r\n            console.log(\"Error in fetching TaC for application \"+packageId)\r\n            console.log(err);\r\n            deferred.reject(err);\r\n        })\r\n        return deferred.promise;\r\n    }\r\n\r\n    pub.isUsernameTaken = name => {\r\n        return self.isUsernameOrEmailTaken( [['userName',name]] );\r\n    }\r\n\r\n    pub.isEmailTaken = email => {\r\n        return self.isUsernameOrEmailTaken( [['emailAddress',email]] );\r\n    }\r\n\r\n    return pub\r\n\r\n})\r\n\r\nangular.module('common')\r\n.service('SharedService', function () {\r\n    /*****\r\n        this service serves as an instantiable class\r\n        that can be extended to provide information throughout the app\r\n        using the base controller\r\n\r\n        How to use:\r\n        angular.module('myModule')\r\n        .factory/service/provider('MyProvider', function(SharedService){\r\n            const MyProvider = Object.create(SharedService)\r\n        })\r\n\r\n        MyProvider now has an object that serves as a data holder for switchable loaders, error messages etc.\r\n\r\n        methods\r\n        .onFor(property:String, <message>:String)\r\n            enables that property in the details object, setting the message associated with that property\r\n            if you use onFor for multiple properties without using \"offFor\" to disable them\r\n            there's a count that gets incremented, and that property will only be disabled once offFor\r\n            is called on that property n times, where n is the amount of times it was enabled\r\n\r\n        .offFor(property:String)\r\n\r\n        .toggleFor(property:String, <message>:String)\r\n\r\n        .for\r\n            this holds a reference to the storage object, so that you can associate it with your base ctrl\r\n    *****/\r\n\r\n    this.details = {}\r\n\r\n    this.onFor = function (property, message) {\r\n        if (this.details[property]) {\r\n            this.details[property].count\r\n                ? this.details[property].count += 1\r\n                : this.details[property].count = 2 // count is only defined if there's more than 1\r\n            if (message) {\r\n                this.details[property].message = message;\r\n            }\r\n        } else {\r\n            this.details[property] = {\r\n                status: true,\r\n                message\r\n            }\r\n        }\r\n    }\r\n\r\n    this.offFor = function (property) {\r\n        if (!this.details[property]) {\r\n            return;\r\n        } else if (!this.details[property].count || this.details[property].count===1) {\r\n            delete this.details[property];\r\n        } else {\r\n            this.details[property].count -= 1;\r\n        }\r\n    }\r\n\r\n    this.toggleFor = function (property,message) {\r\n        if (this.details[property]) {\r\n            delete this.details[property];\r\n        } else {\r\n            this.details[property] = {\r\n                status:true,\r\n                message\r\n            }\r\n        }\r\n    }\r\n\r\n    this.clearAll = function() {\r\n        for (const key in this.details) delete this.details[key]\r\n    }\r\n\r\n    this.for = this.details\r\n\r\n    return this\r\n})\r\nangular.module('common')\r\n.factory('Sort',['$filter',function($filter) {\r\n    return {\r\n        listSort: function(listToSort, sortType, order) {\r\n            listToSort.sort(function(a, b) {\r\n                if (sortType === 'alphabetically') { \r\n                    if (a.name[0]) {\r\n                        a = $filter('cuiI18n')(a.name).toUpperCase(),\r\n                        b = $filter('cuiI18n')(b.name).toUpperCase();    \r\n                    }\r\n                    else {\r\n                        a = a.name.given.toUpperCase(),\r\n                        b = b.name.given.toUpperCase();\r\n                    }\r\n                }\r\n                else if (sortType=== 'date') { \r\n                    if (a.dateCreated) {\r\n                        a = a.dateCreated, b = b.dateCreated;\r\n                    }\r\n                    else {\r\n                        a = a.creation, b = b.creation;\r\n                    }\r\n                }\r\n                else { \r\n                    a = a.status, b = b.status; \r\n                }\r\n\r\n                if ( a < b ) {\r\n                    if (order) {\r\n                        return 1;\r\n                    } else {\r\n                        return -1;\r\n                    }\r\n                }\r\n                else if (a > b) {\r\n                    if (order) {\r\n                        return -1;\r\n                    } else {\r\n                        return 1;\r\n                    }\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n        }\r\n    };\r\n}]);\r\n\r\nangular.module('common')\r\n.factory('Theme', () => {\r\n\r\n\t/*\r\n\t*\tUtilize this factory when you need to set styles on the top-level element based on the current router state.\r\n\t*\t\r\n\t*\tFull documentation on how to utilize and or customize the application with this factory can be found in:\r\n\t*\t`./docs/features/factories/Theme.md`\r\n\t*/\r\n\r\n\tlet activeTheme\r\n\tlet defaultTheme\r\n\r\n\tconst getTheme = () => {\r\n\t\treturn activeTheme\r\n\t}\r\n\r\n\tconst setTheme = (cssClass) => {\r\n\t\tactiveTheme = cssClass\r\n\t}\r\n\r\n\tconst getDefaultTheme = () => {\r\n\t\treturn defaultTheme\r\n\t}\r\n\r\n\tconst setDefaultTheme = (cssClass) => {\r\n\t\tdefaultTheme = cssClass\r\n\t}\r\n\r\n\tconst clearActiveTheme = () => {\r\n\t\tactiveTheme = ''\r\n\t}\r\n\r\n\tconst useDefaultTheme = () => {\r\n\t\tactiveTheme = defaultTheme\r\n\t}\r\n\r\n\tconst setActiveDefaultTheme = (cssClass) => {\r\n\t\tdefaultTheme = cssClass\r\n\t\tactiveTheme = cssClass\r\n\t}\r\n\r\n    return {\r\n    \tget: getTheme,\r\n    \tset: setTheme,\r\n    \tgetDefault: getDefaultTheme,\r\n    \tsetDefault: setDefaultTheme,\r\n    \tuseDefault: useDefaultTheme,\r\n    \tsetActiveDefault: setActiveDefaultTheme,\r\n    \tclear: clearActiveTheme\r\n    }\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('Timezones', function($http, $rootScope, $translate) {\r\n\r\n    let timezones = []\r\n\r\n    const GetTimezones = (locale) => {\r\n        return $http.get(appConfig.languageResources.url + 'timezones/' + locale + '.json')\r\n    }\r\n\r\n    const setTimezones = (language) => {\r\n        language = language || 'en'\r\n\r\n        if (language.indexOf('_') > -1) {\r\n            language = language.split('_')[0]\r\n        }\r\n\r\n        GetTimezones(language)\r\n        .then(res => {\r\n            timezones.length = 0\r\n\r\n            res.data.forEach(timezone => {\r\n                timezones.push(timezone)\r\n            })\r\n        })\r\n        .catch(function(err) {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getTimezoneById = (id) => {\r\n        if (!id) {\r\n            return ''\r\n        }\r\n\r\n        return _.find(timezones, function(timezone) {\r\n            return timezone.id === id\r\n        }).name\r\n    }\r\n\r\n    $rootScope.$on('languageChange', function(e, args) {\r\n        setTimezones(args)\r\n    })\r\n\r\n    setTimezones($translate.proposedLanguage())\r\n\r\n    return {\r\n        all: timezones,\r\n        timezoneById: getTimezoneById\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('User', ($rootScope) => {\r\n\r\n    /*\r\n        This factory is intended to store data/logic pertaining to the logged in user only.\r\n        This data is populated right after logon (this can be found in the API.factory.js \r\n        inside the populateUserInfo method). The application will not run if those endpoints\r\n        fail.\r\n    */\r\n\r\n    let user = {\r\n        entitlements: undefined,\r\n        roles: undefined\r\n    }\r\n\r\n    return {\r\n        set : (newUser) => {\r\n            angular.merge(user, newUser);\r\n        },\r\n\r\n        get : () => user.cuid || '[cuid]',\r\n\r\n        setEntitlements : (newEntitlements) => {\r\n            user.entitlements ? user.entitlements = user.entitlements.concat(newEntitlements) : user.entitlements = newEntitlements\r\n        },\r\n\r\n        getEntitlements : () => user.entitlements,\r\n\r\n        setRoles : (newRoles) => {\r\n            user.roles ? user.roles = user.roles.concat(newRoles) : user.roles = newRoles\r\n        },\r\n\r\n        getRoles : () => user.roles,\r\n\r\n        user\r\n    }\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('UserHistory', function(API, APIError, LocaleService, $q, $timeout) {\r\n\r\n    const errorName = 'userHistoryFactory.'\r\n\r\n    const UserHistory = {\r\n        getTodaysDate:function(){\r\n            let today=new Date()\r\n            let dd=today.getDate()\r\n            let yyyy=today.getFullYear()\r\n            let mmm=today.toString().substring(4,7);\r\n            return dd+'-'+mmm+'-'+yyyy\r\n        },\r\n\r\n        initStatusHistory: function(userId) {\r\n            let defer = $q.defer()\r\n\r\n            API.cui.getPersonDetailedStatusHistory({qs : [\r\n                ['userId', userId], \r\n                ['startDate','01-Jan-2016'],\r\n                ['lastDate',UserHistory.getTodaysDate()]\r\n            ]})\r\n            .done(res => {               \r\n                defer.resolve(res)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting user status information', err)\r\n                APIError.onFor(errorName + 'initStatusHistory')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initStatusHistory')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initPasswordChangeHistory: function(userId) {\r\n            let defer = $q.defer()\r\n            API.cui.getPasswordCangeHistory({personId:userId})\r\n            .then(res => {                \r\n                defer.resolve(res)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting Password change history', err)\r\n                APIError.onFor(errorName + 'initPasswordChangeHistory')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initPasswordChangeHistory')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initUserHistory: function(userId, organizationId) {\r\n            let defer = $q.defer()\r\n            let history = {}\r\n            let callsCompleted = 0\r\n            const callsToComplete = 2\r\n\r\n            UserHistory.initStatusHistory(userId)\r\n            .then(res => {\r\n                history.statusHistory=res;\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(history)\r\n            })\r\n\r\n            UserHistory.initPasswordChangeHistory(userId)\r\n            .then(res => {\r\n                history.passwordChangeHistory=res;\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(history)\r\n            })\r\n\r\n            return defer.promise\r\n        },\r\n\r\n        injectUI: function(history, $scope, personId) {\r\n            history.fail = false\r\n            history.success = false\r\n        }\r\n    }\r\n\r\n    return UserHistory\r\n})\r\n\r\nangular.module('common')\r\n.factory('UserList', (API, APIError, APIHelpers, $q) => {\r\n\r\n\tconst errorName = 'UserListFactory.'\r\n\r\n\tconst getUsers = (opts) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getUsers')\r\n\r\n\t\tAPI.cui.getPersons(opts)\r\n\t\t.done(personResponse => {\r\n\t\t\tdefer.resolve(personResponse)\r\n\t\t})\r\n\t\t.fail(error => {\r\n\t\t\tconsole.error('Failed getting user list')\r\n\t\t\tAPIError.onFor(errorName + 'getUsers')\r\n\t\t\tdefer.reject(error)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getUserCount = (opts) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getUserCount')\r\n\r\n\t\tAPI.cui.countPersons(opts)\r\n\t\t.done(countResponse => {\r\n\t\t\tdefer.resolve(countResponse)\r\n\t\t})\r\n\t\t.fail(error => {\r\n\t\t\tconsole.error('Failed getting user count')\r\n\t\t\tAPIError.onFor(errorName + 'getUserCount')\r\n\t\t\tdefer.reject(error)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetUsers: getUsers,\r\n\t\tgetUserCount: getUserCount\r\n\t}\r\n\r\n})\r\n\r\nangular.module('common')\n.factory('UserProfileV2', function(API, APIError, LocaleService, Timezones, $filter, $q, $timeout, $window) {\n\n    const errorName = 'userProfileFactory.'\n    const facebook = 'facebook'\n    const google = 'google'\n    const twitter = 'twitter'\n\n    const UserProfile = {\n        \n        setSocialAccount:function(type,index){\n            var socialAccount={};\n            socialAccount.socialName=type;\n            socialAccount.linked=\"\";\n            return socialAccount;\n        },\n\n        initUser: function(userId) {\n            let defer = $q.defer()\n            let user = {}\n\n            API.cui.getPerson({ personId: userId })\n            .done(res => {\n                // If the person object has no addresses we need to initialize it\n                if (!res.addresses) res.addresses = [{streets: []}]\n                user.user = Object.assign({}, res)\n                user.tempUser = Object.assign({}, res)\n                defer.resolve(user)\n            })\n            .fail(err => {\n                console.error('Failed getting user information', err)\n                APIError.onFor(errorName + 'initUser')\n                $timeout(() => {\n                    APIError.offFor(errorName + 'initUser')\n                }, 5000)\n                defer.reject(err)\n            })\n            return defer.promise\n        },\n\n        initSecurityQuestions: function(userId) {\n            let defer = $q.defer()\n            let securityQuestions = {\n                userSecurityQuestions: {},\n                tempUserSecurityQuestions: {},\n                allSecurityQuestions: [],\n                allSecurityQuestionsDup: []\n            }\n\n            $q.all([\n                API.cui.getSecurityQuestionAccount({ personId: userId }), \n                API.cui.getSecurityQuestions()\n            ])\n            .then(res => {\n                angular.copy(res[0], securityQuestions.userSecurityQuestions)\n                angular.copy(res[0], securityQuestions.tempUserSecurityQuestions)\n                angular.copy(res[1], securityQuestions.allSecurityQuestions) \n                angular.copy(res[1], securityQuestions.allSecurityQuestionsDup)\n\n                securityQuestions.allSecurityQuestions.splice(0, 1)\n\n                let numberOfQuestions = securityQuestions.allSecurityQuestions.length\n                let numberOfQuestionsFloor = Math.floor(numberOfQuestions/2)\n\n                securityQuestions.allChallengeQuestions0 = securityQuestions.allSecurityQuestions.slice(0, numberOfQuestionsFloor)\n                securityQuestions.allChallengeQuestions1 = securityQuestions.allSecurityQuestions.slice(numberOfQuestionsFloor)\n\n                securityQuestions.challengeQuestionsTexts = UserProfile.selectTextsForQuestions(securityQuestions)\n\n                defer.resolve(securityQuestions)\n            })\n            .catch(err => {\n                console.error('Failed getting security question data', err)\n                APIError.onFor(errorName + 'initSecurityQuestions')\n                $timeout(() => {\n                    APIError.offFor(errorName + 'initSecurityQuestions')\n                }, 5000)\n                defer.reject(err)\n            })\n            return defer.promise\n        },\n\n        selectTextsForQuestions: function(securityQuestions) {\n            let challengeQuestionsTexts = []\n\n            angular.forEach(securityQuestions.userSecurityQuestions.questions, (userQuestion) => {\n                let question = _.find(securityQuestions.allSecurityQuestionsDup, (question) => {\n                    return question.id === userQuestion.question.id\n                })\n                challengeQuestionsTexts.push($filter('cuiI18n')(question.question))\n            })\n            return challengeQuestionsTexts\n        },\n        \n        initSocialLogin: function(userId) {\n            let defer = $q.defer()\n            let user = {}\n            let socialLoginAccounts = [];\n\n\n            API.cui.getSocialLoginAccounts({ personId: userId })\n            .done(res => {\n                \n                //console.log(\"socialLoginAccounts:::\"+res.length);\n                res.forEach(function(respons){\n                        console.log(respons);\n                        socialLoginAccounts.push(respons); \n                    });\n                console.log(\"socialLoginAccounts:::444\"+socialLoginAccounts);\n                socialLoginAccounts.forEach(function(respons1){\n                        console.log(respons1);\n                    });\n                user.socialLoginAccounts=socialLoginAccounts;\n\n                defer.resolve(user)\n            })\n            .fail(err => {\n                console.error('Failed getting user SocialLoginAccounts information', err)\n                APIError.onFor(errorName + 'initSocialLogin')\n                $timeout(() => {\n                    APIError.offFor(errorName + 'initSocialLogin')\n                }, 5000)\n                defer.reject(err)\n            })\n            return defer.promise\n        },\n\n        initMFA: function(userId) {\n            let defer = $q.defer()\n            let user = {}\n            let mfaConfg={}\n            API.cui.getPersonAttributes({personId: userId})\n            .done(function(res){\n                UserProfile.userAttributesTemplate=angular.copy(res);\n                UserProfile.userAttributesTemplate.attributes.forEach(function(attribute){\n                console.log(\"In initMFA attributes\" + JSON.stringify(attribute))\n                if (attribute.value!=\"null\") {\n                console.log(\"mfa: attribute.value::\"+attribute.value);\n\n                    switch(attribute.name){\n                        case 'TWO_FACTOR_AUTH_TYPE':mfaConfg=attribute.value;\n                        break;\n                    }// end if for switch\n                }// end if for attribute.value\n                })                \n                console.log(\"mfa: user.mfaConfg::\"+mfaConfg);\n                user.mfaConfg=mfaConfg;\n\n                defer.resolve(user)\n            })\n            .fail(err => {\n                console.error('Failed getting user initMFA information', err)\n                APIError.onFor(errorName + 'initMFA')\n                $timeout(() => {\n                    APIError.offFor(errorName + 'initMFA')\n                }, 5000)\n                defer.reject(err)\n            })\n            return defer.promise\n        },// initMFA \n\n        initPasswordPolicy: function(organizationId) {\n            let defer = $q.defer()\n            let passwordPolicy = {}\n\n            API.cui.getOrganization({ organizationId: organizationId })\n            .then(res => {\n                passwordPolicy.organization = res\n                return API.cui.getPasswordPolicy({policyId: res.passwordPolicy.id})\n            })\n            .then(res => {\n                passwordPolicy.passwordRules = res.rules\n                defer.resolve(passwordPolicy)\n            })\n            .fail(err => {\n                console.error('Failed getting password policy data', err)\n                APIError.onFor(errorName + 'initPasswordPolicy')\n                $timeout(() => {\n                    APIError.offFor(errorName + 'initPasswordPolicy')\n                }, 5000)\n                defer.reject(err)\n            })\n            return defer.promise\n        },\n\n        initUserProfile: function(userId, organizationId) {\n            let defer = $q.defer()\n            let profile = {}\n            let callsCompleted = 0\n\n            console.log(\"user id \"+userId+\", org id \"+organizationId);\n\n            UserProfile.initUser(userId)\n            .then(res => {\n                angular.merge(profile, res)\n                console.log(\" initUser callsCompleted : \"+callsCompleted)\n            })\n            .finally(() => {\n                callsCompleted++\n                if (callsCompleted === 4) defer.resolve(profile)\n            })\n\n            UserProfile.initSecurityQuestions(userId)\n            .then(res => {\n                angular.merge(profile, res)\n                console.log(\" initSecurityQuestions callsCompleted : \"+callsCompleted)\n            })\n            .finally(() => {\n                callsCompleted++\n                if (callsCompleted === 4) defer.resolve(profile)\n            })\n\n            UserProfile.initPasswordPolicy(organizationId)\n            .then(res => {\n                angular.merge(profile, res)\n                console.log(\" initPasswordPolicy callsCompleted : \"+callsCompleted)\n            })\n            .finally(() => {\n                callsCompleted++\n                if (callsCompleted === 4) defer.resolve(profile)\n            })\n\n            //Added for integration for Social login and MFA\n            UserProfile.initSocialLogin(userId)\n            .then(res => {\n                angular.merge(profile, res)\n                console.log(\" initSocialLogin : \"+callsCompleted)\n                //alert(JSON.stringify(profile));\n                //console.log(\"----\")\n                //console.log(JSON.stringify(profile))\n            })\n            .finally(() => {\n                callsCompleted += 1\n                if (callsCompleted === 4) defer.resolve(profile)\n            })\n        \n            UserProfile.initMFA(userId)\n            .then(res => {\n                angular.merge(profile, res)\n                //profile['mfaConfg'] = res\n                //angular.merge(profile, res)\n                //alert(JSON.stringify(profile));\n                //console.log(\"----\")\n                // profile.user.confg='push'\n                console.log(\" initMFA callsCompleted : \"+callsCompleted)\n                console.log(\" initMFA in UserProfileV2 function after mfa merge \"+JSON.stringify(profile))\n            })\n            .finally(() => {\n                callsCompleted += 1\n                if (callsCompleted === 4) defer.resolve(profile)\n            })\n\n            return defer.promise\n        },\n\n        buildPersonPasswordAccount: function(user, passwordAccount, organization) {\n            return {\n                version: '1',\n                username: user.username,\n                currentPassword: passwordAccount.currentPassword,\n                password: passwordAccount.password,\n                passwordPolicy: organization.passwordPolicy,\n                authenticationPolicy: organization.authenticationPolicy\n            }\n        },\n\n        injectUI: function(profile, $scope, personId) {\n            let userId\n\n            personId\n                ? userId = personId\n                : userId = API.getUser()\n\n            profile.saving = false\n            profile.fail = false\n            profile.success = false\n            profile.timezoneById = Timezones.timezoneById\n            profile.toggleOffFunctions = {}\n\n            profile.resetAllData = () => {\n                angular.copy(profile.userSecurityQuestions, profile.tempUserSecurityQuestions)\n                angular.copy(profile.user, profile.tempUser)\n            }\n\n            profile.toggleAllOff = () => {\n                angular.forEach(profile.toggleOffFunctions, function(toggleOff) {\n                    toggleOff()\n                })\n                profile.resetAllData()\n            }\n\n            profile.pushToggleOff = (toggleOffObject) => {\n                if (!profile.toggleOffFunctions) profile.toggleOffFunctions = {}\n                profile.toggleOffFunctions[toggleOffObject.name] = toggleOffObject.function\n            }\n\n            profile.resetPasswordFields = () => {\n                profile.userPasswordAccount = {\n                    currentPassword: '',\n                    password: ''\n                }\n                profile.passwordRe = ''\n            }\n\n            profile.checkIfRepeatedSecurityAnswer = (securityQuestions, formObject) => {\n                securityQuestions.forEach((secQuestion, i) => {\n                    let securityAnswerRepeatedIndex = _.findIndex(securityQuestions, (secQuestionToCompareTo, z) => {\n                        return z !== i && secQuestion.answer && secQuestionToCompareTo.answer && secQuestion.answer.toUpperCase() === secQuestionToCompareTo.answer.toUpperCase()\n                    })\n                    if (securityAnswerRepeatedIndex > -1) {\n                        if (formObject['answer' + securityAnswerRepeatedIndex]) {\n                            formObject['answer' + securityAnswerRepeatedIndex].$setValidity('securityAnswerRepeated', false)\n                        }\n                        if (formObject['answer' + i]) {\n                            formObject['answer' + i].$setValidity('securityAnswerRepeated', false)\n                        }\n                    }\n                    else {\n                        if (formObject['answer' + i]) {\n                            formObject['answer' + i].$setValidity('securityAnswerRepeated', true)\n                        }\n                    }\n                })\n            }\n\n            profile.updatePerson = (section, toggleOff) => {\n                if (section) profile[section] = { submitting: true }\n\n                if (!profile.userCountry) profile.tempUser.addresses[0].country = profile.user.addresses[0].country\n                else profile.tempUser.addresses[0].country = profile.userCountry.originalObject.code\n\n                // [7/20/2016] Note: Can't pass in 'activatedDate' anymore when updating a person\n                delete profile.tempUser['activatedDate']\n\n                API.cui.updatePerson({personId: userId, data:profile.tempUser})\n                .always(() => {\n                    if (section) profile[section].submitting = false\n                    $scope.$digest()\n                })\n                .done(() => {\n                    angular.copy(profile.tempUser, profile.user)\n                    LocaleService.setLocaleByDisplayName(appConfig.languages[profile.user.language])\n                    if (toggleOff) toggleOff()\n                })\n                .fail((err) => {\n                    console.error('Failed to update user profile:', err)\n                    if (section) profile[section].error = true\n                })\n            }\n\n            profile.updatePassword = function(section, toggleOff) {\n                if (section) {\n                    profile[section] = { submitting: true }\n                }\n\n                API.cui.updatePersonPassword({ \n                    personId: userId, \n                    data: UserProfile.buildPersonPasswordAccount(profile.user, profile.userPasswordAccount, profile.organization) \n                })\n                .always(() => {\n                    if (section) {\n                        profile[section].submitting = false\n                    }\n                })\n                .done(() => {\n                    if (toggleOff) {\n                        toggleOff()\n                    }\n                    profile.passwordUpdateSuccess = true\n                    $timeout(() => {\n                        profile.passwordUpdateSuccess = false\n                    }, 5000)\n                    profile.resetPasswordFields()\n                    $scope.$digest()\n                })\n                .fail((err) => {\n                    console.error('Error updating password', err)\n                    if (section) {\n                        profile[section].error = true\n                    }\n                    $scope.$digest()\n                })\n            }\n\n            profile.saveChallengeQuestions = (section, toggleOff) => {\n                if (section) profile[section] = { submitting: true }\n                profile.userSecurityQuestions = angular.copy(profile.tempUserSecurityQuestions)\n\n                API.cui.updateSecurityQuestionAccount({\n                    personId: userId,\n                    data: {\n                        version: '1',\n                        id: userId,\n                        questions: profile.userSecurityQuestions.questions\n                    }\n                })\n                .always(() => {\n                    if (section) profile[section].submitting = false\n                })\n                .done(() => {\n                    if (toggleOff) toggleOff()\n                    profile.challengeQuestionsTexts = UserProfile.selectTextsForQuestions(profile)\n                    $scope.$digest()\n                })\n                .fail(err => {\n                    console.error('Error updating security questions', err)\n                    if (section) profile[section].error = true\n                    $scope.$digest()\n                })\n            }\n\n            profile.updatePersonMFAConfig = (section, toggleOff) => {\n                if (section) {\n                    profile[section] = { submitting: true }\n                    //console.log(\"In updatePersonMFAConfig\" + JSON.stringify(profile))\n                    console.log(\"In updatePersonMFAConfig 2\" + profile.mfa.confg);\n\n                        API.cui.getPersonAttributes({personId: userId})\n                        .then(function(res){\n                            UserProfile.userAttributesTemplate=angular.copy(res);\n                            console.log(\"In updatePersonMFAConfig attributes response: \" + JSON.stringify(UserProfile.userAttributesTemplate))\n\n                            UserProfile.userAttributesTemplate.attributes.forEach(function(attribute){\n                            console.log(\"In updatePersonMFAConfig attributes\" + JSON.stringify(attribute))\n                            if (attribute.value!=\"null\") {\n                                switch(attribute.name){\n                                    case 'TWO_FACTOR_AUTH_TYPE':attribute.value=profile.mfa.confg;\n                                    break;\n                                }// end if for switch\n                            }// end if for attribute.value\n                            })\n                            console.log(\"In updatePersonMFAConfig attributes response after: \" + JSON.stringify(UserProfile.userAttributesTemplate))\n                             API.cui.updatePersonAttributes({personId: API.getUser(), useCuid:true , data:UserProfile.userAttributesTemplate})\n                            .then(function(res){\n                                //angular.copy(userProfile.tempUserAttributes, userProfile.userAttributes);\n                                if (section) {\n                                    profile[section].submitting = false;\n                                }\n                                if (toggleOff) {\n                                    toggleOff();\n                                }\n                                $scope.$digest();\n                                console.log(\"In updatePersonMFAConfig attributes response of get attributes : \" + JSON.stringify(res));\n                            })\n                            .fail(function(err){\n                                console.log(err);\n                                if (section) {\n                                    profile[section].submitting = false;\n                                    profile[section].error = true;\n                                }\n                                $scope.$digest();\n                            })                \n\n                        })//end for getPersonAttributes.\n                                    \n                } // end if section\n            } // end for function  \n            \n            profile.unlinkSocialLogin = (section, name) => {\n                if (section) {\n                    profile[section] = { submitting: true }\n                    console.log(\"In unlink \"+name)\n                    API.cui.unlinkSocialLoginAccount({\n                        personId: userId,\n                        configId: name\n                    })\n                    .always(() => {\n                        if (section) {\n                            profile[section].submitting = false;\n                            UserProfile.initSocialLogin(userId)\n                            .then(res => {\n                                angular.merge(profile, res)\n                                //alert(JSON.stringify(profile));\n                                //console.log(\"----\")\n                                //console.log(JSON.stringify(profile))\n                            })\n                            .finally(() => {})                        \n                        }\n                    })\n                    .done(() => {\n//                        if (toggleOff) {\n//                            toggleOff();\n//                        }\n                        $scope.$digest()\n                    })\n                    .fail(err => {\n                        console.error('Error updating security questions', err)\n                        if (section) {\n                            profile[section].error = true;\n                        }\n                        $scope.$digest()\n                    })\n                }\n            }\n            \n            // Link a social profile, where name is the social name, like \"facebook\" or \"twitter\"\n            profile.updateSocialLogin = (section, name) => {\n                if (section) {\n                    profile[section] = { submitting: true }\n                    console.log(\"In SocialLoginAccounts00\")\n                    var socialLoingUrl=appConfig.serviceUrl;\n                    var sid=localStorage.getItem(\"cui.sii\");\n                    console.log(\"solutionInstanceId : \"+sid)\n//                    socialLoingUrl= socialLoingUrl+'/social-accounts/v1/social/authorize/facebook?solutionInstanceId='+sid+'&type=link';\n                    socialLoingUrl= socialLoingUrl+'/social-accounts/v1/social/authorize/'+name+'?solutionInstanceId='+sid+'&type=link';\n                    console.log(socialLoingUrl)\n                    $window.location.href=socialLoingUrl;\n                    //$window.location.href='https://q-joe-soln-acme.idm.qa.covapp.io/p/apiProxy/social-accounts/v1/social/authorize/facebook?solutionInstanceId=aabae226-3841-4dfe-b703-e769ce01275b&type=link'                    \n                    //$window.location.href='https://q-joe-soln-dev01.idm.qa.covapp.io/p/apiProxy/social-accounts/v1/social/authorize/facebook?solutionInstanceId=b41deeb0-4888-4c97-85cf-1bf64fc5230f&type=link'\n                    //$window.location.href='https://q-joe-soln-dev01.idm.qa.covapp.io/p/apiProxy/social-accounts/v1/social/authorize/facebook?solutioInstanceId=b41deeb0-4888-4c97-85cf-1bf64fc5230f';\n                    //$location.path('https://q-joe-soln-dev01.idm.qa.covapp.io/p/apiProxy/social-accounts/v1/social/authorize/facebook?solutioInstanceId=b41deeb0-4888-4c97-85cf-1bf64fc5230f')\n                }\n            }            \n\n//            profile.updatePersonMFAConfig = (section, toggleOff) => {\n//                if (section) {\n//                    profile[section] = { submitting: true }\n//                    //console.log(\"In updatePersonMFAConfig\" + JSON.stringify(profile))\n//                    console.log(\"In updatePersonMFAConfig 2\" + profile.mfa.confg);\n//\n//                    API.cui.getPersonAttributes({personId: userId})\n//                    .then(function(res){\n//                        UserProfile.userAttributesTemplate=angular.copy(res);\n//                        console.log(\"In updatePersonMFAConfig attributes response: \" + JSON.stringify(UserProfile.userAttributesTemplate))\n//\n//                        UserProfile.userAttributesTemplate.attributes.forEach(function(attribute){\n//                        console.log(\"In updatePersonMFAConfig attributes\" + JSON.stringify(attribute))\n//                        if (attribute.value!=\"null\") {\n//                            switch(attribute.name){\n//                                case 'TWO_FACTOR_AUTH_TYPE':attribute.value=profile.mfa.confg;\n//                                break;\n//                            }// end if for switch\n//                        }// end if for attribute.value\n//                        })\n//                        console.log(\"In updatePersonMFAConfig attributes response after: \" + JSON.stringify(UserProfile.userAttributesTemplate))\n//                         API.cui.updatePersonAttributes({personId: API.getUser(), useCuid:true , data:UserProfile.userAttributesTemplate})\n//                        .then(function(res){\n//                            //angular.copy(userProfile.tempUserAttributes, userProfile.userAttributes);\n//                            if (section) {\n//                                profile[section].submitting = false;\n//                            }\n//                            if (toggleOff) {\n//                                toggleOff();\n//                            }\n//                            $scope.$digest();\n//                        })\n//                        .fail(function(err){\n//                            console.log(err);\n//                            if (section) {\n//                                profile[section].submitting = false;\n//                                profile[section].error = true;\n//                            }\n//                            $scope.$digest();\n//                        })                \n//                    })//end for getPersonAttributes.\n//                } // end if section\n//            } // end for function     \n        }\n    }\n\n    return UserProfile\n})\n\r\nangular.module('common')\r\n.factory('UserProfile', function(API, APIError, LocaleService, Timezones, $filter, $q, $timeout) {\r\n\r\n    const errorName = 'userProfileFactory.'\r\n\r\n    const UserProfile = {\r\n\r\n        setPhone:function(type,index){\r\n            var phone={};\r\n            phone.type=type;\r\n            phone.number=\"\";\r\n            return phone;\r\n        },\r\n\r\n        getTodaysDate:function(){\r\n            let today=new Date()\r\n            let dd=today.getDate()\r\n            let yyyy=today.getFullYear()\r\n            let mmm=today.toString().substring(4,7);\r\n            return dd+'-'+mmm+'-'+yyyy\r\n        },\r\n\r\n        initUser: function(userId) {\r\n            let defer = $q.defer()\r\n            let user = {}\r\n\r\n            API.cui.getPerson({ personId: userId })\r\n            .done(res => {\r\n                // If the person object has no addresses we need to initialize it\r\n                if (!res.addresses) {\r\n                    res.addresses = [{streets: []}];\r\n                }\r\n                //If there is no streets in address we need to initialie it\r\n                else if (!res.addresses[0].streets) {\r\n                    res.addresses[0].streets=[];\r\n                };\r\n                user.user = Object.assign({}, res)\r\n                user.tempUser = Object.assign({}, res)\r\n                //When user doesnot have any phones(data issue)\r\n                    if (!user.tempUser.phones) {\r\n                        user.tempUser.phones=[];\r\n                        user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                        user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                        user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                    }else{\r\n                        //When user have fax/mobile but not mobile\r\n                        if (user.tempUser.phones[0] && user.tempUser.phones[0].type!==\"main\") {\r\n                            if (user.tempUser.phones[0].type===\"fax\") {\r\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[0]);\r\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                                user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                            }else if (user.tempUser.phones[0].type===\"mobile\" && user.tempUser.phones[1]) {\r\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[1]);\r\n                                user.tempUser.phones[1]=angular.copy(user.tempUser.phones[0]);\r\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                            }else\r\n                            {\r\n                                user.tempUser.phones[1]=angular.copy(user.tempUser.phones[0]);\r\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                                user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                            }\r\n                        }\r\n                        else if (user.tempUser.phones[1]) {\r\n                            if (user.tempUser.phones[1].type===\"fax\") {\r\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[1]);\r\n                                user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                            }else{\r\n                                if (!user.tempUser.phones[2]) {\r\n                                    user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                                };\r\n                            }\r\n                        }else{\r\n                            user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                            user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                        }\r\n                    }\r\n                    angular.copy(user.tempUser, user.user);\r\n                defer.resolve(user)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting user information', err)\r\n                APIError.onFor(errorName + 'initUser')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initUser')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initSecurityQuestions: function(userId) {\r\n            let defer = $q.defer()\r\n            let securityQuestions = {\r\n                userSecurityQuestions: {},\r\n                tempUserSecurityQuestions: {},\r\n                allSecurityQuestions: [],\r\n                allSecurityQuestionsDup: []\r\n            }\r\n\r\n            $q.all([\r\n                API.cui.getSecurityQuestionAccount({ personId: userId }), \r\n                API.cui.getSecurityQuestions()\r\n            ])\r\n            .then(res => {\r\n                angular.copy(res[0], securityQuestions.userSecurityQuestions)\r\n                angular.copy(res[0], securityQuestions.tempUserSecurityQuestions)\r\n                angular.copy(res[1], securityQuestions.allSecurityQuestions) \r\n                angular.copy(res[1], securityQuestions.allSecurityQuestionsDup)\r\n\r\n                securityQuestions.allSecurityQuestions.splice(0, 1)\r\n\r\n                let numberOfQuestions = securityQuestions.allSecurityQuestions.length\r\n                let numberOfQuestionsFloor = Math.floor(numberOfQuestions/2)\r\n\r\n                securityQuestions.allChallengeQuestions0 = securityQuestions.allSecurityQuestions.slice(0, numberOfQuestionsFloor)\r\n                securityQuestions.allChallengeQuestions1 = securityQuestions.allSecurityQuestions.slice(numberOfQuestionsFloor)\r\n\r\n                securityQuestions.challengeQuestionsTexts = UserProfile.selectTextsForQuestions(securityQuestions)\r\n\r\n                defer.resolve(securityQuestions)\r\n            })\r\n            .catch(err => {\r\n                console.error('Failed getting security question data', err)\r\n                APIError.onFor(errorName + 'initSecurityQuestions')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initSecurityQuestions')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        selectTextsForQuestions: function(securityQuestions) {\r\n            let challengeQuestionsTexts = []\r\n\r\n            angular.forEach(securityQuestions.userSecurityQuestions.questions, (userQuestion) => {\r\n                let question = _.find(securityQuestions.allSecurityQuestionsDup, (question) => {\r\n                    return question.id === userQuestion.question.id\r\n                })\r\n                challengeQuestionsTexts.push($filter('cuiI18n')(question.question))\r\n            })\r\n            return challengeQuestionsTexts\r\n        },\r\n\r\n        initPasswordPolicy: function(organizationId) {\r\n            let defer = $q.defer()\r\n            let passwordPolicy = {}\r\n\r\n            API.cui.getOrganization({ organizationId: organizationId })\r\n            .then(res => {\r\n                passwordPolicy.organization = res\r\n                return API.cui.getPasswordPolicy({policyId: res.passwordPolicy.id})\r\n            })\r\n            .then(res => {\r\n                passwordPolicy.passwordRules = res.rules\r\n                res.rules.forEach(rule => {\r\n                    if (rule.type === 'history') {\r\n                        passwordPolicy.numberOfPasswords = rule.numberOfPasswords\r\n                    }\r\n                })\r\n                defer.resolve(passwordPolicy)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting password policy data', err)\r\n                APIError.onFor(errorName + 'initPasswordPolicy')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initPasswordPolicy')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initRegisteredDate: function(userId) {\r\n            const defer = $q.defer()\r\n            let lastDate=UserProfile.getTodaysDate();\r\n\r\n            API.cui.getPersonDetailedStatusHistory({qs : [\r\n                ['userId', userId], \r\n                ['startDate','01-Jan-2016'],\r\n                ['lastDate',lastDate]\r\n            ]})\r\n            .then(res => {\r\n                let activeStatusList=[];\r\n                res.forEach((status, index) => {\r\n                    if (status.status === 'ACTIVE') {\r\n                        activeStatusList.push(status)\r\n                    }\r\n                    if (res.length-1===index) {\r\n                        _.orderBy(activeStatusList, ['creation'], ['asc'])\r\n                        defer.resolve(activeStatusList[0].creation) \r\n                    }          \r\n                    \r\n                })\r\n            })\r\n            .fail(error => {\r\n                console.error('initRegisteredDate: There was an issue retrieving the registered date.')\r\n                APIError.onFor(errorName + 'initRegisteredDate')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initRegisteredDate')\r\n                }, 5000)\r\n                defer.reject(error)\r\n            })\r\n\r\n            return defer.promise\r\n        },\r\n\r\n        initUserProfile: function(userId, organizationId) {\r\n            let defer = $q.defer()\r\n            let profile = {}\r\n            let callsCompleted = 0\r\n            const callsToComplete = 4\r\n\r\n            UserProfile.initUser(userId)\r\n            .then(res => {\r\n                angular.merge(profile, res)\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            UserProfile.initSecurityQuestions(userId)\r\n            .then(res => {\r\n                angular.merge(profile, res)\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            UserProfile.initPasswordPolicy(organizationId)\r\n            .then(res => {\r\n                angular.merge(profile, res)\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            UserProfile.initRegisteredDate(userId)\r\n            .then(res => {\r\n                profile['registeredDate'] = res\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            return defer.promise\r\n        },\r\n\r\n        buildPersonPasswordAccount: function(user, passwordAccount, organization) {\r\n            return {\r\n                version: '1',\r\n                username: user.username,\r\n                currentPassword: passwordAccount.currentPassword,\r\n                password: passwordAccount.password,\r\n                passwordPolicy: organization.passwordPolicy,\r\n                authenticationPolicy: organization.authenticationPolicy\r\n            }\r\n        },\r\n\r\n        injectUI: function(profile, $scope, personId) {\r\n            let userId\r\n\r\n            personId\r\n                ? userId = personId\r\n                : userId = API.getUser()\r\n\r\n            profile.saving = false\r\n            profile.fail = false\r\n            profile.success = false\r\n            profile.timezoneById = Timezones.timezoneById\r\n            profile.toggleOffFunctions = {}\r\n\r\n            profile.resetAllData = () => {\r\n                angular.copy(profile.userSecurityQuestions, profile.tempUserSecurityQuestions)\r\n                angular.copy(profile.user, profile.tempUser)\r\n            }\r\n\r\n            profile.toggleAllOff = () => {\r\n                angular.forEach(profile.toggleOffFunctions, function(toggleOff) {\r\n                    toggleOff()\r\n                })\r\n                profile.resetAllData()\r\n            }\r\n\r\n            profile.pushToggleOff = (toggleOffObject) => {\r\n                if (!profile.toggleOffFunctions) {\r\n                    profile.toggleOffFunctions = {}\r\n                }\r\n                profile.toggleOffFunctions[toggleOffObject.name] = toggleOffObject.function\r\n            }\r\n\r\n            profile.resetPasswordFields = () => {\r\n                profile.userPasswordAccount = {\r\n                    currentPassword: '',\r\n                    password: ''\r\n                }\r\n                profile.passwordRe = ''\r\n            }\r\n\r\n            profile.checkIfRepeatedSecurityAnswer = (securityQuestions, formObject) => {\r\n                securityQuestions.forEach((secQuestion, i) => {\r\n                    let securityAnswerRepeatedIndex = _.findIndex(securityQuestions, (secQuestionToCompareTo, z) => {\r\n                        return z !== i && secQuestion.answer && secQuestionToCompareTo.answer && secQuestion.answer.toUpperCase() === secQuestionToCompareTo.answer.toUpperCase()\r\n                    })\r\n                    if (securityAnswerRepeatedIndex > -1) {\r\n                        if (formObject['answer' + securityAnswerRepeatedIndex]) {\r\n                            formObject['answer' + securityAnswerRepeatedIndex].$setValidity('securityAnswerRepeated', false)\r\n                        }\r\n                        if (formObject['answer' + i]) {\r\n                            formObject['answer' + i].$setValidity('securityAnswerRepeated', false)\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (formObject['answer' + i]) {\r\n                            formObject['answer' + i].$setValidity('securityAnswerRepeated', true)\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n            profile.updatePerson = (section, toggleOff) => {\r\n                let tempUserWithoutLastLogin;\r\n                if (section) {\r\n                    profile[section] = { submitting: true }\r\n                }\r\n\r\n                if (!profile.userCountry) {\r\n                    profile.tempUser.addresses[0].country = profile.user.addresses[0].country;\r\n                } else {\r\n                    profile.tempUser.addresses[0].country = profile.userCountry.originalObject.code;\r\n                }\r\n\r\n                // [7/20/2016] Note: Can't pass in 'activatedDate' anymore when updating a person\r\n                delete profile.tempUser.activatedDate\r\n                // Can't pass lastLoginDate\r\n                tempUserWithoutLastLogin= Object.assign({}, profile.tempUser)\r\n                if (tempUserWithoutLastLogin.lastLoginDate) {\r\n                    delete tempUserWithoutLastLogin.lastLoginDate\r\n                };\r\n\r\n                API.cui.updatePerson({personId: userId, data:tempUserWithoutLastLogin})\r\n                .always(() => {\r\n                    if (section) {\r\n                        profile[section].submitting = false;\r\n                    }\r\n                    $scope.$digest()\r\n                })\r\n                .done(() => {\r\n                    angular.copy(profile.tempUser, profile.user)\r\n                    LocaleService.setLocaleByDisplayName(appConfig.languages[profile.user.language])\r\n                    if (toggleOff) {\r\n                        toggleOff();\r\n                    }\r\n                })\r\n                .fail((err) => {\r\n                    console.error('Failed to update user profile:', err)\r\n                    if (section) {\r\n                        profile[section].error = true;\r\n                    }\r\n                })\r\n            }\r\n\r\n            profile.updatePassword = function(section, toggleOff) {\r\n                if (section) profile[section] = { submitting: true }\r\n                profile.lifetimeError=false\r\n\r\n                API.cui.updatePersonPassword({ \r\n                    personId: userId, \r\n                    data: UserProfile.buildPersonPasswordAccount(profile.user, profile.userPasswordAccount, profile.organization) \r\n                })\r\n                .always(() => {\r\n                    if (section) profile[section].submitting = false\r\n                })\r\n                .done(() => {\r\n                    if (toggleOff) toggleOff()\r\n                    profile.passwordUpdateSuccess = true\r\n                    $timeout(() => profile.passwordUpdateSuccess = false, 5000)\r\n                    profile.resetPasswordFields()\r\n                    $scope.$digest()\r\n                })\r\n                .fail(err => {\r\n                    console.error('Error updating password', err)\r\n                    if (err.responseJSON.apiMessage.indexOf('does not conform to policy')>1) {\r\n                        profile.lifetimeError=true\r\n                    }\r\n                    if (section) profile[section].error = true\r\n                    $scope.$digest()\r\n                })\r\n            }\r\n\r\n            profile.saveChallengeQuestions = (section, toggleOff) => {\r\n                if (section) {\r\n                    profile[section] = { submitting: true }\r\n                }\r\n                profile.userSecurityQuestions = angular.copy(profile.tempUserSecurityQuestions)\r\n\r\n                API.cui.updateSecurityQuestionAccount({\r\n                    personId: userId,\r\n                    data: {\r\n                        version: '1',\r\n                        id: userId,\r\n                        questions: profile.userSecurityQuestions.questions\r\n                    }\r\n                })\r\n                .always(() => {\r\n                    if (section) {\r\n                        profile[section].submitting = false;\r\n                    }\r\n                })\r\n                .done(() => {\r\n                    if (toggleOff) {\r\n                        toggleOff();\r\n                    }\r\n                    profile.challengeQuestionsTexts = UserProfile.selectTextsForQuestions(profile)\r\n                    $scope.$digest()\r\n                })\r\n                .fail(err => {\r\n                    console.error('Error updating security questions', err)\r\n                    if (section) {\r\n                        profile[section].error = true;\r\n                    }\r\n                    $scope.$digest()\r\n                })\r\n            }\r\n\r\n            profile.validatePassword = (password, formObject, input) => {\r\n\r\n                const validSwitch = (input, isValidBoolean, type) => {\r\n                    switch (input) {\r\n                        case 'newPassword':\r\n                            if (type==='history') \r\n                                profile.validNewPasswordHistory = isValidBoolean\r\n                            else\r\n                                profile.validNewPasswordDisallowed = isValidBoolean\r\n                        case 'newPasswordRe':\r\n                            if (type==='history') \r\n                                profile.validNewPasswordReHistory = isValidBoolean\r\n                            else\r\n                                profile.validNewPasswordReDisallowed = isValidBoolean\r\n                    }\r\n                }\r\n\r\n                const validateData = {\r\n                    userId: userId,\r\n                    organizationId: profile.user.organization.id,\r\n                    password: password,\r\n                    operations: ['PASSWORD_SPECIFY']\r\n                }\r\n\r\n                API.cui.validatePassword({data: validateData})\r\n                .then(res => {\r\n                    let validPasswordHistory = false\r\n                    let validateDisallowed =false\r\n                    // Sometimes disallowed words will not come in response, In that case need to set form object to true\r\n                    let disallowedFlag=false\r\n                    res.forEach(rule => {\r\n                        if (rule.type === 'HISTORY' && rule.isPassed) {\r\n                            validPasswordHistory = true\r\n                        }\r\n                        if (rule.type === 'DISALLOWED_WORDS'){\r\n                            disallowedFlag =true\r\n                            if(rule.isPassed) {\r\n                                validateDisallowed = true\r\n                            }\r\n                        }\r\n                    })\r\n                    //History Validation\r\n                    if (validPasswordHistory) {\r\n                        validSwitch(input, true, 'history')\r\n                    }\r\n                    else {\r\n                        validSwitch(input, false, 'history')\r\n                    }\r\n                    //Disallowed words Validation\r\n                    if (disallowedFlag===false||validateDisallowed===true) {\r\n                        validSwitch(input, true, 'disallowed')                        \r\n                    }\r\n                    else {\r\n                        validSwitch(input, false, 'disallowed')                        \r\n                    }\r\n                    if (validPasswordHistory &&(disallowedFlag===false||validateDisallowed===true)) {\r\n                        formObject[input].$setValidity(input, true)\r\n                        $scope.$digest()\r\n                    }\r\n                    else{\r\n                        formObject[input].$setValidity(input, false)\r\n                        $scope.$digest()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return UserProfile\r\n})\r\n\r\nangular.module('common')\r\n.factory('BuildPackageRequests', (API) => {\r\n\r\n    /*\r\n        Helper factory for creating and sending service package requests.\r\n\r\n        Usage: BuildPackageRequests(requestorId, requestorType, arrayOfServices)\r\n        Return: Array of API service package request promises\r\n        \r\n        Notes:\r\n            - RequestorType: Whether the requestor is a person or organization (expects 'person' or 'organization')\r\n            - The reason for the request should be under service._reason\r\n            - If no reason is provided and the service package requires a reason, returns undefined and attach\r\n              an _error property (app._error = true) for that service.\r\n            - This factory is not pure (alters the provided array of services)\r\n    */\r\n\r\n    return (requestorId, requestorType, arrayOfApps) => {\r\n        const numberOfApps = arrayOfApps.length\r\n\r\n        if (!_.isArray(arrayOfApps) || numberOfApps === 0) {\r\n            throw new Error ('The argument passed to BuildPackageRequests should be an array of 1 or more services.')\r\n            return undefined\r\n        }\r\n\r\n        let error = false\r\n\r\n        for (let i = 0; i < numberOfApps; i += 1) {\r\n            if (arrayOfApps[i].servicePackage.requestReasonRequired && !arrayOfApps[i]._reason) {\r\n                arrayOfApps[i]._error = true\r\n                if (!error) {\r\n                    error = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (error) {\r\n            return undefined;\r\n        }\r\n\r\n        let packagesBeingRequested = []\r\n        let packageRequests = []\r\n\r\n        for (let i = 0; i < numberOfApps; i += 1) {\r\n            if (packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id) >= 0) {\r\n                // If the service package is already being requested, append service to the request reason\r\n                // If the request doesn't have a reason here, then it is not required for this service package\r\n                if (arrayOfApps[i]._reason) {\r\n                    packageRequests[packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id)].reason +=\r\n                        ('\\n' + $filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(arrayOfApps[i].name) + ': ' + arrayOfApps[i].name._reason)\r\n                }\r\n            }\r\n            else {\r\n                // Cache id's in seperate array to check for existing package requests without having to search through the array of requests.\r\n                packagesBeingRequested.push(arrayOfApps[i].servicePackage.id)\r\n                packageRequests.push({\r\n                    requestor: {\r\n                        id: requestorId,\r\n                        type: requestorType\r\n                    },\r\n                    servicePackage: {\r\n                        id: arrayOfApps[i].servicePackage.id,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    reason: arrayOfApps[i]._reason || ''\r\n                })\r\n            }\r\n        }\r\n        \r\n        return packageRequests.map(data => API.cui.createPackageRequest({ data }))\r\n\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('AppRequests',['$filter',($filter) => {\r\n    var appRequestsObject={},\r\n        appRequests={};\r\n\r\n    appRequests.set=(newAppRequestsObject) => {\r\n        appRequestsObject=newAppRequestsObject;\r\n    };\r\n\r\n    appRequests.get=() => {\r\n        return appRequestsObject;\r\n    };\r\n\r\n    appRequests.clear= () => {\r\n        appRequestsObject = {};\r\n    };\r\n\r\n    appRequests.buildReason=(app,reason) => {\r\n        let tempApp={};\r\n        angular.copy(app,tempApp);\r\n        tempApp.reason=$filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(tempApp.name) + ': ' + reason;\r\n        return tempApp;\r\n    };\r\n\r\n\r\n    appRequests.getPackageRequests=(userId,arrayOfAppsBeingRequested) => {\r\n        let arrayOfPackagesBeingRequested=[],\r\n            arrayOfPackageRequests=[];\r\n        arrayOfAppsBeingRequested.forEach((app,i) => {\r\n            if(arrayOfPackagesBeingRequested.indexOf(app.servicePackage.id)>-1){ // if we've parsed an app that belongs to the same pacakge\r\n                if(app.servicePackage.reasonRequired){\r\n                    arrayOfPackageRequests.some((packageRequest,i) => {\r\n                        return arrayOfPackageRequests[i].servicePackage.id === app.servicePackage.id? (arrayOfPackageRequests[i].reason=arrayOfPackageRequests[i].reason + ('\\n\\n' + app.reason),true) : false; // if we already build a package request for this pacakge then append the reason of why we need this other app\r\n                    });\r\n                }\r\n                // if the reason isn't required then we don't need to do anything, we're already requesting this package\r\n            }\r\n            else {\r\n                arrayOfPackageRequests[i]={\r\n                    'requestor':{\r\n                        id:userId,\r\n                        type:'person'\r\n                    },\r\n                    servicePackage:{\r\n                        id:app.servicePackage.id,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    reason: app.servicePackage.reasonRequired ? app.reason : undefined\r\n                };\r\n                arrayOfPackagesBeingRequested[i] = app.servicePackage.id; // save the pacakge id that we're requesting in a throwaway array, so it's easier to check if we're\r\n                                                                // already requesting this package\r\n            }\r\n        });\r\n        return arrayOfPackageRequests;\r\n    };\r\n\r\n    return appRequests;\r\n}]);\r\nangular.module('common')\r\n.factory('ServicePackage', (API, APIError, $q) => {\r\n    'use strict'\r\n\r\n    /*\r\n        This factory was originally used as a type of data storage for storing service package data. The use of this factory\r\n        for storing data is now deprecated in favor of an actual data storage solution in our \"DataStorage\" factory. \r\n        The data storage features of this factory will be removed in a future version.\r\n\r\n        The focus of this factory will transition to dealing with any other logic associated with service packages.\r\n    */\r\n\r\n    const servicePackage = {}\r\n    const errorName = 'ServicePackageFactory.'\r\n    let servicePackageStorage = {}\r\n\r\n    /****************************************\r\n                Helper Functions\r\n    ****************************************/\r\n\r\n    // Returns services that are associated with a package id\r\n    const getPackageServices = (packageId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPackageServices({packageId: packageId})\r\n        .done(packageServices => {\r\n            defer.resolve(packageServices)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package services')\r\n            APIError.onFor(errorName + 'getPackageServices')\r\n            defer.reject(err)\r\n        })\r\n        return defer.promise\r\n    }\r\n\r\n    // Returns claims that are associated with a package id\r\n    const getPackageClaims = (packageId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPackageClaims({qs: [['packageId', packageId]]})\r\n        .done(packageClaims => {\r\n            defer.resolve(packageClaims)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package claims')\r\n            APIError.onFor(errorName + 'getPackageClaims')\r\n            defer.reject(err)\r\n        })\r\n        return defer.promise\r\n    }\r\n\r\n    // Returns all data for a specified package id\r\n    const getPackageDetails = (packageId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPackage({packageId: packageId})\r\n        .done(packageData => {\r\n            defer.resolve(packageData)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package details')\r\n            APIError.onFor(errorName + 'getPackageDetails')\r\n            defer.reject(err)\r\n        })\r\n        return defer.promise\r\n    }\r\n\r\n    /****************************************\r\n                Service Functions\r\n    ****************************************/\r\n\r\n    // Deprecated\r\n    servicePackage.set = (userId, newServicePackageArray) => {\r\n        servicePackageStorage.userId = newServicePackageArray\r\n    }\r\n\r\n    // Deprecated\r\n    servicePackage.get = (userId) => {\r\n        return servicePackageStorage.userId\r\n    }\r\n\r\n    // Deprecated\r\n    servicePackage.clear = () => {\r\n        servicePackageStorage = {}\r\n    }\r\n\r\n    // Deprecated\r\n    servicePackage.checkStorage = (userId) => {\r\n        if (servicePackageStorage.userId) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // This call wraps the getPackageServices(), getPackageClaims(), and getPackageDetails() calls\r\n    // Returns all relevant data associated with the provided packageId including its services, claims, and details\r\n    servicePackage.getPackageDetails = (packageId) => {\r\n        const defer = $q.defer()\r\n        let packageDetails = {}\r\n        let callsCompleted = 0\r\n\r\n        getPackageDetails(packageId)\r\n        .then(packageData => {\r\n            packageDetails.details = packageData\r\n        })\r\n        .finally(() => {\r\n            callsCompleted += 1\r\n            if (callsCompleted === 3) {\r\n                defer.resolve(packageDetails);\r\n            }\r\n        })\r\n\r\n        getPackageServices(packageId)\r\n        .then(packageServices => {\r\n            packageDetails.services = packageServices\r\n        })\r\n        .finally(() => {\r\n            callsCompleted += 1\r\n            if (callsCompleted === 3) {\r\n                defer.resolve(packageDetails);\r\n            }\r\n        })\r\n\r\n        getPackageClaims(packageId)\r\n        .then(packageClaims => {\r\n            packageDetails.claims = packageClaims\r\n        })\r\n        .finally(() => {\r\n            callsCompleted += 1\r\n            if (callsCompleted === 3) {\r\n                defer.resolve(packageDetails);\r\n            }  \r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    // Returns all packages for the specified userId with a pending status\r\n    servicePackage.getPersonPendingPackages = (userId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPersonPendingServicePackages({qs: [\r\n            ['requestor.id', userId],\r\n            ['requestor.type', 'person']\r\n        ]})\r\n        .done(servicePackages => {\r\n            defer.resolve(servicePackages)\r\n        })\r\n        .fail(err => {\r\n            console.error('There was an error retrieving pending service packages')\r\n            APIError.onFor(errorName + 'getPendingPackages')\r\n            defer.reject(err)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    // This call wraps the service.getPersonPendingServicesPackages() and service.getPackageDetails() calls\r\n    // Returns all relevant data for a user's pending packages\r\n    servicePackage.getAllUserPendingPackageData = (userId) => {\r\n        const defer = $q.defer()\r\n        let pendingPackageData = []\r\n\r\n        servicePackage.getPersonPendingPackages(userId)\r\n        .then(pendingPackages => {\r\n            let packageDetailCalls = []\r\n\r\n            pendingPackages.forEach(pendingPackage => {\r\n                packageDetailCalls.push(\r\n                    servicePackage.getPackageDetails(pendingPackage.servicePackage.id)\r\n                    .then(packageDetails => {\r\n                        angular.merge(pendingPackage, packageDetails)\r\n                        pendingPackageData.push(pendingPackage)\r\n                    })\r\n                )\r\n            })\r\n\r\n            $q.all(packageDetailCalls)\r\n            .then(() => {\r\n                cui.log('packageDetailCalls then', userId, pendingPackageData);\r\n                defer.resolve(pendingPackageData)\r\n            })\r\n            .catch(err => {\r\n                cui.log('packageDetailCalls catch', err);\r\n                defer.reject(err)\r\n            })\r\n        })\r\n        .catch(err => {\r\n            defer.reject(err)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    // Handles the approval/denial of a package request\r\n    // The package request must have a property of \"approval\" with either \"approved\" or \"denied\"\r\n    // If the package is denied and the package request has an optional property of \"rejectReason\", appends the reason to the payload\r\n    servicePackage.handlePackageApproval = (packageRequest) => {\r\n        let data = [['requestId', packageRequest.id]]\r\n\r\n        if (packageRequest.approval === 'approved') {\r\n            return API.cui.approvePackage({qs: data})\r\n        }\r\n        else if (packageRequest.approval === 'denied') {\r\n            if (packageRequest.rejectReason) {\r\n                data.push(['justification', packageRequest.rejectReason]);\r\n            }\r\n            return API.cui.denyPackage({qs: data})\r\n        } else {\r\n            throw new Error('Package request object must contain \"approval\" of either \"approved\" or \"denied\"');\r\n        }\r\n    }\r\n\r\n    return servicePackage\r\n\r\n})\r\n\r\nangular.module('applications',[])\r\n.config(['$stateProvider', ($stateProvider) => {\r\n\r\n    const templateBase = 'app/modules/applications/';\r\n\r\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\r\n\r\n    const loginRequired = true;\r\n\r\n    $stateProvider\r\n        .state('applications', {\r\n            url: '/applications',\r\n            template: '<div ui-view class=\"cui-applications\"></div>',\r\n            access: loginRequired,\r\n            abstract: true\r\n        })\r\n        .state('applications.myApplications', {\r\n            url: '?page&pageSize&service.category',\r\n            templateUrl: templateBase + 'myApplications/myApplications.html',\r\n            controller: returnCtrlAs('myApplications'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.myApplicationDetails', {\r\n            url: '/details/:appId',\r\n            templateUrl: templateBase + 'myApplications/myApplications-details.html',\r\n            controller: returnCtrlAs('myApplicationDetails'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.newRequest', {\r\n            url: '/request',\r\n            templateUrl: templateBase + 'newRequestReview/newRequest.html',\r\n            controller: returnCtrlAs('newAppRequest'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.search', {\r\n            url: '/search?name&category&page&pageSize',\r\n            templateUrl: templateBase + 'search/applicationSearch.html',\r\n            controller: returnCtrlAs('applicationSearch'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.reviewRequest', {\r\n            url: '/review',\r\n            templateUrl: templateBase + 'newRequestReview/applicationReview.html',\r\n            controller: returnCtrlAs('applicationReview'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.manageApplications', {\r\n            url: '/manage?name&page&pageSize&service.category&sortBy&grant.status&service.name',\r\n            templateUrl: templateBase + 'myApplications/myApplications-manage.html',\r\n            controller: returnCtrlAs('manageApplications'),\r\n            access:loginRequired\r\n        })\r\n        // seperating out as it is a seperate icon on in menu\r\n        .state('pendingAppRequests', {\r\n            url: '/pendingAppRequests?page&pageSize&sortBy&name',\r\n            templateUrl: templateBase + 'pendingRequests/pendingRequests.html',\r\n            controller: returnCtrlAs('pendingAppRequests'),\r\n            access:loginRequired\r\n        })\r\n        /*Organization Applications*/\r\n        .state('applications.orgApplications', {\r\n            url: '/organization',\r\n            template: '<div ui-view></div>',\r\n            abstract: true,\r\n            access: loginRequired\r\n        })\r\n/*        .state('applications.orgApplications.applicationList', {\r\n            url: '?name&page&pageSize&service.category&sortBy&grant.status',\r\n            templateUrl: templateBase + 'orgApplications/applicationList/orgApplications-applicationList.html',\r\n            controller: returnCtrlAs('orgApplications'),\r\n            access: loginRequired\r\n        })\r\n        .state('applications.orgApplications.applicationDetails', {\r\n            url: '/application/:appId/details',\r\n            templateUrl: templateBase + 'orgApplications/applicationDetails/orgApplications-applicationDetails.html',\r\n            controller: returnCtrlAs('orgApplicationDetails'),\r\n            access: loginRequired\r\n        })*/\r\n        .state('applications.orgApplications.newGrant', {\r\n            url: '/application/:appId/new-grant',\r\n            templateUrl: templateBase + 'orgApplications/newGrant/orgApplications-newGrant.html',\r\n            controller: returnCtrlAs('orgAppNewGrant'),\r\n            access: loginRequired            \r\n        });\r\n/*        .state('applications.orgApplications.newRequest', {\r\n            url: '/request',\r\n            templateUrl: templateBase + 'orgApplications/appRequest/newRequest/appRequest-newRequest.html',\r\n            controller: returnCtrlAs('orgAppRequest'),\r\n            access: loginRequired\r\n        })\r\n        .state('applications.orgApplications.newRequestReview', {\r\n            url: '/request/review',\r\n            templateUrl: templateBase + 'orgApplications/appRequest/newRequestReview/appRequest-newRequestReview.html',\r\n            controller: returnCtrlAs('orgAppRequestReview'),\r\n            access: loginRequired\r\n        })\r\n        .state('applications.orgApplications.search', {\r\n            url: '/search?name&category&page&pageSize',\r\n            templateUrl: templateBase + 'orgApplications/search/orgApplications-search.html',\r\n            controller: returnCtrlAs('orgAppSearch'),\r\n            access: loginRequired\r\n        });*/\r\n}]);\r\n\r\nangular.module('applications')\r\n.controller('myApplicationDetailsCtrl', function(API, $scope, $stateParams, $state, $q, APIHelpers, Loader, APIError,DataStorage) {\r\n    let myApplicationDetails = this\r\n    myApplicationDetails.relatedApps=[]\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    const getClaims = (app) => {\r\n        const packageId = app.servicePackage.id\r\n\r\n        Loader.onFor(loaderName + 'claims')\r\n        API.cui.getPersonPackageClaims({ grantee:API.getUser(), useCuid:true, packageId })\r\n        .then(res => {\r\n            APIError.offFor(loaderName + 'claims')\r\n            myApplicationDetails.claims = res\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'claims')\r\n        })\r\n        .always(() => {\r\n            Loader.offFor(loaderName + 'claims')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    const getApp= (updating)=>{\r\n        if (!updating) {\r\n            Loader.onFor(loaderName + 'app')\r\n        }\r\n        API.cui.getPersonGrantedApps(opts)\r\n        .then(res => {\r\n            APIError.offFor(loaderName + 'app')\r\n            myApplicationDetails.app = Object.assign({}, res[0])\r\n            if (!updating) {\r\n            getClaims(myApplicationDetails.app)\r\n            getRelatedApps(myApplicationDetails.app)\r\n            }\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'app')\r\n        })\r\n        .done(() => {\r\n            Loader.offFor(loaderName + 'app')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n    const getRelatedApps=(app) => {\r\n        const packageId = app.servicePackage.id\r\n        let qs\r\n        if (app.servicePackage.parent) {\r\n            qs=[['servicePackage.id',app.servicePackage.parent.id]]\r\n        }else{\r\n            qs=[['servicePackage.parentPackage.id',app.servicePackage.id]]\r\n        }\r\n        Loader.onFor(loaderName + 'relatedApps')\r\n        let apiPromises=[\r\n        API.cui.getPersonRequestableApps({personId:API.getUser(),'qs':[['servicePackage.parentPackage.id',packageId]] }),\r\n        API.cui.getPersonGrantedApps({personId:API.getUser(),'qs':qs })\r\n        ]\r\n        $q.all(apiPromises)\r\n        .then(res=>{\r\n            APIError.offFor(loaderName + 'relatedApps')\r\n            myApplicationDetails.relatedApps=myApplicationDetails.relatedApps.concat(res[0])\r\n            myApplicationDetails.relatedApps=myApplicationDetails.relatedApps.concat(res[1])\r\n        })\r\n        .catch(err => {\r\n            APIError.onFor(loaderName + 'relatedApps')\r\n        })\r\n        .finally(()=>{\r\n            Loader.offFor(loaderName + 'relatedApps')\r\n        })\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    const loaderName = 'myApplicationDetails.'\r\n\r\n    const qs = {\r\n        'service.id': $stateParams.appId\r\n    }\r\n\r\n    const opts = {\r\n        personId: API.getUser(),\r\n        useCuid:true,\r\n        qs: APIHelpers.getQs(qs)\r\n    }\r\n    myApplicationDetails.app=DataStorage.getType('myAppDetail')\r\n    if (myApplicationDetails.app&& myApplicationDetails.app.id===$stateParams.appId) {        \r\n        getClaims(myApplicationDetails.app)\r\n        getRelatedApps(myApplicationDetails.app)\r\n        // Update application detail for any new changes during reload\r\n        // Commenting out as API is not giving full details for service.id query parameter get\r\n        //it is relying on previous page details which has full details\r\n        // getApp(true)\r\n    }\r\n    else{\r\n        getApp(false)\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\r\n\r\n    myApplicationDetails.goToDetails = (application) => {\r\n        $state.go('applications.myApplicationDetails', {\r\n            'packageId':application.packageId,\r\n            'appId':application.id\r\n        })\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('applications')\r\n.controller('manageApplicationsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\r\n    const manageApplications = this\r\n    const userId = User.user.id\r\n    const loaderName = 'manageApplications.'\r\n\r\n    let checkedLocalStorage = false\r\n\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            manageApplications.search[property] = undefined\r\n            return\r\n        }\r\n        manageApplications.search[property] = manageApplications.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    const getCountsOfStatus=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['grant.status',qsValue]]\r\n        }\r\n        API.cui.getPersonGrantedAppCount(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                manageApplications.popupCount=res;\r\n            }else if (qsValue===\"active\") {\r\n                manageApplications.activeCount=res;\r\n            }\r\n            else{\r\n                manageApplications.suspendedCount=res;\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n\r\n    const getCountsOfcategories=()=>{\r\n        manageApplications.categories.forEach((category,index)=>{\r\n            console.log($filter('cuiI18n')(category.name))\r\n            let opts = {\r\n                personId: API.getUser(),\r\n                useCuid:true\r\n            }\r\n            opts.qs=[['service.category',$filter('cuiI18n')(category.name)]]\r\n            API.cui.getPersonGrantedAppCount(opts)\r\n            .then(res=>{\r\n                category.count=res;\r\n                if (index===manageApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })\r\n            .fail(err=>{\r\n                console.log(err);\r\n                if (index===manageApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })            \r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n\r\n    const loadStoredData = () => {\r\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\r\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\r\n        const storedData = DataStorage.getType('manageApplicationsList')\r\n\r\n        if (storedData) {\r\n            Loader.onFor(loaderName + 'apps')\r\n            manageApplications.list = storedData.appList\r\n            manageApplications.count = storedData.appCount\r\n            manageApplications.categories = storedData.categories\r\n            Loader.offFor(loaderName + 'apps')\r\n        }\r\n\r\n        checkedLocalStorage = true\r\n        onLoad(false)\r\n    }\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName + 'reloadingApps')\r\n        }\r\n        else {\r\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\r\n            manageApplications.search = Object.assign({}, $stateParams)\r\n\r\n            Loader.onFor(loaderName + 'categories')\r\n            API.cui.getPersonAppCategories({personId:API.getUser()})\r\n            .then(res => {\r\n                APIError.offFor(loaderName + 'categories')\r\n                manageApplications.categories = res;\r\n                getCountsOfcategories()\r\n                APIError.offFor(loaderName + 'categories')\r\n            })\r\n            .fail(err => {\r\n                APIError.onFor(loaderName + 'categories')\r\n            })\r\n            .done(() => {\r\n                Loader.offFor(loaderName + 'categories')\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        manageApplications.search.pageSize = manageApplications.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        const opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true,\r\n            qs: APIHelpers.getQs(manageApplications.search)\r\n        }\r\n\r\n        const promises = [\r\n            API.cui.getPersonGrantedApps(opts), \r\n            API.cui.getPersonGrantedAppCount(opts)\r\n        ]\r\n\r\n        $q.all(promises)\r\n        .then(res => {\r\n            // manageApplications.list = Object.assign(res[0]).filter(x => x.hasOwnProperty('urls'))\r\n            manageApplications.count = res[1]\r\n            manageApplications.list=res[0];\r\n            // re-render pagination if available\r\n            manageApplications.reRenderPaginate && manageApplications.reRenderPaginate()\r\n\r\n            const storageData = {\r\n                appList: manageApplications.list, \r\n                appCount: manageApplications.count, \r\n                categories: manageApplications.categories\r\n            }\r\n            DataStorage.setType('manageApplicationsList', storageData)\r\n            APIError.offFor(loaderName + 'apps')\r\n        })\r\n        .catch(err => {\r\n            APIError.onFor(loaderName + 'apps')\r\n        })\r\n        .finally(() => {\r\n            if (previouslyLoaded) {\r\n                Loader.offFor(loaderName + 'reloadingApps')\r\n            } \r\n            else {\r\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\r\n            }\r\n        })\r\n        //Lazy loading of counts of applications based on status \r\n        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)\r\n\r\n\r\n    }\r\n\r\n    loadStoredData()\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    manageApplications.pageChange = (newpage) => {\r\n        manageApplications.updateSearch('page', newpage)\r\n    }\r\n\r\n    manageApplications.updateSearchByName = () => {\r\n        manageApplications.updateSearch('name',manageApplications.search['service.name'])\r\n    }\r\n    manageApplications.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name')\r\n                break\r\n            case 'date':\r\n                switchBetween('sortBy', '+grant.instant', '-grant.instant')\r\n                break\r\n            case 'status':\r\n                manageApplications.search.page = 1\r\n                manageApplications.search['grant.status'] = updateValue\r\n                break\r\n            case 'category':\r\n                manageApplications.search.page = 1\r\n                manageApplications.search['service.category'] = $filter('cuiI18n')(updateValue)\r\n                break\r\n            case 'name':\r\n                manageApplications.search.page = 1\r\n                break\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('applications.manageApplications', manageApplications.search, { notify:false })\r\n        onLoad(true)\r\n    }\r\n\r\n    manageApplications.goToDetails = (application) => {\r\n        const opts = {\r\n            appId: application.id\r\n        }\r\n        DataStorage.setType('myAppDetail',application)\r\n        $state.go('applications.myApplicationDetails', opts)\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END ---------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('applications')\r\n.controller('myApplicationsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\tconst myApplications = this\r\n    const userId = User.user.id\r\n    const loaderName = 'myApplications.'\r\n    let checkedLocalStorage = false\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n    const getCountsOfcategories=()=>{\r\n        myApplications.categories.forEach((category,index)=>{\r\n            console.log($filter('cuiI18n')(category.name))\r\n            let opts = {\r\n                personId: userId,\r\n                useCuid:true\r\n            }\r\n            opts.qs=[['service.category',$filter('cuiI18n')(category.name)]]\r\n            API.cui.getPersonGrantedAppCount(opts)\r\n            .then(res=>{\r\n                //Need to minus each category count with not displayble and other than active apps according to thier categories\r\n                category.count=res\r\n                -\r\n                (\r\n                    Object.assign(myApplications.list).filter(x => \r\n                        x.category&& $filter('cuiI18n')(x.category)===$filter('cuiI18n')(category.name)\r\n                    ).length\r\n                    -\r\n                    Object.assign(myApplications.viewList).filter(x => \r\n                            x.category&& $filter('cuiI18n')(x.category)===$filter('cuiI18n')(category.name)\r\n                    ).length\r\n                )                \r\n                if (index===myApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })\r\n            .fail(err=>{\r\n                console.log(err);\r\n                if (index===myApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })            \r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n    const loadStoredData = () => {\r\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\r\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\r\n        const storedData = DataStorage.getType('myApplicationsList')\r\n\r\n        if (storedData) {\r\n            Loader.onFor(loaderName + 'apps')\r\n            myApplications.list = storedData.appList\r\n            myApplications.viewList = Object.assign(myApplications.list).filter(x => x.servicePackage.displayable===true&&x.grant.status=='active')\r\n            myApplications.count = storedData.appCount\r\n            myApplications.categories = storedData.categories\r\n            Loader.offFor(loaderName + 'apps')\r\n        }\r\n\r\n        checkedLocalStorage = true\r\n        onLoad(false)\r\n    }\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName + 'reloadingApps')\r\n        }\r\n        else {\r\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\r\n            myApplications.search = Object.assign({}, $stateParams)\r\n\r\n            Loader.onFor(loaderName + 'categories')\r\n            API.cui.getPersonAppCategories({personId:API.getUser()})\r\n            .then(res => {\r\n                APIError.offFor(loaderName + 'categories')\r\n                myApplications.categories = res;\r\n                getCountsOfcategories()\r\n                APIError.offFor(loaderName + 'categories')\r\n            })\r\n            .fail(err => {\r\n            \tconsole.error('There was an error in fetcting user\\'s app category details ' +err)\r\n                APIError.onFor(loaderName + 'categories')\r\n            })\r\n            .done(() => {\r\n                Loader.offFor(loaderName + 'categories')\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        myApplications.search.pageSize = myApplications.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        const opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true,\r\n            qs: APIHelpers.getQs(myApplications.search)\r\n        }\r\n        opts.qs.push(['grant.status','active'])\r\n        const promises = [\r\n            API.cui.getPersonGrantedApps(opts), \r\n            API.cui.getPersonGrantedAppCount(opts)\r\n        ]\r\n\r\n        $q.all(promises)\r\n        .then(res => {\r\n            myApplications.viewList = Object.assign(res[0]).filter(x => x.servicePackage.displayable===true&&x.grant.status=='active')\r\n            if (!previouslyLoaded) {\r\n                myApplications.count = res[1]\r\n            }\r\n            myApplications.popupCount = myApplications.count-Object.assign(res[0]).filter(x => x.servicePackage.displayable!==true || x.grant.status!=='active').length\r\n            myApplications.list=res[0];\r\n            // re-render pagination if available\r\n            myApplications.reRenderPaginate && myApplications.reRenderPaginate()\r\n\r\n            const storageData = {\r\n                appList: myApplications.list, \r\n                appCount: myApplications.count, \r\n                categories: myApplications.categories\r\n            }\r\n            DataStorage.setType('myApplicationsList', storageData)\r\n            APIError.offFor(loaderName + 'apps')\r\n        })\r\n        .catch(err => {\r\n        \tconsole.error('There was an error in fetcting user\\'s granted applications ' +err)\r\n            APIError.onFor(loaderName + 'apps')\r\n        })\r\n        .finally(() => {\r\n            if (previouslyLoaded) {\r\n                Loader.offFor(loaderName + 'reloadingApps')\r\n            } \r\n            else {\r\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\r\n            }\r\n        })\r\n    }\r\n\r\n    loadStoredData()\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    myApplications.pageChange = (newpage) => {\r\n        myApplications.updateSearch('page', newpage)\r\n    }\r\n\r\n    myApplications.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'category':\r\n                myApplications.search.page = 1\r\n                myApplications.search['service.category'] = $filter('cuiI18n')(updateValue)\r\n                break\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('applications.myApplications', myApplications.search, { notify:false })\r\n        onLoad(true)\r\n    }\r\n})\r\n\r\nangular.module('applications')\r\n.controller('applicationReviewCtrl',['$scope','API','AppRequests','$timeout','$state','$q','localStorageService',function($scope,API,AppRequests,$timeout,$state,$q,localStorage) {\r\n\r\n    let applicationReview=this;\r\n\r\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) {\r\n        AppRequests.set(localStorage.get('appsBeingRequested'));\r\n    }\r\n\r\n    let appRequests=angular.copy(AppRequests.get());\r\n    angular.forEach(appRequests , (request) =>{\r\n        if (request.bundledApps) {\r\n            request.bundledApps.forEach(bundledApp => {\r\n                if (appRequests[bundledApp.id]) {\r\n                    delete appRequests[bundledApp.id]\r\n                }                    \r\n            })\r\n        }\r\n    })\r\n    const appsBeingRequested=Object.keys(appRequests)\r\n\r\n    if (appsBeingRequested.length===0) {\r\n        $state.go('applications.search');\r\n    }\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    applicationReview.appRequests=[];\r\n\r\n    for(let i=0; i < appsBeingRequested.length; i += 2){\r\n        const applicationGroup = [];\r\n        applicationGroup.push(appRequests[appsBeingRequested[i]]);\r\n        if (appRequests[appsBeingRequested[i+1]]) {\r\n            applicationGroup.push(appRequests[appsBeingRequested[i+1]]);\r\n        }\r\n        //get Terms And Conditions for requested packages\r\n        applicationGroup.forEach(app=>{\r\n            if (app.servicePackage.personTacEnabled) {\r\n                API.cui.getOrgTacOfPackage({packageId:app.servicePackage.id})\r\n                .then(res=>{\r\n                    app.tac=res;\r\n                })\r\n                .fail(err=>{\r\n                    console.log(\"There was an error fetching Tac\")\r\n                    console.log(err)\r\n                })\r\n            }\r\n        })\r\n        applicationReview.appRequests.push(applicationGroup);\r\n    }\r\n\r\n    applicationReview.numberOfRequests=0;\r\n    appsBeingRequested.forEach(() => {\r\n        applicationReview.numberOfRequests += 1;\r\n    });\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START ---------------------------------------------------------------------------------\r\n    let applicationRequestArray;\r\n\r\n    const requestsValid = () => {\r\n        applicationRequestArray=[];\r\n        applicationReview.attempting=true;\r\n        let error = false;\r\n        applicationReview.appRequests.forEach((appRequestGroup,i) => {\r\n\r\n            appRequestGroup.forEach((appRequest,x) => {\r\n                if (appRequest.servicePackage.reasonRequired) {\r\n                    if(!appRequest.reason || appRequest.reason===''){\r\n                        appRequest.reasonRequired=true;\r\n                        applicationReview.attempting=false;\r\n                        error=true;\r\n                    }\r\n                    else {\r\n                        appRequest.reasonRequired=false;\r\n                        applicationRequestArray[i+x] = AppRequests.buildReason(appRequest,appRequest.reason);\r\n                    }\r\n                } else {\r\n                    applicationRequestArray[i+x] = appRequest;\r\n                }\r\n            });\r\n        });\r\n        applicationReview.error = error;\r\n        if (error) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    applicationReview.submit = () => {\r\n        if (!requestsValid()) {\r\n            return;\r\n        }\r\n        const appRequests=AppRequests.getPackageRequests(API.getUser(),applicationRequestArray);\r\n\r\n        let requestsPromises=[];\r\n\r\n        appRequests.forEach((appRequest) => {\r\n            requestsPromises.push(API.cui.createPackageRequest({data:appRequest}))\r\n        });\r\n\r\n        $q.all(requestsPromises)\r\n        .then((res)=>{\r\n            applicationReview.attempting = false;\r\n            applicationReview.success = true;\r\n            AppRequests.clear(); // clears app requests if the request goes through\r\n            localStorage.set('appsBeingRequested',{});\r\n            $timeout(() => {\r\n                $state.go('applications.myApplications');\r\n            }, 3000);\r\n        })\r\n        .catch(() => {\r\n            applicationReview.attempting = false;\r\n            applicationReview.error = true;\r\n        });\r\n    };\r\n\r\n    applicationReview.updateSearch = (nameSearch) => {\r\n        applicationReview.search = nameSearch;\r\n    };\r\n\r\n    applicationReview.showTac= (application)=>{\r\n        if (application.tac) {\r\n            applicationReview.tacContent=application.tac.tacText\r\n            applicationReview.step=2\r\n        }\r\n    }\r\n    // ON CLICK END -----------------------------------------------------------------------------------\r\n\r\n}]);\r\nangular.module('applications')\r\n.controller('newAppRequestCtrl',['API','$scope','$state','AppRequests','localStorageService',\r\nfunction(API,$scope,$state,AppRequests,localStorage) {\r\n\r\n    let newAppRequest = this;\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    // HELPER FUNCTIONS END ---------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ----------------------------------------------------------------------------------------\r\n\r\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) {\r\n        AppRequests.set(localStorage.get('appsBeingRequested'));\r\n    }\r\n    const appsBeingRequested = AppRequests.get();\r\n\r\n    newAppRequest.appsBeingRequested = [];\r\n    newAppRequest.numberOfRequests = 0;\r\n\r\n    Object.keys(appsBeingRequested).forEach((appId) => {\r\n        // This sets the checkboxes back to marked when the user clicks back\r\n        newAppRequest.numberOfRequests += 1;\r\n        newAppRequest.appsBeingRequested.push(appsBeingRequested[appId]);\r\n    });\r\n\r\n    API.cui.getCategories()\r\n    .then((res)=>{\r\n        newAppRequest.categories = res;\r\n        newAppRequest.loadingDone = true;\r\n        $scope.$digest();\r\n    })\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -----------------------------------------------------------------------\r\n\r\n    newAppRequest.searchCallback = function(searchWord) {\r\n        $state.go('applications.search', {name: searchWord});\r\n    };\r\n\r\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------\r\n\r\n}]);\r\n\r\nangular.module('applications')\r\n.controller('orgApplicationsCtrl', ['$scope','API','Sort','$stateParams',\r\nfunction($scope,API,Sort,$stateParams) {\r\n    'use strict';\r\n\r\n    var orgApplications = this;\r\n    var organizationId = $stateParams.id;\r\n\r\n    orgApplications.loading = true;\r\n    orgApplications.sortFlag = false;\r\n    orgApplications.categoriesFlag = false;\r\n    orgApplications.statusFlag = false;\r\n    orgApplications.appList = [];\r\n    orgApplications.unparsedAppList = [];\r\n    orgApplications.categoryList = [];\r\n    orgApplications.statusList = ['active', 'suspended', 'pending'];\r\n    orgApplications.statusCount = [0,0,0,0];\r\n\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    var handleError = function handleError(err) {\r\n        orgApplications.loading = false;\r\n        $scope.$digest();\r\n        console.log('Error', err);\r\n    };\r\n\r\n    var getListOfCategories = function(services) {\r\n        // WORKAROUND CASE # 7\r\n        var categoryList = [];\r\n        var categoryCount = [orgApplications.unparsedAppList.length];\r\n\r\n        services.forEach(function(service) {\r\n            if (service.category) {\r\n                var serviceCategoryInCategoryList = _.some(categoryList, function(category, i) {\r\n                    if (angular.equals(category, service.category)) {\r\n                        categoryCount[i+1] ? categoryCount[i+1]++ : categoryCount[i+1] = 1;\r\n                        return true;\r\n                    }\r\n                    return false;\r\n                });\r\n\r\n                if (!serviceCategoryInCategoryList) {\r\n                    categoryList.push(service.category);\r\n                    categoryCount[categoryList.length] = 1;\r\n                }\r\n            }\r\n        });\r\n        orgApplications.categoryCount = categoryCount;\r\n        return categoryList;\r\n    };\r\n\r\n    var getApplicationsFromGrants = function(grants) {\r\n        // WORKAROUND CASE #1\r\n        // Get services from each grant\r\n        var i = 0;\r\n        grants.forEach(function(grant) {\r\n            API.cui.getPackageServices({ 'packageId': grant.servicePackage.id })\r\n            .then(function(res) {\r\n                i++;\r\n                res.forEach(function(service) {\r\n                    // Set some of the grant attributes to its associated service\r\n                    service.status = grant.status;\r\n                    service.dateCreated = grant.creation;\r\n                    service.parentPackage = grant.servicePackage.id;\r\n                    orgApplications.appList.push(service);\r\n                });\r\n\r\n                if (i === grants.length) {\r\n                    orgApplications.appList = _.uniq(orgApplications.appList, function(app) {\r\n                        return app.id;\r\n                    });\r\n                    angular.copy(orgApplications.appList, orgApplications.unparsedAppList);\r\n                    orgApplications.statusCount[0] = orgApplications.appList.length;\r\n                    orgApplications.categoryList = getListOfCategories(orgApplications.appList);\r\n                    orgApplications.loading = false;\r\n                    $scope.$digest();\r\n                }\r\n            })\r\n            .fail(handleError);\r\n        });\r\n    };\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n\r\n    if (organizationId) {\r\n        // Load organization applications of id parameter\r\n        API.cui.getOrganizationPackages({ organizationId: organizationId })\r\n        .then(function(res) {\r\n            getApplicationsFromGrants(res);\r\n        })\r\n        .fail(handleError);\r\n    }\r\n    else {\r\n        // Load logged in user's organization applications\r\n        API.cui.getPerson({ personId: API.getUser(), useCuid:true })\r\n        .then(function(res) {\r\n            return API.cui.getOrganizationPackages({ organizationId: res.organization.id });\r\n        })\r\n        .then(function(res) {\r\n            getApplicationsFromGrants(res);\r\n        })\r\n        .fail(handleError);\r\n    }\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n    // ON CLICK FUNCTIONS END ---------------------------------------------------------------------------------\r\n\r\n}]);\r\n\r\nangular.module('applications')\r\n.controller('pendingAppRequestsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\r\n\tconst pendingAppRequests = this\r\n    const loaderName = 'pendingAppRequests.'\r\n\r\n    let checkedLocalStorage = false\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            pendingAppRequests.search[property] = undefined\r\n            return\r\n        }\r\n        pendingAppRequests.search[property] = pendingAppRequests.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    // HELPER FUNCTIONS END ---------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n    \r\n    const loadStoredData = () => {\r\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\r\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\r\n        const storedData = DataStorage.getType('pendingAppRequestsList')\r\n\r\n        if (storedData) {\r\n            Loader.onFor(loaderName + 'apps')\r\n            pendingAppRequests.list = storedData.appList\r\n            // Pagination not supported now \r\n            // pendingAppRequests.count = storedData.appCount\r\n            Loader.offFor(loaderName + 'apps')\r\n        }\r\n\r\n        checkedLocalStorage = true\r\n        onLoad(false)\r\n    }\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName + 'reloadingApps')\r\n        }\r\n        else {\r\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\r\n            pendingAppRequests.search = Object.assign({}, $stateParams)\r\n        }\r\n        // Pagination not supported now \r\n        // pendingAppRequests.search.pageSize = pendingAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        const opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true,\r\n            qs: APIHelpers.getQs(pendingAppRequests.search)\r\n        }\r\n\r\n        const promises = [\r\n            API.cui.getPersonPendingApps(opts) \r\n            // Pagination not supported now \r\n            // API.cui.getPersonGrantedAppCount(opts)\r\n        ]\r\n\r\n        $q.all(promises)\r\n        .then(res => {\r\n        \t// Pagination not supported now \r\n            // pendingAppRequests.count = res[1]\r\n            pendingAppRequests.list=res[0];\r\n            // re-render pagination if available\r\n            // Pagination not supported now\r\n            // pendingAppRequests.reRenderPaginate && pendingAppRequests.reRenderPaginate()\r\n\r\n            const storageData = {\r\n                appList: pendingAppRequests.list\r\n                // appCount: pendingAppRequests.count, \r\n            }\r\n            DataStorage.setType('pendingAppRequestsList', storageData)\r\n            APIError.offFor(loaderName + 'apps')\r\n        })\r\n        .catch(err => {\r\n        \tconsole.error('There was an error in fetcting user\\'s pending applications ' +err)\r\n            APIError.onFor(loaderName + 'apps')\r\n        })\r\n        .finally(() => {\r\n            if (previouslyLoaded) {\r\n                Loader.offFor(loaderName + 'reloadingApps')\r\n            } \r\n            else {\r\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\r\n            }\r\n        })\r\n    }\r\n\r\n    loadStoredData()\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    pendingAppRequests.pageChange = (newpage) => {\r\n        pendingAppRequests.updateSearch('page', newpage)\r\n    }\r\n\r\n    pendingAppRequests.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name')\r\n                break\r\n            case 'date':\r\n                switchBetween('sortBy', '+requestedDate', '-requestedDate')\r\n                break\r\n            case 'name':\r\n                // Pagination not supported now \r\n                // myApplications.search.page = 1\r\n                pendingAppRequests.search['name'] = updateValue\r\n                break\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('pendingAppRequests', pendingAppRequests.search, { notify:false })\r\n        onLoad(true)\r\n    }\r\n\r\n    pendingAppRequests.searchCallback= (searchWord) => {\r\n        pendingAppRequests.updateSearch('name',searchWord)\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------------\r\n})\r\nangular.module('applications')\r\n.controller('applicationSearchCtrl',['API','$scope','$stateParams','$state','AppRequests','localStorageService','$q','$pagination', function (API,$scope,$stateParams,$state,AppRequests,localStorage,$q,$pagination) {\r\n    let applicationSearch = this;\r\n\r\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) { // If there's nothing in app memory and there's something in local storage\r\n        AppRequests.set(localStorage.get('appsBeingRequested'));\r\n    }\r\n    applicationSearch.packageRequests = AppRequests.get();\r\n    applicationSearch.appCheckbox = {};\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const processNumberOfRequestedApps = (pkgRequest) => {\r\n        if (pkgRequest) {\r\n            applicationSearch.numberOfRequests += 1;\r\n        } else {\r\n            applicationSearch.numberOfRequests -= 1;\r\n        }\r\n    };\r\n\r\n    const updateViewList = (list) => {\r\n        let deferred= $q.defer()\r\n        applicationSearch.viewList=[]\r\n        let qs=[]\r\n        let apiPromises = []\r\n        angular.forEach(list, (app,parentIndex) => {\r\n            // Child App and Parent app requested by user\r\n            if(app.servicePackage.parent&&app.relatedApps){\r\n                let flag=false\r\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\r\n                    if (_.find(list,{id:realtedApp.id})) {\r\n                        flag=true\r\n                    }\r\n                    else{\r\n                        qs.push(['service.id',realtedApp.id])\r\n                    }\r\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\r\n                        apiPromises.push(API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs}))\r\n                        qs=[]\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                applicationSearch.viewList.push(app)\r\n            }\r\n        })\r\n        $q.all(apiPromises)\r\n        .then(res => {\r\n            angular.forEach(res, (app) => {\r\n                if (applicationSearch.search.name) {\r\n                    app[0].expanded=true\r\n                }\r\n                applicationSearch.viewList.push(...app)\r\n                applicationSearch.list.push(...app)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"There was an error loading parent requestable apps\")\r\n                deferred.reject(err)\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if(previouslyLoaded) {\r\n            applicationSearch.doneReloading = false;\r\n        }\r\n        else { // pre populate fields based on state params on first load\r\n            let numberOfRequests = 0;\r\n            Object.keys(applicationSearch.packageRequests).forEach(function(appId) { // Gets the list of package requests saved in memory\r\n                // This sets the checkboxes back to marked when the user clicks back after being in request review\r\n                applicationSearch.appCheckbox[appId] = true;\r\n                numberOfRequests += 1;\r\n            });\r\n            applicationSearch.numberOfRequests = numberOfRequests;\r\n\r\n            applicationSearch.search = {};\r\n            applicationSearch.search.name = $stateParams.name;\r\n            applicationSearch.search.category = $stateParams.category;\r\n            applicationSearch.search.page = parseInt($stateParams.page, 10);\r\n            applicationSearch.search.pageSize = parseInt($stateParams.pageSize, 10);\r\n        }\r\n\r\n        let query = [];\r\n        if (applicationSearch.search.name) {\r\n            query.push(['service.name',applicationSearch.search.name]);\r\n        }\r\n        if (applicationSearch.search.category) {\r\n            query.push(['service.category',applicationSearch.search.category]);\r\n        }\r\n\r\n        applicationSearch.search.pageSize = applicationSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n        query.push(['pageSize',String(applicationSearch.search.pageSize)]);\r\n\r\n        applicationSearch.search.page = applicationSearch.search.page || 1;\r\n        query.push(['page',String(applicationSearch.search.page)]);\r\n\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true,\r\n            qs: query\r\n        };\r\n\r\n        const promises = [API.cui.getPersonRequestableApps(opts),API.cui.getPersonRequestableCount(opts)];\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n             applicationSearch.list = res[0];\r\n             applicationSearch.count = res[1];\r\n             updateViewList(res[0])\r\n             .then(() =>{\r\n                applicationSearch.doneReloading = applicationSearch.doneLoading = true;\r\n             })\r\n        });\r\n    };\r\n    onLoad(false);\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -----------------------------------------------------------------------\r\n\r\n    applicationSearch.pageChange = (newpage) => {\r\n        applicationSearch.updateSearch('page',newpage);\r\n    };\r\n\r\n    applicationSearch.updateSearch = function(updateType,updateValue) {\r\n        if (updateType!=='page'){\r\n            applicationSearch.search.page = 1;\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('applications.search', applicationSearch.search, {notify:false});\r\n        onLoad(true);\r\n    };\r\n\r\n    applicationSearch.toggleRequest = function(application) {\r\n        if (!applicationSearch.packageRequests[application.id]) {\r\n            applicationSearch.packageRequests[application.id] = application;\r\n        } else {\r\n            delete applicationSearch.packageRequests[application.id];\r\n        }\r\n        localStorage.set('appsBeingRequested',applicationSearch.packageRequests);\r\n        processNumberOfRequestedApps(applicationSearch.packageRequests[application.id]);\r\n    };\r\n\r\n    applicationSearch.saveRequestsAndCheckout = function() {\r\n        let qs = []\r\n        //needed to set a flag for related apps to display in review page\r\n        angular.forEach(applicationSearch.packageRequests,(request)=>{\r\n            if (request.relatedApps) {\r\n                request.relatedAppSelectedCount=0\r\n                request.relatedApps.forEach(relatedApp=>{\r\n                    if(_.find(applicationSearch.packageRequests,{id:relatedApp.id})){\r\n                        relatedApp.selected=true\r\n                        request.relatedAppSelectedCount++\r\n                    }\r\n                    else{\r\n                        relatedApp.selected=false\r\n                    }\r\n                })\r\n            }\r\n            // If Selected Related app full details not available need to fetch it\r\n            if (!request.servicePackage) {\r\n                qs.push(['service.id',request.id])\r\n            }\r\n        })\r\n        if (qs.length!==0) {\r\n            API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs})\r\n            .then(res => {\r\n                res.forEach(app =>{\r\n                    applicationSearch.packageRequests[app.id] = app\r\n                })\r\n                AppRequests.set(applicationSearch.packageRequests);\r\n                $state.go('applications.reviewRequest');\r\n            })\r\n        }\r\n        else{\r\n            AppRequests.set(applicationSearch.packageRequests);\r\n            $state.go('applications.reviewRequest');\r\n        }\r\n    };\r\n\r\n    //Related apps will always appear inside body, So need to select parent if it is selected \r\n    applicationSearch.checkRelatedAppsBody= function(relatedApp, parent){\r\n        if (_.find(applicationSearch.list,{id:relatedApp.id})) {\r\n            applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:relatedApp.id}))\r\n        }\r\n        else{\r\n            applicationSearch.list.push(relatedApp)\r\n            applicationSearch.toggleRequest(relatedApp)\r\n        }           \r\n        applicationSearch.checkRelatedAndBundledApps(_.find(applicationSearch.list,{id:relatedApp.id}),parent)\r\n    };\r\n\r\n    //Deselect Child apps If it has any and select parent if checked from parent body \r\n    applicationSearch.checkRelatedAndBundledApps=function(application,parent){\r\n        //if unchecked the checkbox\r\n        if (!applicationSearch.packageRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!parent) {\r\n                application.relatedApps&&application.relatedApps.forEach((relatedApp)=>{\r\n                    if (applicationSearch.appCheckbox[relatedApp.id]) {\r\n                        applicationSearch.appCheckbox[relatedApp.id]=!applicationSearch.appCheckbox[relatedApp.id]\r\n                        applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:relatedApp.id}))\r\n                    }\r\n                })\r\n                applicationSearch.checkBundledApps(application,false)\r\n            }      \r\n        }else{\r\n            if (parent) {\r\n                if (!applicationSearch.appCheckbox[parent.id]) {\r\n                    applicationSearch.appCheckbox[parent.id]=true\r\n                    applicationSearch.toggleRequest(parent)\r\n                    applicationSearch.checkBundledApps(parent,true)\r\n                }\r\n            }else\r\n            applicationSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    applicationSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                applicationSearch.appCheckbox[bundledApp.id]=check\r\n                if (_.find(applicationSearch.list,{id:bundledApp.id}))\r\n                    applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:bundledApp.id}))\r\n            })\r\n        }\r\n    }\r\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------\r\n\r\n}]);\r\n\r\nangular.element(document).ready(function () {\r\n\tangular.module('app',['common','misc','registration','applications','organization','user','ngAnimate']);\r\n\r\nangular.module('app')\r\n.config(['$urlRouterProvider', ($urlRouterProvider)  => {\r\n\r\n    // Fixes infinite digest loop with ui-router (do NOT change unless absolutely required)\r\n    $urlRouterProvider.otherwise(($injector) => {\r\n      const $state = $injector.get('$state');\r\n      $state.go('welcome');\r\n    });\r\n\r\n}]);\r\n\r\n    angular.bootstrap(document, ['app']);\r\n});\r\n\t\r\n\t})\r\n})(angular, $);\r\n"]}