{"version":3,"sources":["app.js"],"names":["angular","$","appConfig","packageJson","i18nPackageJson","get","then","configData","Object","assign","envConfigData","packageJsonData","languageResources","dependencyOrigin","undefined","i18nPackageJsonData","always","module","config","$stateProvider","templateBase","returnCtrlAs","name","asPrefix","toUpperCase","slice","length","loginRequired","state","url","template","access","templateUrl","controller","Loader","User","$scope","API","APIError","$filter","$pagination","$q","$state","$stateParams","appGrantHistory","scopeName","search","page","paginationPageSize","getUserValue","getPaginationOptions","pageSize","searchBy","pageGrantedChange","newpage","updateSearch","updateType","updateValue","switchBetween","queryParams","String","sortBy","push","status","eventType","opts","personId","user","id","qs","transitionTo","notify","console","log","grantedHistory","cui","getPersonApplicationsGrantHistory","res","$digest","fail","onFor","err","property","firstValue","secondValue","getCountsOfStatus","qsValue","getUser","useCuid","popupGrantedCount","activeCount","suspendedCount","getPersonApplicationsGrantHistoryCount","count","offFor","$apply","appRequestHistory","pageChange","requestedHistory","getPersonApplicationsRequestHistory","getCountsOfApproved","popuprequestedCount","yesCount","noCount","getPersonApplicationsRequestHistoryCount","UserHistory","userHistory","injectUI","lastLogin","lastLoginDate","userName","initUserHistory","merge","UserProfile","userProfile","maskAnswers","inputType","updateUIMasking","initUserProfile","organization","$timeout","userRoles","grantedHistoryError","getRolesDetailsError","appCheckbox","handleError","loading","init","success","getPersonRolesOnly","rolesDetails","initiGrantable","getPersonRolesGrantable","rolesGrantable","assignRoles","roles","forEach","dsd","appId","test","rolesSubmitData","assignPersonRoles","data","rolessubmitError","$watch","n","key","appCheckboxValid","menu","desktop","mobile","localStorageService","Registration","LocaleService","$window","Base","userInvited","encodedString","btoa","inviteId","pin","applications","userLogin","numberOfSelected","submitError","languages","showOrgInfo","selected","d","Date","tz","toTimeString","lang","navigator","language","userLanguage","indexOf","browserPreference","initializing","addresses","streets","phones","keys","index","values","_","find","initInvitedRegistration","questions","securityQuestions","splice","numberOfQuestionsFloor","Math","floor","challengeQuestions1","challengeQuestions2","question1","question2","invitationData","email","restrictEmail","emailRe","catch","error","responseJSON","apiMessage","go","updateNumberOfSelected","checkboxValue","process","updateSelected","application","packageId","showTac","getAppicationTaC","processedSelected","app","tac","getTac","checkTacFlag","selectedApplications","TacCount","tacContent","tacText","step","oldSelected","i","split","acceptedTos","submit","submitting","registrationData","profile","login","userCountry","requestReason","reason","invitedSubmit","errorMessage","selectOrganization","grants","appCount","list","servicePackage","flagObject","preSelectApps","appsFoundFlag","subappsFoundFlag","getAllOrgApps","passwordRules","selectAndUpdateFlags","flags","personTacEnabled","bundledApps","appList","bundledAppFlags","subappFlags","subPackage","subPackages","iteration","flag","iterationOut","countOut","subpackage","deferred","defer","tempAllApps","tempAppsCount","apiPromises","getOrgAppsByPage","all","resolve","promise","updatingApps","a","set","checkDuplicateEmail","value","isEmailTaken","customErrors","usernameTaken","isUsernameTaken","EMAIL_REGEXP","answersMatch","challengeAnswer2","challengeAnswer1","inlineEdit","firstName","isDefined","firstNameError","required","noSaveFirstName","lastName","lastNameError","noSaveLastName","EMAIL_REGXP","emailError","noSaveEmail","country","countryError","noSaveCountry","address1","address1Error","noSaveAddress1","telephone","telephoneError","noSaveTelephone","userId","userIdError","noSaveUserId","challengeAnswer1Error","noSaveChallengeAnswer1","challengeAnswer2Error","noSaveChallengeAnswer2","updateFirstNameError","given","updateLastNameError","surname","updateEmailError","updateCountryError","updateAddress1Error","updateTelephoneError","number","updateUserIdError","username","updateChallengeAnswer1Error","updateChallengeAnswer2Error","$http","userWalkup","orgPaginationSize","appPaginationSize","checkOrUncheckBundledApps","bundledApp","filter","walkupSubmit","submitPublic","captchaEntryError","string","captchaOnload","join","captchaEntry","method","headers","successCallback","response","errorCallback","appReRenderPaginate","orgPaginationPageHandler","newPage","updatingOrgs","getOrgsByPageAndName","orgPaginationCurrentPage","organizationList","appPaginationPageHandler","appPaginationCurrentPage","alpha","Array","random","b","c","e","f","g","code","reload","ValidCaptcha","string1","removeSpaces","document","getElementById","string2","abstract","permittedLogic","accessByAnyAdmin","views","grantAppToUserLogic","grantAppToOrgLogic","orgAdminLogic","DataStorage","orgAppRequest","orgAppsBeingRequested","getType","loaderName","stateParamsOrgId","numberOfOrgRequests","getOrgAppCategories","organizationId","categories","searchCallback","searchWord","BuildPackageRequests","AppRequests","orgAppRequestReview","orgId","appRequests","appsBeingRequested","applicationGroup","organizationTacEnabled","getOrgTacOfPackage","numberOfRequests","removeApplicationRequest","requestId","deleteType","setType","requestArray","appRequestGroup","appRequest","x","clear","nameSearch","APIHelpers","Sort","orgApplicationDetails","serviceId","sortFlag","checkIfRequestable","relatedAppsArray","getOrganizationRequestableApps","requestable","getGrantArrayData","grantArray","promises","grant","getPerson","grantee","person","getOrganization","getPersonPackageClaims","claims","packageClaims","grantList","getOrganizationGrantedApps","relatedApps","sort","sortValue","listSort","userList","parseGrantUsersByStatus","unparsedGrantList","filteredGrantUsers","newGrants","switchDivision","getGrants","requestRelatedApp","service","requestor","type","postRequest","mobileTabs","tab","bundled","related","suspendApplication","suspendObj","owningOrganization","realm","suspendOrgPkg","suspendError","organizationApplications","getPackageServices","ArrayOfPackages","services","onLoad","previouslyLoaded","category","refine","parseInt","getOrganizationGrantedCount","reRenderPaginate","loadingError","updateSearchByName","goToDetails","orgAppSearch","packageRequests","processNumberOfRequestedApps","pkgRequest","updateViewList","viewList","parentIndex","parent","realtedApp","getOrganizationsRequestableApps","expanded","reject","query","getOrganizationRequestableCount","toggleRequest","saveRequestsAndCheckout","request","relatedAppSelectedCount","relatedApp","getPersonRequestableApps","checkRelatedAppsBody","checkRelatedAndBundledApps","checkBundledApps","check","orgDetails","prevState","params","mobileHandler","profileUsersSwitch","appsHierarchySwitch","orgDetailsApps","orgDetailsHierarchy","pageLoader","addExpandedProperty","childOrgs","parentOrg","org","children","getOrganizationHierarchy","done","organizationHierarchy","goToOrgPrfile","toggleExpand","object","Organization","orgDetailsProfile","orgPromise","initOrganizationProfile","passwordPolicy","authenticationPolicy","securityAdmins","admins","CuiMobileNavFactory","UserList","orgDetailsUsers","getUserListAppCount","getPersonGrantedAppCount","initDirectory","apiCalls","getUsers","getQs","getUserCount","users","userCount","statusData","getCollectionValuesAndCount","setTitle","reRenderPagination","finally","sortingCallbacks","sortType","order","orderBy","updateSearchParams","actionCallbacks","refineType","hasOwnProperty","userClick","clickedUser","stateOpts","getOrgMembers","userAppDetails","dropDown","suspend","unsuspend","remove","getClaims","userClaims","getPackageClaims","getFormattedClaimData","claimSelection","packageClaim","claimId","grantedClaim","claimValues","claimValueId","claimValue","getApp","updating","getPersonGrantedApps","getRelatedApps","concat","buildData","suspendReason","unsuspendReason","justification","buildClaimData","buildPackageClaims","claimsObject","toggleDropDown","suspendApp","suspendPersonApp","suspendAppSuccess","unsuspendApp","unsuspendPersonApp","unsuspendAppSuccess","removeApp","revokePersonApp","removeAppSuccess","modifyClaims","grantClaims","modifyClaimsSuccess","userDetails","profileRolesSwitch","appsHistorySwitch","getPersonPassword","password","passwordAccount","getPasswordPolicy","policyId","rules","rule","numberOfPasswords","begun","specifyPassword","resetPassword","reset","confirm","encodeURIComponent","suspendPerson","cancel","unsuspendPerson","resetPersonPassword","resetPasswordValue","errorTimer","passwordHistoryError","newPassword","newPasswordConfirm","validate","formObject","input","validSwitch","isValidBoolean","validNewPassword","validNewPasswordRe","validateData","operations","validatePassword","validPasswordHistory","isPassed","$setValidity","specifyPersonPassword","subject","expirePersonPassword","passwordPolicyId","authenticationPolicyId","unlockUser","unlockPersonPassword","stutus","updatePerson","unlockUserSuccess","userDetailsApps","pendingService","grantedApp","getPersonPendingServicePackages","pendingServicePromises","getCategories","appCategories","userDetailsHistory","sortClicked","getPersonStatusHistory","personStatusHistory","userDetailsProfile","userDetailsRoles","getPersonRoles","assignedRoles","orgDirectory","orgHierarchy","storedData","updateOrgChildren","orgs","toggleAll","toggleFlag","updateFlag","division","sendInvitationError","userSelectedOrg","originalObject","organizationHierarchyRoot","array","text","loader","storedDatas","sendInvitation","validEmails","emailAddressError","emailArray","emailAddress","createOrgDivisionInvitation","selectOrgFromList","goToOrg","tlo","createOrgCompanyInvitation","createPersonInvitation","orgProfile","factory","newGrant","newGrantsInStorage","updateStorage","storageType","pullFromStorage","scope","resourceId","packagesBeingRequested","packages","applicationCheckbox","reduce","packageCheckbox","requests","package","claimGrants","packageRequestObject","pkgId","packageGrants","version","NewGrant","newGrantClaims","loaderType","appsBeingRequestedforPopup","copy","administratorRights","claim","claimsPromises","map","grantPersonPackage","claimsData","claimData","searchType","categoryError","optsParser","unparsedCategory","goToClaimSelection","newGrantSearch","searchUpdate","queryArray","queryOptions","getPersonGrantableCount","getPersonGrantableApps","applicationList","grantableAppsError","payload","storedRequests","stateParams","newOrgGrantClaims","grantOrganizationPackage","newOrgGrant","newOrgGrantSearch","getOrganizationGrantableCount","getOrganizationGrantableApps","orgAppRequests","foundOrgs","foundPersons","foundPackages","qsArray","getOrg","Deferred","dfr","cached","getOrganizationSecured","getPackage","pkg","p","context","retriveOrgPendingApps","calls","each","pkgReq","creator","personData","packageData","isEmpty","when","apply","getPackageRequestsCount","orgAppRequestsCount","administrator","submitted","orgRegistrationRequests","start","window","performance","now","end","getOrgRegistrationRequests","regReq","registrant","getOrgRegistrationRequestsCount","orgRegistrationRequestsCount","time","organizationName","ServicePackage","organizationAppRequest","getAllDetails","getPackageDetails","reviewApprovals","organizationAppRequestReview","handleSuccess","requestData","handlePackageApproval","organizationRequest","requestedPackage","organizationRequestReview","approvedCount","deniedCount","getApprovalCounts","approval","denyOrgRegistrationRequest","rejectReason","approveOrgRegistrationRequest","approveOrganizationRequests","packageRequestCalls","packageRequest","pendingRequests","getAllUserPendingPackageData","storageData","submitCalls","pendingRequestsReview","goBack","PersonRequest","personRequest","userRegistrationRequestsCount","completePackageData","getPersonRegistrationRequestData","approvePersonRegistrationRequest","personRequestReview","denyPersonRegistrationRequest","approvePersonRequest","usersAppRequests","getPackageRequests","userAppRequestsCount","title","usersRegistrationRequests","searchByOrg","searchByPerson","val","getRegistrationRequests","getRegistrationRequestsCount","searchValue","getOrganizations","getPersons","orgRoles","globalSearch","currentParentOrg","timer","searchOrgId","searchterms","pageError","flattenOrgHierarchy","organizationArray","flatArray","flatten","childDivision","Error","addPerson","newPerson","add","searchNow","searchOrPage","searchParams","qsArrayNameSearch","countPersons","personCount","noRecords","orgsResponse","handleAll","accessToSecurityAndExchangeAdmins","orgClick","clickedOrd","$translateProvider","$locationProvider","$urlRouterProvider","$injector","localStorageServiceProvider","$cuiIconProvider","$cuiI18nProvider","$paginationProvider","$compileProvider","$cuiResizeHandlerProvider","$location","path","hasTrailingSlash","newPath","substr","setPrefix","customDependency","customDependencyName","dependencyType","customDependencyVersion","replace","setLocaleCodesAndNames","languageKeys","getLocaleCodesAndNames","returnRegisterAvailableLanguageKeys","languageKey","useLoader","registerAvailableLanguageKeys","uniformLanguageTag","determinePreferredLanguage","fallbackLanguage","setLocalePreference","iconSets","iconSet","defaultViewBox","paginationOptions","setPaginationOptions","breakpointOption","setBreakpoint","debugInfoEnabled","run","$rootScope","$templateCache","$cuiI18n","routing","evalRouteRequest","Menu","$cuiIcon","PubSub","Theme","CuiRouteHistoryFactory","cuiApiInterceptor","cuiApiInterceptorConfig","apiUris","serviceUrl","stopIfInvalidPayload","debugServiceUrl","interceptors","interceptor","languageNameObject","LanguageKey","setLocales","$on","event","toState","toParams","fromState","fromParams","clearAll","preventDefault","attachAccessInfo","isObject","getRoles","entitlements","getEntitlements","publish","handleStateChange","route","userInfo","setUser","authenticateUser","redirect","initApi","stateStack","routeTextArray","uiroute","uirouteparams","getIconSets","iconSettings","namespace","cache","base","pendingNotificationFlag","charAt","toLowerCase","directive","$animate","restrict","link","attrs","elem","enabled","defaultTitle","getTitle","newTitle","getDefaultTitle","setDefaultTitle","newDefaultTitle","showIf","links","activeTitle","label","currentState","current","close","toggle","pubSubSubscription","subscribe","unsubscribe","routes","truncate","idx","transclude","closeAfter","onClose","$parse","require","element","ctrl","checkIfUnique","$eval","unique","$viewValue","newValues","oldValues","equals","CustomAPI","authInfo","myCUI","populateUserInfo","info","redirectOpts","roleList","entitlementList","cuid","getPersonEntitlements","setRoles","privilegeName","setEntitlements","setLocaleByDisplayName","getOrganizationWithAttributes","getNotificationDetails","canGrantAppToUser","getPersonPendingApps","pendingApps","totalCount","jwtAuthHandler","covAuth","originUri","authRedirect","location","href","appRedirect","api","retryUnseured","envDefs","dataCallDefs","cuiObject","logoutUrl","logout","covLogout","setAuthHandler","solutionInstancesUrl","setServiceUrl","covAuthInfo","apiFactory","setPersonData","getPersonData","sessionInfo","getCovAuthInfo","handleCovAuthResponse","selfRedirect","setAuthInfo","newAuthInfo","SharedService","create","details","for","apiHelpers","omitBy","isUndefined","param","buildPackageRequests","arrayOfApps","numberOfApps","isArray","requestReasonRequired","_reason","_error","createPackageRequest","collection","returnAsCollection","keyValue","collectionData","asObject","dataKey","BaseExtensions","Countries","Languages","Timezones","$translate","baseFactory","apiError","countries","getLanguageCode","getCurrentLanguageCode","theme","timezones","stateName","numberOfStates","counter","stateParamsFromStack","generateHiddenPassword","permitted","isPermitted","logic","isOrgAdmin","canGrantAppToOrg","errorName","personResponse","orgResponse","GetCountries","locale","setCountries","args","getCountryByCode","countryCode","countryObject","proposedLanguage","CustomAPIExtension","cmd","cmdType","accepts","call","contentType","storage","dataStorage","initStorageIfUndefined","saveToLocaStorage","deleteUserStorage","getUserStorage","appendToType","getDataThatMatches","comparison","matches","isMatch","replaceDataThatMatches","newData","deleteDataThatMatches","getLocaleCode","snapRemote","shouldShowMobileNav","innerWidth","onresize","debounce","open","hide","show","stateMenuOptions","factoryName","getOrganizationAdmins","getOrganizationSecurityAdmins","getOrganizationPasswordPolicy","getOrganizationAuthenticationPolicy","getAuthenticationPolicy","authPolicyId","organizationProfile","callsToComplete","callsCompleted","CommonAPI","PersonAndOrgRequestFactory","getPersonRegistrationRequest","registrationResponse","getOrgRegistrationRequest","getRegistrationRequestData","registrationRequest","organizationData","handleRequestApproval","decision","approvePersonRegistration","denyPersonRegistration","personRequestFactory","self","pub","build","timezone","securityQuestionAccount","question","answer","_registrationData","InvitedSubmit","servicePackageRequest","personRealm","uniqBy","makeNonceCall","tag","initiateNonce","result","isUsernameOrEmailTaken","defered","stringParams","valid","getSecurityQuestions","initWalkupRegistration","getOrganizationsCountNonce","organizationCount","getOrganizationsNonce","organizations","getSecurityQuestionsNonce","securedInitiate","invitationId","getOrganizationNonce","targetOrganization","submitData","postUserRegistrationNonce","packageRequestData","postPersonRequestNonce","getOrgAppsNonce","results","getOrgAppsCountNonce","getPasswordPoliciesNonce","message","toggleFor","listToSort","dateCreated","creation","activeTheme","defaultTheme","getTheme","setTheme","cssClass","getDefaultTheme","setDefaultTheme","clearActiveTheme","useDefaultTheme","setActiveDefaultTheme","getDefault","setDefault","useDefault","setActiveDefault","GetTimezones","setTimezones","getTimezoneById","timezoneById","newUser","newEntitlements","newRoles","getTodaysDate","today","dd","getDate","yyyy","getFullYear","mmm","toString","substring","initStatusHistory","getPersonDetailedStatusHistory","initPasswordChangeHistory","getPasswordCangeHistory","history","statusHistory","passwordChangeHistory","countResponse","setPhone","phone","initUser","tempUser","initSecurityQuestions","userSecurityQuestions","tempUserSecurityQuestions","allSecurityQuestions","allSecurityQuestionsDup","getSecurityQuestionAccount","numberOfQuestions","allChallengeQuestions0","allChallengeQuestions1","challengeQuestionsTexts","selectTextsForQuestions","userQuestion","initPasswordPolicy","initRegisteredDate","lastDate","activeStatusList","buildPersonPasswordAccount","currentPassword","saving","toggleOffFunctions","resetAllData","toggleAllOff","toggleOff","pushToggleOff","toggleOffObject","function","resetPasswordFields","userPasswordAccount","passwordRe","checkIfRepeatedSecurityAnswer","secQuestion","securityAnswerRepeatedIndex","findIndex","secQuestionToCompareTo","z","section","tempUserWithoutLastLogin","activatedDate","updatePassword","lifetimeError","updatePersonPassword","passwordUpdateSuccess","saveChallengeQuestions","updateSecurityQuestionAccount","validNewPasswordHistory","validNewPasswordDisallowed","validNewPasswordReHistory","validNewPasswordReDisallowed","validateDisallowed","disallowedFlag","requestorId","requestorType","appRequestsObject","newAppRequestsObject","buildReason","tempApp","arrayOfAppsBeingRequested","arrayOfPackagesBeingRequested","arrayOfPackageRequests","reasonRequired","some","servicePackageStorage","packageServices","newServicePackageArray","checkStorage","packageDetails","getPersonPendingPackages","servicePackages","pendingPackageData","packageDetailCalls","pendingPackages","pendingPackage","approvePackage","denyPackage","myApplicationDetails","manageApplications","checkedLocalStorage","popupCount","getCountsOfcategories","loadStoredData","getPersonAppCategories","myApplications","displayable","localStorage","applicationReview","applicationRequestArray","requestsValid","attempting","requestsPromises","customError","extendedData","checkValidDomain","domain","lookupDomain","validDomain","checkValidProtocol","protocol","lookupProtocol","validProtocol","newAppRequest","role","requestBy","loadingDone","updateSearchByEmailCallback","newValue","pendingAppRequests","applicationSearch","updateViewListForUSUsers","doneReloading","getPersonRequestableCount","doneLoading","ready","otherwise","bootstrap"],"mappings":"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","file":"app.js","sourcesContent":["(function(angular, $) {\r\n\r\n\tlet appConfig\r\n\tlet packageJson\r\n\tlet i18nPackageJson\r\n\r\n\t$.get('./appConfig.json')\r\n\t.then(function(configData) {\r\n\t\tappConfig = Object.assign({}, appConfig, configData)\r\n\t\treturn $.get('./appConfig-env.json')\r\n\t})\r\n\t.then(function(envConfigData) {\r\n\t\tappConfig = Object.assign({}, appConfig, envConfigData)\r\n\t\treturn $.get('./package.json')\r\n\t})\r\n\t.then(function(packageJsonData) {\r\n\t\tpackageJson = Object.assign({}, packageJson, packageJsonData)\r\n\t\tif (appConfig.languageResources.dependencyOrigin === 'cui-idm-b2x') {\r\n\t\t\treturn $.get('./node_modules/@covisint/cui-i18n/package.json')\r\n\t\t}\r\n\t\telse return undefined\r\n\t})\r\n\t.then(function(i18nPackageJsonData) {\r\n\t\tif (i18nPackageJsonData !== undefined) {\r\n\t\t\ti18nPackageJson = Object.assign({}, i18nPackageJson, i18nPackageJsonData)\t\r\n\t\t}\r\n\t})\r\n\t.always(function() {\r\n\r\nangular.module('user', [])\r\n.config(['$stateProvider', function($stateProvider) {\r\n\r\n\tconst templateBase = 'app/modules/user/';\r\n\r\n    const returnCtrlAs = function(name, asPrefix) {\r\n        return name + 'Ctrl as ' + (asPrefix? asPrefix : '') + (asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name);\r\n    };\r\n\r\n    const loginRequired = true;\r\n\r\n    $stateProvider\r\n        .state('user', {\r\n            url: '/user',\r\n            template: '<div ui-view></div>',\r\n            access:loginRequired\r\n        })\r\n        .state('user.profile', {\r\n            url: '/profile',\r\n            templateUrl: templateBase + 'profile/user-profile.html',\r\n            controller: returnCtrlAs('userProfile'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.history',{\r\n            url: '/history',\r\n            templateUrl: templateBase + 'history/user-history.html',\r\n            controller: returnCtrlAs('userHistory'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.appRequestHistory',{\r\n            url: '/appRequestHistory?name&page&pageSize&sortBy&status',\r\n            templateUrl: templateBase + 'appHistory/app-requestHistory.html',\r\n            controller: returnCtrlAs('appRequestHistory'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.appGrantHistory',{\r\n            url: '/appGrantHistory?name&page&pageSize&sortBy&status',\r\n            templateUrl: templateBase + 'appHistory/app-grantHistory.html',\r\n            controller: returnCtrlAs('appGrantHistory'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.roles',{\r\n            url: '/roles',\r\n            templateUrl: templateBase + 'roles/user-roles.html',\r\n            controller: returnCtrlAs('userRoles'),\r\n            access:loginRequired\r\n        });\r\n\r\n}]);\r\n\r\nangular.module('user')\r\n.controller('appGrantHistoryCtrl', function(Loader, User, $scope, API, APIError, $filter,$pagination,$q,$state,$stateParams) {\r\n\r\n    const appGrantHistory = this\r\n    const scopeName = 'appGrantHistory.'\r\n    appGrantHistory.search = Object.assign({}, $stateParams)\r\n    appGrantHistory.search.page = appGrantHistory.search.page || 1;\r\n    appGrantHistory.paginationPageSize = appGrantHistory.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    appGrantHistory.search.pageSize = appGrantHistory.paginationPageSize;\r\n    appGrantHistory.searchBy='name'\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    appGrantHistory.pageGrantedChange = (newpage) => {\r\n        appGrantHistory.updateSearch('page', newpage)\r\n    }\r\n\r\n    appGrantHistory.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'eventdate':\r\n                switchBetween('sortBy', '+eventDate', '-eventDate')\r\n                break\r\n            case 'eventType':\r\n                switchBetween('sortBy', '+eventType', '-eventType')\r\n                break\r\n            case 'actorId':\r\n                switchBetween('sortBy', '+actorId', '-actorId')\r\n                break\r\n            case 'status':\r\n                appGrantHistory.search.page = 1\r\n                appGrantHistory.search['status'] = updateValue\r\n                break\r\n            case 'search':\r\n                if(appGrantHistory.searchBy==='name')\r\n                    appGrantHistory.search['name'] = updateValue\r\n                else\r\n                    appGrantHistory.search['eventType'] = updateValue\r\n                break\r\n\r\n        }\r\n\r\n        let queryParams = [['page', String(appGrantHistory.search.page)], ['pageSize', String(appGrantHistory.search.pageSize)]];\r\n        if(appGrantHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appGrantHistory.search['sortBy']])\r\n        if(appGrantHistory.search.status)\r\n            queryParams.push(['status',appGrantHistory.search['status']])\r\n        if(appGrantHistory.search.name)\r\n            queryParams.push(['name',appGrantHistory.search['name']])\r\n        if(appGrantHistory.search.eventType)\r\n            queryParams.push(['eventType',appGrantHistory.search['eventType']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('user.appGrantHistory', appGrantHistory.search, { notify:false })\r\n            console.log(appGrantHistory.search);\r\n             appGrantHistory.grantedHistory = [];\r\n             API.cui.getPersonApplicationsGrantHistory(opts)\r\n             .then(res => {\r\n               appGrantHistory.grantedHistory=res;\r\n                // if(appGrantHistory.grantedHistory.length>0)\r\n                //     getPkgDetailsGrant(appGrantHistory.grantedHistory);\r\n                $scope.$digest()\r\n             })\r\n             .fail(err =>{\r\n                APIError.onFor(scopeName + 'initHistory')\r\n                console.log(err)\r\n             })\r\n          //onLoadGranted(true,opts)\r\n    }\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            appGrantHistory.search[property] = undefined\r\n            return\r\n        }\r\n        appGrantHistory.search[property] = appGrantHistory.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n     const getCountsOfStatus=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['status',qsValue]]\r\n        }\r\n        API.cui.getPersonApplicationsGrantHistory(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                appGrantHistory.popupGrantedCount=res.length;\r\n                console.log(appGrantHistory.popupGrantedCount);\r\n            }else if (qsValue===\"active\") {\r\n                appGrantHistory.activeCount=res.length;\r\n                console.log(appGrantHistory.activeCount);\r\n            }\r\n            else{\r\n                appGrantHistory.suspendedCount=res.length;\r\n                console.log(appGrantHistory.suspendedCount);\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    appGrantHistory.user=User.user\r\n\r\n    let queryParams = [['page', String(appGrantHistory.search.page)], ['pageSize', String(appGrantHistory.search.pageSize)]];\r\n        if(appGrantHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appGrantHistory.search['sortBy']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n    Loader.onFor(scopeName + 'initHistory')\r\n     API.cui.getPersonApplicationsGrantHistory(opts)\r\n     .then(res => {\r\n        appGrantHistory.grantedHistory=res;\r\n        // if(appGrantHistory.grantedHistory.length>0)\r\n        //     getPkgDetailsGrant(appGrantHistory.grantedHistory);\r\n        // if(appGrantHistory.requestedHistory.length>0)\r\n        //     getPkgDetailsRequested(appGrantHistory.requestedHistory);\r\n        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)\r\n    \r\n        return API.cui.getPersonApplicationsGrantHistoryCount(opts)\r\n     })\r\n     .then(res =>{\r\n        console.log(res)\r\n        appGrantHistory.count=res\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$apply();\r\n     })\r\n     .fail(err =>{\r\n        APIError.onFor(scopeName + 'initHistory')\r\n        console.log(err)\r\n     })\r\n     .always( ()=>{\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$digest()\r\n     })\r\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n    \r\n})\r\nangular.module('user')\r\n.controller('appRequestHistoryCtrl', function(Loader, User, $scope, API, APIError, $filter,$pagination,$q,$state,$stateParams) {\r\n\r\n    const appRequestHistory = this\r\n    const scopeName = 'appRequestHistory.'\r\n    appRequestHistory.search = Object.assign({}, $stateParams)\r\n    appRequestHistory.search.page = appRequestHistory.search.page || 1;\r\n    appRequestHistory.paginationPageSize = appRequestHistory.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    appRequestHistory.search.pageSize = appRequestHistory.paginationPageSize;\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    appRequestHistory.pageChange = (newpage) => {\r\n        appRequestHistory.updateSearch('page', newpage)\r\n    }\r\n\r\n    appRequestHistory.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name')\r\n                break\r\n            case 'requesteddate':\r\n                switchBetween('sortBy', '+requestedDate', '-requestedDate')\r\n                break\r\n            case 'decisiondate':\r\n                switchBetween('sortBy', '+evaluationDate', '-evaluationDate')\r\n                break\r\n            case 'eventdate':\r\n                switchBetween('sortBy', '+eventDate', '-eventDate')\r\n                break\r\n            case 'eventType':\r\n                switchBetween('sortBy', '+eventType', '-eventType')\r\n                break\r\n            case 'actorId':\r\n                switchBetween('sortBy', '+actorId', '-actorId')\r\n                break\r\n            case 'evaluator':\r\n                switchBetween('sortBy', '+evaluatorId', '-evaluatorId')\r\n                break\r\n            case 'status':\r\n                appRequestHistory.search.page = 1\r\n                appRequestHistory.search['grant.status'] = updateValue\r\n                break\r\n        }\r\n\r\n        let queryParams = [['page', String(appRequestHistory.search.page)], ['pageSize', String(appRequestHistory.search.pageSize)]];\r\n        if(appRequestHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appRequestHistory.search['sortBy']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('user.appRequestHistory', appRequestHistory.search, { notify:false })\r\n            console.log(appRequestHistory.search);\r\n            appRequestHistory.requestedHistory = [];\r\n             API.cui.getPersonApplicationsRequestHistory(opts)\r\n             .then(res => {\r\n                appRequestHistory.requestedHistory=res;\r\n                // if(appRequestHistory.requestedHistory.length>0)\r\n                //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\r\n                $scope.$digest()\r\n             })\r\n             .fail(err =>{\r\n                APIError.onFor(scopeName + 'initHistory')\r\n                console.log(err)\r\n             })\r\n              //onLoad(true,opts)\r\n    }\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            appRequestHistory.search[property] = undefined\r\n            return\r\n        }\r\n        appRequestHistory.search[property] = appRequestHistory.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n/*\r\n     const onLoad = (previouslyLoaded,opts) => {\r\n        console.log(appRequestHistory.search);\r\n        appRequestHistory.requestedHistory = [];\r\n         API.cui.getPersonApplicationsRequestHistory({personId:User.user.id,'qs':[['sortBy',appRequestHistory.search['sortBy']]] })\r\n         .then(res => {\r\n            appRequestHistory.requestedHistory=res;\r\n            // if(appRequestHistory.requestedHistory.length>0)\r\n            //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\r\n            $scope.$digest()\r\n         })\r\n         .fail(err =>{\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            console.log(err)\r\n         })\r\n     }*/\r\n\r\n/*     const onLoadGranted = (previouslyLoaded) => {\r\n        appRequestHistory.grantedHistory = [];\r\n         API.cui.getPersonApplicationsGrantHistory({personId:User.user.id,'qs':[['sortBy',appRequestHistory.search['sortBy']]] })\r\n         .then(res => {\r\n           appRequestHistory.grantedHistory=res;\r\n            // if(appRequestHistory.grantedHistory.length>0)\r\n            //     getPkgDetailsGrant(appRequestHistory.grantedHistory);\r\n            $scope.$digest()\r\n         })\r\n         .fail(err =>{\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            console.log(err)\r\n         })\r\n     }*/\r\n\r\n     const getCountsOfStatus=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['status',qsValue]]\r\n        }\r\n        API.cui.getPersonApplicationsGrantHistory(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                appRequestHistory.popupGrantedCount=res.length;\r\n                console.log(appRequestHistory.popupGrantedCount);\r\n            }else if (qsValue===\"active\") {\r\n                appRequestHistory.activeCount=res.length;\r\n                console.log(appRequestHistory.activeCount);\r\n            }\r\n            else{\r\n                appRequestHistory.suspendedCount=res.length;\r\n                console.log(appRequestHistory.suspendedCount);\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n\r\n    const getCountsOfApproved=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['status',qsValue]]\r\n        }\r\n        API.cui.getPersonApplicationsRequestHistory(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                appRequestHistory.popuprequestedCount=res.length;\r\n                console.log(appRequestHistory.popuprequestedCount);\r\n            }else if (qsValue===\"active\") {\r\n                appRequestHistory.yesCount=res.length;\r\n                console.log(appRequestHistory.yesCount);\r\n            }\r\n            else{\r\n                appRequestHistory.noCount=res.length;\r\n                console.log(appRequestHistory.noCount);\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    appRequestHistory.user=User.user\r\n\r\n    let queryParams = [['page', String(appRequestHistory.search.page)], ['pageSize', String(appRequestHistory.search.pageSize)]];\r\n        if(appRequestHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appRequestHistory.search['sortBy']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n    Loader.onFor(scopeName + 'initHistory')\r\n     API.cui.getPersonApplicationsRequestHistory(opts)\r\n     .then(res => {\r\n        appRequestHistory.requestedHistory=res;\r\n        // if(appRequestHistory.requestedHistory.length>0)\r\n        //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\r\n/*        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)*/\r\n/*        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)*/\r\n       /* Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$apply();*/\r\n        return API.cui.getPersonApplicationsRequestHistoryCount(opts) \r\n     })\r\n     .then(res => {\r\n        appRequestHistory.count=res\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$apply();\r\n     })\r\n     .fail(err =>{\r\n        APIError.onFor(scopeName + 'initHistory')\r\n        console.log(err)\r\n     })\r\n     .always( ()=>{\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$digest()\r\n     })\r\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n    \r\n})\r\nangular.module('user')\r\n.controller('userHistoryCtrl', function(Loader, User, UserHistory, $scope) {\r\n\r\n    const userHistory = this\r\n    const scopeName = 'userHistory.'\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    UserHistory.injectUI(userHistory, $scope, User.user.id)\r\n    userHistory.user=User.user;  //give user info to userhistory\r\n    userHistory.lastLogin=User.user.lastLoginDate\r\n    userHistory.userName=User.user.name;\r\n    Loader.onFor(scopeName + 'initHistory')\r\n    UserHistory.initUserHistory(User.user.id)\r\n    .then(res => {\r\n        angular.merge(userHistory, res)\r\n        Loader.offFor(scopeName + 'initHistory')\r\n    })\r\n\r\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n    \r\n})\r\nangular.module('user')\r\n.controller('userProfileCtrl', function(Loader, User, UserProfile, $scope) {\r\n\r\n    const userProfile = this\r\n    const scopeName = 'userProfile.'\r\n    //$cuiIconProvider.iconSet('cui','node_modules/@covisint/cui-icons/dist/icons/icons-out.svg','0 0 48 48')\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    //Error handler for email inline Edit tag\r\n    //Commenting out Inline Editing changes as they might not needed\r\n    // userProfile.email=function(value){\r\n    //     let EMAIL_REGXP=/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i\r\n    //     if (!angular.isDefined(value)) {\r\n    //         userProfile.emailError={};\r\n    //     }else{\r\n    //         userProfile.emailError={\r\n    //             required: value===\"\" || !value,\r\n    //             email:!EMAIL_REGXP.test(value)\r\n    //         }\r\n    //     }\r\n    //     userProfile.noSaveEmail= value===\"\" || !value || !EMAIL_REGXP.test(value)\r\n    // }\r\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    userProfile.maskAnswers=true;\r\n    userProfile.inputType = 'password';\r\n    userProfile.updateUIMasking=function(){\r\n         if(userProfile.maskAnswers){\r\n            userProfile.inputType='password';\r\n        }\r\n        else{\r\n            userProfile.inputType='text';\r\n        }\r\n    }\r\n    \r\n    UserProfile.injectUI(userProfile, $scope, User.user.id)\r\n\r\n    Loader.onFor(scopeName + 'initProfile')\r\n\r\n    UserProfile.initUserProfile(User.user.id, User.user.organization.id)\r\n    .then(res => {\r\n        angular.merge(userProfile, res)\r\n        Loader.offFor(scopeName + 'initProfile')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('user')\r\n.controller('userRolesCtrl', function(Loader, User, UserProfile, $scope, API, APIError, $timeout, $state) {\r\n    'use strict';\r\n\r\n    const userRoles = this\r\n    const scopeName = 'userRoles.'\r\n    userRoles.user=User.user\r\n    userRoles.grantedHistoryError=false\r\n    userRoles.getRolesDetailsError=false\r\n    userRoles.appCheckbox={}\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    var handleError = function handleError(err) {\r\n        userRoles.loading = false;\r\n        $scope.$digest();\r\n        console.log('Error', err);\r\n    };\r\n\r\n    \r\n\r\n    let init = function init(){\r\n        userRoles.success=false\r\n        Loader.onFor(scopeName + 'initHistory')\r\n        API.cui.getPersonRolesOnly({personId:User.user.id})\r\n        .then(res =>{\r\n            userRoles.rolesDetails=res;\r\n            initiGrantable();\r\n        })\r\n        .fail(err =>{\r\n            Loader.offFor(scopeName + 'initHistory')\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            userRoles.getRolesDetailsError=true\r\n            initiGrantable();\r\n        })\r\n    };\r\n\r\n    let initiGrantable = function initiGrantable(){\r\n        API.cui.getPersonRolesGrantable({personId:User.user.id})\r\n            .then(res =>{\r\n                userRoles.rolesGrantable=res\r\n                Loader.offFor(scopeName + 'initHistory')\r\n                $scope.$digest()\r\n            })\r\n            .fail(err =>{\r\n                Loader.offFor(scopeName + 'initHistory')\r\n                APIError.onFor(scopeName + 'initHistory')\r\n                userRoles.grantedHistoryError=true\r\n                $scope.$digest()\r\n            })\r\n    };\r\n\r\n    init();\r\n    \r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n    userRoles.assignRoles = () =>{\r\n       let roles =[]\r\n       angular.forEach(userRoles.appCheckbox,function(dsd,appId){\r\n       /*Object.keys(userRoles.appCheckbox).forEach(function(appId) {*/\r\n           if(dsd){\r\n                let test={\r\n                \"id\":appId\r\n               }\r\n               roles.push(test)\r\n           }\r\n        });\r\n        let rolesSubmitData={\r\n        \"userId\": User.user.id,\r\n        \"roles\": roles\r\n        }\r\n        console.log(rolesSubmitData)\r\n        \r\n       Loader.onFor(scopeName + 'initHistory')\r\n        API.cui.assignPersonRoles({data:rolesSubmitData})\r\n        .then(res =>{\r\n            console.log(res)\r\n            Loader.offFor(scopeName + 'initHistory')\r\n            $scope.$digest()\r\n            userRoles.success=true\r\n             $timeout(() => {\r\n                init();\r\n            }, 3000);\r\n            \r\n        })\r\n        .fail(err =>{\r\n            Loader.offFor(scopeName + 'initHistory')\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            userRoles.rolessubmitError=true\r\n            $scope.$digest()\r\n        })\r\n    }\r\n/*    userRoles.checkrequest = (roleId) =>{\r\n        if (!userRoles.selectedCheckbox[roleId]) {\r\n            userRoles.selectedCheckbox[roleId] = roleId\r\n        } else {\r\n            delete userRoles.selectedCheckbox[roleId]\r\n        }\r\n        if(Object.keys(userRoles.selectedCheckbox).length<0){\r\n            \r\n        }else{\r\n            userRoles.appCheckboxValid=true\r\n        }\r\n    }*/\r\n     $scope.$watch(\"userRoles.appCheckbox\", function(n) {\r\n       let count=0\r\n       angular.forEach(userRoles.appCheckbox,function(dsd,key){\r\n        console.log(key)\r\n        if(dsd)\r\n            count+=1\r\n       })\r\n       if(count>0){\r\n        userRoles.appCheckboxValid=true\r\n       }else{\r\n        userRoles.appCheckboxValid=false\r\n       }\r\n    }, true);\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n});\r\n\r\n\r\nangular.module('registration',[])\r\n.config(['$stateProvider', function($stateProvider) {\r\n\r\n\tconst templateBase = 'app/modules/registration/';\r\n\r\n    const returnCtrlAs = function(name, asPrefix) {\r\n        return name + 'Ctrl as ' + (asPrefix? asPrefix : '') + (asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name);\r\n    };\r\n\r\n    $stateProvider\r\n\t.state('registration', {\r\n\t\turl: '/register',\r\n        template: '<div ui-view></div>'\r\n    })\r\n    .state('registration.walkup', {\r\n        url: '/walkup',\r\n        templateUrl:templateBase + 'userWalkup/userWalkup.html',\r\n        controller: returnCtrlAs('userWalkup'),\r\n        menu: {\r\n            desktop: false,\r\n            mobile: false\r\n        }\r\n    })\r\n    .state('registration.invitation', {\r\n        url: '/invitation?inviteId&pin',\r\n        templateUrl:templateBase + 'userInvited/userInvited.html',\r\n        controller: returnCtrlAs('userInvited'),\r\n        menu: {\r\n            desktop: false,\r\n            mobile: false\r\n        }\r\n    });\r\n\r\n}]);\r\n\r\nangular.module('registration')\r\n.controller('userInvitedCtrl', function(APIError, localStorageService, Registration, $scope, $state,$q,LocaleService, $window,Base,$stateParams,$pagination,$filter) {\r\n\r\n    const userInvited = this\r\n    let encodedString = btoa($stateParams.inviteId+':'+$stateParams.pin)\r\n    userInvited.applications = {}\r\n    userInvited.userLogin = {}\r\n    userInvited.applications.numberOfSelected = 0\r\n    userInvited.submitError = false\r\n    userInvited.languages=[];\r\n    userInvited.showOrgInfo = false\r\n    userInvited.pageSize = userInvited.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    // need to initialize to avoid undefined error when preselecting apps based on invitation data\r\n    userInvited.applications.selected={}\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    //for detectig browser time\r\n    var d = new Date();\r\n    var tz = d.toTimeString();\r\n\r\n    //for detectig browser language\r\n    var lang = $window.navigator.language || $window.navigator.userLanguage;\r\n\r\n    if (lang.indexOf('en-')>=0) { userInvited.browserPreference='en'; }\r\n    else if (lang.indexOf('zh')>=0) {userInvited.browserPreference='zh'; }\r\n    else if (lang.indexOf('pl')>=0) { userInvited.browserPreference='pl'; }\r\n    else if (lang.indexOf('pt')>=0) { userInvited.browserPreference='pt'; }\r\n    else if (lang.indexOf('tr')>=0) { userInvited.browserPreference='tr'; }\r\n    else if (lang.indexOf('fr')>=0) { userInvited.browserPreference='fr'; }\r\n    else if (lang.indexOf('ja')>=0) { userInvited.browserPreference='ja'; }\r\n    else if (lang.indexOf('es')>=0) { userInvited.browserPreference='es'; }\r\n    else if (lang.indexOf('de')>=0) { userInvited.browserPreference='de'; }\r\n    else if (lang.indexOf('ru')>=0) { userInvited.browserPreference='ru'; }\r\n    else if (lang.indexOf('it')>=0) { userInvited.browserPreference='it'; }\r\n    else { \r\n        console.log(lang+ \"not supported\")\r\n        userInvited.browserPreference='en'; \r\n    }\r\n    //LocaleService.setLocaleByDisplayName(appConfig.languages[userInvited.browserPreference])\r\n    userInvited.initializing = true\r\n\r\n    if (!localStorageService.get('userInvited.user')) {\r\n        // If registration is not saved in localstorage we need to initialize \r\n        // these arrays so ng-model treats them as arrays rather than objects \r\n        userInvited.user = { addresses: [] }\r\n        userInvited.user.addresses[0] = { streets: [] }\r\n        userInvited.user.phones = []\r\n    } \r\n    else {\r\n        userInvited.user = localStorageService.get('userInvited.user');\r\n        \r\n    }\r\n\r\n    Object.keys(Base.languages).forEach(function(id,index){\r\n        userInvited.languages[index]={\r\n            id:id\r\n        }\r\n    })\r\n    Object.values(Base.languages).forEach(function(language,index){\r\n        userInvited.languages[index].name=language;\r\n    })\r\n    userInvited.user.language=_.find(userInvited.languages,{id:userInvited.browserPreference})\r\n    Registration.initInvitedRegistration(encodedString)\r\n    .then(res => {\r\n        const questions = res.securityQuestions\r\n\r\n        // Split questions to use between 2 dropdowns\r\n        questions.splice(0, 1)\r\n        const numberOfQuestionsFloor = Math.floor(questions.length / 2)\r\n\r\n        userInvited.userLogin.challengeQuestions1 = questions.slice(0, numberOfQuestionsFloor)\r\n        userInvited.userLogin.challengeQuestions2 = questions.slice(numberOfQuestionsFloor)\r\n\r\n        // Preload questions into input\r\n        userInvited.userLogin.question1 = userInvited.userLogin.challengeQuestions1[0]\r\n        userInvited.userLogin.question2 = userInvited.userLogin.challengeQuestions2[0]\r\n\r\n        // Populate organization Data\r\n        userInvited.organization = res.organization\r\n        userInvited.invitationData=res.invitationData\r\n\r\n        //Check restrict Email flag\r\n        userInvited.user.email=\"\"\r\n        if (userInvited.invitationData.restrictEmail) {\r\n            userInvited.user.email=userInvited.invitationData.email\r\n            userInvited.emailRe=userInvited.user.email\r\n        }\r\n        userInvited.initializing = false\r\n    })\r\n    .catch(error => {\r\n        console.error(error)\r\n        if (error.responseJSON && error.responseJSON.apiMessage.indexOf(encodedString)>0) {\r\n                userInvited.initializing=false\r\n                APIError.onFor('RegistrationFactory.inValidInvite')\r\n        }else{\r\n            $state.go('misc.loadError')\r\n        }\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    userInvited.applications.updateNumberOfSelected = (checkboxValue) => {\r\n        // Update the number of selected apps everytime on of the boxes is checked/unchecked\r\n        if (checkboxValue !== null) {\r\n            userInvited.applications.numberOfSelected += 1;\r\n        } else {\r\n            userInvited.applications.numberOfSelected -= 1;\r\n        }\r\n        userInvited.applications.process()\r\n    }\r\n\r\n    userInvited.applications.updateSelected = (application, checkboxValue, index) => {\r\n        if (checkboxValue === true) {\r\n            userInvited.applications.selected[index]=application.id+','+application.packageId+','+application.name+','+application.showTac\r\n            userInvited.applications.numberOfSelected += 1;\r\n        } else {\r\n            delete userInvited.applications.selected[index]          \r\n            userInvited.applications.numberOfSelected -= 1;\r\n        }\r\n    }\r\n\r\n    userInvited.getAppicationTaC = () => {\r\n        angular.forEach(userInvited.applications.processedSelected, app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true' && app.tac===undefined) {\r\n                Registration.getTac(app.packageId)\r\n                .then(res =>{\r\n                    app.tac=res;\r\n                })\r\n                .catch(err=> {\r\n                    console.log(err);\r\n                })\r\n            };\r\n        })\r\n    }\r\n\r\n    //Check TAC flag for selected applications\r\n    userInvited.checkTacFlag = (selectedApplications) => {\r\n        let TacCount=0;\r\n        angular.forEach(selectedApplications,app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true') {\r\n                TacCount++;\r\n            };\r\n        })\r\n        return TacCount\r\n    }\r\n\r\n    userInvited.showTac= (index) => {\r\n        if (userInvited.applications.processedSelected[index].tac) {\r\n            userInvited.tacContent=userInvited.applications.processedSelected[index].tac.tacText\r\n            userInvited.applications.step=3\r\n        }\r\n    } \r\n\r\n    userInvited.applications.process = () => {\r\n        // Process the selected apps when you click next after selecting the apps you need\r\n        // returns number of apps selected\r\n        let oldSelected\r\n        let index=0;\r\n        if (userInvited.applications.processedSelected) {\r\n            oldSelected = userInvited.applications.processedSelected\r\n        }\r\n\r\n        // Fixes issue where adding and removing selected apps would leave objects with null values\r\n        angular.forEach(userInvited.applications.selected, (app, i) => {\r\n            if (app === null) delete userInvited.applications.selected[i]\r\n        })\r\n\r\n        userInvited.applications.processedSelected = []\r\n\r\n        angular.forEach(userInvited.applications.selected, function(app, i) {\r\n            if (app !== null) {\r\n                userInvited.applications.processedSelected.push({\r\n                    id: app.split(',')[0],\r\n                    packageId: app.split(',')[1],\r\n                    name: app.split(',')[2],\r\n                    // this fixes an issue where removing an app from the selected list that the user \r\n                    // had accepted the terms for would carry over that acceptance to the next app on the list\r\n                    acceptedTos: ((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].acceptedTos : false),\r\n                    showTac:app.split(',')[3],\r\n                    tac:((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].tac :undefined)\r\n                })\r\n            }\r\n            index++;\r\n        })\r\n        return userInvited.checkTacFlag(userInvited.applications.processedSelected)\r\n        \r\n    }\r\n\r\n    userInvited.submit = () => {\r\n        userInvited.submitting = true\r\n        userInvited.submitError = false\r\n\r\n        const registrationData = {\r\n            profile: userInvited.user,\r\n            organization: userInvited.organization,\r\n            login: userInvited.userLogin,\r\n            applications: userInvited.applications,\r\n            userCountry: userInvited.userCountry,\r\n            requestReason:userInvited.reason\r\n        }\r\n\r\n        Registration.invitedSubmit(registrationData,encodedString,$stateParams.inviteId)\r\n        .then(() => {\r\n            userInvited.success = true\r\n            userInvited.submitting = false\r\n            $state.go('misc.success')\r\n        })\r\n        .catch(error => {\r\n            userInvited.submitError = true\r\n            userInvited.submitting = false\r\n            if (error.responseJSON) {\r\n                userInvited.errorMessage = error.responseJSON.apiMessage\r\n            }\r\n            else {\r\n                userInvited.errorMessage = 'Error submitting registration request'\r\n            }\r\n        })\r\n    }\r\n\r\n    userInvited.selectOrganization = () => {\r\n        userInvited.applications.numberOfSelected = 0 // Restart applications count\r\n        userInvited.applications.processedSelected = undefined // Restart applications selected\r\n\r\n        Registration.selectOrganization(userInvited.organization, userInvited.pageSize)\r\n        .then(res => {\r\n            const grants = res.grants\r\n            userInvited.appCount=res.appCount\r\n            if (!grants.length) userInvited.applications.list = undefined\r\n            else {\r\n                userInvited.applications.list = grants\r\n                //Preselect the applications selected by admin\r\n                if (userInvited.invitationData.servicePackage) {\r\n                    let flagObject=userInvited.preSelectApps(userInvited.applications.list,false,false)\r\n                    // Check whether we found main apps and sub apps in the current pagination\r\n                    if(flagObject.appsFoundFlag&&flagObject.subappsFoundFlag){\r\n                        userInvited.applications.process()\r\n                    }\r\n                    // application or subapplication was not retrieved in current set of pagination\r\n                    // need to retrieve all apps and pre selects them\r\n                    else{\r\n                        userInvited.getAllOrgApps(flagObject)\r\n                        .then(() =>{\r\n                            userInvited.applications.process()\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            // userInvited.reRenderPaginate && userInvited.reRenderPaginate()\r\n            userInvited.passwordRules = res.passwordRules\r\n        })\r\n        .fail((error) => {\r\n            console.error('Error getting organization information', error)\r\n            APIError.onFor('userInvited.orgInfo', error)\r\n        })\r\n        .always(() => {\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    //Updates the selected apps and count and set the found flags\r\n    userInvited.selectAndUpdateFlags = (application, flags) => {\r\n        userInvited.applications.selected[application.id]=application.id+','+application.servicePackage.id+','+$filter('cuiI18n')(application.name)+','+application.servicePackage.personTacEnabled\r\n        flags[application.id]=true\r\n        if (application.bundledApps&&Object.keys(flags).length===1) {\r\n            application.bundledApps.forEach(app=>{\r\n                flags[app.id]=false\r\n            })\r\n        }\r\n        return flags;\r\n    }\r\n    \r\n    userInvited.preSelectApps= (appList,appsFoundFlag,subappsFoundFlag) => {\r\n        let bundledAppFlags={}\r\n        let subappFlags={}\r\n        appList.forEach(application => {\r\n            if(appsFoundFlag!==true&&userInvited.invitationData.servicePackage.id===application.servicePackage.id){\r\n                bundledAppFlags=userInvited.selectAndUpdateFlags(application,bundledAppFlags)\r\n            }\r\n            if(subappsFoundFlag!==true&&userInvited.invitationData.subPackage){\r\n                // If subpackages\r\n                if (userInvited.invitationData.subPackage.id.indexOf(',')>0) {\r\n                    // If multiple subpackages Then subPackage.id will be string like \"id1,id2,...idn\"\r\n                    let subPackages=userInvited.invitationData.subPackage.id.split(',')\r\n                    subPackages.forEach(subPackage=>{\r\n                        subappFlags[subPackage]=subappFlags[subPackage]||{}\r\n                        if (application.servicePackage.id.indexOf(subPackage)>0) {\r\n                            subappFlags[subPackage]=userInvited.selectAndUpdateFlags(application,subappFlags[subPackage])\r\n                        }\r\n                    })                    \r\n                }\r\n                else{\r\n                    // Single Subpackage\r\n                    if (application.servicePackage.id.indexOf(userInvited.invitationData.subPackage.id)>0) {\r\n                        subappFlags[userInvited.invitationData.subPackage.id]={}\r\n                        subappFlags[userInvited.invitationData.subPackage.id]=userInvited.selectAndUpdateFlags(application,subappFlags[userInvited.invitationData.subPackage.id])\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        //Check whether we found all the main apps,\r\n        let count=0\r\n        let iteration=0\r\n        angular.forEach(bundledAppFlags,function(flag){\r\n            iteration++\r\n            if (flag===false) {\r\n                count++\r\n            }\r\n            if (iteration===Object.keys(bundledAppFlags).length) {\r\n                if (count===0) {\r\n                    appsFoundFlag=true\r\n                }\r\n            }\r\n        })\r\n        //Check wether we found all the subapps,\r\n        count=0\r\n        iteration=0\r\n        let iterationOut=0\r\n        let countOut=0\r\n        angular.forEach(subappFlags,function(subpackage){\r\n            iterationOut++\r\n            if (Object.keys(subpackage).length!==0) {\r\n                angular.forEach(subpackage,function(flag){\r\n                    iteration++\r\n                    if (flag===false) {\r\n                        count++\r\n                    }\r\n                    if (iteration===Object.keys(subpackage).length) {\r\n                        if (count===0) {\r\n                            subappsFoundFlag=true\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                countOut++\r\n            }\r\n            if (iterationOut===Object.keys(subappFlags).length) {\r\n                if (countOut===0) {\r\n                    subappsFoundFlag=true\r\n                }\r\n                else{\r\n                    subappsFoundFlag=false\r\n                }\r\n\r\n            }\r\n        })\r\n        userInvited.applications.numberOfSelected=Object.keys(userInvited.applications.selected).length\r\n        return {\r\n            appsFoundFlag:appsFoundFlag,\r\n            subappsFoundFlag:subappsFoundFlag\r\n        }\r\n    }\r\n\r\n    userInvited.getAllOrgApps=(flagObject) => {\r\n        let deferred=$q.defer()\r\n        let tempAllApps=[]\r\n        let tempAppsCount=userInvited.appCount\r\n        let page=0\r\n        let apiPromises=[]\r\n        do{\r\n            page++\r\n            apiPromises.push(Registration.getOrgAppsByPage(page,200,userInvited.organization.id))\r\n            tempAppsCount=tempAppsCount-200\r\n        }while(tempAppsCount>200)\r\n        $q.all(apiPromises)\r\n        .then(res=>{\r\n            res.forEach(appList=>{\r\n                userInvited.preSelectApps(appList,flagObject.appsFoundFlag,flagObject.subappsFoundFlag)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    userInvited.pageChange = (newpage) => {\r\n        userInvited.updatingApps = true\r\n        Registration.getOrgAppsByPage(newpage,userInvited.pageSize,userInvited.organization.id)\r\n        .then((res) => {\r\n            userInvited.page=newpage\r\n            if (!res.length) userInvited.applications.list = undefined\r\n            else {\r\n                userInvited.applications.list = res\r\n                userInvited.updatingApps = false\r\n            }\r\n        })\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n    /* -------------------------------------------- WATCHERS START -------------------------------------------- */\r\n\r\n    $scope.$watch('userInvited.user', (a) => {\r\n        if (a && Object.keys(a).length !== 0) {\r\n            localStorageService.set('userInvited.user', a);\r\n        }\r\n    }, true)\r\n\r\n    userInvited.checkDuplicateEmail = (value) => {\r\n        if (value &&value!==\"\") {\r\n            $q.all([Registration.isEmailTaken(value).promise])\r\n            .then(res => {\r\n                userInvited.isEmailTaken=res[0]\r\n            })\r\n        }\r\n        else{\r\n            userInvited.isEmailTaken=true;\r\n        }        \r\n    }\r\n    \r\n    userInvited.checkDuplicateEmail(userInvited.user.email)\r\n    userInvited.customErrors = {\r\n        userName: {\r\n            usernameTaken: Registration.isUsernameTaken\r\n        },\r\n        email: {\r\n            email: function(){\r\n                var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n                if (userInvited.user.email) {\r\n                    return EMAIL_REGEXP.test(userInvited.user.email)\r\n                }else{\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        answersMatch: {\r\n            answersMatch:function(){\r\n                if (userInvited.userLogin && userInvited.userLogin.challengeAnswer2) {\r\n                    return userInvited.userLogin.challengeAnswer2!==userInvited.userLogin.challengeAnswer1;\r\n                }else{\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Error handlers for Inline Edits in review page\r\n    userInvited.inlineEdit = {\r\n        firstName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.firstNameError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.firstNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveFirstName=value===\"\" || !value\r\n        },\r\n        lastName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.lastNameError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.lastNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveLastName=value===\"\" || !value\r\n        },\r\n        email:function(value){\r\n            var EMAIL_REGXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.emailError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.emailError={\r\n                    required: value===\"\" || !value,\r\n                    email:!EMAIL_REGXP.test(value)\r\n                }\r\n                //emailTaken:\r\n                if (!userInvited.inlineEdit.emailError.required && !userInvited.inlineEdit.emailError.email) {\r\n                    userInvited.checkDuplicateEmail(value)\r\n                }\r\n                  \r\n            }\r\n            userInvited.inlineEdit.noSaveEmail=value===\"\" || !value || !EMAIL_REGXP.test(value)\r\n        },\r\n        //For autocomplete need to handle differently\r\n        country:function(value){\r\n            console.log(value)\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.countryError={\r\n                    required:true\r\n                }\r\n            }else{\r\n                userInvited.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n            userInvited.inlineEdit.noSaveCountry=value===undefined \r\n        },\r\n        address1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.address1Error={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.address1Error={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveAddress1=value===\"\" || !value\r\n        },\r\n        telephone:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.telephoneError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.telephoneError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveTelephone=value===\"\" || !value\r\n        },\r\n        userId:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.userIdError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.userIdError={\r\n                    required: value===\"\" || !value,\r\n                } \r\n                //usernameTaken: \r\n                if (!userInvited.inlineEdit.userIdError.required) {\r\n                    $q.all([Registration.isUsernameTaken(value).promise])\r\n                    .then(res => {\r\n                        userInvited.inlineEdit.userIdError.usernameTaken=!res[0]\r\n                        userInvited.inlineEdit.noSaveUserId=value===\"\" || !value ||userInvited.inlineEdit.userIdError.usernameTaken\r\n                    })\r\n                }\r\n                 \r\n            }\r\n             userInvited.inlineEdit.noSaveUserId=value===\"\" || !value\r\n        },\r\n        challengeAnswer1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.challengeAnswer1Error={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.challengeAnswer1Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userInvited.userLogin.challengeAnswer2\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveChallengeAnswer1=value===\"\" || !value||value===userInvited.userLogin.challengeAnswer2\r\n        },\r\n        challengeAnswer2:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.challengeAnswer2Error={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.challengeAnswer2Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userInvited.userLogin.challengeAnswer1\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveChallengeAnswer2=value===\"\" || !value || value===userInvited.userLogin.challengeAnswer1\r\n        },\r\n        //on save functions needed to show error when pressed enter\r\n        updateFirstNameError:function(){\r\n            userInvited.inlineEdit.firstName(userInvited.user.name.given)\r\n        },\r\n        updateLastNameError:function(){\r\n            userInvited.inlineEdit.lastName(userInvited.user.name.surname)\r\n        },\r\n        updateEmailError: function() {\r\n            userInvited.emailRe=userInvited.user.email;\r\n            userInvited.inlineEdit.email(userInvited.user.email)\r\n        },\r\n        updateCountryError: function() {\r\n            if (userInvited.userCountry) {\r\n                userInvited.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n        },\r\n        updateAddress1Error:function(){\r\n            userInvited.inlineEdit.address1(userInvited.user.addresses[0].streets[0])\r\n        },\r\n        updateTelephoneError:function(){\r\n            userInvited.inlineEdit.telephone(userInvited.user.phones[0].number)\r\n        },\r\n        updateUserIdError:function(){\r\n            userInvited.inlineEdit.userId(userInvited.userLogin.username)\r\n        },\r\n        updateChallengeAnswer1Error:function(){\r\n            userInvited.inlineEdit.challengeAnswer1(userInvited.userLogin.challengeAnswer1)\r\n        },\r\n        updateChallengeAnswer2Error:function(){\r\n            userInvited.inlineEdit.challengeAnswer2(userInvited.userLogin.challengeAnswer2)\r\n        },\r\n\r\n    }\r\n\r\n    /* --------------------------------------------- WATCHERS END --------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('registration')\r\n.controller('userWalkupCtrl', function(APIError, localStorageService, Registration, $scope, $state,$q,LocaleService, $window,Base,$pagination,$filter,API,$http) {\r\n\r\n    const userWalkup = this\r\n\r\n    userWalkup.applications = {}\r\n    userWalkup.userLogin = {}\r\n    userWalkup.applications.numberOfSelected = 0\r\n    userWalkup.submitError = false\r\n    userWalkup.languages=[];\r\n    userWalkup.orgPaginationSize = userWalkup.orgPaginationSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    userWalkup.appPaginationSize = userWalkup.appPaginationSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    //for detectig browser time\r\n    var d = new Date();\r\n    var tz = d.toTimeString();\r\n\r\n    //for detectig browser language\r\n    var lang = $window.navigator.language || $window.navigator.userLanguage;\r\n\r\n    if (lang.indexOf('en-')>=0) { userWalkup.browserPreference='en'; }\r\n    else if (lang.indexOf('zh')>=0) {userWalkup.browserPreference='zh'; }\r\n    else if (lang.indexOf('pl')>=0) { userWalkup.browserPreference='pl'; }\r\n    else if (lang.indexOf('pt')>=0) { userWalkup.browserPreference='pt'; }\r\n    else if (lang.indexOf('tr')>=0) { userWalkup.browserPreference='tr'; }\r\n    else if (lang.indexOf('fr')>=0) { userWalkup.browserPreference='fr'; }\r\n    else if (lang.indexOf('ja')>=0) { userWalkup.browserPreference='ja'; }\r\n    else if (lang.indexOf('es')>=0) { userWalkup.browserPreference='es'; }\r\n    else if (lang.indexOf('de')>=0) { userWalkup.browserPreference='de'; }\r\n    else if (lang.indexOf('ru')>=0) { userWalkup.browserPreference='ru'; }\r\n    else if (lang.indexOf('it')>=0) { userWalkup.browserPreference='it'; }\r\n    else { \r\n        console.log(lang+ \"not supported\")\r\n        userWalkup.browserPreference='en'; \r\n    }\r\n    //LocaleService.setLocaleByDisplayName(appConfig.languages[userWalkup.browserPreference])\r\n    userWalkup.initializing = true\r\n\r\n    if (!localStorageService.get('userWalkup.user')) {\r\n        // If registration is not saved in localstorage we need to initialize \r\n        // these arrays so ng-model treats them as arrays rather than objects \r\n        userWalkup.user = { addresses: [] }\r\n        userWalkup.user.addresses[0] = { streets: [] }\r\n        userWalkup.user.phones = []\r\n    } \r\n    else {\r\n        userWalkup.user = localStorageService.get('userWalkup.user');\r\n        \r\n    }\r\n\r\n    Object.keys(Base.languages).forEach(function(id,index){\r\n        userWalkup.languages[index]={\r\n            id:id\r\n        }\r\n    })\r\n    Object.values(Base.languages).forEach(function(language,index){\r\n        userWalkup.languages[index].name=language;\r\n    })\r\n    userWalkup.user.language=_.find(userWalkup.languages,{id:userWalkup.browserPreference})\r\n    /*Registration.initWalkupRegistration(userWalkup.orgPaginationSize)\r\n    .then(res => {\r\n        const questions = res.securityQuestions\r\n\r\n        // Split questions to use between 2 dropdowns\r\n        questions.splice(0, 1)\r\n        const numberOfQuestionsFloor = Math.floor(questions.length / 2)\r\n\r\n        userWalkup.userLogin.challengeQuestions1 = questions.slice(0, numberOfQuestionsFloor)\r\n        userWalkup.userLogin.challengeQuestions2 = questions.slice(numberOfQuestionsFloor)\r\n\r\n        // Preload questions into input\r\n        userWalkup.userLogin.question1 = userWalkup.userLogin.challengeQuestions1[0]\r\n        userWalkup.userLogin.question2 = userWalkup.userLogin.challengeQuestions2[0]\r\n\r\n        // Populate organization list\r\n        userWalkup.organizationList = res.organizations\r\n        userWalkup.organizationCount = res.organizationCount\r\n        userWalkup.orgReRenderPaginate && userWalkup.orgReRenderPaginate()\r\n\r\n        userWalkup.initializing = false\r\n    })\r\n    .catch(error => {\r\n        $state.go('misc.loadError')\r\n    })*/\r\nuserWalkup.initializing = false\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    userWalkup.applications.checkOrUncheckBundledApps = (checkboxValue,application) => {\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp => {\r\n                if (checkboxValue !== null) {\r\n                    bundledApp=_.find(userWalkup.applications.list,{id:bundledApp.id})\r\n                    userWalkup.applications.selected[bundledApp.id]=bundledApp.id+','+bundledApp.servicePackage.id+','+$filter('cuiI18n')(bundledApp.name)+','+application.servicePackage.personTacEnabled\r\n                    userWalkup.applications.numberOfSelected += 1;\r\n\r\n                } else {\r\n                    userWalkup.applications.selected[bundledApp.id]=null\r\n                    userWalkup.applications.numberOfSelected -= 1;\r\n                } \r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    userWalkup.applications.updateNumberOfSelected = (checkboxValue,application) => {\r\n        // Update the number of selected apps everytime on of the boxes is checked/unchecked\r\n        if (checkboxValue !== null) {\r\n            userWalkup.applications.numberOfSelected += 1;\r\n        } else {\r\n            userWalkup.applications.numberOfSelected -= 1;\r\n        }\r\n        userWalkup.applications.checkOrUncheckBundledApps(checkboxValue,application)\r\n        userWalkup.applications.process()\r\n    }\r\n\r\n    userWalkup.applications.updateSelected = (application, checkboxValue, index) => {\r\n        let bundledApps=_.filter(userWalkup.applications.processedSelected,{packageId:application.packageId})\r\n        bundledApps.forEach(bundledApp => {\r\n            if (checkboxValue !== null) {\r\n                userWalkup.applications.selected[bundledApp.id]=bundledApp.id+','+bundledApp.packageId+','+bundledApp.name+','+bundledApp.showTac\r\n                userWalkup.applications.numberOfSelected += 1;\r\n            } else {\r\n                delete userWalkup.applications.selected[bundledApp.id]          \r\n                userWalkup.applications.numberOfSelected -= 1;\r\n            }\r\n        })\r\n    }\r\n\r\n    userWalkup.getAppicationTaC = () => {\r\n        angular.forEach(userWalkup.applications.processedSelected, app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true') {\r\n                Registration.getTac(app.packageId)\r\n                .then(res =>{\r\n                    app.tac=res;\r\n                })\r\n                .catch(err=> {\r\n                    console.log(err);\r\n                })\r\n            };\r\n        })\r\n    }\r\n\r\n    //Check TAC flag for selected applications\r\n    userWalkup.checkTacFlag = (selectedApplications) => {\r\n        let TacCount=0;\r\n        angular.forEach(selectedApplications,app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true') {\r\n                TacCount++;\r\n            };\r\n        })\r\n        return TacCount\r\n    }\r\n\r\n    userWalkup.showTac= (index) => {\r\n        if (userWalkup.applications.processedSelected[index].tac) {\r\n            userWalkup.tacContent=userWalkup.applications.processedSelected[index].tac.tacText\r\n            userWalkup.applications.step=3\r\n        }\r\n    } \r\n\r\n    userWalkup.applications.process = () => {\r\n        // Process the selected apps when you click next after selecting the apps you need\r\n        // returns number of apps selected\r\n        let oldSelected\r\n        let index=0;\r\n        if (userWalkup.applications.processedSelected) {\r\n            oldSelected = userWalkup.applications.processedSelected\r\n        }\r\n\r\n        // Fixes issue where adding and removing selected apps would leave objects with null values\r\n        angular.forEach(userWalkup.applications.selected, (app, i) => {\r\n            if (app === null) delete userWalkup.applications.selected[i]\r\n        })\r\n\r\n        userWalkup.applications.processedSelected = []\r\n\r\n        angular.forEach(userWalkup.applications.selected, function(app, i) {\r\n            if (app !== null) {\r\n                userWalkup.applications.processedSelected.push({\r\n                    id: app.split(',')[0],\r\n                    packageId:app.split(',')[1],\r\n                    name: app.split(',')[2],\r\n                    // this fixes an issue where removing an app from the selected list that the user \r\n                    // had accepted the terms for would carry over that acceptance to the next app on the list\r\n                    acceptedTos: ((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].acceptedTos : false),\r\n                    showTac:app.split(',')[3]\r\n                })\r\n            }\r\n            index++;\r\n        })\r\n        return userWalkup.checkTacFlag(userWalkup.applications.processedSelected)\r\n        \r\n    }\r\n\r\n    userWalkup.submit = () => {\r\n        userWalkup.submitting = true\r\n        userWalkup.submitError = false\r\n\r\n        const registrationData = {\r\n            profile: userWalkup.user,\r\n            organization: userWalkup.organization,\r\n            login: userWalkup.userLogin,\r\n            applications: userWalkup.applications,\r\n            userCountry: userWalkup.userCountry,\r\n            requestReason:userWalkup.reason\r\n        }\r\n\r\n        Registration.walkupSubmit(registrationData)\r\n        .then(() => {\r\n            userWalkup.success = true\r\n            userWalkup.submitting = false\r\n            $state.go('misc.success')\r\n        })\r\n        .catch(error => {\r\n            userWalkup.submitError = true\r\n            userWalkup.submitting = false\r\n            if (error.responseJSON) {\r\n                userWalkup.errorMessage = error.responseJSON.apiMessage\r\n            }\r\n            else {\r\n                userWalkup.errorMessage = 'Error submitting registration request'\r\n            }\r\n        })\r\n    }\r\n\r\n    userWalkup.submitPublic = () => {\r\n        userWalkup.submitting = true\r\n        userWalkup.submitError = false\r\n        userWalkup.captchaEntryError=false\r\n        let string = userWalkup.captchaOnload.split(' ').join('')\r\n\r\n        if (string == userWalkup.captchaEntry) {\r\n            $http({\r\n              method: 'POST',\r\n              url: 'http://kv-1-qa.run.covisintrnd.com/kv/my_key',\r\n              headers: {\r\n               'Content-Type': 'text/plain',\r\n               'Accept':'text/plain',\r\n               'x-realm':'Q-QIMS-DEMO',\r\n               'x-requestor': '[Q-QIMS-DEMO]Q-QIMS-DEMO_ADMIN',\r\n               'x-requestor-app': 'jAZJnDfFXRDYen6HqADmIpTLcTEmt36z',\r\n               'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n                'Access-Control-Allow-Headers': 'Content-Type, X-Requested-With',\r\n                'X-Random-Shit':'123123123'\r\n             },\r\n             data: {\r\n                \"firstName\":\"Srini\",\r\n                \"lastName\":\"Madala\",\r\n                \"email\":\"srinivas.madala@covisint.com\",\r\n                \"country\":\"USA\",\r\n                \"cellPhone\":\"248-483-2222\",\r\n                \"medicalLicenseNo\":\"12345\",\r\n                \"studyList\":\"TESTFINANCE01\"\r\n            }\r\n            }).then(function successCallback(response) {\r\n                $state.go('misc.success')\r\n              }, function errorCallback(response) {\r\n                userWalkup.submitError = true\r\n                userWalkup.submitting = false\r\n                if (response.responseJSON) {\r\n                userWalkup.errorMessage = response.responseJSON.apiMessage\r\n            }\r\n            else {\r\n                userWalkup.errorMessage = 'Error submitting registration request'\r\n            }\r\n              });\r\n        }\r\n        else {\r\n            userWalkup.captchaEntryError=true\r\n            userWalkup.submitting = false\r\n            $scope.$apply();\r\n        }\r\n\r\n\r\n\r\n        /*API.cui.createRegPublic({key:userWalkup.user.email,data:data})\r\n        .then(() => {\r\n            userWalkup.success = true\r\n            userWalkup.submitting = false\r\n            $state.go('misc.success')\r\n        })\r\n        .fail(error => {\r\n            userWalkup.submitError = true\r\n            userWalkup.submitting = false\r\n            if (error.responseJSON) {\r\n                userWalkup.errorMessage = error.responseJSON.apiMessage\r\n            }\r\n            else {\r\n                userWalkup.errorMessage = 'Error submitting registration request'\r\n            }\r\n        })*/\r\n    }\r\n\r\n    userWalkup.selectOrganization = (organization) => {\r\n        userWalkup.organization = organization\r\n        userWalkup.applications.numberOfSelected = 0 // Restart applications count\r\n        userWalkup.applications.processedSelected = undefined // Restart applications selected\r\n\r\n        Registration.selectOrganization(organization,userWalkup.appPaginationSize)\r\n        .then(res => {\r\n            const grants = res.grants\r\n            userWalkup.appCount=res.appCount\r\n            userWalkup.appReRenderPaginate && userWalkup.appReRenderPaginate()\r\n            if (!grants.length) userWalkup.applications.list = undefined\r\n            else {\r\n                userWalkup.applications.list = grants\r\n            }\r\n\r\n            userWalkup.passwordRules = res.passwordRules\r\n        })\r\n        .fail((error) => {\r\n            console.error('Error getting organization information', error)\r\n            APIError.onFor('userWalkup.orgInfo', error)\r\n        })\r\n        .always(() => {\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    userWalkup.orgPaginationPageHandler = (newPage) => {\r\n        userWalkup.updatingOrgs = true\r\n        Registration.getOrgsByPageAndName(newPage,userWalkup.orgPaginationSize)\r\n        .then((res) => {\r\n            userWalkup.orgPaginationCurrentPage=newPage\r\n            userWalkup.organizationList = res\r\n            userWalkup.updatingOrgs = false\r\n            $scope.$digest()\r\n        })\r\n        .fail((err) => {\r\n            console.error(\"There was an error in fetching organization list for page \"+newPage +err)\r\n            userWalkup.updatingOrgs = false\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    userWalkup.appPaginationPageHandler = (newPage) => {\r\n        userWalkup.updatingApps = true\r\n        Registration.getOrgAppsByPage(newPage,userWalkup.appPaginationSize,userWalkup.organization.id)\r\n        .then((res) => {\r\n            userWalkup.appPaginationCurrentPage=newPage\r\n            if (!res.length) {\r\n                userWalkup.updatingApps=false\r\n                userWalkup.applications.list = undefined\r\n            }\r\n            else {\r\n                userWalkup.applications.list = res\r\n                userWalkup.updatingApps = false\r\n            }\r\n            $scope.$digest()\r\n        })\r\n        .fail((err) =>{\r\n            userWalkup.updatingApps =false\r\n            $scope.$digest()\r\n            console.error(\"There was an error in fetching app list for page \"+newPage +err)\r\n        })\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n    /* -------------------------------------------- WATCHERS START -------------------------------------------- */\r\n\r\n    /*$scope.$watch('userWalkup.user', (a) => {\r\n        if (a && Object.keys(a).length !== 0) {\r\n            localStorageService.set('userWalkup.user', a);\r\n        }\r\n    }, true)*/\r\n\r\n    $scope.$watch('userWalkup.orgFilterByname', (a) => {\r\n        if (a!==undefined) {\r\n            userWalkup.updatingOrgs=true\r\n            Registration.getOrgsByPageAndName(1,userWalkup.orgPaginationSize,a)\r\n            .then((res)=> {\r\n                userWalkup.organizationList = res\r\n                userWalkup.updatingOrgs=false\r\n                $scope.$digest()\r\n            })\r\n            .fail((err) => {\r\n                userWalkup.updatingOrgs=false\r\n                $scope.$digest()\r\n                 console.error(\"There was an error in filtering orgs by name \"+err)\r\n            })  \r\n        }\r\n              \r\n    })\r\n\r\n /*   userWalkup.checkDuplicateEmail = (value) => {\r\n        if (value &&value!==\"\") {\r\n            $q.all([Registration.isEmailTaken(value).promise])\r\n            .then(res => {\r\n                userWalkup.isEmailTaken=res[0]\r\n            })\r\n        }\r\n        else{\r\n            userWalkup.isEmailTaken=true;\r\n        }        \r\n    }\r\n    \r\n    userWalkup.checkDuplicateEmail(userWalkup.user.email)*/\r\n    userWalkup.customErrors = {\r\n        userName: {\r\n            usernameTaken: Registration.isUsernameTaken\r\n        },\r\n        email: {\r\n            email: function(){\r\n                var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n                if (userWalkup.user.email) {\r\n                    return EMAIL_REGEXP.test(userWalkup.user.email)\r\n                }else{\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        answersMatch: {\r\n            answersMatch:function(){\r\n                if (userWalkup.userLogin && userWalkup.userLogin.challengeAnswer2) {\r\n                    return userWalkup.userLogin.challengeAnswer2!==userWalkup.userLogin.challengeAnswer1;\r\n                }else{\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Error handlers for Inline Edits in review page\r\n    userWalkup.inlineEdit = {\r\n        firstName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.firstNameError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.firstNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveFirstName=value===\"\" || !value\r\n        },\r\n        lastName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.lastNameError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.lastNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveLastName=value===\"\" || !value\r\n        },\r\n        email:function(value){\r\n            var EMAIL_REGXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.emailError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.emailError={\r\n                    required: value===\"\" || !value,\r\n                    email:!EMAIL_REGXP.test(value)\r\n                }\r\n                //emailTaken:\r\n                /*if (!userWalkup.inlineEdit.emailError.required && !userWalkup.inlineEdit.emailError.email) {\r\n                    userWalkup.checkDuplicateEmail(value)\r\n                }*/\r\n                  \r\n            }\r\n            userWalkup.inlineEdit.noSaveEmail=value===\"\" || !value || !EMAIL_REGXP.test(value)\r\n        },\r\n        //For autocomplete need to handle differently\r\n        country:function(value){\r\n            console.log(value)\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.countryError={\r\n                    required:true\r\n                }\r\n            }else{\r\n                userWalkup.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n            userWalkup.inlineEdit.noSaveCountry=value===undefined \r\n        },\r\n        address1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.address1Error={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.address1Error={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveAddress1=value===\"\" || !value\r\n        },\r\n        telephone:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.telephoneError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.telephoneError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveTelephone=value===\"\" || !value\r\n        },\r\n        userId:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.userIdError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.userIdError={\r\n                    required: value===\"\" || !value,\r\n                } \r\n                //usernameTaken: \r\n                if (!userWalkup.inlineEdit.userIdError.required) {\r\n                    $q.all([Registration.isUsernameTaken(value).promise])\r\n                    .then(res => {\r\n                        userWalkup.inlineEdit.userIdError.usernameTaken=!res[0]\r\n                        userWalkup.inlineEdit.noSaveUserId=value===\"\" || !value ||userWalkup.inlineEdit.userIdError.usernameTaken\r\n                    })\r\n                }\r\n                 \r\n            }\r\n             userWalkup.inlineEdit.noSaveUserId=value===\"\" || !value\r\n        },\r\n        challengeAnswer1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.challengeAnswer1Error={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.challengeAnswer1Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userWalkup.userLogin.challengeAnswer2\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveChallengeAnswer1=value===\"\" || !value||value===userWalkup.userLogin.challengeAnswer2\r\n        },\r\n        challengeAnswer2:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.challengeAnswer2Error={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.challengeAnswer2Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userWalkup.userLogin.challengeAnswer1\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveChallengeAnswer2=value===\"\" || !value || value===userWalkup.userLogin.challengeAnswer1\r\n        },\r\n        //on save functions needed to show error when pressed enter\r\n        updateFirstNameError:function(){\r\n            userWalkup.inlineEdit.firstName(userWalkup.user.name.given)\r\n        },\r\n        updateLastNameError:function(){\r\n            userWalkup.inlineEdit.lastName(userWalkup.user.name.surname)\r\n        },\r\n        updateEmailError: function() {\r\n            userWalkup.emailRe=userWalkup.user.email;\r\n            userWalkup.inlineEdit.email(userWalkup.user.email)\r\n        },\r\n        updateCountryError: function() {\r\n            if (userWalkup.userCountry) {\r\n                userWalkup.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n        },\r\n        updateAddress1Error:function(){\r\n            userWalkup.inlineEdit.address1(userWalkup.user.addresses[0].streets[0])\r\n        },\r\n        updateTelephoneError:function(){\r\n            userWalkup.inlineEdit.telephone(userWalkup.user.phones[0].number)\r\n        },\r\n        updateUserIdError:function(){\r\n            userWalkup.inlineEdit.userId(userWalkup.userLogin.username)\r\n        },\r\n        updateChallengeAnswer1Error:function(){\r\n            userWalkup.inlineEdit.challengeAnswer1(userWalkup.userLogin.challengeAnswer1)\r\n        },\r\n        updateChallengeAnswer2Error:function(){\r\n            userWalkup.inlineEdit.challengeAnswer2(userWalkup.userLogin.challengeAnswer2)\r\n        },\r\n\r\n    }\r\n\r\n    /* --------------------------------------------- WATCHERS END --------------------------------------------- */\r\n\r\n    var alpha = new Array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\r\n    var i;\r\n    for (i = 0; i < 6; i++) {\r\n        var a = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var b = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var c = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var d = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var e = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var f = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var g = alpha[Math.floor(Math.random() * alpha.length)];\r\n    }\r\n    var code = a + ' ' + b + ' ' + ' ' + c + ' ' + d + ' ' + e + ' ' + f + ' ' + g;\r\n    userWalkup.captchaOnload = code\r\n\r\n    userWalkup.reload=()=>{\r\n        var alpha = new Array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\r\n    var i;\r\n    for (i = 0; i < 6; i++) {\r\n        var a = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var b = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var c = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var d = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var e = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var f = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var g = alpha[Math.floor(Math.random() * alpha.length)];\r\n    }\r\n    var code = a + ' ' + b + ' ' + ' ' + c + ' ' + d + ' ' + e + ' ' + f + ' ' + g;\r\n    userWalkup.captchaOnload = code\r\n    }\r\n\r\nfunction ValidCaptcha() {\r\n    var string1 = removeSpaces(document.getElementById('mainCaptcha').value);\r\n    var string2 = removeSpaces(document.getElementById('txtInput').value);\r\n    if (string1 == string2) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction removeSpaces(string) {\r\n    return string.split(' ').join('');\r\n}\r\n})\r\n\r\nangular.module('organization', [])\r\n.config(['$stateProvider', ($stateProvider) =>  {\r\n\r\n    const templateBase = 'app/modules/organization/';\r\n\r\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\r\n\r\n    const loginRequired = true;\r\n\r\n    $stateProvider\r\n        .state('organization', {\r\n            url: '/organization',\r\n            template: '<div ui-view></div>',\r\n            access: loginRequired\r\n        })\r\n        // Profile --------------------------------------------------\r\n        .state('organization.profile', {\r\n            url: '/profile/:orgId?userId',\r\n            templateUrl: templateBase + 'profile/organization-profile.html',\r\n            controller: returnCtrlAs('orgProfile'),\r\n            access: loginRequired\r\n        })\r\n        // Directory ------------------------------------------------\r\n        .state('organization.directory', {\r\n            abstract:true,\r\n            template: '<div ui-view></div>'\r\n        })\r\n        .state('organization.directory.userList', {\r\n            url: '/directory/:orgId?page&pageSize&sortBy&status&fullName',\r\n            templateUrl: templateBase + 'directory/user-list/directory-userList.html',\r\n            controller: returnCtrlAs('orgDirectory'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.directory.userDetails', {\r\n            url: '/user-details?userId&orgId',\r\n            views: {\r\n                '': {\r\n                    templateUrl: templateBase + 'directory/user-details/directory-userDetails.html',\r\n                    controller: returnCtrlAs('userDetails')\r\n                },\r\n                'profile@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/profile/userDetails-profile.html',\r\n                    controller: returnCtrlAs('userDetailsProfile')\r\n                },\r\n                'applications@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/applications/userDetails-applications.html',\r\n                    controller: returnCtrlAs('userDetailsApps')\r\n                },\r\n                'roles@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/roles/userDetails-roles.html',\r\n                    controller: returnCtrlAs('userDetailsRoles')\r\n                },\r\n                'history@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/history/userDetails-history.html',\r\n                    controller: returnCtrlAs('userDetailsHistory')\r\n                }\r\n            },\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.directory.userAppDetails', {\r\n            url: '/user-app-details/:appId?userId&orgId',\r\n            templateUrl: templateBase + 'directory/user-app-details/directory-userAppDetails.html',\r\n            controller: returnCtrlAs('userAppDetails'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.directory.orgDetails', {\r\n            url: '/org-details?orgId&page&pageSize',\r\n            views: {\r\n                '': {\r\n                    templateUrl: templateBase + 'directory/org-details/directory-orgDetails.html',\r\n                    controller: returnCtrlAs('orgDetails')\r\n                },\r\n                'profile@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/profile/orgDetails-profile.html',\r\n                    controller: returnCtrlAs('orgDetailsProfile')\r\n                },\r\n                'applications@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/applications/orgDetails-applications.html',\r\n                    controller: returnCtrlAs('orgDetailsApps')\r\n                },\r\n                'users@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/users/orgDetails-users.html',\r\n                    controller: returnCtrlAs('orgDetailsUsers')\r\n                },\r\n                'hierarchy@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/hierarchy/orgDetails-hierarchy.html',\r\n                    controller: returnCtrlAs('orgDetailsHierarchy')\r\n                }\r\n            },\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        // Hierarchy ------------------------------------------------\r\n        .state('organization.hierarchy', {\r\n            url: '/hierarchy/:orgId',\r\n            templateUrl: templateBase + 'hierarchy/organization-hierarchy.html',\r\n            controller: returnCtrlAs('orgHierarchy'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        // applications----------------------------------------------\r\n        .state('organization.applications', {\r\n            url: '/applications/:orgId?name&page&pageSize&service.category&sortBy&refine',\r\n            templateUrl: templateBase + 'applications/organization-applications.html',\r\n            controller: returnCtrlAs('organizationApplications'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.applicationDetails', {\r\n            url: '/applications/:appId/details/:orgId',\r\n            templateUrl: templateBase + 'applications/applicationDetails/organization-applicationDetails.html',\r\n            controller: returnCtrlAs('orgApplicationDetails'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.newRequest', {\r\n            url: '/request',\r\n            templateUrl: templateBase + 'applications/appRequest/newRequest/appRequest-newRequest.html',\r\n            controller: returnCtrlAs('orgAppRequest'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.newRequestReview', {\r\n            url: '/request/review',\r\n            templateUrl: templateBase + 'applications/appRequest/newRequestReview/appRequest-newRequestReview.html',\r\n            controller: returnCtrlAs('orgAppRequestReview'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.search', {\r\n            url: '/search?name&category&page&pageSize',\r\n            templateUrl: templateBase + 'applications/search/orgApplications-search.html',\r\n            controller: returnCtrlAs('orgAppSearch'),\r\n            access: loginRequired\r\n        })\r\n        // Roles ----------------------------------------------------\r\n        .state('organization.roles', {\r\n            url: '/roles?orgID',\r\n            templateUrl: templateBase + 'roles/organization-roles.html',\r\n            controller: returnCtrlAs('orgRoles'),\r\n            access:loginRequired\r\n        })\r\n        // Requests -------------------------------------------------\r\n        .state('organization.requests', {\r\n            url: '/requests',\r\n            template: '<div ui-view></div>',\r\n            access: loginRequired\r\n        })\r\n        .state('organization.requests.newGrant', {\r\n            url: '/new-grant?orgId&userId',\r\n            templateUrl: templateBase + 'requests/newGrant/requests-newGrant.html',\r\n            controller: returnCtrlAs('newGrant'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToUserLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newGrantSearch', {\r\n            url: '/search?type&category&name&orgId&userId&page&pageSize&sortBy',\r\n            templateUrl: templateBase + 'requests/newGrant/search/search.html',\r\n            controller: returnCtrlAs('newGrantSearch'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToUserLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newGrantClaims', {\r\n            url: '/claims?orgId&userId',\r\n            templateUrl: templateBase + 'requests/newGrant/claims/claims.html',\r\n            controller: returnCtrlAs('newGrantClaims'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToUserLogic\r\n            }\r\n        })\r\n        // Org Grant\r\n        .state('organization.requests.newOrgGrant', {\r\n            url: '/new-org-grant?orgId',\r\n            templateUrl: templateBase + 'requests/newOrgGrant/requests-newGrant.html',\r\n            controller: returnCtrlAs('newOrgGrant'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToOrgLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newOrgGrantSearch', {\r\n            url: '/search-org?type&category&name&orgId&page&pageSize&sortBy',\r\n            templateUrl: templateBase + 'requests/newOrgGrant/search/search.html',\r\n            controller: returnCtrlAs('newOrgGrantSearch'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToOrgLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newOrgGrantClaims', {\r\n            url: '/claims-org?orgId',\r\n            templateUrl: templateBase + 'requests/newOrgGrant/claims/claims.html',\r\n            controller: returnCtrlAs('newOrgGrantClaims'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToOrgLogic\r\n            }\r\n        })\r\n        .state('organization.requests.pendingRequests', {\r\n            url: '/pending-requests?userId&orgId',\r\n            templateUrl: templateBase + 'requests/pendingRequestsReview/requests-pendingRequests.html',\r\n            controller: returnCtrlAs('pendingRequests'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.requests.pendingRequestsReview', {\r\n            url: '/pending-requests/review?userId&orgId',\r\n            templateUrl: templateBase + 'requests/pendingRequestsReview/requests-pendingRequestsReview.html',\r\n            controller: returnCtrlAs('pendingRequestsReview'),\r\n            access: loginRequired\r\n        })\r\n        // Approval of Org requests\r\n        .state('organization.requests.organizationRequest', {\r\n            url: '/organization-request?orgId&userId',\r\n            templateUrl: templateBase + 'requests/organizationRequest/requests-organization.html',\r\n            controller: returnCtrlAs('organizationRequest'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.organizationRequestReview', {\r\n            url: '/organization-request-review?orgId',\r\n            templateUrl: templateBase + 'requests/organizationRequest/requests-organizationReview.html',\r\n            controller: returnCtrlAs('organizationRequestReview'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.organizationAppRequest', {\r\n            url: '/organization-app-request?orgId&userId',\r\n            templateUrl: templateBase + 'requests/organizationAppRequests/requests-organization.html',\r\n            controller: returnCtrlAs('organizationAppRequest'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.organizationAppRequestReview', {\r\n            url: '/organization-app-request-review?orgId',\r\n            templateUrl: templateBase + 'requests/organizationAppRequests/requests-organizationReview.html',\r\n            controller: returnCtrlAs('organizationAppRequestReview'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.personRequest', {\r\n            url: '/person-request?userId&orgId',\r\n            templateUrl: templateBase + 'requests/personRequest/requests-person.html',\r\n            controller: returnCtrlAs('personRequest'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.requests.personRequestReview', {\r\n            url: '/person-request-review?userId&orgId',\r\n            templateUrl: templateBase + 'requests/personRequest/requests-personReview.html',\r\n            controller: returnCtrlAs('personRequestReview'),\r\n            access: loginRequired\r\n        })\r\n\r\n        // ADMIN...\r\n        .state('organization.requests.usersRegistrationRequests', {\r\n            url:'/userRequests',\r\n            templateUrl: templateBase + 'requests/usersRequests/usersRegistrationRequests/requests-RegistrationRequests.html',\r\n            controller: returnCtrlAs('usersRegistrationRequests'),\r\n            access: appConfig.orgAdminLogic\r\n        })\r\n        .state('organization.requests.usersAppRequests', {\r\n            url:'/applicationRequests',\r\n            templateUrl: templateBase + 'requests/usersRequests/usersAppRequests/requests-AppRequests.html',\r\n            controller: returnCtrlAs('usersAppRequests'),\r\n            access: appConfig.orgAdminLogic\r\n        })\r\n        .state('invitation', {\r\n            url: '/invitation',\r\n            template: '<div ui-view></div>',\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.inviteSelect', {\r\n            url: '/select',\r\n            templateUrl:templateBase + 'invitation/invitation.html',\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.inviteUser', {\r\n            url: '/user',\r\n            templateUrl:templateBase + 'invitation/user/user.html',\r\n            controller: returnCtrlAs('user'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.division', {\r\n            url: '/division',\r\n            templateUrl:templateBase + 'invitation/division/division.html',\r\n            controller: returnCtrlAs('division'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.tlo', {\r\n            url: '/tlo',\r\n            templateUrl:templateBase + 'invitation/tlo/tlo.html',\r\n            controller: returnCtrlAs('tlo'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        // Org Requests/ADMIN\r\n        .state('organization.requests.orgRegistrationRequests', {\r\n            url:'/orgRequests?page&pageSize&organizationName',\r\n            templateUrl: templateBase + 'requests/orgRequests/orgRegistrationRequests/requests-RegistrationRequests.html',\r\n            controller: returnCtrlAs('orgRegistrationRequests'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.orgAppRequests', {\r\n            url:'/orgApplicationRequests?pageSize&page',\r\n            templateUrl: templateBase + 'requests/orgRequests/orgAppRequests/requests-AppRequests.html',\r\n            controller: returnCtrlAs('orgAppRequests'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        });\r\n}]);\r\n\r\nangular.module('organization')\r\n.controller('orgAppRequestCtrl', function(API,DataStorage,Loader,User,$scope,$state,$stateParams) {\r\n\r\n    const orgAppRequest = this;\r\n    const orgAppsBeingRequested = DataStorage.getType('orgAppsBeingRequested');\r\n    const loaderName = 'orgAppRequest.loading';\r\n    orgAppRequest.stateParamsOrgId=User.user.organization.id;\r\n\r\n    orgAppRequest.orgAppsBeingRequested = [];\r\n    orgAppRequest.numberOfOrgRequests = 0;\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(loaderName);\r\n\r\n    if (orgAppsBeingRequested) {\r\n        orgAppRequest.numberOfOrgRequests = Object.keys(orgAppsBeingRequested).length;\r\n    }\r\n    \r\n    API.cui.getOrgAppCategories({organizationId:orgAppRequest.stateParamsOrgId})\r\n    .then((res)=>{\r\n        orgAppRequest.categories = res;\r\n        Loader.offFor(loaderName);\r\n        $scope.$digest();\r\n    })\r\n    .fail((err)=>{\r\n         Loader.offFor(loaderName);\r\n    });\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgAppRequest.searchCallback = function(searchWord) {\r\n        $state.go('organization.search', {name: searchWord});\r\n    };\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgAppRequestReviewCtrl', function(API,APIError,BuildPackageRequests,DataStorage,Loader,User,$q,$state,$timeout,AppRequests,$stateParams) {\r\n\r\n    const orgAppRequestReview = this\r\n    const loaderName = 'orgAppRequestReview.'\r\n    orgAppRequestReview.stateParamsOrgId=$stateParams.orgId;\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(loaderName + 'loading')\r\n    /*orgAppRequestReview.appsRequests = DataStorage.getType('orgAppsBeingRequested', User.user.id)*/\r\n    Loader.offFor(loaderName + 'loading')\r\n\r\n     if(Object.keys(AppRequests.get()).length===0 && DataStorage.getType('orgAppsBeingRequested', User.user.id)) {\r\n        AppRequests.set(DataStorage.getType('orgAppsBeingRequested', User.user.id));\r\n    }\r\n\r\n\r\n    const appRequests=AppRequests.get(),\r\n        appsBeingRequested=Object.keys(appRequests);\r\n\r\n    if (appsBeingRequested.length===0) {\r\n        $state.go('organization.search',{orgId:orgAppRequestReview.stateParamsOrgId});\r\n    }\r\n\r\n    orgAppRequestReview.appRequests=[];\r\n\r\n    for(let i=0; i < appsBeingRequested.length; i += 2){\r\n        const applicationGroup = [];\r\n        applicationGroup.push(appRequests[appsBeingRequested[i]]);\r\n        if (appRequests[appsBeingRequested[i+1]]) {\r\n            applicationGroup.push(appRequests[appsBeingRequested[i+1]]);\r\n        }\r\n        //get Terms And Conditions for requested packages\r\n        applicationGroup.forEach(app=>{\r\n            if (app.servicePackage.organizationTacEnabled) {\r\n                API.cui.getOrgTacOfPackage({packageId:app.servicePackage.id})\r\n                .then(res=>{\r\n                    app.tac=res;\r\n                })\r\n                .fail(err=>{\r\n                    console.log(\"There was an error fetching Tac\")\r\n                    console.log(err)\r\n                })\r\n            }\r\n        })\r\n        orgAppRequestReview.appRequests.push(applicationGroup);\r\n    }\r\n\r\n    orgAppRequestReview.numberOfRequests=0;\r\n    appsBeingRequested.forEach(() => {\r\n        orgAppRequestReview.numberOfRequests += 1;\r\n    });\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgAppRequestReview.removeApplicationRequest = (requestId) => {\r\n        delete orgAppRequestReview.appRequests[requestId]\r\n\r\n        if (Object.keys(orgAppRequestReview.appRequests).length === 0) {\r\n            DataStorage.deleteType('orgAppsBeingRequested')\r\n            $state.go('organization.applications',{orgId:orgAppRequestReview.stateParamsOrgId})\r\n        } \r\n        else {\r\n            DataStorage.setType('orgAppsBeingRequested', orgAppRequestReview.appRequests)\r\n        }\r\n    }\r\n\r\n    orgAppRequestReview.submit = () => {\r\n        let requestArray = []\r\n\r\n        Loader.onFor(loaderName + 'attempting')\r\n        \r\n        /*Object.keys(orgAppRequestReview.appRequests).forEach((request) => {\r\n            requestArray.push(orgAppRequestReview.appRequests[request])\r\n        })\r\n*/\r\n         orgAppRequestReview.appRequests.forEach((appRequestGroup,i) => {\r\n            appRequestGroup.forEach((appRequest,x) => {\r\n                 requestArray[i+x] = appRequest;\r\n            })\r\n            \r\n        })\r\n\r\n        $q.all(BuildPackageRequests(User.user.organization.id, 'organization', requestArray))\r\n        .then(() => {\r\n            Loader.offFor(loaderName + 'attempting')\r\n            DataStorage.deleteType('orgAppsBeingRequested')\r\n            AppRequests.clear(); // clears app requests if the request goes through\r\n            DataStorage.setType('orgAppsBeingRequested',{});\r\n            orgAppRequestReview.success=true\r\n            $timeout(() => {\r\n                 $state.go('organization.applications',{orgId:User.user.organization.id});\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n            APIError.onFor(loaderName + 'requestError')\r\n            Loader.offFor(loaderName + 'attempting')\r\n        })\r\n    }\r\n\r\n    orgAppRequestReview.updateSearch = (nameSearch) => {\r\n        orgAppRequestReview.search = nameSearch;\r\n    };\r\n\r\n    orgAppRequestReview.showTac= (application)=>{\r\n        if (application.tac) {\r\n            orgAppRequestReview.tacContent=application.tac.tacText\r\n            orgAppRequestReview.step=2\r\n        }\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgApplicationDetailsCtrl', function(API,APIHelpers,APIError,Loader,Sort,User,$q,$scope,$state,$stateParams) {\r\n\r\n    const orgApplicationDetails = this;\r\n    const organizationId = $stateParams.orgId\r\n    const serviceId = $stateParams.appId;\r\n    const loaderName = 'orgApplicationDetails.';\r\n    orgApplicationDetails.stateParamsOrgId=$stateParams.orgId\r\n\r\n    orgApplicationDetails.sortFlag = true;\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const checkIfRequestable = (organizationId, relatedAppsArray) => {\r\n    \tif (relatedAppsArray) {\r\n\t    \tAPI.cui.getOrganizationRequestableApps({organizationId: organizationId})\r\n\t    \t.then((res) => {\r\n\t    \t\trelatedAppsArray.forEach((app) => {\r\n\t    \t\t\tlet requestable = _.find(res, (id) => { return app.id = id });\r\n\t    \t\t\tif (requestable) {\r\n\t    \t\t\t\tapp.requestable = true;\r\n\t    \t\t\t}\r\n\t    \t\t});\r\n\t    \t})\r\n            .then(() => {\r\n                $scope.$digest();\r\n            });\r\n    \t}\r\n    };\r\n\r\n    const getGrantArrayData = (grantArray) => {\r\n        let promises = [];\r\n\r\n        Loader.onFor(loaderName + 'loadingPageData');\r\n\r\n        grantArray.forEach((grant) => {\r\n            promises.push(\r\n                API.cui.getPerson({personId: grant.grantee.id})\r\n                .then((res) => {\r\n                    grant.person = res;\r\n                    return API.cui.getOrganization({organizationId: grant.person.organization.id});\r\n                })\r\n                .then((res) => {\r\n                    grant.organization = res;\r\n                    return API.cui.getPersonPackageClaims({grantee: grant.person.organization.id, packageId: grant.servicePackage.id});\r\n                })\r\n                .then((res) => {\r\n                    grant.claims = res.packageClaims;\r\n                })\r\n            );\r\n        });\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n            orgApplicationDetails.grantList = grantArray;\r\n            Loader.offFor(loaderName + 'loadingPageData');\r\n        })\r\n        .catch((error) => {\r\n            Loader.offFor(loaderName + 'loadingPageData');\r\n            APIError.onFor(loaderName + 'grants: ', error);\r\n        });\r\n    };\r\n\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(loaderName + 'app');\r\n\r\n    API.cui.getOrganization({organizationId: organizationId})\r\n    .then((res) => {\r\n        orgApplicationDetails.organization = res\r\n        return API.cui.getOrganizationGrantedApps({organizationId: organizationId, qs: [['service.id', serviceId]]});\r\n    })\r\n    .then((res) => {\r\n    \torgApplicationDetails.application = res[0];\r\n    \treturn API.cui.getOrganizationRequestableApps({organizationId: organizationId, qs: [['service.id', serviceId]]});\r\n    })\r\n    .then((res) => {\r\n    \torgApplicationDetails.application.bundledApps = res[0].bundledApps;\r\n    \torgApplicationDetails.application.relatedApps = res[0].relatedApps;\r\n    \t/*return API.cui.getPackageGrants    ({qs: [\r\n    \t\t['grantedPackageId', orgApplicationDetails.application.servicePackage.id],\r\n    \t\t['granteeType', 'person']\r\n    \t]});*/\r\n        Loader.offFor(loaderName + 'app');\r\n        checkIfRequestable(organizationId, orgApplicationDetails.application.relatedApps);\r\n         $scope.$apply();\r\n    })\r\n   /* .then((res) => {\r\n        Loader.offFor(loaderName + 'app');\r\n        orgApplicationDetails.unparsedGrantList = res;\r\n        getGrantArrayData(orgApplicationDetails.unparsedGrantList);*/\r\n        /*Loader.onFor(loaderName + 'user');*/\r\n        /*checkIfRequestable(organizationId, orgApplicationDetails.application.relatedApps);*/\r\n        /*return API.cui.getPersons({qs: [\r\n            ['organization.id', organizationId]\r\n        ]});*//*Loader.offFor(loaderName + 'user');*/\r\n   /* })*/\r\n    /*.then((res) => {\r\n        orgApplicationDetails.grantList = res;\r\n        Loader.offFor(loaderName + 'user');\r\n        $scope.$apply();\r\n    })*/\r\n    .fail((error) => {\r\n    \tAPIError.onFor(loaderName + 'grants: ', error);\r\n        Loader.offFor(loaderName + 'user');\r\n    });\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgApplicationDetails.sort = (sortValue) => { \r\n        Sort.listSort(orgApplicationDetails.userList, sortValue, orgApplicationDetails.sortFlag);\r\n        orgApplicationDetails.sortFlag =! orgApplicationDetails.sortFlag;\r\n    };\r\n\r\n    orgApplicationDetails.parseGrantUsersByStatus = (status) => {\r\n        if (status === 'all') {\r\n            orgApplicationDetails.grantList = orgApplicationDetails.unparsedGrantList;\r\n        }\r\n        else {\r\n            let filteredGrantUsers = _.filter(orgApplicationDetails.unparsedGrantList, function(grant) {\r\n                return grant.person.status === status;\r\n            });\r\n            orgApplicationDetails.grantList = filteredGrantUsers;\r\n        }\r\n    };\r\n\r\n    orgApplicationDetails.newGrants = () => {\r\n        $state.go('applications.orgApplications.newGrant', {appId: serviceId});\r\n    };\r\n\r\n    orgApplicationDetails.switchDivision = (organization) => {\r\n        Loader.onFor(loaderName + 'loadingPageData');\r\n\r\n        API.cui.getGrants({qs: [\r\n            ['grantedPackageId', orgApplicationDetails.application.servicePackage.id],\r\n            ['granteeType', 'person'],\r\n            ['organization.id', organization.id]\r\n        ]})\r\n        .then((res) => {\r\n            orgApplicationDetails.unparsedGrantList = res;\r\n            getGrantArrayData(orgApplicationDetails.unparsedGrantList);\r\n            Loader.offFor(loaderName + 'loadingPageData');\r\n        })\r\n        .fail((error) => {\r\n            APIError.onFor(loaderName + 'grants: ', error);\r\n        });\r\n    };\r\n\r\n    orgApplicationDetails.requestRelatedApp = (service) => {\r\n        let data = {\r\n            requestor: {\r\n                id: organizationId,\r\n                type: 'organization'  \r\n            } ,\r\n            'servicePackage': {\r\n                id: service.packageId\r\n            }\r\n        };\r\n\r\n        Loader.onFor(loaderName + 'appRequest');\r\n\r\n        API.cui.postRequest({data: data})\r\n        .then(() => {\r\n            service.requestable = false;\r\n            Loader.offFor(loaderName + 'appRequest');\r\n            $scope.$digest();\r\n        })\r\n        .fail((error) => {\r\n            APIError.onFor(loaderName + 'appRequest')\r\n            console.log(error);\r\n            $scope.$digest();\r\n        });\r\n    };\r\n\r\n\r\n    orgApplicationDetails.mobileTabs = (tab) =>{\r\n\r\n        if(tab == 'bundled'){\r\n            orgApplicationDetails.mobileTabs.bundled   =   true;\r\n            orgApplicationDetails.mobileTabs.related   =   false;\r\n        }else if(tab == 'related'){\r\n            orgApplicationDetails.mobileTabs.bundled   =   false;\r\n            orgApplicationDetails.mobileTabs.related   =   true;\r\n        }\r\n    };\r\n\r\n    orgApplicationDetails.suspendApplication = (organization) => {\r\n        Loader.onFor(loaderName + 'app');\r\n\r\n        var suspendObj= {\r\n                \"grantee\":{\r\n                  \"id\":orgApplicationDetails.application.owningOrganization.id,\r\n                  \"type\":\"organization\",\r\n                  \"realm\":orgApplicationDetails.application.realm\r\n                },\r\n                \"servicePackage\":{\r\n                  \"id\":orgApplicationDetails.application.servicePackage.id,\r\n                  \"type\":\"servicepackage\",\r\n                  \"realm\":orgApplicationDetails.application.realm\r\n                },\r\n                \"justification\":\"Suspending Organization Application\"\r\n                };\r\n\r\n        API.cui.suspendOrgPkg({data: suspendObj})\r\n        .then((res) => {\r\n            orgApplicationDetails.success='true';\r\n            Loader.offFor(loaderName + 'app');\r\n            $timeout(() => {\r\n                $state.go('applications.orgApplications.applicationList');\r\n            }, 3000);\r\n        })\r\n        .fail((error) => {\r\n            Loader.offFor(loaderName + 'app');\r\n            orgApplicationDetails.suspendError=true;\r\n            $scope.$apply();\r\n            /*APIError.onFor(loaderName + 'grants: ', error);*/\r\n        });\r\n    };\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n});\r\nangular.module('organization')\r\n.controller('organizationApplicationsCtrl', function(API,Sort,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\r\n    const organizationApplications = this;\r\n    organizationApplications.stateParamsOrgId=$stateParams.orgId\r\n\r\n    organizationApplications.loading = true;\r\n    organizationApplications.search = {orgId:organizationApplications.stateParamsOrgId};\r\n    organizationApplications.search.page = organizationApplications.search.page || 1;\r\n    organizationApplications.paginationPageSize = organizationApplications.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    organizationApplications.search.pageSize = organizationApplications.paginationPageSize;\r\n\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) organizationApplications.search[property] = undefined;\r\n        organizationApplications.search[property] === firstValue ? organizationApplications.search[property] = secondValue : organizationApplications.search[property] = firstValue;\r\n    };*/\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) {\r\n            organizationApplications.search[property] = undefined;\r\n            return\r\n        }\r\n        organizationApplications.search[property] = organizationApplications.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }*/\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            organizationApplications.search[property] = undefined\r\n            return\r\n        }\r\n        organizationApplications.search[property] = organizationApplications.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    const getPackageServices = (ArrayOfPackages) => {\r\n        let services = [];\r\n\r\n        ArrayOfPackages.forEach((servicePackage) => {\r\n            API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\r\n            .then((res) => {\r\n                res.forEach((service) => {\r\n                    services.push(service);\r\n                });\r\n            });\r\n        });\r\n\r\n        return services;\r\n    };\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            organizationApplications.loading = false;\r\n        }\r\n        else {\r\n            organizationApplications.search.name = $stateParams.name;\r\n            organizationApplications.search.category = $stateParams.category;\r\n            organizationApplications.search.sortBy = $stateParams.sortBy;\r\n            organizationApplications.search.refine = $stateParams.refine;\r\n            if($stateParams.page)\r\n                organizationApplications.search.page = parseInt($stateParams.page);\r\n            if($stateParams.pageSize)\r\n                organizationApplications.search.pageSize = parseInt($stateParams.pageSize);\r\n\r\n            \r\n            API.cui.getOrgAppCategories({organizationId:organizationApplications.stateParamsOrgId})\r\n            .then((res)=>{\r\n                organizationApplications.categories = res;\r\n                $scope.$digest();\r\n            })\r\n            .fail((err)=>{\r\n               \r\n            });\r\n\r\n        }\r\n\r\n        let queryParams = [['page', String(organizationApplications.search.page)], ['pageSize', String(organizationApplications.search.pageSize)]];\r\n        const promises = [];\r\n        const opts = {\r\n            organizationId: organizationApplications.stateParamsOrgId,\r\n            qs: queryParams\r\n        };\r\n\r\n        if (organizationApplications.search.name) queryParams.push(['service.name', organizationApplications.search.name]);\r\n        if (organizationApplications.search.category) queryParams.push(['service.category', organizationApplications.search.category]);\r\n        // sortBy: +/-service.name, +/-service.creation, +/-grant.instant\r\n        if (organizationApplications.search.sortBy) queryParams.push(['sortBy', organizationApplications.search.sortBy]);\r\n\r\n        switch (organizationApplications.search.refine) {\r\n            case 'active':\r\n            case 'suspended':\r\n                queryParams.push(['grant.status', organizationApplications.search.refine]);\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n              /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                break;\r\n            case 'pending':\r\n                /*promises.push(\r\n                    API.cui.getOrgPendingServicePackages({qs: [['requestor.id', organizationId], ['requestor.type', 'organization']]})\r\n                    .then((res) => {\r\n                        return getPackageServices(res);\r\n                    }),\r\n                    API.cui.getOrganizationRequestableCount({organizationId: organizationId})\r\n                );*/\r\n                queryParams.push(['grant.status', organizationApplications.search.refine]);\r\n               /* promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n            case undefined:\r\n                /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n        }\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n            organizationApplications.appList = res[0];\r\n            organizationApplications.count = res[1];\r\n            /*organizationApplications.count = res[0].length;*/\r\n            organizationApplications.loading = false;\r\n            if (organizationApplications.reRenderPaginate) organizationApplications.reRenderPaginate();\r\n        })\r\n        .catch(err => {\r\n            organizationApplications.loadingError=true\r\n            organizationApplications.loading = false;\r\n        })\r\n    };\r\n    // get Organization to display name\r\n    API.cui.getOrganization({organizationId:organizationApplications.stateParamsOrgId})\r\n    .then(res => {\r\n        organizationApplications.organization=res;\r\n    })\r\n    onLoad(false);\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    organizationApplications.pageChange = (newpage) => {\r\n        organizationApplications.updateSearch('page', newpage);\r\n    };\r\n\r\n    organizationApplications.updateSearchByName = () => {\r\n        organizationApplications.updateSearch('name',organizationApplications.search['name'])\r\n    }\r\n\r\n    organizationApplications.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType){\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name');\r\n                break;\r\n            case 'date':\r\n                switchBetween('sortBy', '+grant.instant', '-grant.instant');\r\n                break;\r\n            case 'status':\r\n                organizationApplications.search.page = 1;\r\n                organizationApplications.search.refine = updateValue;\r\n                break;\r\n            case 'category':\r\n                organizationApplications.search.page = 1;\r\n                organizationApplications.search.category = $filter('cuiI18n')(updateValue);\r\n                break;\r\n            case 'name':\r\n                organizationApplications.search.page = 1\r\n                break\r\n        }\r\n\r\n        // Updates URL, doesn't change state\r\n        $state.transitionTo('organization.applications', organizationApplications.search, {notify: false});\r\n        onLoad(true);\r\n    };\r\n\r\n    organizationApplications.goToDetails = (application) => {\r\n        const opts = {\r\n            appId: application.id,\r\n            orgId: application.owningOrganization.id\r\n        };\r\n        $state.go('organization.applicationDetails', opts);\r\n    };\r\n\r\n    // ON CLICK FUNCTIONS END ---------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgAppSearchCtrl',function(API,DataStorage,Loader,User,$pagination,$q,$state,$stateParams) {\r\n\r\n    const orgAppSearch = this;\r\n    const loaderName = 'orgAppSearch.loading';\r\n    orgAppSearch.stateParamsOrgId=User.user.organization.id;\r\n\r\n    orgAppSearch.packageRequests = DataStorage.getType('orgAppsBeingRequested', User.user.id) || {};\r\n    orgAppSearch.appCheckbox = {};\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const processNumberOfRequestedApps = (pkgRequest) => {\r\n        if (pkgRequest) orgAppSearch.numberOfRequests++;\r\n        else orgAppSearch.numberOfRequests--;\r\n    };\r\n\r\n    const updateViewList = (list) => {\r\n        let deferred= $q.defer()\r\n        orgAppSearch.viewList=[]\r\n        let qs=[]\r\n        let apiPromises = []\r\n        angular.forEach(list, (app,parentIndex) => {\r\n            // Child App and Parent app requested by user\r\n            if(app.servicePackage.parent&&app.relatedApps){\r\n                let flag=false\r\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\r\n                    if (_.find(list,{id:realtedApp.id})) {\r\n                        flag=true\r\n                    }\r\n                    else{\r\n                        qs.push(['service.id',realtedApp.id])\r\n                    }\r\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\r\n                        apiPromises.push(API.cui.getOrganizationsRequestableApps({organizationId: User.user.organization.id,qs:qs}))\r\n                        qs=[]\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                orgAppSearch.viewList.push(app)\r\n            }\r\n        })\r\n        $q.all(apiPromises)\r\n        .then(res => {\r\n            angular.forEach(res, (app) => {\r\n                if (orgAppSearch.search.name) {\r\n                    app[0].expanded=true\r\n                }\r\n                orgAppSearch.viewList.push(...app)\r\n                orgAppSearch.list.push(...app)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"There was an error loading parent requestable apps\")\r\n                deferred.reject(err)\r\n        })\r\n        return deferred.promise\r\n    }\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName);\r\n        }\r\n        else { \r\n            Loader.onFor(loaderName);\r\n            // pre populate fields based on state params on first load\r\n            let numberOfRequests = 0;\r\n\r\n            Object.keys(orgAppSearch.packageRequests).forEach(function(appId) { \r\n                // Gets the list of package requests saved in memory\r\n                // This sets the checkboxes back to marked when the user clicks back after being in request review\r\n                orgAppSearch.appCheckbox[appId] = true;\r\n                numberOfRequests++;\r\n            });\r\n            \r\n            orgAppSearch.numberOfRequests = numberOfRequests;\r\n\r\n            orgAppSearch.search = {};\r\n            orgAppSearch.search.name = $stateParams.name;\r\n            orgAppSearch.search.category = $stateParams.category;\r\n            orgAppSearch.search.page = parseInt($stateParams.page);\r\n            orgAppSearch.search.pageSize = parseInt($stateParams.pageSize);\r\n        }\r\n\r\n        let query = [];\r\n\r\n        if (orgAppSearch.search.name) query.push(['service.name',orgAppSearch.search.name]);\r\n        if (orgAppSearch.search.category) query.push(['service.category',orgAppSearch.search.category]);\r\n\r\n        orgAppSearch.search.pageSize = orgAppSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0] || 25;\r\n        query.push(['pageSize',String(orgAppSearch.search.pageSize)]);\r\n\r\n        orgAppSearch.search.page = orgAppSearch.search.page || 1;\r\n        query.push(['page',String(orgAppSearch.search.page)]);\r\n\r\n        let opts = {\r\n            organizationId: User.user.organization.id,\r\n            useCuid:true,\r\n            qs: query\r\n        };\r\n        \r\n        const promises = [API.cui.getOrganizationsRequestableApps(opts), API.cui.getOrganizationRequestableCount(opts)];\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n             orgAppSearch.list = res[0];\r\n             orgAppSearch.count = res[1];\r\n             updateViewList(res[0])\r\n             .then(() =>{\r\n                Loader.offFor(loaderName);\r\n             })\r\n             \r\n        });\r\n    };\r\n\r\n    onLoad(false);\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgAppSearch.pageChange = (newpage) => {\r\n        orgAppSearch.updateSearch('page', newpage);\r\n    };\r\n\r\n    orgAppSearch.updateSearch = function(updateType, updateValue) {\r\n        if (updateType!=='page') {\r\n            orgAppSearch.search.page = 1\r\n        }\r\n        orgAppSearch.search.orgId=orgAppSearch.stateParamsOrgId\r\n        // Update current URL without changing the state\r\n        $state.transitionTo('organization.search', orgAppSearch.search, {notify:false});\r\n        onLoad(true);\r\n    };\r\n\r\n    orgAppSearch.toggleRequest = function(application) {\r\n        if (!orgAppSearch.packageRequests[application.id]) orgAppSearch.packageRequests[application.id] = application;\r\n        else delete orgAppSearch.packageRequests[application.id];\r\n\r\n        DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests);\r\n        processNumberOfRequestedApps(orgAppSearch.packageRequests[application.id]);\r\n    };\r\n\r\n   /* orgAppSearch.saveRequestsAndCheckout = function() {\r\n        DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests);\r\n        $state.go('organization.newRequestReview');\r\n    };*/\r\n\r\n    \r\n    orgAppSearch.saveRequestsAndCheckout = function() {\r\n        let qs = []\r\n        //needed to set a flag for related apps to display in review page\r\n        angular.forEach(orgAppSearch.packageRequests,(request)=>{\r\n            if (request.relatedApps) {\r\n                request.relatedAppSelectedCount=0\r\n                request.relatedApps.forEach(relatedApp=>{\r\n                    if(_.find(orgAppSearch.packageRequests,{id:relatedApp.id})){\r\n                        relatedApp.selected=true\r\n                        request.relatedAppSelectedCount++\r\n                    }\r\n                    else{\r\n                        relatedApp.selected=false\r\n                    }\r\n                })\r\n            }\r\n            // If Selected Related app full details not available need to fetch it\r\n            if (!request.servicePackage) {\r\n                qs.push(['service.id',request.id])\r\n            }\r\n        })\r\n        if (qs.length!==0) {\r\n            API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs})\r\n            .then(res => {\r\n                res.forEach(app =>{\r\n                    orgAppSearch.packageRequests[app.id] = app\r\n                })\r\n                /*AppRequests.set(orgAppSearch.packageRequests);*/\r\n                DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests)\r\n                $state.go('organization.newRequestReview');\r\n            })\r\n        }\r\n        else{\r\n            /*AppRequests.set(orgAppSearch.packageRequests);*/\r\n            DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests)\r\n            $state.go('organization.newRequestReview');\r\n        }\r\n    };\r\n    //Related apps will always appear inside body, So need to select parent if it is selected \r\n    orgAppSearch.checkRelatedAppsBody= function(relatedApp, parent){\r\n        if (_.find(orgAppSearch.list,{id:relatedApp.id})) {\r\n            orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:relatedApp.id}))\r\n        }\r\n        else{\r\n            orgAppSearch.list.push(relatedApp)\r\n            orgAppSearch.toggleRequest(relatedApp)\r\n        }           \r\n        orgAppSearch.checkRelatedAndBundledApps(_.find(orgAppSearch.list,{id:relatedApp.id}),parent)\r\n    };\r\n\r\n//Deselect Child apps If it has any and select parent if checked from parent body \r\n    orgAppSearch.checkRelatedAndBundledApps=function(application,parent){\r\n        //if unchecked the checkbox\r\n        if (!orgAppSearch.packageRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!parent) {\r\n                application.relatedApps&&application.relatedApps.forEach((relatedApp)=>{\r\n                    if (orgAppSearch.appCheckbox[relatedApp.id]) {\r\n                        orgAppSearch.appCheckbox[relatedApp.id]=!orgAppSearch.appCheckbox[relatedApp.id]\r\n                        orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:relatedApp.id}))\r\n                    }\r\n                })\r\n                orgAppSearch.checkBundledApps(application,false)\r\n            }      \r\n        }else{\r\n            if (parent) {\r\n                if (!orgAppSearch.appCheckbox[parent.id]) {\r\n                    orgAppSearch.appCheckbox[parent.id]=true\r\n                    orgAppSearch.toggleRequest(parent)\r\n                    orgAppSearch.checkBundledApps(parent,true)\r\n                }\r\n            }else\r\n            orgAppSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    orgAppSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                orgAppSearch.appCheckbox[bundledApp.id]=check\r\n                if (_.find(orgAppSearch.list,{id:bundledApp.id}))\r\n                    orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:bundledApp.id}))\r\n            })\r\n        }\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsCtrl', function(API, Loader, $scope, $stateParams,APIError,APIHelpers,$timeout,$q) {\r\n\r\n    const orgDetails = this\r\n    const scopeName = 'orgDetails.'\r\n    orgDetails.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userList\"\r\n    }\r\n    orgDetails.mobileHandler = 'profile'\r\n    orgDetails.profileUsersSwitch = 'profile'\r\n    orgDetails.appsHierarchySwitch = 'apps'\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(scopeName + 'orgInfo')\r\n/*\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        orgDetails.user = res\r\n        CuiMobileNavFactory.setTitle(res.name.given + '.' + res.name.surname)\r\n    })\r\n    .fail(error => {\r\n        console.error('Failed getting user information')\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(scopeName + 'userInfo')\r\n        $scope.$digest()\r\n    })*/\r\n\r\n\r\n    const apiPromises = [\r\n        API.cui.getOrganization({ organizationId: $stateParams.orgId  })\r\n    ]\r\n\r\n    $q.all(apiPromises)\r\n    .then(([organization]) => {\r\n        // CuiMobileNavFactory.setTitle(user.name.given + '.' + user.name.surname)\r\n        orgDetails.organization = Object.assign({}, organization);\r\n        Loader.offFor(scopeName + 'orgInfo')\r\n    })\r\n    .catch(() => {\r\n        Loader.offFor(scopeName + 'orgInfo')\r\n        APIError.onFor('orgDetails.org')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------------- ON CLICK START ---------------------------------------------- */\r\n\r\n    /* --------------------------------------------- ON CLICK END ---------------------------------------------- */\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsAppsCtrl',function(API,$stateParams,$q,$state,DataStorage,$pagination,Loader,$filter,$scope) {\r\n    'use strict';\r\n\r\n\t\r\n    const orgDetailsApps = this;\r\n    const scopeName = 'orgDetailsApps.'\r\n    orgDetailsApps.stateParamsOrgId=$stateParams.orgId\r\n\r\n    Loader.onFor('orgDetailsApps.init')\r\n    orgDetailsApps.search = {orgId:orgDetailsApps.stateParamsOrgId};\r\n    orgDetailsApps.search.page = orgDetailsApps.search.page || 1;\r\n    orgDetailsApps.paginationPageSize = orgDetailsApps.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    orgDetailsApps.search.pageSize = orgDetailsApps.paginationPageSize;\r\n\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) orgDetailsApps.search[property] = undefined;\r\n        orgDetailsApps.search[property] === firstValue ? orgDetailsApps.search[property] = secondValue : orgDetailsApps.search[property] = firstValue;\r\n    };*/\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) {\r\n            orgDetailsApps.search[property] = undefined;\r\n            return\r\n        }\r\n        orgDetailsApps.search[property] = orgDetailsApps.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }*/\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            orgDetailsApps.search[property] = undefined\r\n            return\r\n        }\r\n        orgDetailsApps.search[property] = orgDetailsApps.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    const getPackageServices = (ArrayOfPackages) => {\r\n        let services = [];\r\n\r\n        ArrayOfPackages.forEach((servicePackage) => {\r\n            API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\r\n            .then((res) => {\r\n                res.forEach((service) => {\r\n                    services.push(service);\r\n                });\r\n            });\r\n        });\r\n\r\n        return services;\r\n    };\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.offFor('orgDetailsApps.init')\r\n        }\r\n        else {\r\n            orgDetailsApps.search.name = $stateParams.name;\r\n            orgDetailsApps.search.category = $stateParams.category;\r\n            orgDetailsApps.search.sortBy = $stateParams.sortBy;\r\n            orgDetailsApps.search.refine = $stateParams.refine;\r\n            if($stateParams.page)\r\n                orgDetailsApps.search.page = parseInt($stateParams.page);\r\n            if($stateParams.pageSize)\r\n                orgDetailsApps.search.pageSize = parseInt($stateParams.pageSize);\r\n\r\n            \r\n            API.cui.getOrgAppCategories({organizationId:orgDetailsApps.stateParamsOrgId})\r\n            .then((res)=>{\r\n                orgDetailsApps.categories = res;\r\n                $scope.$digest();\r\n            })\r\n            .fail((err)=>{\r\n               \r\n            });\r\n\r\n        }\r\n\r\n        let queryParams = [['page', String(orgDetailsApps.search.page)], ['pageSize', String(orgDetailsApps.search.pageSize)]];\r\n        const promises = [];\r\n        const opts = {\r\n            organizationId: orgDetailsApps.stateParamsOrgId,\r\n            qs: queryParams\r\n        };\r\n\r\n        if (orgDetailsApps.search.name) queryParams.push(['service.name', orgDetailsApps.search.name]);\r\n        if (orgDetailsApps.search.category) queryParams.push(['service.category', orgDetailsApps.search.category]);\r\n        // sortBy: +/-service.name, +/-service.creation, +/-grant.instant\r\n        if (orgDetailsApps.search.sortBy) queryParams.push(['sortBy', orgDetailsApps.search.sortBy]);\r\n\r\n        switch (orgDetailsApps.search.refine) {\r\n            case 'active':\r\n            case 'suspended':\r\n                queryParams.push(['grant.status', orgDetailsApps.search.refine]);\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n              /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                break;\r\n            case 'pending':\r\n                /*promises.push(\r\n                    API.cui.getOrgPendingServicePackages({qs: [['requestor.id', organizationId], ['requestor.type', 'organization']]})\r\n                    .then((res) => {\r\n                        return getPackageServices(res);\r\n                    }),\r\n                    API.cui.getOrganizationRequestableCount({organizationId: organizationId})\r\n                );*/\r\n                queryParams.push(['grant.status', orgDetailsApps.search.refine]);\r\n               /* promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n            case undefined:\r\n                /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n        }\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n            orgDetailsApps.appList = res[0];\r\n            orgDetailsApps.count = res[1];\r\n            /*orgDetailsApps.count = res[0].length;*/\r\n            Loader.offFor('orgDetailsApps.init')\r\n            if (orgDetailsApps.reRenderPaginate) orgDetailsApps.reRenderPaginate();\r\n        })\r\n        .catch(err => {\r\n            orgDetailsApps.loadingError=true\r\n            Loader.offFor('orgDetailsApps.init')\r\n        })\r\n    };\r\n    // get Organization to display name\r\n    API.cui.getOrganization({organizationId:orgDetailsApps.stateParamsOrgId})\r\n    .then(res => {\r\n        orgDetailsApps.organization=res;\r\n    })\r\n    onLoad(false);\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    orgDetailsApps.pageChange = (newpage) => {\r\n        orgDetailsApps.updateSearch('page', newpage);\r\n    };\r\n\r\n    orgDetailsApps.updateSearchByName = () => {\r\n        orgDetailsApps.updateSearch('name',orgDetailsApps.search['name'])\r\n    }\r\n\r\n    orgDetailsApps.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType){\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name');\r\n                break;\r\n            case 'date':\r\n                switchBetween('sortBy', '+grant.instant', '-grant.instant');\r\n                break;\r\n            case 'status':\r\n                orgDetailsApps.search.page = 1;\r\n                orgDetailsApps.search.refine = updateValue;\r\n                break;\r\n            case 'category':\r\n                orgDetailsApps.search.page = 1;\r\n                orgDetailsApps.search.category = $filter('cuiI18n')(updateValue);\r\n                break;\r\n            case 'name':\r\n                orgDetailsApps.search.page = 1\r\n                break\r\n        }\r\n\r\n        // Updates URL, doesn't change state\r\n        $state.transitionTo('organization.directory.orgDetails', orgDetailsApps.search, {notify: false});\r\n        onLoad(true);\r\n    };\r\n\r\n    orgDetailsApps.goToDetails = (application) => {\r\n        const opts = {\r\n            appId: application.id,\r\n            orgId: application.owningOrganization.id\r\n        };\r\n        $state.go('organization.applicationDetails', opts);\r\n    };\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsHierarchyCtrl',function(API,APIError,Loader,User,$scope,$state,$stateParams) {\r\n\t'use strict';\r\n    const orgDetailsHierarchy = this\r\n    const pageLoader = 'orgDetailsHierarchy.loading'\r\n    orgDetailsHierarchy.stateParamsOrgId=$stateParams.orgId\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    const addExpandedProperty = (childOrgs,parentOrg) => {\r\n\r\n        childOrgs.forEach(org => {\r\n            // Need to remove org if it is pending\r\n            if (org.status===\"PENDING\") {\r\n                parentOrg.children.splice(index,1)\r\n                return\r\n            }\r\n            if (org.children) {\r\n                org.expanded=false\r\n                addExpandedProperty(org.children,org)\r\n            }\r\n        })\r\n    }\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    Loader.onFor(pageLoader)\r\n    API.cui.getOrganizationHierarchy({organizationId:orgDetailsHierarchy.stateParamsOrgId })\r\n    .done(res => {\r\n        // Put hierarchy response in an array as the hierarchy directive expects an array\r\n        orgDetailsHierarchy.organizationHierarchy = [res]\r\n        // add expended property to all the org with children directive needs it to work for \r\n        // expandable and collapsable function\r\n        if (orgDetailsHierarchy.organizationHierarchy[0].children) {\r\n            addExpandedProperty(orgDetailsHierarchy.organizationHierarchy[0].children,orgDetailsHierarchy.organizationHierarchy[0])\r\n        }\r\n    })\r\n    .fail(err => {\r\n        APIError.onFor(pageLoader, err)\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(pageLoader)\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n    /* */\r\n    orgDetailsHierarchy.goToOrgPrfile = (org) => {\r\n        $state.go('organization.directory.orgDetails',{orgId:org.id})\r\n    }\r\n\r\n    orgDetailsHierarchy.toggleExpand = (object) => {\r\n        object.expanded=!object.expanded\r\n        // let updateOrgChildren= (orgs) => {\r\n        //     orgs.forEach(org => {\r\n        //         if (org.id===object.id) {\r\n        //             org.expanded=object.expanded\r\n        //             return;\r\n        //         }\r\n        //         if (org.children) {\r\n        //             updateOrgChildren(org.children)\r\n        //         }\r\n        //     })\r\n            \r\n        //     if (true) {};\r\n        // }\r\n        // updateOrgChildren(orgDetailsHierarchy.organizationHierarchy[0].children)\r\n        $scope.$digest()\r\n    }\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsProfileCtrl', function(Loader, Organization,$stateParams,$q,APIError) {\r\n\r\n\tconst orgDetailsProfile = this\r\n    const scopeName = 'orgDetailsProfile.'\r\n\r\n    orgDetailsProfile.stateParamsOrgId=$stateParams.orgId\r\n    let orgPromise=[]    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    Loader.onFor('orgDetailsProfile.init')\r\n    orgPromise.push(Organization.getOrganization($stateParams.orgId))\r\n    $q.all(orgPromise)\r\n    .then(res => {\r\n        if (orgPromise.length!==0) {\r\n            orgDetailsProfile.organization=res[0]\r\n        }\r\n            Organization.initOrganizationProfile(orgDetailsProfile.organization.id, orgDetailsProfile.organization.passwordPolicy.id, orgDetailsProfile.organization.authenticationPolicy.id)\r\n        .then(res => {\r\n            orgDetailsProfile.securityAdmins = res.admins\r\n            orgDetailsProfile.passwordPolicy = res.passwordPolicy\r\n            orgDetailsProfile.authenticationPolicy=res.authenticationPolicy\r\n            Loader.offFor('orgDetailsProfile.init')\r\n        })\r\n        .catch(err => {\r\n            console.error(\"there was an error fetching additional org details\" +err)\r\n            Loader.offFor('orgDetailsProfile.init')\r\n            APIError.onFor('orgDetailsProfile.init')\r\n        })\r\n    })\r\n    .catch(err => {\r\n        console.error(\"there was an error fetching org details\" +err)\r\n        Loader.offFor('orgDetailsProfile.init')\r\n        APIError.onFor('orgDetailsProfile.init')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsUsersCtrl', function(API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,UserList,$filter,$pagination,$q,$state,$stateParams) {\r\n    \r\n    const orgDetailsUsers = this\r\n    const scopeName = 'orgDetailsUsers.'\r\n    orgDetailsUsers.stateParamsOrgId=$stateParams.orgId\r\n    orgDetailsUsers.search = {}\r\n    orgDetailsUsers.sortBy = {}\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        orgDetailsUsers.search[property] === firstValue\r\n            ? orgDetailsUsers.search[property] = secondValue\r\n            : orgDetailsUsers.search[property] = firstValue\r\n    }\r\n\r\n    const getUserListAppCount = (userList) => {\r\n        userList.forEach(user => {\r\n            API.cui.getPersonGrantedAppCount({personId: user.id})\r\n            .then(res => {\r\n                user.appCount = res\r\n            })\r\n            .fail(error => {\r\n                user.appCount = '...'\r\n            })\r\n        })\r\n    }\r\n\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    const initDirectory = (organizationId) => {\r\n        orgDetailsUsers.search['organization.id'] = organizationId || $stateParams.orgId || User.user.organization.id\r\n        orgDetailsUsers.search.pageSize = orgDetailsUsers.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        let apiCalls = [\r\n            UserList.getUsers({ qs: APIHelpers.getQs(orgDetailsUsers.search) }),\r\n            UserList.getUserCount({ qs: [['organization.id', orgDetailsUsers.search['organization.id']]] }),\r\n            API.cui.getOrganization({organizationId: orgDetailsUsers.search['organization.id']})\r\n        ]\r\n\r\n        Loader.onFor(scopeName + 'userList')\r\n        APIError.offFor(scopeName + 'userList')\r\n\r\n        $q.all(apiCalls)\r\n        .then(([users, userCount, organization]) => {\r\n            orgDetailsUsers.organization = organization\r\n            // orgDetailsUsers.organizationList = APIHelpers.flattenOrgHierarchy(orgHierarchy)\r\n            orgDetailsUsers.userList = users\r\n            orgDetailsUsers.userCount = userCount\r\n            orgDetailsUsers.statusData = APIHelpers.getCollectionValuesAndCount(users, 'status', true)\r\n            CuiMobileNavFactory.setTitle(organization.name)\r\n            orgDetailsUsers.reRenderPagination && orgDetailsUsers.reRenderPagination()\r\n            getUserListAppCount(orgDetailsUsers.userList)\r\n        })\r\n        .catch(error => {\r\n            APIError.onFor(scopeName + 'userList')\r\n        })\r\n        .finally(() => {\r\n            Loader.offFor(scopeName + 'userList')\r\n        })\r\n    }\r\n\r\n    orgDetailsUsers.search = Object.assign({}, $stateParams)\r\n    initDirectory()\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n\r\n    // headers=\"['cui-name', 'username', 'status']\" \r\n\r\n    orgDetailsUsers.sortingCallbacks = {\r\n      name () {\r\n          orgDetailsUsers.sortBy.sortBy = 'name'\r\n          orgDetailsUsers.sort(['name.given', 'name.surname'], orgDetailsUsers.sortBy.sortType)\r\n      },\r\n      username () {\r\n          orgDetailsUsers.sortBy.sortBy = 'username'\r\n          orgDetailsUsers.sort('username', orgDetailsUsers.sortBy.sortType)\r\n      },\r\n      status () {\r\n          orgDetailsUsers.sortBy.sortBy = 'status'\r\n          orgDetailsUsers.sort('status', orgDetailsUsers.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgDetailsUsers.sort = (sortBy, order) => {\r\n        cui.log('sort', sortBy, order)\r\n\r\n      orgDetailsUsers.userList = _.orderBy(orgDetailsUsers.userList, sortBy, order)\r\n    }\r\n\r\n    orgDetailsUsers.updateSearchParams = (page) => {\r\n        if (page) orgDetailsUsers.search.page = page \r\n        $state.transitionTo('organization.directory.orgDetails', orgDetailsUsers.search, {notify: false})\r\n        initDirectory(orgDetailsUsers.search['organization.id'])\r\n    }\r\n\r\n    orgDetailsUsers.updateSearchByName = (name) => {\r\n        orgDetailsUsers.updateSearchParams()\r\n    }\r\n    orgDetailsUsers.actionCallbacks = {\r\n        sort (sortType) {\r\n            switch(sortType) {\r\n            case 'name':\r\n                switchBetween('sortBy', '+person.name', '-person.name')\r\n                break\r\n            case 'username':\r\n                switchBetween('sortBy', '+person.username', '-person.username')\r\n                break\r\n            case 'status':\r\n                switchBetween('sortBy', '+person.status', '-person.status')\r\n                break\r\n            }\r\n\r\n            // if (!orgDetailsUsers.search.hasOwnProperty('sortBy')) orgDetailsUsers.search['sortBy'] = '+' + sortType\r\n            // else if (orgDetailsUsers.search.sortBy.slice(1) !== sortType) orgDetailsUsers.search.sortBy = '+' + sortType\r\n            // else switchBetween('sortBy', '+' + sortType, '-' + sortType)\r\n            orgDetailsUsers.updateSearchParams()\r\n        },\r\n        refine (refineType) {\r\n            if (refineType === 'all') delete orgDetailsUsers.search['status']\r\n            else {\r\n                if (!orgDetailsUsers.search.hasOwnProperty('status')) orgDetailsUsers.search['status'] = refineType\r\n                else orgDetailsUsers.search.status = refineType\r\n            }\r\n            orgDetailsUsers.updateSearchParams()\r\n        }\r\n    }\r\n\r\n    orgDetailsUsers.userClick = (clickedUser) => {\r\n        const stateOpts = {\r\n            userId: clickedUser.id,\r\n            orgId: clickedUser.organization.id,\r\n        }\r\n        if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\r\n        else $state.go('organization.directory.userDetails', stateOpts)\r\n    }\r\n\r\n    orgDetailsUsers.getOrgMembers = (organization) => {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')(organization.name))\r\n        initDirectory(organization.id)\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('userAppDetailsCtrl', function(API, $scope, $stateParams, $state, $q, APIHelpers, Loader, APIError,DataStorage,$timeout) {\r\n    let userAppDetails = this\r\n    userAppDetails.relatedApps=[]\r\n    userAppDetails.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    userAppDetails.dropDown={\r\n        claims:false,\r\n        suspend:false,\r\n        unsuspend:false,\r\n        remove:false\r\n    }\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    const getClaims = (app) => {\r\n        let deferred=$q.defer()\r\n        const packageId = app.servicePackage.id\r\n\r\n        Loader.onFor(loaderName + 'claims')\r\n        API.cui.getPersonPackageClaims({ grantee:$stateParams.userId, packageId })\r\n        .then(userClaims => {\r\n            APIError.offFor(loaderName + 'claims')\r\n            deferred.resolve(userClaims)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'claims')\r\n            deferred.reject(err)\r\n        })\r\n        .always(() => {\r\n            Loader.offFor(loaderName + 'claims')\r\n            $scope.$digest()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    // Returns claims that are associated with a package id\r\n    const getPackageClaims = (packageId) => {\r\n        let deferred=$q.defer()\r\n        API.cui.getPackageClaims({qs: [['packageId', packageId]]})\r\n        .then(packageClaims => {\r\n            APIError.offFor(loaderName + 'packageClaims')\r\n            deferred.resolve(packageClaims)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package claims')\r\n            APIError.onFor(loaderName + 'packageClaims')\r\n            deferred.reject(err)\r\n        })\r\n        .always(() => {\r\n            Loader.offFor(loaderName + 'packageClaims')\r\n            $scope.$digest()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    const getFormattedClaimData = () => {\r\n        $q.all([getClaims(userAppDetails.app),getPackageClaims(userAppDetails.app.servicePackage.id)])\r\n        .then(res => {            \r\n            userAppDetails.userClaims = res[0]\r\n            userAppDetails.packageClaims=res[1]\r\n            userAppDetails.claimSelection={}\r\n            //initialize and preselect claims which are already granted to user\r\n            userAppDetails.packageClaims.forEach(packageClaim => {\r\n                userAppDetails.claimSelection[packageClaim.claimId] = {}\r\n                let grantedClaim=_.find(userAppDetails.userClaims.packageClaims,{claimId:packageClaim.claimId})\r\n                if (grantedClaim) {\r\n                    packageClaim.claimValues.forEach(claimValue => {\r\n                        if (_.find(grantedClaim.claimValues,{claimValueId:claimValue.claimValueId})) {\r\n                            userAppDetails.claimSelection[packageClaim.claimId][claimValue.claimValueId]=true\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const getApp= (updating)=>{\r\n        if (!updating) {\r\n            Loader.onFor(loaderName + 'app')\r\n        }\r\n        API.cui.getPersonGrantedApps(opts)\r\n        .then(res => {\r\n            APIError.offFor(loaderName + 'app')\r\n            userAppDetails.app = Object.assign({}, res[0])\r\n            if (!updating) {\r\n                getFormattedClaimData()\r\n                getRelatedApps(userAppDetails.app)\r\n            }\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'app')\r\n        })\r\n        .done(() => {\r\n            Loader.offFor(loaderName + 'app')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n    const getRelatedApps=(app) => {\r\n        const packageId = app.servicePackage.id\r\n        let qs\r\n        if (app.servicePackage.parent) {\r\n            qs=[['servicePackage.id',app.servicePackage.parent.id]]\r\n        }else{\r\n            qs=[['servicePackage.parentPackage.id',app.servicePackage.id]]\r\n        }\r\n        Loader.onFor(loaderName + 'relatedApps')\r\n        let apiPromises=[\r\n        API.cui.getPersonRequestableApps({personId:API.getUser(),'qs':[['servicePackage.parentPackage.id',packageId]] }),\r\n        API.cui.getPersonGrantedApps({personId:API.getUser(),'qs':qs })\r\n        ]\r\n        $q.all(apiPromises)\r\n        .then(res=>{\r\n            APIError.offFor(loaderName + 'relatedApps')\r\n            userAppDetails.relatedApps=userAppDetails.relatedApps.concat(res[0])\r\n            userAppDetails.relatedApps=userAppDetails.relatedApps.concat(res[1])\r\n        })\r\n        .catch(err => {\r\n            APIError.onFor(loaderName + 'relatedApps')\r\n        })\r\n        .finally(()=>{\r\n            Loader.offFor(loaderName + 'relatedApps')\r\n        })\r\n    }\r\n\r\n    const buildData = (type) => {\r\n        let reason\r\n        if (type==\"suspend\") {\r\n            reason=userAppDetails.suspendReason\r\n        }else{\r\n            reason=userAppDetails.unsuspendReason\r\n        }\r\n        return {\r\n            grantee:{\r\n                id:$stateParams.userId,\r\n                type:'person'\r\n            },\r\n            servicePackage:{\r\n                id:userAppDetails.app.servicePackage.id\r\n            },\r\n            justification:reason\r\n        }\r\n\r\n    }\r\n\r\n    const buildClaimData = () => {\r\n\r\n        const buildPackageClaims = (claimsObject) => {\r\n            if (Object.keys(claimsObject).length === 0) {\r\n                return undefined;\r\n            } // if there's no claims in this claim object\r\n            let packageClaims = []\r\n            Object.keys(claimsObject).forEach(claimId => {\r\n                if (Object.keys(claimsObject[claimId]).length === 0) {\r\n                    return;\r\n                } // if no claimValues selected for that claimId\r\n                let claimValues =[]\r\n                Object.keys(claimsObject[claimId]).forEach(claimValueId => {\r\n                    if (claimsObject[claimId][claimValueId]) {//If checked\r\n                        claimValues.push({claimValueId:claimValueId})\r\n                    }\r\n                })\r\n                // const claimValues = Object.keys(claimsObject[claimId]).reduce((claims, claimValueId) => {\r\n                //     claims.push({ claimValueId })\r\n                //     return claims\r\n                // },[])\r\n                if (claimValues.length!==0) {\r\n                    packageClaims.push({\r\n                        claimId,\r\n                        claimValues\r\n                    })\r\n                }\r\n            })\r\n            return packageClaims\r\n        }\r\n        return {\r\n                data: {\r\n                    grantee: {\r\n                        id: $stateParams.userId,\r\n                        type: 'person'\r\n                    },\r\n                    servicePackage: {\r\n                        id: userAppDetails.app.servicePackage.id,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    packageClaims: buildPackageClaims(userAppDetails.claimSelection)\r\n                }\r\n            }\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    const loaderName = 'userAppDetails.'\r\n\r\n    const qs = {\r\n        'service.id': $stateParams.appId\r\n    }\r\n\r\n    const opts = {\r\n        personId: $stateParams.userId,\r\n        qs: APIHelpers.getQs(qs)\r\n    }\r\n    userAppDetails.app=DataStorage.getType('userAppDetail')\r\n    if (userAppDetails.app&& userAppDetails.app.id===$stateParams.appId) {        \r\n        getFormattedClaimData()\r\n        getRelatedApps(userAppDetails.app)\r\n        // Update application detail for any new changes during reload\r\n        // Commenting out as API is not giving full details for service.id query parameter get\r\n        //it is relying on previous page details which has full details\r\n         getApp(true)\r\n    }\r\n    else{\r\n        getApp(false)\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\r\n\r\n    userAppDetails.goToDetails = (application) => {\r\n        $state.go('applications.userAppDetails', {\r\n            'packageId':application.packageId,\r\n            'appId':application.id\r\n        })\r\n    }\r\n\r\n    userAppDetails.toggleDropDown= (type) => {\r\n        Object.keys(userAppDetails.dropDown).forEach(key => {\r\n            if (key===type) {\r\n                userAppDetails.dropDown[key]=!userAppDetails.dropDown[key]\r\n            }else{\r\n                userAppDetails.dropDown[key]=false\r\n            }\r\n        })\r\n    }\r\n    userAppDetails.suspendApp = () => {\r\n        Loader.onFor(loaderName + 'suspend')\r\n        APIError.offFor(loaderName + 'suspend')\r\n        let data=buildData('suspend')\r\n        API.cui.suspendPersonApp({data:data})\r\n        .then(res => {\r\n            userAppDetails.app.grant.status=\"suspended\"\r\n            userAppDetails.suspendAppSuccess=true\r\n            Loader.offFor(loaderName + 'suspend')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.dropDown.suspend=false\r\n                userAppDetails.suspendAppSuccess=false\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'suspend')\r\n            Loader.offFor(loaderName + 'suspend')\r\n            $scope.$digest()\r\n            console.log('There was an error suspending user App', + err)\r\n        })\r\n    }\r\n\r\n    userAppDetails.unsuspendApp = () => {\r\n        Loader.onFor(loaderName + 'unsuspend')\r\n        APIError.offFor(loaderName + 'unsuspend')\r\n        let data=buildData('unsuspend')\r\n        API.cui.unsuspendPersonApp({data:data})\r\n        .then(res => {\r\n            userAppDetails.app.grant.status=\"active\"\r\n            userAppDetails.unsuspendAppSuccess=true\r\n            Loader.offFor(loaderName + 'unsuspend')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.dropDown.unsuspend=false\r\n                userAppDetails.unsuspendAppSuccess=false\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'unsuspend')\r\n            Loader.offFor(loaderName + 'unsuspend')\r\n            $scope.$digest()\r\n            console.log('There was an error suspending user App', + err)\r\n        })\r\n    }\r\n\r\n    userAppDetails.removeApp = () => {\r\n        Loader.onFor(loaderName + 'remove')\r\n        APIError.offFor(loaderName + 'remove')\r\n        API.cui.revokePersonApp({personId:$stateParams.userId,packageId:userAppDetails.app.servicePackage.id})\r\n        .then(res => {\r\n            // userAppDetails.app.grant.status=\"removeed\"\r\n            userAppDetails.removeAppSuccess=true\r\n            Loader.offFor(loaderName + 'remove')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.removeAppSuccess=false\r\n                $state.go('organization.directory.userDetails',userAppDetails.prevState.params)\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'remove')\r\n            Loader.offFor(loaderName + 'remove')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                APIError.offFor(loaderName + 'remove')\r\n            },3000)\r\n            console.log('There was an error removing user App', + err)\r\n        })\r\n    }\r\n\r\n    userAppDetails.modifyClaims = () => {\r\n        Loader.onFor(loaderName + 'modifyClaims')\r\n        APIError.offFor(loaderName + 'modifyClaims')\r\n        API.cui.grantClaims(buildClaimData())\r\n        .then(res => {\r\n            userAppDetails.modifyClaimsSuccess=true\r\n            Loader.offFor(loaderName + 'modifyClaims')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.dropDown.claims=false\r\n                userAppDetails.modifyClaimsSuccess=false\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'modifyClaims')\r\n            Loader.offFor(loaderName + 'modifyClaims')\r\n            $scope.$digest()\r\n            console.log('There was an error updating user\\'s app claims', + err)\r\n        })\r\n        \r\n    }\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userDetailsCtrl', function(API, Loader, $scope, $stateParams,APIError,APIHelpers,$timeout,$q) {\r\n\r\n    const userDetails = this\r\n    const scopeName = 'userDetails.'\r\n    userDetails.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userList\"\r\n    }\r\n    userDetails.stateParamsOrgId=$stateParams.orgId\r\n    userDetails.mobileHandler = 'profile'\r\n    userDetails.profileRolesSwitch = 'profile'\r\n    userDetails.appsHistorySwitch = 'apps'\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(scopeName + 'userInfo')\r\n/*\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        userDetails.user = res\r\n        CuiMobileNavFactory.setTitle(res.name.given + '.' + res.name.surname)\r\n    })\r\n    .fail(error => {\r\n        console.error('Failed getting user information')\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(scopeName + 'userInfo')\r\n        $scope.$digest()\r\n    })*/\r\n\r\n\r\n    const apiPromises = [\r\n        API.cui.getPerson({\r\n            personId: $stateParams.userId\r\n        }),\r\n        API.cui.getOrganization({ organizationId: $stateParams.orgId  }),\r\n        API.cui.getPersonPassword({\r\n            personId: $stateParams.userId\r\n        })\r\n    ]\r\n\r\n    $q.all(apiPromises)\r\n    .then(([ user, organization ,password]) => {\r\n        // CuiMobileNavFactory.setTitle(user.name.given + '.' + user.name.surname)\r\n       userDetails.user = Object.assign({}, user)\r\n        userDetails.organization = Object.assign({}, organization);\r\n        userDetails.passwordAccount= Object.assign({}, password)\r\n        return API.cui.getPasswordPolicy({ policyId: userDetails.organization.passwordPolicy.id })\r\n    })\r\n    .then(res => {\r\n        userDetails.passwordPolicy = res\r\n\r\n        res.rules.forEach(rule => {\r\n            if (rule.type === 'history') {\r\n                userDetails.numberOfPasswords = rule.numberOfPasswords\r\n            }\r\n        })\r\n        Loader.offFor(scopeName + 'userInfo')\r\n    })\r\n    .catch(() => {\r\n        Loader.offFor(scopeName + 'userInfo')\r\n        APIError.onFor('userDetails.user')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------------- ON CLICK START ---------------------------------------------- */\r\n    userDetails.suspend = (personId) => {\r\n\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:true\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\r\n\r\n        const name = 'userDetails.suspend'\r\n\r\n        userDetails.suspend.reset = () => {\r\n            Loader.offFor(name)\r\n            APIError.offFor(name)\r\n            userDetails.user.suspendReason = ''\r\n            userDetails.suspend.success && delete userDetails.suspend.success\r\n        }\r\n\r\n        userDetails.suspend.reset()\r\n\r\n        userDetails.suspend.confirm = () => {\r\n            Loader.onFor(name)\r\n            APIError.offFor(name)\r\n\r\n            const reason = encodeURIComponent(userDetails.user.suspendReason)\r\n\r\n            API.cui.suspendPerson({\r\n                qs: APIHelpers.getQs({\r\n                    personId,\r\n                    reason\r\n                })\r\n            })\r\n            .then(\r\n                res => {\r\n                    APIError.offFor(name)\r\n                    userDetails.suspend.success = true\r\n                    userDetails.user.status = 'suspended'\r\n                    $timeout(userDetails.suspend.cancel, 1500)\r\n                },\r\n                err => {\r\n                    APIError.onFor(name)\r\n                }\r\n            )\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.suspend.cancel = () => {\r\n            userDetails.suspend.begun = false\r\n            userDetails.suspend.reset()\r\n        }\r\n    }\r\n\r\n    userDetails.unsuspend = (personId) => {\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:true\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\r\n\r\n        const name = 'userDetails.unsuspend'\r\n\r\n        userDetails.unsuspend.reset = () => {\r\n            Loader.offFor(name)\r\n            APIError.offFor(name)\r\n            userDetails.user.unsuspendReason = ''\r\n            userDetails.unsuspend.success && delete userDetails.unsuspend.success\r\n        }\r\n\r\n        userDetails.unsuspend.reset()\r\n\r\n        userDetails.unsuspend.confirm = () => {\r\n            Loader.onFor(name)\r\n            APIError.offFor(name)\r\n\r\n            const reason = encodeURIComponent(userDetails.user.unsuspendReason)\r\n\r\n            API.cui.unsuspendPerson({\r\n                qs: APIHelpers.getQs({\r\n                    personId,\r\n                    reason\r\n                })\r\n            })\r\n            .then(\r\n                res => {\r\n                    APIError.offFor(name)\r\n                    userDetails.unsuspend.success = true\r\n                    userDetails.user.status = 'active'\r\n                    $timeout(userDetails.unsuspend.cancel, 1500)\r\n                },\r\n                err => {\r\n                    APIError.onFor(name)\r\n                }\r\n            )\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.unsuspend.cancel = () => {\r\n            userDetails.unsuspend.begun = false\r\n            userDetails.unsuspend.reset()\r\n        }\r\n    }\r\n\r\n    userDetails.resetPassword = () => {\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:true\r\n\r\n            \r\n            if(userDetails.resetPassword.begun){\r\n                const name = 'userDetails.unsuspend'\r\n\r\n            Loader.onFor(name)\r\n            APIError.offFor(name)\r\n            API.cui.resetPersonPassword({\r\n                qs: [['subject', $stateParams.userId]],\r\n            })\r\n            .then(\r\n                res => {\r\n                    APIError.offFor(name)\r\n                    userDetails.resetPasswordValue=res\r\n                    userDetails.resetPassword.begun = true\r\n                },\r\n                err => {\r\n                    APIError.onFor(name)\r\n                }\r\n            )\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    userDetails.specifyPassword = () => {\r\n        errorTimer && $timeout.cancel(errorTimer) // cancel the timer if there's one pending\r\n        let errorTimer\r\n\r\n        const name = 'userDetails.specifyPassword'\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:true\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\r\n\r\n        userDetails.specifyPassword.reset = () => {\r\n            Loader.offFor(name)\r\n            APIError.offFor(name)\r\n            APIError.offFor('userDetails.passwordHistory')\r\n            userDetails.specifyPassword.success && delete userDetails.specifyPassword.success\r\n            userDetails.specifyPassword.passwordHistoryError = false\r\n            userDetails.specifyPassword.newPassword = ''\r\n            userDetails.specifyPassword.newPasswordConfirm = ''\r\n        }\r\n\r\n        userDetails.specifyPassword.validate = (password, formObject, input) => {\r\n            const validSwitch = (input, isValidBoolean) => {\r\n                switch (input) {\r\n                    case 'newPassword':\r\n                        userDetails.specifyPassword.validNewPassword = isValidBoolean\r\n                    case 'newPasswordConfirm':\r\n                        userDetails.specifyPassword.validNewPasswordRe = isValidBoolean\r\n                }\r\n            }\r\n\r\n            const validateData = {\r\n                userId: $stateParams.userId,\r\n                organizationId: $stateParams.orgId,\r\n                password: password,\r\n                operations: ['PASSWORD_SPECIFY']\r\n            }\r\n\r\n            API.cui.validatePassword({data: validateData})\r\n            .then(res => {\r\n                let validPasswordHistory = false\r\n\r\n                res.forEach(rule => {\r\n                    if (rule.type === 'HISTORY' && rule.isPassed) {\r\n                        validPasswordHistory = true\r\n                        return\r\n                    }\r\n                })\r\n\r\n                if (validPasswordHistory) {\r\n                    validSwitch(input, true)\r\n                    formObject[input].$setValidity(input, true)\r\n                    $scope.$digest()\r\n                }\r\n                else {\r\n                    validSwitch(input, false)\r\n                    formObject[input].$setValidity(input, false)\r\n                    $scope.$digest()\r\n                }\r\n            })\r\n            .fail(err => {\r\n                validSwitch(input, false)\r\n                formObject[input].$setValidity(input, false)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.specifyPassword.confirm = () => {\r\n            APIError.offFor(name)\r\n            Loader.onFor(name)\r\n\r\n          /*  if (!userDetails.specifyPassword.form.$valid) {\r\n                angular.forEach(userDetails.specifyPassword.form.$error, error => {\r\n                    angular.forEach(error, errorField => errorField.$setTouched())\r\n                })\r\n                APIError.onFor(name)\r\n                return\r\n            }*/\r\n\r\n            API.cui.getPersonPassword({personId: $stateParams.userId})\r\n            .then(res => {\r\n                return API.cui.specifyPersonPassword({\r\n                    data: {\r\n                        subject: $stateParams.userId,\r\n                        password: userDetails.specifyPassword.newPassword\r\n                    }\r\n                })\r\n            })\r\n            .then(res => {\r\n                return API.cui.expirePersonPassword({\r\n                    qs: [['subject', $stateParams.userId]],\r\n                    data: {\r\n                        subject: $stateParams.userId,\r\n                        password: userDetails.specifyPassword.newPassword,\r\n                        passwordPolicyId: userDetails.passwordPolicy.id,\r\n                        authenticationPolicyId: userDetails.organization.authenticationPolicy.id\r\n                    }\r\n                })\r\n            })\r\n            .then(res => {\r\n                userDetails.specifyPassword.success = true\r\n                $timeout(userDetails.specifyPassword.cancel, 1500)\r\n            }, err => {\r\n                console.log(err)\r\n                APIError.onFor(name)\r\n                errorTimer = $timeout(() => APIError.offFor(name), 1500)\r\n            })\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.specifyPassword.cancel = () => {\r\n            userDetails.specifyPassword.begun = false\r\n            userDetails.specifyPassword.reset()\r\n        }\r\n    }\r\n\r\n    userDetails.unlockUser = () => {\r\n        Loader.onFor('userDetails.unlockUser')\r\n        APIError.offFor('userDetails.unlockUser')\r\n        //Need to call two API's One is unlock Password Account and Update person stutus to active\r\n        API.cui.unlockPersonPassword({qs:[['subject', $stateParams.userId]]})\r\n        .then(res => {\r\n            userDetails.user.stutus='active'\r\n            API.cui.updatePerson({personId:$stateParams.userId, data:userDetails.user})\r\n            .then(res => {\r\n                userDetails.unlockUserSuccess=true\r\n            })\r\n            .fail(err => {\r\n                APIError.onFor('userDetails.unlockUser')\r\n                $timeout(() => {APIError.offFor('userDetails.unlockUser')},3000)\r\n            })\r\n            .always(() => {\r\n                Loader.offFor('userDetails.unlockUser')\r\n                $scope.$digest()\r\n            })\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor('userDetails.unlockUser')\r\n            $timeout(() => {APIError.offFor('userDetails.unlockUser')},3000)\r\n        })\r\n        .always(() => {\r\n            Loader.offFor('userDetails.unlockUser')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    /* --------------------------------------------- ON CLICK END ---------------------------------------------- */\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userDetailsAppsCtrl',function(API,$stateParams,$q,$state,DataStorage) {\r\n    'use strict';\r\n\r\n\tconst userDetailsApps = this,\r\n        userId = $stateParams.userId,\r\n        organizationId = $stateParams.orgId;\r\n\r\n    let apiPromises = [];\r\n\r\n    userDetailsApps.loading = true;\r\n    userDetailsApps.appList = [];\r\n\r\n    const getPackageServices = (servicePackage) => {\r\n        return API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\r\n        .then((res) => {\r\n            res.forEach((pendingService) => {\r\n                pendingService.grant = { \r\n                    status: 'pending'\r\n                };\r\n                pendingService.servicePackage=servicePackage\r\n                userDetailsApps.appList.push(pendingService);\r\n            });\r\n        });\r\n    };\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    apiPromises.push(\r\n        // Get user's granted applications\r\n        API.cui.getPersonGrantedApps({personId: userId})\r\n        .then((res) => {\r\n            res.forEach((grantedApp) => {\r\n                userDetailsApps.appList.push(grantedApp);\r\n            });\r\n        })\r\n    );\r\n\r\n    apiPromises.push(\r\n        // Get user's pending service packages\r\n        API.cui.getPersonPendingServicePackages({qs: [['requestor.id', userId],['requestor.type', 'person']]})\r\n        .then((res) => {\r\n            let pendingServicePromises = [];\r\n\r\n            res.forEach((servicePackage) => {\r\n                // For each packages get its services\r\n                pendingServicePromises.push(getPackageServices(servicePackage));\r\n            });\r\n\r\n            $q.all(pendingServicePromises)\r\n            .then(() => {\r\n                userDetailsApps.loading = false;\r\n            })\r\n            .catch((error) => {\r\n                userDetailsApps.loading = false;\r\n                console.log(error);\r\n            });\r\n        })\r\n    );\r\n\r\n    apiPromises.push(\r\n        // Get categories of applications\r\n        API.cui.getCategories()\r\n        .then((res) => {\r\n            userDetailsApps.appCategories = res;\r\n        })\r\n    );\r\n\r\n    apiPromises.push(\r\n        // Get user's granted applications count\r\n        API.cui.getPersonGrantedAppCount({personId: userId})\r\n        .then((res) => {\r\n            userDetailsApps.appCount = res;\r\n        })\r\n    );\r\n\r\n    $q.all(apiPromises)\r\n    .catch((error) => {\r\n        userDetailsApps.loading = false;\r\n        console.log(error);\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\r\n\r\n    userDetailsApps.goToDetails = (application) => {\r\n        DataStorage.setType('userAppDetail',application)\r\n        if (application.grant.status==='pending') {\r\n            $state.go('organization.requests.pendingRequests', {\r\n                    'userId': userId, \r\n                    'orgId': organizationId,\r\n                    'packageId': application.servicePackage.servicePackage.id\r\n                })\r\n        }\r\n        else\r\n        $state.go('organization.directory.userAppDetails',{appId:application.id,orgId:organizationId,userId:userId})\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n});\r\n\r\nangular.module('organization')\r\n.controller('userDetailsHistoryCtrl',function(API,$stateParams,$q) {\r\n\t'use strict';\r\n\r\n\tconst userDetailsHistory = this,\r\n        userId = $stateParams.userId,\r\n        organizationId = $stateParams.orgId;\r\n\r\n    let apiPromises = [];\r\n\r\n    userDetailsHistory.loading = true;\r\n    userDetailsHistory.sortClicked = false;\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n\tapiPromises.push(\r\n\t\tAPI.cui.getPersonStatusHistory({qs: [['userId', String(userId)]]})\r\n    \t.then((res) => {\r\n    \t\tuserDetailsHistory.personStatusHistory = res;\r\n    \t})\r\n    );\r\n\r\n    $q.all(apiPromises)\r\n    .then((res) => {\r\n    \tuserDetailsHistory.loading = false;\r\n    })\r\n    .catch((error) => {\r\n    \tuserDetailsHistory.loading = false;\r\n    \tconsole.log(error);\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('userDetailsProfileCtrl', function(Loader, UserProfile, $scope, $stateParams) {\r\n\r\n\tconst userDetailsProfile = this\r\n    const scopeName = 'userDetailsProfile.'\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    UserProfile.injectUI(userDetailsProfile, $scope, $stateParams.userId)\r\n\r\n    Loader.onFor(scopeName + 'initProfile')\r\n\r\n    UserProfile.initUserProfile($stateParams.userId, $stateParams.orgId)\r\n    .then(res => {\r\n        angular.merge(userDetailsProfile, res)\r\n        Loader.offFor(scopeName + 'initProfile')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userDetailsRolesCtrl',function(API,$stateParams,$q,$scope,APIError,$timeout) {\r\n\t'use strict';\r\n\r\n\tconst userDetailsRoles = this,\r\n        userId = $stateParams.userId,\r\n        organizationId = $stateParams.orgId;\r\n\r\n    let apiPromises = [];\r\n\r\n    userDetailsRoles.loading = true;\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    let init = function init(){\r\n\r\n    apiPromises.push(\r\n\t    API.cui.getPersonRoles({personId: userId})\r\n\t    .then((res) => {\r\n\t    \tuserDetailsRoles.assignedRoles = res;\r\n            API.cui.getPersonRolesGrantable({personId:userId})\r\n            .then(res =>{\r\n                userDetailsRoles.rolesGrantable=res;\r\n            })\r\n            .fail(err =>{\r\n                userDetailsRoles.grantedHistoryError=true;\r\n            })\r\n\t    })\r\n    );\r\n\r\n    apiPromises.push(\r\n        API.cui.getPersonRolesGrantable({personId:userId})\r\n        .then(res =>{\r\n            userDetailsRoles.rolesGrantable=res;\r\n        })\r\n        .fail(err =>{\r\n            userDetailsRoles.grantedHistoryError=true;\r\n        })\r\n    );\r\n\r\n    $q.all(apiPromises)\r\n    .then((res) => {\r\n    \tuserDetailsRoles.loading = false;\r\n        userDetailsRoles.success=false\r\n    })\r\n    .catch((error) => {\r\n\t\tuserDetailsRoles.loading = false;\r\n        userDetailsRoles.grantedHistoryError=true;\r\n        userDetailsRoles.success=false\r\n\t\tconsole.log(error);\r\n    });\r\n}\r\n\r\n     init();\r\n\r\n    userDetailsRoles.assignRoles = () =>{\r\n       let roles =[]\r\n       angular.forEach(userDetailsRoles.appCheckbox,function(dsd,appId){\r\n       /*Object.keys(userRoles.appCheckbox).forEach(function(appId) {*/\r\n           if(dsd){\r\n                let test={\r\n                \"id\":appId\r\n               }\r\n               roles.push(test)\r\n           }\r\n        });\r\n        let rolesSubmitData={\r\n        \"userId\": userId,\r\n        \"roles\": roles\r\n        }\r\n        console.log(rolesSubmitData)\r\n        \r\n       userDetailsRoles.loading = true\r\n        API.cui.assignPersonRoles({data:rolesSubmitData})\r\n        .then(res =>{\r\n            console.log(res)\r\n            $scope.$digest()\r\n            userDetailsRoles.success=true\r\n             $timeout(() => {\r\n                userDetailsRoles.loading = false\r\n\r\n                init();\r\n            }, 3000);\r\n            \r\n        })\r\n        .fail(err =>{\r\n            userDetailsRoles.loading=false\r\n            userDetailsRoles.rolessubmitError=true\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n     $scope.$watch(\"userDetailsRoles.appCheckbox\", function(n) {\r\n       let count=0\r\n       angular.forEach(userDetailsRoles.appCheckbox,function(dsd,key){\r\n        console.log(key)\r\n        if(dsd)\r\n            count+=1\r\n       })\r\n       if(count>0){\r\n        userDetailsRoles.appCheckboxValid=true\r\n       }else{\r\n        userDetailsRoles.appCheckboxValid=false\r\n       }\r\n    }, true);\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDirectoryCtrl', function(API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,UserList,$filter,$pagination,$q,$state,$stateParams) {\r\n    \r\n    const orgDirectory = this\r\n    const scopeName = 'orgDirectory.'\r\n    orgDirectory.stateParamsOrgId=$stateParams.orgId\r\n    orgDirectory.search = {}\r\n    orgDirectory.sortBy = {}\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        orgDirectory.search[property] === firstValue\r\n            ? orgDirectory.search[property] = secondValue\r\n            : orgDirectory.search[property] = firstValue\r\n    }\r\n\r\n    const getUserListAppCount = (userList) => {\r\n        userList.forEach(user => {\r\n            API.cui.getPersonGrantedAppCount({personId: user.id})\r\n            .then(res => {\r\n                user.appCount = res\r\n            })\r\n            .fail(error => {\r\n                user.appCount = '...'\r\n            })\r\n        })\r\n    }\r\n\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    const initDirectory = (organizationId) => {\r\n        orgDirectory.search['organization.id'] = organizationId || $stateParams.orgId || User.user.organization.id\r\n        orgDirectory.search.pageSize = orgDirectory.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        let apiCalls = [\r\n            UserList.getUsers({ qs: APIHelpers.getQs(orgDirectory.search) }),\r\n            UserList.getUserCount({ qs: [['organization.id', orgDirectory.search['organization.id']]] }),\r\n            API.cui.getOrganization({organizationId: orgDirectory.search['organization.id']})\r\n        ]\r\n\r\n        Loader.onFor(scopeName + 'userList')\r\n        APIError.offFor(scopeName + 'userList')\r\n\r\n        $q.all(apiCalls)\r\n        .then(([users, userCount, organization]) => {\r\n            orgDirectory.organization = organization\r\n            // orgDirectory.organizationList = APIHelpers.flattenOrgHierarchy(orgHierarchy)\r\n            orgDirectory.userList = users\r\n            orgDirectory.userCount = userCount\r\n            orgDirectory.statusData = APIHelpers.getCollectionValuesAndCount(users, 'status', true)\r\n            CuiMobileNavFactory.setTitle(organization.name)\r\n            orgDirectory.reRenderPagination && orgDirectory.reRenderPagination()\r\n            getUserListAppCount(orgDirectory.userList)\r\n        })\r\n        .catch(error => {\r\n            APIError.onFor(scopeName + 'userList')\r\n        })\r\n        .finally(() => {\r\n            Loader.offFor(scopeName + 'userList')\r\n        })\r\n    }\r\n\r\n    orgDirectory.search = Object.assign({}, $stateParams)\r\n    initDirectory()\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n\r\n    // headers=\"['cui-name', 'username', 'status']\" \r\n\r\n    orgDirectory.sortingCallbacks = {\r\n      name () {\r\n          orgDirectory.sortBy.sortBy = 'name'\r\n          orgDirectory.sort(['name.given', 'name.surname'], orgDirectory.sortBy.sortType)\r\n      },\r\n      username () {\r\n          orgDirectory.sortBy.sortBy = 'username'\r\n          orgDirectory.sort('username', orgDirectory.sortBy.sortType)\r\n      },\r\n      status () {\r\n          orgDirectory.sortBy.sortBy = 'status'\r\n          orgDirectory.sort('status', orgDirectory.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgDirectory.sort = (sortBy, order) => {\r\n        cui.log('sort', sortBy, order)\r\n\r\n      orgDirectory.userList = _.orderBy(orgDirectory.userList, sortBy, order)\r\n    }\r\n\r\n    orgDirectory.updateSearchParams = (page) => {\r\n        if (page) orgDirectory.search.page = page \r\n        $state.transitionTo('organization.directory.userList', orgDirectory.search, {notify: false})\r\n        initDirectory(orgDirectory.search['organization.id'])\r\n    }\r\n\r\n    orgDirectory.updateSearchByName = (name) => {\r\n        orgDirectory.updateSearchParams()\r\n    }\r\n    orgDirectory.actionCallbacks = {\r\n        sort (sortType) {\r\n            switch(sortType) {\r\n            case 'name':\r\n                switchBetween('sortBy', '+name.given', '-name.given')\r\n                break\r\n            case 'username':\r\n                switchBetween('sortBy', '+person.username', '-person.username')\r\n                break\r\n            case 'status':\r\n                switchBetween('sortBy', '+person.status', '-person.status')\r\n                break\r\n            }\r\n\r\n            // if (!orgDirectory.search.hasOwnProperty('sortBy')) orgDirectory.search['sortBy'] = '+' + sortType\r\n            // else if (orgDirectory.search.sortBy.slice(1) !== sortType) orgDirectory.search.sortBy = '+' + sortType\r\n            // else switchBetween('sortBy', '+' + sortType, '-' + sortType)\r\n            orgDirectory.updateSearchParams()\r\n        },\r\n        refine (refineType) {\r\n            if (refineType === 'all') delete orgDirectory.search['status']\r\n            else {\r\n                if (!orgDirectory.search.hasOwnProperty('status')) orgDirectory.search['status'] = refineType\r\n                else orgDirectory.search.status = refineType\r\n            }\r\n            orgDirectory.updateSearchParams()\r\n        }\r\n    }\r\n\r\n    orgDirectory.userClick = (clickedUser) => {\r\n        const stateOpts = {\r\n            userId: clickedUser.id,\r\n            orgId: clickedUser.organization.id,\r\n        }\r\n        if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\r\n        else $state.go('organization.directory.userDetails', stateOpts)\r\n    }\r\n\r\n    orgDirectory.getOrgMembers = (organization) => {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')(organization.name))\r\n        initDirectory(organization.id)\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgHierarchyCtrl', function(API,APIError,DataStorage,Loader,User,$scope,$state,$stateParams) {\r\n\r\n    const orgHierarchy = this\r\n    const pageLoader = 'orgHierarchy.loading'\r\n    orgHierarchy.stateParamsOrgId=$stateParams.orgId\r\n    orgHierarchy.expanded=false\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    const addExpandedProperty = (childOrgs, parentOrg) => {\r\n        childOrgs.forEach((org ,index) => {\r\n            // Need to remove org if it is pending\r\n            if (org.status===\"PENDING\") {\r\n                parentOrg.children.splice(index,1)\r\n                return\r\n            }\r\n            if (org.children) {\r\n                org.expanded=false\r\n                addExpandedProperty(org.children,org)\r\n            }\r\n        })\r\n    }\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    \r\n    const storedData = DataStorage.getType('orgHierarchy')\r\n\r\n    if (storedData) {\r\n        orgHierarchy.organizationHierarchy = storedData\r\n        // add expended property to all the org with children directive needs it to work for \r\n        // expandable and collapsable function\r\n        if (orgHierarchy.organizationHierarchy[0].children) {\r\n            addExpandedProperty(orgHierarchy.organizationHierarchy[0].children, orgHierarchy.organizationHierarchy[0])\r\n        }\r\n    }\r\n\r\n    if (!storedData) Loader.onFor(pageLoader)\r\n    // Loader.onFor(pageLoader)\r\n    API.cui.getOrganizationHierarchy({organizationId:orgHierarchy.stateParamsOrgId })\r\n    .done(res => {\r\n        // Put hierarchy response in an array as the hierarchy directive expects an array\r\n        orgHierarchy.organizationHierarchy = [res]\r\n        DataStorage.setType('orgHierarchy', orgHierarchy.organizationHierarchy)\r\n        // add expended property to all the org with children directive needs it to work for \r\n        // expandable and collapsable function\r\n        if (orgHierarchy.organizationHierarchy[0].children) {\r\n            addExpandedProperty(orgHierarchy.organizationHierarchy[0].children, orgHierarchy.organizationHierarchy[0])\r\n        }\r\n    })\r\n    .fail(err => {\r\n        APIError.onFor(pageLoader, err)\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(pageLoader)\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n    /* */\r\n    orgHierarchy.goToOrgPrfile = (org) => {\r\n        $state.go('organization.directory.orgDetails',{orgId:org.id})\r\n    }\r\n\r\n    orgHierarchy.toggleExpand = (object) => {\r\n        object.expanded=!object.expanded\r\n        let updateOrgChildren= (orgs) => {\r\n            orgs.forEach(org => {\r\n                if (org.id===object.id) {\r\n                    org.expanded=object.expanded\r\n                    return;\r\n                }\r\n                if (org.children) {\r\n                    updateOrgChildren(org.children)\r\n                }\r\n            })\r\n            \r\n            if (true) {};\r\n        }\r\n        updateOrgChildren(orgHierarchy.organizationHierarchy[0].children)\r\n        $scope.$digest()\r\n    }\r\n\r\n    orgHierarchy.toggleAll = (toggleFlag) => {\r\n        orgHierarchy.expanded=!orgHierarchy.expanded\r\n        let updateFlag= (orgs) => {\r\n            orgs.forEach(org => {\r\n                if (org.children) {\r\n                    org.expanded=!toggleFlag\r\n                    updateFlag(org.children)\r\n                }\r\n            })\r\n        }\r\n        updateFlag(orgHierarchy.organizationHierarchy[0].children)\r\n    }\r\n    /* */\r\n})\r\n\r\nangular.module('organization')\r\n.controller('divisionCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout,DataStorage) {\r\n\r\n    const division = this\r\n    division.sendInvitationError=''\r\n    const promises=[]\r\n    division.userSelectedOrg={}\r\n    division.userSelectedOrg.originalObject={}\r\n    division.userSelectedOrg.originalObject.name=User.user.organization.name\r\n    division.userSelectedOrg.originalObject.id=User.user.organization.id\r\n    division.stateParamsOrgId=User.user.organization.id\r\n    //division.emailSubject='Register as an adminstrator within '\r\n\r\n    const storedData = DataStorage.getType('orgHierarchy',User.user.id)\r\n\r\n    if (storedData) {\r\n        division.organizationHierarchyRoot = storedData\r\n        division.organizationHierarchy = storedData[0].children\r\n        const organizationList=[]\r\n        angular.forEach(division.organizationHierarchy,function(value){\r\n          let array={\r\n            \"id\":value.id,\r\n            \"name\":value.name[0].text\r\n          }\r\n          organizationList.push(array)\r\n        })\r\n        division.organizationList=organizationList\r\n    }else{\r\n      division.loader=true\r\n      API.cui.getOrganizationHierarchy({organizationId:User.user.organization.id })\r\n      .done(res => {\r\n          DataStorage.setType('orgHierarchy', [res],User.user.id)\r\n          const organizationList=[]\r\n          // Put hierarchy response in an array as the hierarchy directive expects an array\r\n          const storedDatas = DataStorage.getType('orgHierarchy',User.user.id)\r\n          division.organizationHierarchyRoot = storedDatas\r\n          division.organizationHierarchy = storedDatas[0].children\r\n          \r\n          angular.forEach(division.organizationHierarchy,function(value){\r\n            let array={\r\n              \"id\":value.id,\r\n              \"name\":value.name[0].text\r\n            }\r\n           \r\n            organizationList.push(array)\r\n          })\r\n          division.organizationList=organizationList\r\n          console.log(division.organizationList)\r\n         \r\n      })\r\n      .fail(err => {\r\n          APIError.onFor(pageLoader, err)\r\n      })\r\n      .always(() => {\r\n          division.loader=false\r\n          $scope.$digest()\r\n      })\r\n  }\r\n\r\n\r\n    division.sendInvitation = () => {\r\n           const promises=[]\r\n      const validEmails=[]\r\n      division.emailAddressError=false\r\n      division.sendInvitationError=false\r\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n      division.emailArray=new Array()\r\n      division.emailArray=division.emailAddress.split(',')      \r\n      angular.forEach(division.emailArray,function(email){\r\n        if(EMAIL_REGEXP.test(email)){\r\n            validEmails.push(email)\r\n          }\r\n      })\r\n      if(validEmails.length===division.emailArray.length){\r\n        division.loader=true\r\n        angular.forEach(division.emailArray,function(email){\r\n          let opts = {\r\n            \"email\":email,\r\n            \"invitor\":{\r\n              \"id\":User.user.id,\r\n              \"type\":\"person\"\r\n              },\r\n            \"targetOrganization\":{\r\n              \"id\":division.userSelectedOrg.originalObject.id,\r\n              \"type\":\"organization\"\r\n              }\r\n          }\r\n          promises.push(API.cui.createOrgDivisionInvitation({data:opts})) \r\n        })\r\n        \r\n        $q.all(promises)\r\n        .then((res) => {\r\n          division.loader=false\r\n          division.success=true\r\n           division.sendInvitationError=false;\r\n           $timeout(() => {\r\n                 $state.go('invitation.inviteSelect');\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n             division.loader=false\r\n             division.sendInvitationError=true\r\n        });\r\n      }else{\r\n         division.emailAddressError=true\r\n      }\r\n    }\r\n    division.goToOrgPrfile = (org) => {\r\n        division.userSelectedOrg.originalObject={}\r\n        division.userSelectedOrg.originalObject.name=org.name[0].text\r\n        division.userSelectedOrg.originalObject.id=org.id\r\n        division.selectOrgFromList=false\r\n        $scope.$digest()\r\n    }\r\n     division.goToOrg = () => {\r\n        \r\n    }\r\n})\r\n\r\nangular.module('organization')\r\n.controller('tloCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout) {\r\n\r\n    const tlo = this\r\n    tlo.sendInvitationError=''\r\n    const promises=[]\r\n    tlo.organization={}\r\n    tlo.organization.name=User.user.organization.name\r\n    tlo.stateParamsOrgId=User.user.organization.id\r\n    //tlo.emailSubject='Register as a new organization'\r\n\r\n    tlo.sendInvitation = () => {\r\n      const promises=[]\r\n      const validEmails=[]\r\n      tlo.emailAddressError=false\r\n      tlo.sendInvitationError=false\r\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n      tlo.emailArray=new Array()\r\n      tlo.emailArray=tlo.emailAddress.split(',')      \r\n      angular.forEach(tlo.emailArray,function(email){\r\n        if(EMAIL_REGEXP.test(email)){\r\n            validEmails.push(email)\r\n          }\r\n      })\r\n      if(validEmails.length===tlo.emailArray.length){\r\n        tlo.loader=true\r\n        angular.forEach(tlo.emailArray,function(email){\r\n          let opts = {\r\n            \"email\":email,\r\n            \"invitor\":{\r\n              \"id\":User.user.id,\r\n              \"type\":\"person\"\r\n              },\r\n            \"targetOrganization\":{\r\n              \"id\":User.user.organization.id,\r\n              \"type\":\"organization\"\r\n              }\r\n          }\r\n          promises.push(API.cui.createOrgCompanyInvitation({data:opts})) \r\n        })\r\n        \r\n        $q.all(promises)\r\n        .then((res) => {\r\n          tlo.loader=false\r\n          tlo.success=true\r\n           tlo.sendInvitationError=false;\r\n           $timeout(() => {\r\n                 $state.go('invitation.inviteSelect');\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n             tlo.loader=false\r\n             tlo.sendInvitationError=true\r\n        });\r\n      }else{\r\n         tlo.emailAddressError=true\r\n      }\r\n    }\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout,DataStorage) {\r\n\r\n    const user = this\r\n    user.sendInvitationError=''\r\n    const promises=[]\r\n    user.userSelectedOrg={}\r\n    user.userSelectedOrg.originalObject={}\r\n    user.userSelectedOrg.originalObject.name=User.user.organization.name\r\n    user.userSelectedOrg.originalObject.id=User.user.organization.id\r\n    user.stateParamsOrgId=User.user.organization.id\r\n    //user.emailSubject='Register as a user to join '\r\n    user.selectOrgFromList=false\r\n\r\n    const storedData = DataStorage.getType('orgHierarchy',User.user.id)\r\n\r\n    if (storedData) {\r\n        user.organizationHierarchyRoot = storedData\r\n        user.organizationHierarchy = storedData[0].children\r\n        const organizationList=[]\r\n        angular.forEach(user.organizationHierarchy,function(value){\r\n          let array={\r\n            \"id\":value.id,\r\n            \"name\":value.name[0].text\r\n          }\r\n          organizationList.push(array)\r\n        })\r\n        user.organizationList=organizationList\r\n    }else{\r\n      user.loader=true\r\n      API.cui.getOrganizationHierarchy({organizationId:User.user.organization.id })\r\n        .done(res => {\r\n            DataStorage.setType('orgHierarchy', [res],User.user.id)\r\n            const organizationList=[]\r\n            const storedDatas = DataStorage.getType('orgHierarchy',User.user.id)\r\n            // Put hierarchy response in an array as the hierarchy directive expects an array\r\n            user.organizationHierarchyRoot = storedDatas\r\n            user.organizationHierarchy = storedDatas[0].children\r\n            \r\n            angular.forEach(user.organizationHierarchy,function(value){\r\n              let array={\r\n                \"id\":value.id,\r\n                \"name\":value.name[0].text\r\n              }\r\n             \r\n              organizationList.push(array)\r\n            })\r\n            user.organizationList=organizationList\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(pageLoader, err)\r\n        })\r\n        .always(() => {\r\n            user.loader=false\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n   \r\n    user.customErrors = {\r\n      email: {\r\n          email: function(){\r\n              var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n              if (user.email) {\r\n                  return EMAIL_REGEXP.test(user.email)\r\n              }else{\r\n                  return true;\r\n              }\r\n          }\r\n      }\r\n    }\r\n\r\n    user.sendInvitation = () => {\r\n      const promises=[]\r\n      const validEmails=[]\r\n      user.emailAddressError=false\r\n      user.sendInvitationError=false\r\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n      user.emailArray=new Array()\r\n      user.emailArray=user.emailAddress.split(',')      \r\n      angular.forEach(user.emailArray,function(email){\r\n        if(EMAIL_REGEXP.test(email)){\r\n            validEmails.push(email)\r\n          }\r\n      })\r\n      if(validEmails.length===user.emailArray.length){\r\n        user.loader=true\r\n        angular.forEach(user.emailArray,function(email){\r\n          let opts = {\r\n            \"email\":email,\r\n            \"invitor\":{\r\n              \"id\":User.user.id,\r\n              \"type\":\"person\"\r\n              },\r\n            \"targetOrganization\":{\r\n              \"id\":user.userSelectedOrg.originalObject.id,\r\n              \"type\":\"organization\"\r\n              }\r\n          }\r\n          promises.push(API.cui.createPersonInvitation({data:opts})) \r\n        })\r\n        \r\n        $q.all(promises)\r\n        .then((res) => {\r\n          user.loader=false\r\n          user.success=true\r\n           user.sendInvitationError=false;\r\n           $timeout(() => {\r\n                 $state.go('invitation.inviteSelect');\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n             user.loader=false\r\n             user.sendInvitationError=true\r\n        });\r\n      }else{\r\n         user.emailAddressError=true\r\n      }\r\n      \r\n    }\r\n\r\n    user.goToOrgPrfile = (org) => {\r\n        user.userSelectedOrg.originalObject={}\r\n        user.userSelectedOrg.originalObject.name=org.name[0].text\r\n        user.userSelectedOrg.originalObject.id=org.id\r\n        user.selectOrgFromList=false\r\n        $scope.$digest()\r\n    }\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgProfileCtrl', function(DataStorage, Loader, Organization, User,$stateParams,$q,APIError) {\r\n\r\n    const orgProfile = this\r\n    const storedData = DataStorage.getType('orgProfile')\r\n    orgProfile.stateParamsOrgId=$stateParams.orgId\r\n    let orgPromise=[]\r\n    if (User.user.organization.id===$stateParams.orgId) {\r\n        orgProfile.organization = User.user.organization\r\n    }\r\n    else{\r\n        // Organization is different than user's org, need to get fresh\r\n        Loader.onFor('orgProfile.init')\r\n        orgPromise.push(Organization.getOrganization($stateParams.orgId))\r\n    }\r\n    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    if (storedData !== undefined) {\r\n        orgProfile.securityAdmins = storedData.admins\r\n        orgProfile.passwordPolicy = storedData.passwordPolicy\r\n        orgProfile.authenticationPolicy=storedData.authenticationPolicy\r\n    }\r\n    else Loader.onFor('orgProfile.init')\r\n    $q.all(orgPromise)\r\n    .then(res => {\r\n        if (orgPromise.length!==0) {\r\n            orgProfile.organization=res[0]\r\n        }\r\n            Organization.initOrganizationProfile(orgProfile.organization.id, orgProfile.organization.passwordPolicy.id, orgProfile.organization.authenticationPolicy.id)\r\n        .then(res => {\r\n            orgProfile.securityAdmins = res.admins\r\n            orgProfile.passwordPolicy = res.passwordPolicy\r\n            orgProfile.authenticationPolicy=res.authenticationPolicy\r\n            DataStorage.setType('orgProfile', res)\r\n            Loader.offFor('orgProfile.init')\r\n        })\r\n        .catch(err => {\r\n            console.error(\"there was an error fetching additional org details\" +err)\r\n            Loader.offFor('orgProfile.init')\r\n            APIError.onFor('orgProfile.init')\r\n        })\r\n    })\r\n    .catch(err => {\r\n        console.error(\"there was an error fetching org details\" +err)\r\n        Loader.offFor('orgProfile.init')\r\n        APIError.onFor('orgProfile.init')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.factory('NewGrant', (DataStorage, API, $stateParams) => {\r\n    let newGrant = {}\r\n    let newGrantsInStorage\r\n    /*\r\n        This Factory provides common platform to share common logic between granting an app to \r\n        User and Organization\r\n    */\r\n    // Not handling package requests as not needed\r\n    newGrant.updateStorage = (type,id,application) => {\r\n        let storageType\r\n        if(type===\"person\") storageType='newGrant'\r\n        else storageType='newOrgGrant'\r\n        DataStorage.setType(storageType, {\r\n            id: id,\r\n            type: type,\r\n            applications: application\r\n        })\r\n        // console.log(DataStorage.getType('newGrant'))\r\n    }\r\n\r\n    newGrant.pullFromStorage = (scope,resourceId,type) => {\r\n        // const newGrantsInStorage = DataStorage.getDataThatMatches('newGrant', { userId: $stateParams.userID })\r\n        if (type===\"person\") {\r\n            newGrantsInStorage = DataStorage.getType('newGrant')\r\n        }\r\n        else{\r\n            newGrantsInStorage = DataStorage.getType('newOrgGrant')\r\n        }      \r\n        if (newGrantsInStorage&&newGrantsInStorage.id==resourceId) {\r\n            scope.appsBeingRequested = Object.assign({}, newGrantsInStorage.applications)\r\n            scope.packagesBeingRequested = Object.assign({}, newGrantsInStorage.packages)\r\n        }\r\n        else {\r\n            scope.packagesBeingRequested = {}\r\n            scope.appsBeingRequested = {}\r\n        }\r\n\r\n        scope.numberOfRequests = Object.keys(scope.appsBeingRequested).length + Object.keys(scope.packagesBeingRequested).length\r\n\r\n        scope.applicationCheckbox = Object.keys(scope.appsBeingRequested).reduce((applications, appId) => {\r\n            applications[appId] = true\r\n            return applications\r\n        },{})\r\n\r\n        scope.packageCheckbox = Object.keys(scope.packagesBeingRequested).reduce((packages, appId) => {\r\n            packages[appId] = true\r\n            return packages\r\n        },{})\r\n\r\n        scope.requests = {\r\n            application: scope.appsBeingRequested,\r\n            package: scope.packagesBeingRequested\r\n        }\r\n    }\r\n\r\n    newGrant.claimGrants = (id, type,packageRequestObject) => {\r\n        let claimGrants = []\r\n\r\n        const buildPackageClaims = (claimsObject) => {\r\n            if (Object.keys(claimsObject).length === 0) {\r\n                return undefined;\r\n            } // if there's no claims in this claim object\r\n            let packageClaims = []\r\n            Object.keys(claimsObject).forEach(claimId => {\r\n                if (Object.keys(claimsObject[claimId]).length === 0) {\r\n                    return;\r\n                } // if no claimValues selected for that claimId\r\n                const claimValues = Object.keys(claimsObject[claimId]).reduce((claims, claimValueId) => {\r\n                    claims.push({ claimValueId })\r\n                    return claims\r\n                },[])\r\n\r\n                packageClaims.push({\r\n                    claimId,\r\n                    claimValues\r\n                })\r\n            })\r\n            return packageClaims\r\n        }\r\n\r\n        Object.keys(packageRequestObject).forEach(pkgId => {\r\n            claimGrants.push({\r\n                data: {\r\n                    grantee: {\r\n                        id: id,\r\n                        type: type\r\n                    },\r\n                    servicePackage: {\r\n                        id: pkgId,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    packageClaims: buildPackageClaims(packageRequestObject[pkgId].claims)\r\n                }\r\n            })\r\n        })\r\n\r\n       return claimGrants\r\n    }\r\n\r\n    newGrant.packageGrants = (id, type, packageRequestObject) => {\r\n        let packageGrants = []\r\n        let index=0\r\n        Object.keys(packageRequestObject).forEach(pkgId => {            \r\n            packageGrants.push({\r\n                packageId: pkgId,\r\n                data: {\r\n                    version:'123',\r\n                    status: 'active',\r\n                    grantee: {\r\n                        id: id,\r\n                        type: type\r\n                    },\r\n                    servicePackage: {\r\n                        id: pkgId,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    reason:packageRequestObject[pkgId].reason\r\n                }\r\n            })\r\n            if (type==='person') {\r\n                packageGrants[index].personId=id\r\n            }\r\n            else{\r\n                packageGrants[index].organizationId=id\r\n            }\r\n            index++\r\n        })\r\n\r\n        return packageGrants\r\n    }\r\n\r\n    return newGrant\r\n})\r\nangular.module('organization')\r\n.controller('newGrantClaimsCtrl', function(API,APIHelpers,DataStorage,Loader,NewGrant,$stateParams,$q,$scope,$state,$timeout) {\r\n    \r\n    const newGrantClaims = this\r\n    const loaderType = 'newGrantClaims.'\r\n    newGrantClaims.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    newGrantClaims.packageRequests = {}\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    NewGrant.pullFromStorage(newGrantClaims,$stateParams.userId,'person');\r\n    if (newGrantClaims.numberOfRequests===0) {\r\n        $state.go('organization.requests.newGrantSearch',{userId:$stateParams.userId})\r\n    }\r\n    //For PopUp\r\n    newGrantClaims.appsBeingRequestedforPopup=angular.copy(newGrantClaims.appsBeingRequested)\r\n    //Keep only one app among all bundled apps\r\n    angular.forEach(newGrantClaims.appsBeingRequested , (request) =>{\r\n        if (request.bundledApps) {\r\n            request.bundledApps.forEach(bundledApp => {\r\n                if (newGrantClaims.appsBeingRequested[bundledApp.id]) {\r\n                    delete newGrantClaims.appsBeingRequested[bundledApp.id]\r\n                }                    \r\n            })\r\n        }\r\n    })\r\n    // get the claims for each app being requested\r\n    Object.keys(newGrantClaims.appsBeingRequested).forEach((appId, i) => {\r\n        const app = newGrantClaims.appsBeingRequested[appId]\r\n\r\n        if (!newGrantClaims.packageRequests[app.servicePackage.id]) {\r\n            newGrantClaims.packageRequests[app.servicePackage.id] = {\r\n                claims: {},\r\n                administratorRights: false\r\n            }\r\n        }\r\n\r\n        Loader.onFor(loaderType + 'claims' + i)\r\n\r\n        const opts = {\r\n            qs: APIHelpers.getQs({\r\n                packageId: newGrantClaims.appsBeingRequested[appId].servicePackage.id\r\n            })\r\n        }\r\n\r\n        API.cui.getPackageClaims(opts)\r\n        .then(res => {\r\n            newGrantClaims['claims' + i] = Object.assign({}, res)\r\n            res.forEach(claim => {\r\n                newGrantClaims.packageRequests[app.servicePackage.id].claims[claim.claimId] = {}\r\n            })\r\n            Loader.offFor(loaderType + 'claims' + i)\r\n            $scope.$digest()\r\n        })\r\n        .fail(err => { \r\n            // claims endpoint throws an error when the package has no claims\r\n            newGrantClaims['claims' + i] = []\r\n            Loader.offFor(loaderType + 'claims' + i)\r\n            $scope.$digest()\r\n        })\r\n    })\r\n\r\n    Loader.onFor(loaderType + 'user')\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        newGrantClaims.user = Object.assign({}, res)\r\n        Loader.offFor(loaderType + 'user')\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    newGrantClaims.submit = () => {\r\n        Loader.onFor(loaderType + 'submit')\r\n        let claimsPromises=[]\r\n        // Grant Packages\r\n        $q.all(NewGrant.packageGrants($stateParams.userId ,'person', newGrantClaims.packageRequests).map(opts => API.cui.grantPersonPackage(opts)))\r\n        .then(res => {\r\n            // grant claims\r\n            let claimsData=NewGrant.claimGrants($stateParams.userId ,'person', newGrantClaims.packageRequests)\r\n            claimsData.forEach(claimData => {\r\n                if(claimData.data.packageClaims&&claimData.data.packageClaims.length!==0){\r\n                    claimsPromises.push(API.cui.grantClaims(claimData))\r\n                }\r\n            })\r\n            return $q.all(claimsPromises)\r\n        })\r\n        .then(res => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newGrantClaims.success = true\r\n            DataStorage.setType('newGrant',{})\r\n            $timeout(() => {\r\n                $state.go('organization.directory.userList',{userId:$stateParams.userId,orgId:$stateParams.orgId})\r\n            }, 3000);\r\n        })\r\n        .catch(err => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newGrantClaims.error = true\r\n        })\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('newGrantCtrl', function(API, $stateParams, $scope, $state, $filter, Loader, DataStorage,NewGrant) {\r\n\r\n    const newGrant = this\r\n    newGrant.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n    newGrant.searchType = 'applications'\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                userId:<user for which the grant is being made>,\r\n                applications:<array of applications being granted>,\r\n                packages:<array of packages being granted>\r\n            }\r\n        ]\r\n    ****/\r\n    NewGrant.pullFromStorage(newGrant,$stateParams.userId,'person');\r\n    Loader.onFor('newGrant.user')\r\n    API.cui.getPerson({ personId:$stateParams.userId })\r\n    .then(res => {\r\n        newGrant.user = Object.assign({}, res)\r\n        Loader.offFor('newGrant.user')\r\n        $scope.$digest()\r\n    })\r\n\r\n    Loader.onFor('newGrant.categories')\r\n    API.cui.getCategories()\r\n    .then(res => {\r\n        newGrant.categories = res.slice()\r\n        Loader.offFor('newGrant.categories')\r\n        $scope.$digest()\r\n    })\r\n    .fail(err => {\r\n        Loader.offFor('newGrant.categories')\r\n        newGrant.categoryError=true\r\n        $scope.$digest()\r\n    })\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newGrant.searchCallback = (opts) => {\r\n        if (!opts) {\r\n            $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId});\r\n        } else if (typeof opts ==='string') {\r\n            $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId, name: opts});\r\n        } else {\r\n            const optsParser = {\r\n                category: (unparsedCategory) => {\r\n                    const category = $filter('cuiI18n')(unparsedCategory)\r\n                    $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId, category})\r\n                }\r\n            }\r\n            optsParser[opts.type](opts.value)\r\n        }\r\n    }\r\n\r\n    newGrant.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newGrantClaims', { userId: $stateParams.userId, orgId: $stateParams.orgId })\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('newGrantSearchCtrl', function ($scope, $state, $stateParams, API, DataStorage, Loader, $pagination, APIHelpers, NewGrant, $q) {\r\n    const newGrantSearch = this;\r\n    newGrantSearch.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    \r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                userId:<user for which the grant is being made>,\r\n                applications:<object of applications being granted>,\r\n                packages:<object of packages being granted>\r\n            }\r\n        ]\r\n    ****/\r\n\r\n    NewGrant.pullFromStorage(newGrantSearch,$stateParams.userId,'person');\r\n\r\n    Loader.onFor('newGrantSearch.user');\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        newGrantSearch.user = Object.assign({}, res);\r\n        Loader.offFor('newGrantSearch.user');\r\n        $scope.$digest();\r\n    })\r\n    .fail(err =>{\r\n        console.error(\"There was an error in fetching user details\" + err)\r\n        Loader.offFor('newGrantSearch.user');\r\n        $scope.$digest();\r\n    })\r\n\r\n    const searchUpdate = ({ previouslyLoaded }) => {\r\n        Loader.onFor('newGrantSearch.apps');\r\n        if (!previouslyLoaded) {\r\n          newGrantSearch.search = Object.assign({}, $stateParams);\r\n        }\r\n\r\n        const type = newGrantSearch.search.type || 'applications';\r\n\r\n        const queryParams = {\r\n            'service.name': newGrantSearch.search.name,\r\n            'service.category': newGrantSearch.search.category,\r\n            page: newGrantSearch.search.page || 1,\r\n            pageSize: newGrantSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0],\r\n            sortBy: newGrantSearch.search.sortBy\r\n        };\r\n\r\n        const queryArray = APIHelpers.getQs(queryParams);\r\n\r\n        const queryOptions = {\r\n            personId: $stateParams.userId,\r\n            qs: queryArray\r\n        };\r\n\r\n        if (type === 'applications') {\r\n          // TODO: REPLACE WITH REAL COUNT\r\n          $q.all([API.cui.getPersonGrantableCount(queryOptions), API.cui.getPersonGrantableApps(queryOptions)])\r\n          .then(res => {\r\n              newGrantSearch.applicationList = res[1].slice();\r\n              newGrantSearch.count = res[0];\r\n              if(newGrantSearch.reRenderPaginate) {\r\n                newGrantSearch.reRenderPaginate();\r\n              }\r\n              Loader.offFor('newGrantSearch.apps')\r\n          })\r\n          .catch(err => {\r\n            console.error('There was an error fetching grantable apps or/and its count' + err)\r\n            Loader.offFor('newGrantSearch.apps')\r\n            newGrantSearch.grantableAppsError=true\r\n          })\r\n        }\r\n    };\r\n\r\n    searchUpdate({\r\n        previouslyLoaded: false\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newGrantSearch.toggleRequest = ({ type, payload }) => {\r\n        if (payload) {\r\n            const storedRequests = newGrantSearch.requests[type]\r\n            storedRequests[payload.id] ? delete storedRequests[payload.id] : storedRequests[payload.id] = payload\r\n            if (storedRequests[payload.id]) {\r\n                newGrantSearch[type + 'Checkbox'][payload.id] = true;\r\n            } else if (newGrantSearch[type + 'Checkbox'][payload.id]) {\r\n                delete newGrantSearch[type + 'Checkbox'][payload.id];\r\n            }\r\n            newGrantSearch.numberOfRequests = Object.keys(newGrantSearch.applicationCheckbox).length + Object.keys(newGrantSearch.packageCheckbox).length\r\n            NewGrant.updateStorage('person',$stateParams.userId, newGrantSearch.requests.application)\r\n        }\r\n    }\r\n\r\n    newGrantSearch.updateSearch = () => {\r\n        const stateParams = Object.assign({}, newGrantSearch.search)\r\n        $state.transitionTo('organization.requests.newGrantSearch', stateParams, {notify:false})\r\n        searchUpdate({\r\n            previouslyLoaded: true\r\n        })\r\n    }\r\n\r\n    newGrantSearch.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newGrantClaims', { userId: $stateParams.userId, orgId: $stateParams.orgId })\r\n    }\r\n\r\n    //select parent if it is a child, deselect child if it is a parent\r\n    newGrantSearch.checkRelatedAppsBody= function(relatedApp){\r\n        newGrantSearch.toggleRequest(_.find(newGrantSearch.list,{id:relatedApp.id}))   \r\n        newGrantSearch.checkRelatedAndBundledApps(_.find(newGrantSearch.list,{id:relatedApp.id}))\r\n    };\r\n\r\n    //deselect child if it is a parent, select parent if it is a child \r\n    newGrantSearch.checkRelatedAndBundledApps=function(type,application){\r\n        const storedRequests = newGrantSearch.requests[type]\r\n        //if unchecked the checkbox\r\n        if (!storedRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!application.servicePackage.parent) {\r\n                application.relatedApps && application.relatedApps.forEach((relatedApp)=>{\r\n                    // if (newGrantSearch[type + 'Checkbox'][relatedApp.id]) {\r\n                        // newGrantSearch[type + 'Checkbox'][relatedApp.id]=!newGrantSearch[type + 'Checkbox'][relatedApp.id]\r\n                        newGrantSearch.toggleRequest({type:'application', payload:_.find(newGrantSearch.applicationList,{id:relatedApp.id})})\r\n                    // }\r\n                })\r\n            }\r\n            newGrantSearch.checkBundledApps(application,false)           \r\n        }else{\r\n            if (application.servicePackage.parent) {\r\n                //Need to select the other parent(if it has any) If user clicks on expandabel title\r\n                newGrantSearch.applicationList.forEach(app=> {\r\n                    //if it is a parent and parent of selected app\r\n                    if (!app.servicePackage.parent&&app.servicePackage.id===application.servicePackage.parent.id&&!newGrantSearch['applicationCheckbox'][app.id]) {\r\n                       newGrantSearch['applicationCheckbox'][app.id]=!newGrantSearch['applicationCheckbox'][app.id]\r\n                       newGrantSearch.toggleRequest({type:'application', payload:app})\r\n                    }\r\n                })\r\n            }\r\n            newGrantSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    newGrantSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                // newGrantSearch['applicationCheckbox'][bundledApp.id]=check\r\n                newGrantSearch.toggleRequest({type:'application', payload:_.find(newGrantSearch.applicationList,{id:bundledApp.id})})\r\n            })\r\n        }\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('newOrgGrantClaimsCtrl', function(API,APIHelpers,DataStorage,Loader,NewGrant,$stateParams,$q,$scope,$state,$timeout) {\r\n    \r\n    const newOrgGrantClaims = this\r\n    const loaderType = 'newOrgGrantClaims.'\r\n    newOrgGrantClaims.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        }\r\n    }\r\n    if (API.user.organization.id===$stateParams.orgId) {\r\n        newOrgGrantClaims.prevState.name=\"organization.applications\"\r\n    }\r\n    else{\r\n        newOrgGrantClaims.prevState.name=\"organization.directory.orgDetails\"\r\n    }\r\n    newOrgGrantClaims.packageRequests = {}\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    NewGrant.pullFromStorage(newOrgGrantClaims,$stateParams.orgId,'organization');\r\n    if (newOrgGrantClaims.numberOfRequests===0) {\r\n        $state.go('organization.requests.newOrgGrantSearch',{orgId:$stateParams.orgId})\r\n    }\r\n        //For PopUp\r\n    newOrgGrantClaims.appsBeingRequestedforPopup=angular.copy(newOrgGrantClaims.appsBeingRequested)\r\n    //Keep only one app among all bundled apps\r\n    angular.forEach(newOrgGrantClaims.appsBeingRequested , (request) =>{\r\n        if (request.bundledApps) {\r\n            request.bundledApps.forEach(bundledApp => {\r\n                if (newOrgGrantClaims.appsBeingRequested[bundledApp.id]) {\r\n                    delete newOrgGrantClaims.appsBeingRequested[bundledApp.id]\r\n                }                    \r\n            })\r\n        }\r\n    })\r\n    // get the claims for each app being requested\r\n    Object.keys(newOrgGrantClaims.appsBeingRequested).forEach((appId, i) => {\r\n        const app = newOrgGrantClaims.appsBeingRequested[appId]\r\n\r\n        if (!newOrgGrantClaims.packageRequests[app.servicePackage.id]) {\r\n            newOrgGrantClaims.packageRequests[app.servicePackage.id] = {\r\n                claims: {},\r\n                administratorRights: false\r\n            }\r\n        }\r\n\r\n        Loader.onFor(loaderType + 'claims' + i)\r\n\r\n        // const opts = {\r\n        //     qs: APIHelpers.getQs({\r\n        //         packageId: newOrgGrantClaims.appsBeingRequested[appId].servicePackage.id\r\n        //     })\r\n        // }\r\n\r\n        // API.cui.getPackageClaims(opts)\r\n        // .then(res => {\r\n        //     newOrgGrantClaims['claims' + i] = Object.assign({}, res)\r\n        //     res.forEach(claim => {\r\n        //         newOrgGrantClaims.packageRequests[app.servicePackage.id].claims[claim.claimId] = {}\r\n        //     })\r\n        //     Loader.offFor(loaderType + 'claims' + i)\r\n        //     $scope.$digest()\r\n        // })\r\n        // .fail(err => { \r\n        //     // claims endpoint throws an error when the package has no claims\r\n        //     newOrgGrantClaims['claims' + i] = []\r\n        //     Loader.offFor(loaderType + 'claims' + i)\r\n        //     $scope.$digest()\r\n        // })\r\n    })\r\n\r\n    Loader.onFor(loaderType + 'org')\r\n    API.cui.getOrganization({ organizationId: $stateParams.orgId })\r\n    .then(res => {\r\n        newOrgGrantClaims.org = Object.assign({}, res)\r\n        Loader.offFor(loaderType + 'org')\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    newOrgGrantClaims.submit = () => {\r\n        Loader.onFor(loaderType + 'submit')\r\n        newOrgGrantClaims.success = false;\r\n        let claimsPromises=[]\r\n        // Grant Packages\r\n        $q.all(NewGrant.packageGrants($stateParams.orgId ,'organization', newOrgGrantClaims.packageRequests).map(opts => API.cui.grantOrganizationPackage(opts)))\r\n        // .then(res => {\r\n        //     // grant claims\r\n        //     let claimsData=NewGrant.claimGrants($stateParams.orgId ,'organization', newOrgGrantClaims.packageRequests)\r\n        //     claimsData.forEach(claimData => {\r\n        //         if(claimData.data.packageClaims&&claimData.data.packageClaims.length!==0){\r\n        //             claimsPromises.push(API.cui.grantClaims(claimData))\r\n        //         }\r\n        //     })\r\n        //     return $q.all(claimsPromises)\r\n        // })\r\n        .then(res => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newOrgGrantClaims.success = true\r\n            DataStorage.setType('newOrgGrant',{})\r\n            $timeout(() => {\r\n                $state.go('organization.applications',{orgId:$stateParams.orgId});\r\n            }, 3000);\r\n        })\r\n        .catch(err => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newOrgGrantClaims.error = true\r\n        })\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('newOrgGrantCtrl', function(API, $stateParams, $scope, $state, $filter, Loader, DataStorage,NewGrant) {\r\n\r\n    const newOrgGrant = this\r\n    newOrgGrant.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        }\r\n    }\r\n    if (API.user.organization.id===$stateParams.orgId) {\r\n        newOrgGrant.prevState.name=\"organization.applications\"\r\n    }\r\n    else{\r\n        newOrgGrant.prevState.name=\"organization.directory.orgDetails\"\r\n    }\r\n    \r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    newOrgGrant.searchType = 'applications'\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                id:<user/org for which the grant is being made>,\r\n                applications:<array of applications being granted>,\r\n                packages:<array of packages being granted>\r\n                type:person or organiztion\r\n            }\r\n        ]\r\n    ****/\r\n    NewGrant.pullFromStorage(newOrgGrant,$stateParams.orgId,'organization');\r\n    Loader.onFor('newOrgGrant.org')\r\n    API.cui.getOrganization({ organizationId:$stateParams.orgId })\r\n    .then(res => {\r\n        newOrgGrant.org = Object.assign({}, res)\r\n        Loader.offFor('newOrgGrant.org')\r\n        $scope.$digest()\r\n    })\r\n\r\n    Loader.onFor('newOrgGrant.categories')\r\n    API.cui.getCategories()\r\n    .then(res => {\r\n        newOrgGrant.categories = res.slice()\r\n        Loader.offFor('newOrgGrant.categories')\r\n        $scope.$digest()\r\n    })\r\n    .fail(err => {\r\n        Loader.offFor('newOrgGrant.categories')\r\n        newOrgGrant.categoryError=true\r\n        $scope.$digest()\r\n    })\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newOrgGrant.searchCallback = (opts) => {\r\n        if (!opts) {\r\n            $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId});\r\n        } else if (typeof opts ==='string') {\r\n            $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId, name: opts});\r\n        } else {\r\n            const optsParser = {\r\n                category: (unparsedCategory) => {\r\n                    const category = $filter('cuiI18n')(unparsedCategory)\r\n                    $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId, category})\r\n                }\r\n            }\r\n            optsParser[opts.type](opts.value)\r\n        }\r\n    }\r\n\r\n    newOrgGrant.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newOrgGrantClaims', { orgId: $stateParams.orgId })\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('newOrgGrantSearchCtrl', function ($scope, $state, $stateParams, API, DataStorage, Loader, $pagination, APIHelpers, NewGrant, $q, APIError) {\r\n    const newOrgGrantSearch = this;\r\n    newOrgGrantSearch.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        }\r\n    }\r\n\r\n    if (API.user.organization.id===$stateParams.orgId) {\r\n        newOrgGrantSearch.prevState.name=\"organization.applications\"\r\n    }\r\n    else{\r\n        newOrgGrantSearch.prevState.name=\"organization.directory.orgDetails\"\r\n    }\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    // const updateStorage = () => {\r\n    //     DataStorage.setType('newOrgGrant', {\r\n    //         id: $stateParams.orgId,\r\n    //         type:'organization',\r\n    //         applications: newOrgGrantSearch.requests.application,\r\n    //         packages: newOrgGrantSearch.requests.package\r\n    //     })\r\n    //     console.log(DataStorage.getType('newOrgGrant'))\r\n    // };\r\n\r\n    const updateViewList = (list) => {\r\n        let deferred= $q.defer()\r\n        newOrgGrantSearch.viewList=[]\r\n        let qs=[]\r\n        let apiPromises = []\r\n        angular.forEach(list, (app,parentIndex) => {\r\n            // Child App and Parent app requested by user\r\n            if(app.servicePackage.parent&&app.relatedApps){\r\n                let flag=false\r\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\r\n                    if (_.find(list,{id:realtedApp.id})) {\r\n                        flag=true\r\n                    }\r\n                    else{\r\n                        qs.push(['service.id',realtedApp.id])\r\n                    }\r\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\r\n                        apiPromises.push(API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs}))\r\n                        qs=[]\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                newOrgGrantSearch.viewList.push(app)\r\n            }\r\n        })\r\n        $q.all(apiPromises)\r\n        .then(res => {\r\n            angular.forEach(res, (app) => {\r\n                if (newOrgGrantSearch.search.name) {\r\n                    app[0].expanded=true\r\n                }\r\n                newOrgGrantSearch.viewList.push(...app)\r\n                newOrgGrantSearch.list.push(...app)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"There was an error loading parent requestable apps\")\r\n                deferred.reject(err)\r\n        })\r\n        return deferred.promise\r\n    }    \r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                id:<user/org for which the grant is being made>,\r\n                applications:<object of applications being granted>,\r\n                packages:<object of packages being granted>\r\n                type:<person or org>\r\n            }\r\n        ]\r\n    ****/\r\n\r\n    NewGrant.pullFromStorage(newOrgGrantSearch,$stateParams.orgId,'organization');\r\n\r\n    Loader.onFor('newOrgGrantSearch.org');\r\n    API.cui.getOrganization({ organizationId: $stateParams.orgId })\r\n    .then(res => {\r\n        newOrgGrantSearch.org = Object.assign({}, res);\r\n        Loader.offFor('newOrgGrantSearch.org');\r\n        $scope.$digest();\r\n    })\r\n    .fail(err => {\r\n        console.error('There was an error retreiving organization details '+err)\r\n        Loader.offFor('newOrgGrantSearch.org');\r\n        $scope.$digest();\r\n    })\r\n\r\n    const searchUpdate = ({ previouslyLoaded }) => {\r\n        Loader.onFor('newOrgGrantSearch.apps');\r\n        if (!previouslyLoaded) {\r\n          newOrgGrantSearch.search = Object.assign({}, $stateParams);\r\n        }\r\n\r\n        const type = newOrgGrantSearch.search.type || 'applications';\r\n\r\n        const queryParams = {\r\n            'service.name': newOrgGrantSearch.search.name,\r\n            'service.category': newOrgGrantSearch.search.category,\r\n            page: newOrgGrantSearch.search.page || 1,\r\n            pageSize: newOrgGrantSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0],\r\n            sortBy: newOrgGrantSearch.search.sortBy\r\n        };\r\n\r\n        const queryArray = APIHelpers.getQs(queryParams);\r\n\r\n        const queryOptions = {\r\n            organizationId: $stateParams.orgId,\r\n            qs: queryArray\r\n        };\r\n\r\n        if (type === 'applications') {\r\n          // TODO: REPLACE WITH REAL COUNT\r\n          $q.all([API.cui.getOrganizationGrantableCount(queryOptions), API.cui.getOrganizationGrantableApps(queryOptions)])\r\n          .then(res => {\r\n              newOrgGrantSearch.applicationList = res[1].slice();\r\n              newOrgGrantSearch.count = res[0];\r\n              if(newOrgGrantSearch.reRenderPaginate) {\r\n                newOrgGrantSearch.reRenderPaginate();\r\n              }\r\n              updateViewList(res[1])\r\n             .then(() =>{\r\n                Loader.offFor('newOrgGrantSearch.apps');\r\n             })\r\n          })\r\n          .catch(err =>{\r\n            console.error(\"There was an error in retreiving grantable apps. \"+err)\r\n            APIError.onFor('newOrgGrantSearch.apps')\r\n            Loader.offFor('newOrgGrantSearch.apps');\r\n          })\r\n        }\r\n    };\r\n\r\n    searchUpdate({\r\n        previouslyLoaded: false\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newOrgGrantSearch.toggleRequest = ({ type, payload }) => {\r\n        if (payload) {\r\n            const storedRequests = newOrgGrantSearch.requests[type]\r\n            storedRequests[payload.id] ? delete storedRequests[payload.id] : storedRequests[payload.id] = payload\r\n            if (storedRequests[payload.id]) {\r\n                newOrgGrantSearch[type + 'Checkbox'][payload.id] = true;\r\n            } else if (newOrgGrantSearch[type + 'Checkbox'][payload.id]) {\r\n                delete newOrgGrantSearch[type + 'Checkbox'][payload.id];\r\n            }\r\n            newOrgGrantSearch.numberOfRequests = Object.keys(newOrgGrantSearch.applicationCheckbox).length + Object.keys(newOrgGrantSearch.packageCheckbox).length\r\n\r\n            NewGrant.updateStorage('organization',$stateParams.orgId, newOrgGrantSearch.requests.application)\r\n        }\r\n    }\r\n\r\n    newOrgGrantSearch.updateSearch = () => {\r\n        const stateParams = Object.assign({}, newOrgGrantSearch.search)\r\n        $state.transitionTo('organization.requests.newOrgGrantSearch', stateParams, {notify:false})\r\n        searchUpdate({\r\n            previouslyLoaded: true\r\n        })\r\n    }\r\n\r\n    newOrgGrantSearch.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newOrgGrantClaims', { orgId: $stateParams.orgId })\r\n    }\r\n\r\n        //select parent if it is a child, deselect child if it is a parent\r\n    newOrgGrantSearch.checkRelatedAppsBody= function(relatedApp){\r\n        newOrgGrantSearch.toggleRequest(_.find(newOrgGrantSearch.list,{id:relatedApp.id}))   \r\n        newOrgGrantSearch.checkRelatedAndBundledApps(_.find(newOrgGrantSearch.list,{id:relatedApp.id}))\r\n    };\r\n\r\n    //deselect child if it is a parent, select parent if it is a child \r\n    newOrgGrantSearch.checkRelatedAndBundledApps=function(type,application){\r\n        const storedRequests = newOrgGrantSearch.requests[type]\r\n        //if unchecked the checkbox\r\n        if (!storedRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!application.servicePackage.parent) {\r\n                application.relatedApps && application.relatedApps.forEach((relatedApp)=>{\r\n                    // if (newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]) {\r\n                        // newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]=!newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]\r\n                        newOrgGrantSearch.toggleRequest({type:'application', payload:_.find(newOrgGrantSearch.applicationList,{id:relatedApp.id})})\r\n                    // }\r\n                })\r\n            }\r\n            newOrgGrantSearch.checkBundledApps(application,false)           \r\n        }else{\r\n            if (application.servicePackage.parent) {\r\n                //Need to select the other parent(if it has any) If user clicks on expandabel title\r\n                newOrgGrantSearch.applicationList.forEach(app=> {\r\n                    //if it is a parent and parent of selected app\r\n                    if (!app.servicePackage.parent&&app.servicePackage.id===application.servicePackage.parent.id&&!newOrgGrantSearch['applicationCheckbox'][app.id]) {\r\n                       newOrgGrantSearch['applicationCheckbox'][app.id]=!newOrgGrantSearch['applicationCheckbox'][app.id]\r\n                       newOrgGrantSearch.toggleRequest({type:'application', payload:app})\r\n                    }\r\n                })\r\n            }\r\n            newOrgGrantSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    newOrgGrantSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                // newOrgGrantSearch['applicationCheckbox'][bundledApp.id]=check\r\n                newOrgGrantSearch.toggleRequest({type:'application', payload:_.find(newOrgGrantSearch.applicationList,{id:bundledApp.id})})\r\n            })\r\n        }\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgAppRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,DataStorage) {\r\n\r\n    const scopeName = 'orgAppRequests.'\r\n\tconst orgAppRequests = this\r\n    orgAppRequests.search = {}\r\n\torgAppRequests.sortBy = {}\r\n\r\n\torgAppRequests.search=Object.assign({},$stateParams)\r\n\tif(!orgAppRequests.search.page)\r\n\t\torgAppRequests.search.page=1\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n\t\tvar foundOrgs = [];\r\n\t\tvar foundPersons = [];\r\n\t\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n      orgAppRequests.search['isApprovable'] = true;\r\n      orgAppRequests.search.pageSize = orgAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\t\t\tvar qsArray = APIHelpers.getQs(orgAppRequests.search);\r\n\r\n\t    orgAppRequests.data = []\r\n      Loader.onFor(scopeName + 'data')\r\n      APIError.offFor(scopeName + 'data')\r\n\r\n\r\n\t\t\tvar getOrg = function(orgId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (orgId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPerson = function(personId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (personId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPackage = function(packageId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (packageId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar done = function(context) {\r\n  \t\t\t$timeout(function() {\r\n\t        Loader.offFor(scopeName + 'data')\r\n\t        cui.log('done', context);\r\n\t        cui.log('data', orgAppRequests.data);\r\n\r\n\t        orgAppRequests.reRenderPagination && orgAppRequests.reRenderPagination()\r\n  \t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\t/*qsArray.push(['requestor.type','organization'])getPackageRequests*/\r\n\t\t\tqsArray.push(['requestor.id',User.user.organization.id])\r\n\t\t\tAPI.cui.retriveOrgPendingApps({ qs: ['requestor.id',User.user.organization.id] }).then(function(res) {\r\n\t\t\t\tvar calls = [];\r\n\r\n\t\t\t\t_.each(res, function(pkgReq) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\t\tvar data = pkgReq\r\n        \torgAppRequests.data.push(data);\r\n\r\n        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t        calls.push(\r\n\t        \tgetPerson(pkgReq.creator).then(function(person) {\r\n\t        \t\tdata.personData = person || {};\r\n\t        \t\tvar pkgId = (pkgReq && pkgReq.servicePackage) ? pkgReq.servicePackage.id : '';\r\n\t          \treturn getPackage(pkgId);\r\n\t\t\t\t\t\t}).then(function(pkg) {\r\n\t        \t\tdata.packageData = pkg;\r\n\t        \t\tvar orgId = pkgReq.requestor.id;\r\n\t\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t\t}).then(function(org) {\r\n\t\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t}).fail(function() {\r\n\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\treturn $.Deferred().resolve(calls);\r\n\t\t\t}).then(function(calls) {\r\n\t\t\t\t// do the cached calls\r\n\t\t\t\treturn $.when.apply($, calls);\r\n\t\t\t}).then(function() {\r\n\t\t\t\t// do the count (used for pagination)\r\n\t\t\t\treturn API.cui.getPackageRequestsCount();\r\n\t\t\t}).then(function(count) {\r\n\t\t\t\t// apply the count\r\n\t\t\t\torgAppRequests.userCount = count;\r\n\t\t\t\tAPI.user.orgAppRequestsCount=count\r\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t\t\t}).fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n      }).always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('App Requests'))\r\n      \tdone('finally');\r\n      });\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    orgAppRequests.sortingCallbacks = {\r\n      administrator () {\r\n          orgAppRequests.sortBy.sortBy = 'administrator'\r\n          orgAppRequests.sort(['personData.name.given', 'personData.name.surname'], orgAppRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          orgAppRequests.sortBy.sortBy = 'submitted'\r\n          orgAppRequests.sort('personData.creation', orgAppRequests.sortBy.sortType)\r\n      },\r\n      request () {\r\n          orgAppRequests.sortBy.sortBy = 'request'\r\n          orgAppRequests.sort('packageData.name', orgAppRequests.sortBy.sortType)\r\n      },\r\n      organization () {\r\n          orgAppRequests.sortBy.sortBy = 'organization'\r\n          orgAppRequests.sort('personData.organization.name', orgAppRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgAppRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      orgAppRequests.data = _.orderBy(orgAppRequests.data, sortBy, order)\r\n    }\r\n\r\n\t\torgAppRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id &&\r\n\t\t\t\trequest.packageData && request.packageData.id) {\r\n\t\t\t\tDataStorage.setType('organizationAppRequest',request)\r\n\t\t\t\t$state.go('organization.requests.organizationAppRequest', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id,\r\n\t\t\t\t\t'packageId': request.packageData.id\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('orgAppRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    orgAppRequests.updateSearchParams = (page) => {\r\n        if (page) orgAppRequests.search.page = page\r\n        $state.transitionTo('organization.requests.orgAppRequests', orgAppRequests.search, {notify: false})\r\n        init()\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('orgRegistrationRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,DataStorage) {\r\n\r\n    const scopeName = 'orgRegistrationRequests.'\r\n\tconst orgRegistrationRequests = this\r\n    orgRegistrationRequests.search = {}\r\n\torgRegistrationRequests.sortBy = {}\r\n\r\n\torgRegistrationRequests.search=Object.assign({},$stateParams)\r\n\tif(!orgRegistrationRequests.search.page)\r\n\t\torgRegistrationRequests.search.page=1\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\tvar foundOrgs = [];\r\n\tvar foundPersons = [];\r\n\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n    orgRegistrationRequests.search.pageSize = orgRegistrationRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\tvar qsArray = APIHelpers.getQs(orgRegistrationRequests.search);\r\n\t\t\t//cui.log('qsArray', qsArray);\r\n\r\n\torgRegistrationRequests.data = []\r\n    Loader.onFor(scopeName + 'data')\r\n    APIError.offFor(scopeName + 'data')\r\n\r\n\tvar getOrg = function(orgId) {\r\n\t\treturn $.Deferred(function (dfr) {\r\n\t\t\tif (orgId.length) {\r\n\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\tif (cached) {\r\n\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdfr.resolve({});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tvar getPerson = function(personId) {\r\n\t\treturn $.Deferred(function (dfr) {\r\n\t\t\tif (personId&&personId.length) {\r\n\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\tif (cached) {\r\n\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdfr.resolve({});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tvar getPackage = function(packageId) {\r\n\t\treturn $.Deferred(function (dfr) {\r\n\t\t\tif (packageId.length) {\r\n\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\tif (cached) {\r\n\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdfr.resolve({});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tvar done = function(context) {\r\n\t\t$timeout(function() {\r\n    Loader.offFor(scopeName + 'data')\r\n    cui.log('done', context);\r\n\t\t\tcui.log('data', orgRegistrationRequests.data);\r\n\r\n    orgRegistrationRequests.reRenderPagination && orgRegistrationRequests.reRenderPagination()\r\n\t\t});\r\n\t};\r\n\r\n\tvar start = window.performance.now();\r\n\tvar end;\r\n\tAPI.cui.getOrgRegistrationRequests({ qs: qsArray })\r\n\t.then(function(res) {\r\n\t\tvar calls = [];\r\n\t\t_.each(res, function(regReq) {\r\n\t\t\t//Needed as some requests will not contain security admin details\r\n\t\t\t//And they need to be removed\r\n\t\t\tif (regReq.registrant) {\r\n\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\tvar data = regReq\r\n\t        \torgRegistrationRequests.data.push(data);\r\n\r\n\t        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t\t        calls.push(\r\n\t\t\t        getPerson(regReq.registrant&&regReq.registrant.id)\r\n\t\t\t        .then(function(person) {\r\n\t\t\t        \tdata.personData = person || {};\r\n\t\t\t        \tvar pkgId = (! _.isEmpty(regReq.packages)) ? regReq.packages[0].id : '';\r\n\t\t\t            return getPackage(pkgId);\r\n\t\t\t\t\t})\r\n\t\t\t        .then(function(pkg) {\r\n\t\t\t        \tdata.packageData = pkg;\r\n\t\t\t        \tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\r\n\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t})\r\n\t\t\t        .then(function(org) {\r\n\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\r\n\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t\t      \t\t})\r\n\t\t      \t\t.fail(function() {\r\n\t\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t\t      \t\t})\r\n\t\t\t    );\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn $.Deferred().resolve(calls);\r\n\t})\r\n\t.then(function(calls) {\r\n\t\t// do the cached calls\r\n\t\treturn $.when.apply($, calls);\r\n\t})\r\n\t.then(function() {\r\n\t\t// do the count (used for pagination)\r\n\t\treturn API.cui.getOrgRegistrationRequestsCount();\r\n\t})\r\n\t.then(function(count) {\r\n\t\t// apply the count\r\n\t\torgRegistrationRequests.userCount = count;\r\n\t\tAPI.user.orgRegistrationRequestsCount=count\r\n\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t})\r\n\t.fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n    })\r\n\t.always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('Registration Requests'))\r\n      \tdone('finally');\r\n\t\tvar end = window.performance.now();\r\n\t\tvar time = end - start;\r\n\t\tcui.log('time', time);\r\n\t\t});\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    orgRegistrationRequests.sortingCallbacks = {\r\n      administrator () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'administrator'\r\n          orgRegistrationRequests.sort(['personData.name.given', 'personData.name.surname'], orgRegistrationRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'submitted'\r\n          orgRegistrationRequests.sort('personData.creation', orgRegistrationRequests.sortBy.sortType)\r\n      },\r\n      request () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'request'\r\n          orgRegistrationRequests.sort('packageData.name', orgRegistrationRequests.sortBy.sortType)\r\n      },\r\n      organization () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'organization'\r\n          orgRegistrationRequests.sort('personData.organization.name', orgRegistrationRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgRegistrationRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      orgRegistrationRequests.data = _.orderBy(orgRegistrationRequests.data, sortBy, order)\r\n    }\r\n\r\n\r\n\t\torgRegistrationRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id) {\r\n\t\t\t\tDataStorage.setType('organizationRegRequest',request)\r\n\t\t\t\t$state.go('organization.requests.organizationRequest', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id \r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('orgRegistrationRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    orgRegistrationRequests.updateSearch = (updateType, updateValue) => {\r\n    \t//cui.log('updateSearchParams', page);\r\n    \tswitch(updateType){\r\n    \t\tcase 'organizationName':\r\n    \t\t\torgRegistrationRequests.search.page=1\r\n    \t\t\torgRegistrationRequests.search.organizationName=updateValue\r\n    \t\t\tbreak\r\n    \t}\r\n        // WHY transition to this same route? if setting notify:false? what is the purpose? just to add an item to history?\r\n        $state.transitionTo('organization.requests.orgRegistrationRequests', orgRegistrationRequests.search, {notify: false})\r\n        init()\r\n    }\r\n\r\n    orgRegistrationRequests.pageChange = (newpage) => {\r\n        orgRegistrationRequests.updateSearch('page', newpage)\r\n    }\r\n\r\n    orgRegistrationRequests.searchCallback= (searchWord) => {\r\n        orgRegistrationRequests.updateSearch('organizationName',searchWord)\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('organizationAppRequestCtrl', function(APIError, DataStorage, Loader, $state, $stateParams, $timeout,API,$scope,$q, ServicePackage ) {\r\n    'use strict'\r\n\r\n    const organizationAppRequest = this\r\n    const userId = $stateParams.userId\r\n    const organizationId = $stateParams.orgId\r\n\r\n    // HELPER FUNCTIONS START------------------------------------------------------\r\n    let getAllDetails= () => {\r\n        let promises=[]\r\n        API.cui.getOrganization({organizationId:organizationId})\r\n        .then(res =>{\r\n            organizationAppRequest.request.personData.organization=res\r\n            $scope.$digest()\r\n        })\r\n        if (organizationAppRequest.request.packageData) {\r\n            ServicePackage.getPackageDetails(organizationAppRequest.request.packageData.id)\r\n            .then(packageData => {\r\n                organizationAppRequest.request.packageData=angular.merge(organizationAppRequest.request.packageData,packageData)\r\n            })\r\n            .catch(err => {\r\n                APIError.onFor('organizationAppRequest.packageServices')\r\n                console.log('There was an error in fetching following package service details' +err)\r\n            })\r\n            .finally(() => {\r\n                Loader.offFor('organizationAppRequest.init')\r\n            })\r\n        }\r\n        else{\r\n            Loader.offFor('organizationAppRequest.init')\r\n        }\r\n    }\r\n    // HELPER FUNCTIONS END------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationAppRequest.init')\r\n    organizationAppRequest.request=DataStorage.getType('organizationAppRequest')\r\n    console.log(organizationAppRequest.request)\r\n    if (!organizationAppRequest.request) {\r\n        APIError.onFor('organizationAppRequest.noRequest')\r\n        Loader.offFor('organizationAppRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else if (organizationAppRequest.request.personData.id!==userId || organizationAppRequest.request.personData.organization.id!==organizationId) {\r\n        APIError.onFor('organizationAppRequest.noRequest')\r\n        Loader.offFor('organizationAppRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else{\r\n        getAllDetails()\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationAppRequest.reviewApprovals = () => {\r\n        DataStorage.setType('organizationRegRequest', organizationAppRequest.request)\r\n        $state.go('organization.requests.organizationAppRequestReview', { userId: userId, orgId: organizationId })\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('organizationAppRequestReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout,APIError,API,$scope) {\r\n    'use strict'\r\n\r\n    const organizationAppRequestReview = this\r\n    const orgId = $stateParams.orgId\r\n\r\n    organizationAppRequestReview.success = false\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('organizationAppRequestReview.submitting')\r\n        organizationAppRequestReview.success = true\r\n        DataStorage.setType('organizationAppRequest',{})\r\n        $scope.$digest()\r\n            $timeout(() => {\r\n                $state.go('organization.requests.orgAppRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving org app request ${err.responseJSON}`)\r\n        if (err&&err.responseJSON.apiMessage==='The service request does not exist') {\r\n            organizationAppRequestReview.errorMessage='request-approve-or-rejected'\r\n        }else{\r\n            organizationAppRequestReview.errorMessage=undefined\r\n        }\r\n        Loader.offFor('organizationAppRequestReview.submitting')\r\n        organizationAppRequestReview.error = true\r\n        $scope.$digest()\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationAppRequestReview.init')\r\n\r\n    const requestData = DataStorage.getType('organizationAppRequest')\r\n    if (!requestData) {\r\n        APIError.onFor('organizationAppRequestReview.noRequest')\r\n        // $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else if (requestData.personData.organization.id!==orgId) {\r\n        APIError.onFor('organizationAppRequestReview.noRequest')\r\n        // $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else{\r\n        Loader.offFor('organizationAppRequestReview.init')\r\n    }\r\n    organizationAppRequestReview.packageData = requestData.packageData\r\n    organizationAppRequestReview.personData = requestData.personData\r\n    organizationAppRequestReview.organization = requestData.organization\r\n    organizationAppRequestReview.request = requestData.request\r\n    organizationAppRequestReview.justification=requestData.justification\r\n    organizationAppRequestReview.id=requestData.id\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationAppRequestReview.submit = () => {\r\n        Loader.onFor('organizationAppRequestReview.submitting')\r\n        organizationAppRequestReview.packageData.id=organizationAppRequestReview.id\r\n        ServicePackage.handlePackageApproval(organizationAppRequestReview.packageData)\r\n        .then(handleSuccess)\r\n        .fail(handleError)\r\n        // if (organizationAppRequestReview.packageData.approval === 'approved'){\r\n        //     API.cui.denyOrgRegistrationRequest({qs:[['requestId',requestData.id],['reason',organizationAppRequestReview.request.rejectReason]]})\r\n        //     .then(handleSuccess)\r\n        //     .fail(handleError)\r\n        // }\r\n        // //all approval then call registration endpoint directly\r\n        // else (organizationAppRequestReview.deniedCount===0) {\r\n        //     API.cui.approveOrgRegistrationRequest({qs:[['requestId',requestData.id]]})\r\n        //     .then(handleSuccess)\r\n        //     .fail(handleError)\r\n        // }\r\n        // else {\r\n        //     API.cui.approvePersonRegistration({qs: [['requestId',requestData.registrant.requestId]]})\r\n        //     let packageRequestCalls = []\r\n\r\n        //     organizationAppRequestReview.packages.forEach(packageRequest => {\r\n        //         packageRequest.id=packageRequest.requestId\r\n        //         packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n        //     })\r\n\r\n        //     $q.all(packageRequestCalls)\r\n        //     .then( res =>{\r\n        //         Loader.offFor('organizationAppRequestReview.submitting')\r\n        //         organizationAppRequestReview.success = true\r\n        //             $timeout(() => {\r\n        //                 $state.go('organization.requests.orgRegistrationRequests')\r\n        //         }, 3000) \r\n        //     })\r\n        //     // .catch(handleError)\r\n        // }\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('organizationRequestCtrl', function(APIError, DataStorage, Loader, $state, $stateParams, $timeout,API,$scope,$q, ServicePackage ) {\r\n    'use strict'\r\n\r\n    const organizationRequest = this\r\n    const userId = $stateParams.userId\r\n    const organizationId = $stateParams.orgId\r\n\r\n    // HELPER FUNCTIONS START------------------------------------------------------\r\n    let getAllDetails= () => {\r\n        let promises=[]\r\n        API.cui.getOrganization({organizationId:organizationId})\r\n        .then(res =>{\r\n            organizationRequest.request.personData.organization=res\r\n            $scope.$digest()\r\n        })\r\n        if (organizationRequest.request.packages&&organizationRequest.request.packages.length!==0) {\r\n            organizationRequest.request.packages.forEach((requestedPackage ,index)=>{\r\n                ServicePackage.getPackageDetails(requestedPackage.id)\r\n                .then(packageData => {\r\n                    requestedPackage=angular.merge(requestedPackage,packageData)\r\n                })\r\n                .catch(err => {\r\n                    APIError.onFor('organizationRequest.packageServices')\r\n                    console.log('There was an error in fetching following package service details' +err)\r\n                    Loader.offFor('organizationRequest.init')\r\n                })\r\n                .finally(() => {\r\n                        if (index===organizationRequest.request.packages.length-1) {\r\n                        Loader.offFor('organizationRequest.init')\r\n                    }\r\n                })\r\n            })\r\n            // $q.all(promises)\r\n            // .then(res => {\r\n            //     organizationRequest.packageData =res\r\n                \r\n            // })\r\n            // .catch(err => {\r\n            //     APIError.onFor('organizationRequest.packageServices')\r\n            //     console.log('There was an error in fetching one or more package service details' +err)\r\n            //     Loader.offFor('organizationRequest.init')\r\n            // })\r\n        }\r\n        else{\r\n            Loader.offFor('organizationRequest.init')\r\n        }\r\n    }\r\n    // HELPER FUNCTIONS END------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationRequest.init')\r\n    organizationRequest.request=DataStorage.getType('organizationRegRequest')\r\n    console.log(organizationRequest.request)\r\n    if (!organizationRequest.request) {\r\n        APIError.onFor('organizationRequest.noRequest')\r\n        Loader.offFor('organizationRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else if (organizationRequest.request.personData.id!==userId || organizationRequest.request.personData.organization.id!==organizationId) {\r\n        APIError.onFor('organizationRequest.noRequest')\r\n        Loader.offFor('organizationRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else{\r\n        getAllDetails()\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationRequest.reviewApprovals = () => {\r\n        DataStorage.setType('organizationRegRequest', organizationRequest.request)\r\n        $state.go('organization.requests.organizationRequestReview', { userId: userId, orgId: organizationId })\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('organizationRequestReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout,APIError,API,$scope) {\r\n    'use strict'\r\n\r\n    const organizationRequestReview = this\r\n    const orgId = $stateParams.orgId\r\n\r\n    organizationRequestReview.success = false\r\n    organizationRequestReview.approvedCount = 0\r\n    organizationRequestReview.deniedCount = 0\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    organizationRequestReview.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    organizationRequestReview.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('organizationRequestReview.submitting')\r\n            organizationRequestReview.success = true\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                $state.go('organization.requests.orgRegistrationRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving org registration ${err}`)\r\n        Loader.offFor('organizationRequestReview.submitting')\r\n        organizationRequestReview.error = true\r\n        $scope.$digest()\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationRequestReview.init')\r\n\r\n    const requestData = DataStorage.getType('organizationRegRequest')\r\n    if (!requestData) {\r\n        APIError.onFor('organizationRequestReview.noRequest')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else if (requestData.personData.organization.id!==orgId) {\r\n        APIError.onFor('organizationRequestReview.noRequest')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else if (requestData.personData.status!==\"pending\") {\r\n        APIError.onFor('organizationRequestReview.active')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else{\r\n        Loader.offFor('organizationRequestReview.init')\r\n    }\r\n    organizationRequestReview.packages = requestData.packages\r\n    organizationRequestReview.personData = requestData.personData\r\n    organizationRequestReview.organization = requestData.organization\r\n    organizationRequestReview.request = requestData.request\r\n    organizationRequestReview.justification=requestData.justification\r\n    organizationRequestReview.id=requestData.id\r\n    if (organizationRequestReview.packages&&organizationRequestReview.packages.length > 0) {\r\n    \tgetApprovalCounts(organizationRequestReview.packages)\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationRequestReview.submit = () => {\r\n        Loader.onFor('organizationRequestReview.submitting')\r\n\r\n        if (organizationRequestReview.request.approval === 'denied'){\r\n            API.cui.denyOrgRegistrationRequest({qs:[['requestId',requestData.id],['reason',organizationRequestReview.request.rejectReason]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        //all approval then call registration endpoint directly\r\n        else if (organizationRequestReview.deniedCount===0) {\r\n            API.cui.approveOrgRegistrationRequest({qs:[['requestId',requestData.id]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else {\r\n            API.cui.approveOrganizationRequests({qs: [['requestId',requestData.registrant.requestId]]})\r\n            .then(res =>{\r\n                let packageRequestCalls = []\r\n\r\n                organizationRequestReview.packages.forEach(packageRequest => {\r\n                    packageRequest.id=packageRequest.requestId\r\n                    packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n                })\r\n\r\n                $q.all(packageRequestCalls)\r\n                .then( res =>{\r\n                    Loader.offFor('organizationRequestReview.submitting')\r\n                    organizationRequestReview.success = true\r\n                        $timeout(() => {\r\n                            $state.go('organization.requests.orgRegistrationRequests')\r\n                    }, 3000) \r\n                })\r\n                .catch(err => {\r\n                    console.log(\"Org approval success but One or more package approval/denied failed\" +err)\r\n                    organizationRequestReview.error = true\r\n                })\r\n            })            \r\n            .fail(handleError)\r\n        }\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('pendingRequestsCtrl', function(API, DataStorage, Loader, ServicePackage, $q, $state, $stateParams,$timeout) {\r\n    'use strict'\r\n\r\n    const pendingRequests = this\r\n    const userId = $stateParams.userId\r\n    const orgId = $stateParams.orgId\r\n\r\n    pendingRequests.success = false\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n    pendingRequests.approvedCount = 0\r\n    pendingRequests.deniedCount = 0\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    pendingRequests.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    pendingRequests.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('pendingRequests.init')\r\n\r\n    $q.all([\r\n        API.cui.getPerson({personId: userId}),\r\n        ServicePackage.getAllUserPendingPackageData(userId)\r\n    ])\r\n    .then(res => {\r\n        pendingRequests.user = res[0]\r\n        pendingRequests.packages = res[1]\r\n        Loader.offFor('pendingRequests.init')\r\n    })\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    pendingRequests.reviewApprovals = () => {\r\n        const storageData = {\r\n            user: pendingRequests.user,\r\n            packages: pendingRequests.packages   \r\n        }\r\n        \r\n        DataStorage.setType('appRequests', storageData)\r\n        $state.go('organization.requests.pendingRequestsReview', { userId: userId, orgId: orgId })\r\n    }\r\n\r\n    pendingRequests.submit = () => {\r\n        let submitCalls = []\r\n        getApprovalCounts(pendingRequests.packages)\r\n        if (pendingRequests.deniedCount===0) {\r\n            pendingRequests.submitting=true\r\n            pendingRequests.packages.forEach(packageRequest => {\r\n                submitCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n            })\r\n\r\n            $q.all(submitCalls)\r\n            .then(() => {\r\n                pendingRequests.success = true\r\n                pendingRequests.submitting=false\r\n                $timeout(() => {\r\n                    $state.go('organization.requests.usersAppRequests')\r\n                }, 3000)\r\n            })\r\n            .catch(err => {\r\n                pendingRequests.submitting=false\r\n                console.log(\"There was an error in approving application requests\" + err);\r\n                pendingRequests.error=true\r\n            })\r\n        }\r\n        else{\r\n            pendingRequests.reviewApprovals()\r\n        }\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('pendingRequestsReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout) {\r\n    'use strict'\r\n\r\n    const pendingRequestsReview = this\r\n    const userId = $stateParams.userId\r\n    const orgId = $stateParams.orgId\r\n\r\n    pendingRequestsReview.success = false\r\n    pendingRequestsReview.approvedCount = 0\r\n    pendingRequestsReview.deniedCount = 0\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    pendingRequestsReview.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    pendingRequestsReview.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('pendingRequestsReview.init')\r\n\r\n    const requestData = DataStorage.getType('appRequests')\r\n\r\n    pendingRequestsReview.pendingRequests = requestData.packages\r\n    pendingRequestsReview.user = requestData.user\r\n\r\n    if (pendingRequestsReview.pendingRequests.length > 0) {\r\n        getApprovalCounts(pendingRequestsReview.pendingRequests)\r\n    }\r\n\r\n    Loader.offFor('pendingRequestsReview.init')\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    pendingRequestsReview.submit = () => {\r\n        let submitCalls = []\r\n        pendingRequestsReview.submitting=true\r\n        pendingRequestsReview.pendingRequests.forEach(packageRequest => {\r\n            submitCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n        })\r\n\r\n        $q.all(submitCalls)\r\n        .then(() => {\r\n            pendingRequestsReview.success = true\r\n            pendingRequestsReview.submitting=false\r\n            $timeout(() => {\r\n                $state.go('organization.requests.usersAppRequests',)\r\n            }, 3000)\r\n        })\r\n        .catch(err => {\r\n            console.log(\"There was an error in approving user application requests\" + err)\r\n            pendingRequestsReview.submitting=false\r\n            pendingRequestsReview.error=true\r\n        })\r\n    }\r\n\r\n    pendingRequestsReview.goBack = () => {\r\n        $state.go('organization.requests.pendingRequests', { userId: userId, orgId: orgId })\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('personRequestCtrl', function(APIError, DataStorage, Loader, PersonRequest, ServicePackage, $state, $stateParams, $timeout,API,$scope) {\r\n    'use strict'\r\n\r\n    const personRequest = this\r\n    const userId = $stateParams.userId\r\n    const organizationId = $stateParams.orgId\r\n    // Needed when there is no packages\r\n    personRequest.approvedCount = 0\r\n    personRequest.deniedCount = 0\r\n\r\n    personRequest.success = false\r\n\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        personRequest.approvedCount = 0\r\n        personRequest.deniedCount = 0\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    personRequest.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    personRequest.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('personRequest.submitting')\r\n        personRequest.success = true\r\n        DataStorage.deleteType('userPersonRequest')\r\n        API.user.userRegistrationRequestsCount=API.user.userRegistrationRequestsCount-1\r\n        $scope.$digest()\r\n        $timeout(() => {\r\n            $state.go('organization.requests.usersRegistrationRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving user registration ${err}`)\r\n        Loader.offFor('personRequest.submitting')\r\n        personRequest.error = true\r\n        $scope.$digest()\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    let getPackageDetails = () => {\r\n        if (personRequest.request.request.packages) {\r\n            ServicePackage.getAllUserPendingPackageData(userId)\r\n            .then(res => {\r\n                personRequest.request.completePackageData = res\r\n            })\r\n            .catch(err => {\r\n                APIError.onFor('personRequest.noRequest')\r\n                $timeout(() => $state.go('organization.requests.usersRegistrationRequests'), 5000)\r\n            })\r\n        }\r\n        else{\r\n            personRequest.request.completePackageData =[]\r\n        }\r\n    }\r\n\r\n    // Check LocalStorage if data is already obtained in previous page\r\n    let storageData=DataStorage.getType('userPersonRequest')\r\n    if (storageData&&userId===storageData.request.registrant.id) {\r\n        personRequest.request=storageData;\r\n        getPackageDetails()\r\n    }\r\n    else{\r\n        Loader.onFor('personRequest.init')\r\n        PersonRequest.getPersonRegistrationRequestData(userId, organizationId)\r\n        .then(res => {\r\n            if (!res.request) {\r\n                APIError.onFor('personRequest.noRequest')\r\n                $timeout(() => $state.go('organization.requests.usersRegistrationRequests'), 5000)\r\n            }\r\n            else {\r\n                personRequest.request = res\r\n                getPackageDetails()    \r\n                Loader.offFor('personRequest.init')\r\n            }\r\n        })\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    personRequest.reviewApprovals = () => {\r\n        DataStorage.setType('userPersonRequest', personRequest.request )\r\n        $state.go('organization.requests.personRequestReview', { userId: userId, orgId: organizationId })\r\n    }\r\n\r\n    personRequest.submit = () => {\r\n        Loader.onFor('personRequest.submitting')\r\n        if (personRequest.packages&&personRequest.packages.length > 0) {\r\n            getApprovalCounts(personRequest.packages)\r\n        }\r\n        if (personRequest.request.request.approval==='denied') {\r\n            //To enter denied Reason\r\n            personRequest.reviewApprovals()\r\n            // API.cui.denyPersonRegistrationRequest({qs:[['requestId',personRequest.request.request.id],['reason',personRequestReview.request.rejectReason|\"\"]]})\r\n            // .then(handleSuccess)\r\n            // .fail(handleError)\r\n        }\r\n        else if (personRequest.deniedCount===0) {\r\n            API.cui.approvePersonRegistrationRequest({qs:[['requestId',personRequest.request.request.id]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else{\r\n            //To enter denied Reason\r\n            personRequest.reviewApprovals()\r\n            // API.cui.approvePersonRequest({qs:[['requestId',personRequest.request.request.registrant.requestId||personRequestReview.request.id]]})\r\n            // .then(res => {\r\n            //     let packageRequestCalls = []\r\n\r\n            //     personRequest.packages.forEach(packageRequest => {\r\n            //         packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n            //     })\r\n\r\n            //     $q.all(packageRequestCalls)\r\n            //     .then(() => {\r\n            //         Loader.offFor('personRequest.submitting')\r\n            //         personRequest.success = true\r\n            //         $timeout(() => {\r\n            //             $state.go('organization.requests.usersRegistrationRequests')\r\n            //         }, 3000)  \r\n            //     })\r\n            //     .catch(err => {\r\n            //         console.log(\"User approval successful but there was an error approving/denying package requests\" +err)\r\n            //         personRequest.error = true\r\n            //         personRequest.errorMessage=\"app-approval-error\"\r\n            //     })\r\n            // })\r\n            // .fail(handleError)\r\n        }        \r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('personRequestReviewCtrl', function(DataStorage, Loader, PersonRequest, ServicePackage, $q, $state, $stateParams, $timeout,API,$scope) {\r\n    'use strict'\r\n\r\n    const personRequestReview = this\r\n    const userId = $stateParams.userId\r\n    const orgId = $stateParams.orgId\r\n\r\n    personRequestReview.success = false\r\n    personRequestReview.approvedCount = 0\r\n    personRequestReview.deniedCount = 0\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    personRequestReview.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    personRequestReview.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('personRequestReview.submitting')\r\n            personRequestReview.success = true\r\n            DataStorage.deleteType('userPersonRequest')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                $state.go('organization.requests.usersRegistrationRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving user registration ${err}`)\r\n        Loader.offFor('personRequestReview.submitting')\r\n        personRequestReview.error = true\r\n        $scope.$digest()\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    const requestData = DataStorage.getType('userPersonRequest')\r\n    if (requestData&&requestData.request.registrant.id===userId) {\r\n        personRequestReview.packages = requestData.completePackageData\r\n        personRequestReview.personData = requestData.personData\r\n        personRequestReview.organization = requestData.organization\r\n        personRequestReview.request = requestData.request\r\n\r\n        if (personRequestReview.packages.length > 0) {\r\n            getApprovalCounts(personRequestReview.packages)\r\n        }\r\n    }\r\n    else{\r\n        $state.go('organization.requests.personRequest',{userId:userId, orgId:orgId})\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    personRequestReview.submit = () => {\r\n        Loader.onFor('personRequestReview.submitting')\r\n\r\n        if (personRequestReview.request.approval==='denied') {\r\n            API.cui.denyPersonRegistrationRequest({qs:[['requestId',personRequestReview.request.id],['reason',personRequestReview.request.rejectReason|\"\"]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else if (personRequestReview.deniedCount===0) {\r\n            API.cui.approvePersonRegistrationRequest({qs:[['requestId',personRequestReview.request.id]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else{\r\n            API.cui.approvePersonRequest({qs:[['requestId',personRequestReview.request.registrant.requestId||personRequestReview.request.id]]})\r\n            .then(res => {\r\n                let packageRequestCalls = []\r\n\r\n                personRequestReview.packages.forEach(packageRequest => {\r\n                    packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n                })\r\n\r\n                $q.all(packageRequestCalls)\r\n                .then(() => {\r\n                    Loader.offFor('personRequestReview.submitting')\r\n                    personRequestReview.success = true\r\n                    DataStorage.deleteType('userPersonRequest')\r\n                    $timeout(() => {\r\n                        $state.go('organization.requests.usersRegistrationRequests')\r\n                    }, 3000)  \r\n                })\r\n                .catch(err => {\r\n                    console.log(\"User approval successful but there was an error approving/denying package requests\" +err)\r\n                    personRequestReview.error = true\r\n                    personRequestReview.errorMessage=\"app-approval-error\"\r\n                })\r\n            })\r\n            .fail(handleError)\r\n        }        \r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('usersAppRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User) {\r\n\r\n    const scopeName = 'usersAppRequests.'\r\n\t\tconst usersAppRequests = this\r\n    usersAppRequests.search = {}\r\n\t\tusersAppRequests.sortBy = {}\r\n\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n\t\tvar foundOrgs = [];\r\n\t\tvar foundPersons = [];\r\n\t\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n      usersAppRequests.search['isApprovable'] = true;\r\n      usersAppRequests.search.pageSize = usersAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\t\t\tvar qsArray = APIHelpers.getQs(usersAppRequests.search);\r\n\r\n\t    usersAppRequests.data = []\r\n      Loader.onFor(scopeName + 'data')\r\n      APIError.offFor(scopeName + 'data')\r\n\r\n\r\n\t\t\tvar getOrg = function(orgId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (orgId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPerson = function(personId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (personId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPackage = function(packageId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (packageId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar done = function(context) {\r\n  \t\t\t$timeout(function() {\r\n\t        Loader.offFor(scopeName + 'data')\r\n\t        cui.log('done', context);\r\n\t        cui.log('data', usersAppRequests.data);\r\n\r\n\t        usersAppRequests.reRenderPagination && usersAppRequests.reRenderPagination()\r\n  \t\t\t});\r\n\t\t\t};\r\n\r\n\r\n\t\t\tAPI.cui.getPackageRequests({ qs: qsArray }).then(function(res) {\r\n\t\t\t\tvar calls = [];\r\n\r\n\t\t\t\t_.each(res, function(pkgReq) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\t\tvar data = {};\r\n        \tusersAppRequests.data.push(data);\r\n\r\n        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t        calls.push(\r\n\t        \tgetPerson(pkgReq.requestor.id).then(function(person) {\r\n\t        \t\tdata.personData = person || {};\r\n\t        \t\tvar pkgId = (pkgReq && pkgReq.servicePackage) ? pkgReq.servicePackage.id : '';\r\n\t          \treturn getPackage(pkgId);\r\n\t\t\t\t\t\t}).then(function(pkg) {\r\n\t        \t\tdata.packageData = pkg;\r\n\t        \t\tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\r\n\t\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t\t}).then(function(org) {\r\n\t\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t}).fail(function() {\r\n\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\treturn $.Deferred().resolve(calls);\r\n\t\t\t}).then(function(calls) {\r\n\t\t\t\t// do the cached calls\r\n\t\t\t\treturn $.when.apply($, calls);\r\n\t\t\t}).then(function() {\r\n\t\t\t\t// do the count (used for pagination)\r\n\t\t\t\treturn API.cui.getPackageRequestsCount();\r\n\t\t\t}).then(function(count) {\r\n\t\t\t\t// apply the count\r\n\t\t\t\tusersAppRequests.userCount = count;\r\n\t\t\t\tAPI.user.userAppRequestsCount=count\r\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t\t\t}).fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n      }).always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('App Requests'))\r\n      \tdone('finally');\r\n      });\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    usersAppRequests.sortingCallbacks = {\r\n      name () {\r\n          usersAppRequests.sortBy.sortBy = 'name'\r\n          usersAppRequests.sort(['personData.name.given', 'personData.name.surname'], usersAppRequests.sortBy.sortType)\r\n      },\r\n      title () {\r\n          usersAppRequests.sortBy.sortBy = 'title'\r\n          usersAppRequests.sort('personData.title', usersAppRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          usersAppRequests.sortBy.sortBy = 'submitted'\r\n          usersAppRequests.sort('personData.creation', usersAppRequests.sortBy.sortType)\r\n      },\r\n      application () {\r\n          usersAppRequests.sortBy.sortBy = 'application'\r\n          usersAppRequests.sort('packageData.name', usersAppRequests.sortBy.sortType)\r\n      },\r\n      division () {\r\n          usersAppRequests.sortBy.sortBy = 'division'\r\n          usersAppRequests.sort('personData.organization.name', usersAppRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    usersAppRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      usersAppRequests.data = _.orderBy(usersAppRequests.data, sortBy, order)\r\n    }\r\n\r\n\t\tusersAppRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id &&\r\n\t\t\t\trequest.packageData && request.packageData.id) {\r\n\t\t\t\t$state.go('organization.requests.pendingRequests', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id,\r\n\t\t\t\t\t'packageId': request.packageData.id\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('usersAppRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    usersAppRequests.updateSearchParams = (page) => {\r\n        if (page) usersAppRequests.search.page = page\r\n        $state.transitionTo('organization.requests.usersAppRequests', usersAppRequests.search, {notify: false})\r\n        init()\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('usersRegistrationRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,$scope,DataStorage) {\r\n\r\n    const scopeName = 'usersRegistrationRequests.'\r\n\t\tconst usersRegistrationRequests = this\r\n    usersRegistrationRequests.search = {}\r\n\t\tusersRegistrationRequests.sortBy = {}\r\n\tusersRegistrationRequests.searchByOrg=[]\r\n      usersRegistrationRequests.searchByPerson=[]\r\n\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\t\tvar foundOrgs = [];\r\n\t\tvar foundPersons = [];\r\n\t\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n      usersRegistrationRequests.search.pageSize = usersRegistrationRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\t\t\tvar qsArray = APIHelpers.getQs(usersRegistrationRequests.search);\r\n\t\t\t//cui.log('qsArray', qsArray);\r\n\t\t\tif(usersRegistrationRequests.searchByOrg.length>0){\r\n\t\t\t\tusersRegistrationRequests.searchByOrg.forEach(function(val){\r\n\t\t\t\t\tqsArray.push(['organization.id',val.id])\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t}else if(usersRegistrationRequests.searchByPerson.length>0){\r\n\t\t\t\tusersRegistrationRequests.searchByPerson.forEach(function(val){\r\n\t\t\t\t\tqsArray.push(['registrant.id',val.id])\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse{}\r\n\r\n\t    usersRegistrationRequests.data = []\r\n      Loader.onFor(scopeName + 'data')\r\n      APIError.offFor(scopeName + 'data')\r\n\r\n\t\t\tvar getOrg = function(orgId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (orgId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPerson = function(personId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (personId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPackage = function(packageId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (packageId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar done = function(context) {\r\n  \t\t\t$timeout(function() {\r\n\t        Loader.offFor(scopeName + 'data')\r\n\t        cui.log('done', context);\r\n\t\t\t\t\tcui.log('data', usersRegistrationRequests.data);\r\n\r\n\t        usersRegistrationRequests.reRenderPagination && usersRegistrationRequests.reRenderPagination()\r\n  \t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar start = window.performance.now();\r\n\t\t\tvar end;\r\n\t\t\tAPI.cui.getRegistrationRequests({ qs: qsArray }).then(function(res) {\r\n\t\t\t\tvar calls = [];\r\n\r\n\t\t\t\t_.each(res, function(regReq) {\r\n\t\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\t\tvar data = {};\r\n\t\t\t\t\tdata.request=regReq\r\n\t\t        \tusersRegistrationRequests.data.push(data);\r\n\r\n\t\t        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t\t\t        calls.push(\r\n\t\t\t\t        getPerson(regReq.registrant.id)\r\n\t\t\t\t        .then(function(person) {\r\n\t\t\t\t        \tdata.personData = person || {};\r\n\t\t\t\t        \tvar pkgId = (! _.isEmpty(regReq.packages)) ? regReq.packages[0].id : '';\r\n\t\t\t\t          \treturn getPackage(pkgId);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t        .then(function(pkg) {\r\n\t\t\t\t        \tdata.packageData = pkg;\r\n\t\t\t\t        \tconsole.log(data.personData.organization.id)\r\n\t\t\t\t        \tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\r\n\t\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t        .then(function(org) {\r\n\t\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\r\n\t\t\t\t\t\t\tdata.organization={\r\n\t\t\t\t\t\t\t\tid:org.id,\r\n\t\t\t\t\t\t\t\tname:org.name\r\n\t\t\t\t\t\t\t}        \t\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t\t\t      \t\t}).fail(function() {\r\n\t\t\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t\t\t      \t\t})\r\n\t\t\t\t    );\r\n\t\t\t\t});\r\n\t\t\t\treturn $.Deferred().resolve(calls);\r\n\t\t\t}).then(function(calls) {\r\n\t\t\t\t// do the cached calls\r\n\t\t\t\treturn $.when.apply($, calls);\r\n\t\t\t}).then(function() {\r\n\t\t\t\t// do the count (used for pagination)\r\n\t\t\t\treturn API.cui.getRegistrationRequestsCount();\r\n\t\t\t}).then(function(count) {\r\n\t\t\t\t// apply the count\r\n\t\t\t\tusersRegistrationRequests.userCount = count;\r\n\t\t\t\tAPI.user.userRegistrationRequestsCount=count\r\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t\t\t}).fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n      }).always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('Registration Requests'))\r\n      \tdone('finally');\r\n\t\t\t\tvar end = window.performance.now();\r\n\t\t\t\tvar time = end - start;\r\n\t\t\t\tcui.log('time', time);\r\n      });\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    usersRegistrationRequests.sortingCallbacks = {\r\n      name () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'name'\r\n          usersRegistrationRequests.sort(['personData.name.given', 'personData.name.surname'], usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      title () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'title'\r\n          usersRegistrationRequests.sort('personData.title', usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'submitted'\r\n          usersRegistrationRequests.sort('personData.creation', usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      application () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'application'\r\n          usersRegistrationRequests.sort('packageData.name', usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      division () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'division'\r\n          usersRegistrationRequests.sort('personData.organization.name', usersRegistrationRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    usersRegistrationRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      usersRegistrationRequests.data = _.orderBy(usersRegistrationRequests.data, sortBy, order)\r\n    }\r\n\r\n\r\n\t\tusersRegistrationRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id) {\r\n\t\t\t\tDataStorage.setType('userPersonRequest', {personData:request.personData, organization:request.organization,request:request.request,packageData:request.packageData} )\r\n\t\t\t\t$state.go('organization.requests.personRequest', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id \r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('usersRegistrationRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    usersRegistrationRequests.updateSearchParams = (page) => {\r\n    \t//cui.log('updateSearchParams', page);\r\n        if (page) usersRegistrationRequests.search.page = page\r\n        // WHY transition to this same route? if setting notify:false? what is the purpose? just to add an item to history?\r\n        $state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.search, {notify: false})\r\n        init()\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n    usersRegistrationRequests.searchBy='person'\r\n    usersRegistrationRequests.updateSearchByName = () =>{     \r\n    \t//console.log(usersRegistrationRequests.searchBy)\r\n    \tif(usersRegistrationRequests.searchBy==='org'&&usersRegistrationRequests.searchValue){\r\n    \t\tLoader.onFor(scopeName + 'data')\r\n      \t\tAPIError.offFor(scopeName + 'data')\r\n      \t\t usersRegistrationRequests.searchByOrg=[]\r\n    \t\tAPI.cui.getOrganizations({qs:[['name',usersRegistrationRequests.searchValue+'*']]})\r\n    \t\t.then((res) =>{\r\n    \t\t\tconsole.log(res)\r\n    \t\t\tusersRegistrationRequests.searchByOrg=res\r\n    \t\t\tLoader.offFor(scopeName + 'data')\r\n    \t\t\tif(res.length>0){\r\n    \t\t\t\t$state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.searchByOrg, {notify: false})\r\n        \t\t\tinit()\r\n        \t\t}else{\r\n        \t\t\tusersRegistrationRequests.data=[]\r\n        \t\t\t$scope.$apply()\r\n        \t\t}\r\n    \t\t})\r\n    \t\t.fail((err) =>{\r\n    \t\t\tconsole.log(err)\r\n    \t\t})\r\n    \t}else if (usersRegistrationRequests.searchBy==='person'&&usersRegistrationRequests.searchValue){\r\n    \t\tLoader.onFor(scopeName + 'data')\r\n      \t\tAPIError.offFor(scopeName + 'data')\r\n      \t\t usersRegistrationRequests.searchByPerson=[]\r\n    \t\tAPI.cui.getPersons({qs:[['fullName',usersRegistrationRequests.searchValue]]})\r\n    \t\t.then(res =>{\r\n    \t\t\tconsole.log(res)\r\n    \t\t\tusersRegistrationRequests.searchByPerson=res\r\n    \t\t\tLoader.offFor(scopeName + 'data')\r\n    \t\t\tif(res.length>0){\r\n    \t\t\t\t$state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.searchByPerson, {notify: false})\r\n        \t\t\tinit()\r\n        \t\t}else{\r\n        \t\t\tusersRegistrationRequests.data=[]\r\n        \t\t\t$scope.$apply()\r\n        \t\t}\r\n    \t\t})\r\n    \t\t.fail(err =>{\r\n    \t\t\t\tconsole.log(err)\r\n    \t\t})\r\n    \t}else{\r\n    \t\tusersRegistrationRequests.searchByOrg=[]\r\n            usersRegistrationRequests.searchByPerson=[]\r\n    \t\t$state.transitionTo('organization.requests.usersRegistrationRequests', {notify: false})\r\n    \t\tinit()\r\n    \t}\r\n    \t\t/*return undefined*/\r\n    }\r\n\t\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('orgRolesCtrl', function($scope) {\r\n    'use strict';\r\n\r\n    const orgRoles = this;\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    var handleError = function handleError(err) {\r\n        orgRoles.loading = false;\r\n        $scope.$digest();\r\n        console.log('Error', err);\r\n    };\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('misc', [])\r\n    .config(['$stateProvider', function($stateProvider) {\r\n\r\n        const templateBase = 'app/modules/misc/';\r\n\r\n        const returnCtrlAs = function(name, asPrefix) {\r\n            return name + 'Ctrl as ' + (asPrefix ? asPrefix : '') + (asPrefix ? name[0].toUpperCase() + name.slice(1, name.length) : name);\r\n        };\r\n\r\n        const loginRequired = true;\r\n        $stateProvider\r\n            .state('welcome', {\r\n                url: '/welcome',\r\n                templateUrl: templateBase + 'welcome/welcome.html'\r\n            })\r\n            .state('search', {\r\n                url: '/search?page&pageSize',\r\n                templateUrl: templateBase + 'search/search.html',\r\n                controller: returnCtrlAs('search'),\r\n                access: {\r\n                    permittedLogic:appConfig.globalSearch\r\n                }\r\n            })\r\n            .state('misc', {\r\n                url: '/status',\r\n                templateUrl: templateBase + 'status/status.html'\r\n            })\r\n            .state('misc.404', {\r\n                url: '/404',\r\n                templateUrl: templateBase + 'status/status-404.html'\r\n            })\r\n            .state('misc.notAuth', {\r\n                url: '/notAuthorized',\r\n                templateUrl: templateBase + 'status/status-notAuth.html'\r\n            })\r\n            .state('misc.pendingStatus', {\r\n                url: '/pendingStatus',\r\n                templateUrl: templateBase + 'status/status-pendingStatus.html'\r\n            })\r\n            .state('misc.success', {\r\n                url: '/success',\r\n                templateUrl: templateBase + 'status/status-success.html'\r\n            })\r\n            .state('misc.loadError', {\r\n                url: '/error',\r\n                templateUrl: templateBase + 'status/status-loadError.html'\r\n            });\r\n\r\n    }]);\r\n\r\nangular.module('misc')\r\n    .controller('searchCtrl', ['API', '$scope', '$stateParams', '$state', '$q', '$pagination','APIHelpers','Loader', 'APIError','Base',\r\n    function(API, $scope, $stateParams, $state, $q, $pagination,APIHelpers,Loader,APIError,Base) {\r\n        let search = this;\r\n        search.currentParentOrg = API.user.organization.id;\r\n\r\n        search.users = null;\r\n        search.timer = null\r\n        search.searchType = \"organizations\";\r\n        search.searchOrgId = \"\";\r\n        search.searchterms=\"\"\r\n        search.count=1000\r\n        search.pageError=false\r\n\r\n        // search.keypress = function() {\r\n        //     search.users = [];\r\n        //     if (search.timer) { clearTimeout(search.timer); }\r\n        //     search.timer = window.setTimeout(function() {\r\n        //         search.searchNow();\r\n        //     }, 200);\r\n        // }\r\n\r\n        /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\r\n\r\n        search.flattenOrgHierarchy = function(orgHierarchy) {\r\n            /*\r\n                Takes the organization hierarchy response and returns a flat object array containing the id's and name's of\r\n                the top level organization as well as it's divisions.\r\n            */\r\n\r\n            if (orgHierarchy) {\r\n                let organizationArray = [];\r\n\r\n                organizationArray.push({\r\n                    id: orgHierarchy.id,\r\n                    name: orgHierarchy.name\r\n                });\r\n\r\n                if (orgHierarchy.children) {\r\n                    orgHierarchy.children.forEach((division) => {\r\n                        organizationArray.push({\r\n                            id: division.id,\r\n                            name: division.name\r\n                        });\r\n\r\n                        if (division.children) {\r\n                            let flatArray = _.flatten(division.children);\r\n\r\n                            flatArray.forEach((childDivision) => {\r\n                                organizationArray.push({\r\n                                    id: childDivision.id,\r\n                                    name: childDivision.name\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                return organizationArray;\r\n            } else {\r\n                throw new Error('No organization hierarchy object provided');\r\n            }\r\n        }\r\n\r\n        search.addPerson = function(newPerson) {\r\n\r\n            // Prevent Duplicates\r\n            var add = true;\r\n            search.users.forEach(function(person) {\r\n                if (newPerson.id == person.id) { add = false; }\r\n            })\r\n\r\n            if (newPerson.status == 'pending') { add = false; }\r\n            if (add) { search.users.push(newPerson) }\r\n\r\n        }\r\n\r\n        search.searchNow = function(searchOrPage) {\r\n            search.pageError=false\r\n            if (searchOrPage) {\r\n                search.searchParams.page=1\r\n            }\r\n            Loader.onFor('search.loading')\r\n            search.users = [];\r\n            search.orgs = [];\r\n            let qsArray=APIHelpers.getQs(search.searchParams)\r\n            //Need to filter out pending and unactive\r\n            qsArray.push(['status','active'],['status','suspended'])\r\n            // if (search.searchterms|| !type) {\r\n\r\n                if (search.searchType == \"people\") {\r\n                    let qsArrayNameSearch=angular.copy(qsArray)\r\n                    qsArrayNameSearch.push(['fullName', search.searchterms],['status','locked'])\r\n                    const promises= [API.cui.countPersons({qs:qsArrayNameSearch}),API.cui.getPersons({qs: qsArrayNameSearch})]\r\n                    $q.all(promises)\r\n                    .then(res=>{\r\n                        search.personCount=res[0]\r\n                        search.users=res[1]\r\n                        if (search.users.length===0) {\r\n                            search.noRecords=true\r\n                        }\r\n                        Loader.offFor('search.loading')\r\n                    })                    \r\n                    .catch(error => {\r\n                        Loader.offFor('search.loading')\r\n                        search.pageError=true\r\n                    })\r\n                    //     qsArray.push(['email', search.searchterms])\r\n                    // API.cui.getPersons({\r\n                    //         qs: qsArray\r\n                    //     })\r\n                    //     .done(personResponse => {\r\n\r\n                    //         personResponse.forEach(function(x) {\r\n                    //             search.addPerson(x);\r\n                    //         })\r\n\r\n                    //         $scope.$digest()\r\n                    //     })\r\n                    //     .fail(error => {\r\n\r\n                    //     })\r\n\r\n                }\r\n                if (search.searchType == \"organizations\") {\r\n                    qsArray.push(['name', search.searchterms + \"*\"])\r\n                    API.cui.getOrganizations({qs: qsArray})\r\n                    .done(orgsResponse => {\r\n                        search.orgs = orgsResponse;\r\n                        if (search.orgs.length===0) {\r\n                            search.noRecords=true\r\n                        }\r\n                    })\r\n                    .fail(error => {\r\n                        search.pageError=true\r\n                    })\r\n                    .always(handleAll)\r\n                }\r\n            // }\r\n        }\r\n\r\n        const handleAll= () => {\r\n            Loader.offFor('search.loading')\r\n            $scope.$digest()\r\n        }\r\n\r\n        /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\r\n\r\n        /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n        search.searchParams = Object.assign({}, $stateParams)\r\n        search.searchParams.pageSize = search.searchParams.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n        if (!search.searchParams.page) {\r\n            search.searchParams.page=1\r\n        }\r\n        search.sortBy = {}\r\n        search.organizationList = null;\r\n        // API.cui.getOrganizationsCount({qs:APIHelpers.getQs(search.searchParams)})\r\n        // .then(count=>{\r\n        //     search.orgCount=count\r\n        //     return API.cui.getOrganizations({qs:APIHelpers.getQs(search.searchParams)})\r\n        // })\r\n        // Authorization for org serach and user search\r\n        if (Base.accessToSecurityAndExchangeAdmins()) {            \r\n            search.searchNow(true)\r\n        }\r\n        else{\r\n            search.searchType = \"people\"\r\n            search.searchNow(true)\r\n        }\r\n\r\n        /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n\r\n        /* -------------------------------------------- ON CLICK FUNCTIONS START --------------------------------------------- */\r\n        search.updateSearchParams = function(page) {\r\n            if (page) {\r\n                search.searchParams.page=page\r\n            }\r\n            $state.transitionTo('search', search.searchParams, {notify: false})\r\n            search.searchNow()\r\n        }\r\n\r\n        search.userClick = function(clickedUser) {\r\n\r\n            const stateOpts = {\r\n                userId: clickedUser.id,\r\n                orgId: clickedUser.organization.id,\r\n            }\r\n            if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\r\n            else $state.go('organization.directory.userDetails', stateOpts)\r\n\r\n        }\r\n\r\n        search.orgClick = function(clickedOrd) {\r\n            const stateOpts = {\r\n                orgId: clickedOrd.id,\r\n            }\r\n            $state.go('organization.directory.orgDetails', stateOpts)\r\n        }\r\n\r\n        /* -------------------------------------------- ON CLICK FUNCTIONS END --------------------------------------------- */\r\n    }]);\r\n\r\nangular.module('common',['translate','ngMessages','cui.authorization','cui-ng','ui.router','snap','LocalStorageModule'])\r\n.config(($translateProvider,$locationProvider,$urlRouterProvider,$injector,\r\n    localStorageServiceProvider,$cuiIconProvider,$cuiI18nProvider,$paginationProvider,\r\n    $stateProvider,$compileProvider,$cuiResizeHandlerProvider) => {\r\n\r\n    $urlRouterProvider.rule(($injector, $location) => {\r\n        const path = $location.path()\r\n        const hasTrailingSlash = path[path.length-1] === '/'\r\n\r\n        if (hasTrailingSlash) {\r\n            const newPath = path.substr(0, path.length-1)\r\n            return newPath\r\n        }\r\n    })\r\n\r\n    localStorageServiceProvider.setPrefix('cui');\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    const templateBase = 'app/modules/common/';\r\n\r\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\r\n\r\n    $stateProvider\r\n    .state('auth', {\r\n        url: '/auth?xsrfToken&cuid',\r\n        controller: returnCtrlAs('auth'),\r\n        templateUrl: templateBase + 'auth/auth.html',\r\n        access:true\r\n    });\r\n\r\n    if (appConfig.languages) {\r\n        if (!appConfig.languageResources) {\r\n            console.error('You need to configure languageResources in your appConfig.json.');\r\n        }\r\n\r\n        /*\r\n        *   This section will dynamically generate the correct path to versioned i18n assets \r\n        *   based off of current i18n version in use in the project.\r\n        *\r\n        *   This requires a proper appConfig.json setup. Please refer to the documentation in\r\n        *   ./docs/features/cui-framework/cui-i18n.md for information on how to setup the appConfig.\r\n        *\r\n        *   Note: Grunt tasks will not automatically work with all of the possible setups of i18n assets.\r\n        */\r\n\r\n        if (appConfig.languageResources.hasOwnProperty('customDependencyName')) {\r\n            // Loading in custom i18n project\r\n            const customDependency = appConfig.languageResources.customDependencyName\r\n            const dependencyType = appConfig.languageResources.dependencyType || 'dependencies'\r\n            const customDependencyVersion = packageJson[dependencyType][customDependency].split('#v')[1]\r\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, customDependencyVersion)\r\n        }\r\n        else if (appConfig.languageResources.hasOwnProperty('dependencyOrigin') && appConfig.languageResources.dependencyOrigin === 'cui-idm-b2x') {\r\n            // Loading in i18n dependency through B2X (generator projects)\r\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, i18nPackageJson.version)\r\n        }\r\n        else {\r\n            // Loading in standalone cui-i18n dependency\r\n            const dependencyType = appConfig.languageResources.dependencyType || 'dependencies'\r\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, packageJson[dependencyType]['@covisint/cui-i18n'])\r\n        }\r\n\r\n        $cuiI18nProvider.setLocaleCodesAndNames(appConfig.languages);\r\n        let languageKeys = Object.keys($cuiI18nProvider.getLocaleCodesAndNames());\r\n\r\n        const returnRegisterAvailableLanguageKeys = () => {\r\n            // Reroute unknown language to prefered language\r\n            let object = {'*': languageKeys[0]};\r\n            languageKeys.forEach(function(languageKey) {\r\n                // Redirect language keys such as en_US to en\r\n                object[languageKey + '*'] = languageKey;\r\n            });\r\n            return object;\r\n        };\r\n\r\n        $translateProvider.useLoader('LocaleLoader', appConfig.languageResources )\r\n        .registerAvailableLanguageKeys(languageKeys, returnRegisterAvailableLanguageKeys())\r\n        .uniformLanguageTag('java')\r\n        .determinePreferredLanguage()\r\n        .fallbackLanguage(languageKeys);\r\n\r\n        $cuiI18nProvider.setLocalePreference(languageKeys);\r\n    }\r\n\r\n    if (appConfig.iconSets) {\r\n        appConfig.iconSets.forEach((iconSet) => {\r\n            $cuiIconProvider.iconSet(iconSet.name, iconSet.path, iconSet.defaultViewBox || null);\r\n        });\r\n    }\r\n\r\n    // Pagination Results Per Page Options\r\n    if (appConfig.paginationOptions) {\r\n        $paginationProvider.setPaginationOptions(appConfig.paginationOptions)\r\n    }\r\n    else {\r\n        throw new Error(`You don't have paginationOptions set in your appConfig.json`)\r\n    }\r\n\r\n    // Cui Resize Handler Breakpoint Option\r\n    if (appConfig.breakpointOption) {\r\n        $cuiResizeHandlerProvider.setBreakpoint(appConfig.breakpointOption);\r\n    } else {\r\n        throw new Error('You don\\'t have breakpointOption set in your appConfig.json');\r\n    }\r\n\r\n    $compileProvider.debugInfoEnabled(false);\r\n\r\n});\r\n\r\nangular.module('common')\r\n.run(['LocaleService','$rootScope','$state','$http','$templateCache','$cuiI18n','User',\r\n    'cui.authorization.routing','cui.authorization.evalRouteRequest','Menu','API','$cuiIcon','$timeout','PubSub','APIError','Loader','Theme','CuiRouteHistoryFactory',\r\n(LocaleService,$rootScope,$state,$http,$templateCache,$cuiI18n,User,routing,evalRouteRequest,Menu,API,$cuiIcon,$timeout,PubSub,APIError,Loader,Theme,CuiRouteHistoryFactory) => {\r\n\r\n    if(window.cuiApiInterceptor) {\r\n        const cuiApiInterceptorConfig = {\r\n            apiUris: [ appConfig.serviceUrl ],\r\n            stopIfInvalidPayload: true\r\n        }\r\n\r\n        if(appConfig.debugServiceUrl) {\r\n            cuiApiInterceptorConfig.apiUris.push(appConfig.debugServiceUrl)\r\n        }\r\n\r\n        const interceptors = [\r\n            'Get',\r\n            'PrePut',\r\n            'PrePost',\r\n            'PostPut',\r\n            'PostPost'\r\n        ]\r\n\r\n        interceptors.forEach(interceptor => window.cuiApiInterceptor[`start${ interceptor }Interceptor`](cuiApiInterceptorConfig))\r\n    }\r\n\r\n    // Add locales here\r\n    const languageNameObject = $cuiI18n.getLocaleCodesAndNames();\r\n\r\n    for (var LanguageKey in languageNameObject) {\r\n        LocaleService.setLocales(LanguageKey, languageNameObject[LanguageKey]);\r\n    }\r\n\r\n    $rootScope.$on('$stateChangeStart', (event, toState, toParams, fromState, fromParams) => {\r\n        Theme.clear() \r\n        APIError.clearAll()\r\n        Loader.clearAll()\r\n        event.preventDefault();\r\n\r\n        function attachAccessInfo(toState) {\r\n            if (toState.access) {\r\n                if (! _.isObject(toState.access)) {\r\n                    toState.access = {};\r\n                }\r\n                toState.access.roles = User.getRoles();\r\n                toState.access.entitlements = User.getEntitlements();\r\n            } else {\r\n                toState.access = {};                \r\n            }\r\n        }\r\n\r\n        function go(toState, toParams, fromState, fromParams) {\r\n            // NB... detailed access logic is evaluated upstream, in cui.authorization.evalRouteRequest...\r\n            attachAccessInfo(toState);\r\n            evalRouteRequest(toState, toParams, fromState, fromParams,'misc.notAuth');\r\n            PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams }); \r\n            Menu.handleStateChange(toState.menu);\r\n        }\r\n\r\n        const route = () => {\r\n            if (appConfig.debugServiceUrl) {\r\n                /**\r\n                    appConfig.debugServiceUrl can be pointed at a localhost server to act as a mock API.\r\n                        Ex: 'debugServiceUrl': 'http://localhost:8001'\r\n                    mock api server source code \r\n                        https://github.com/thirdwavellc/cui-api-mock\r\n                    NB this workaround is not calling new evalRouteRequest() logic.\r\n                **/\r\n                let userInfo = {};\r\n                API.cui.getPerson({personId: 'personId'})\r\n                .then((res) => {\r\n                    userInfo = res;\r\n                    return API.cui.getOrganization({ organizationId: res.organization.id });\r\n                })\r\n                .then((res) => {\r\n                    userInfo.organization = res;\r\n                    API.setUser(userInfo);\r\n                });\r\n                routing(toState, toParams, fromState, fromParams, []);\r\n                PubSub.publish('stateChange',{ toState,toParams,fromState,fromParams }); // this is required to make the ui-sref-active-nested directive work\r\n                Menu.handleStateChange(toState.menu );\r\n            }\r\n            else {\r\n                /* deprecated...\r\n                if (!toState.access || !toState.access.loginRequired) {\r\n                    Menu.handleStateChange(toState.menu);\r\n                    routing(toState, toParams, fromState, fromParams, User.getEntitlements());\r\n                    PubSub.publish('stateChange',{ toState,toParams,fromState,fromParams }); // this is required to make the ui-sref-active-nested directive work with a multi-module approach\r\n                    return;\r\n                }\r\n                else if (User.get() !== '[cuid]') {\r\n                    routing(toState, toParams, fromState, fromParams, User.getEntitlements());\r\n                    PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams });\r\n                    Menu.handleStateChange(toState.menu);\r\n                }\r\n                else {\r\n                    API.authenticateUser({ toState,toParams,fromState,fromParams })\r\n                    .then((res) => {\r\n                        const { toState, toParams, fromState, fromParams } = res.redirect;\r\n                        // Determine if user is able to access the particular route we're navigating to\r\n                        routing(toState, toParams, fromState, fromParams, res.roleList);\r\n                        PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams }); // this is required to make the ui-sref-active-nested directive work with a multi-module approach\r\n                        // Menu handling\r\n                        Menu.handleStateChange(res.redirect.toState.menu);\r\n                    });\r\n                }\r\n                */\r\n                if (!toState.access || User.get() !== '[cuid]') {\r\n                    // ...route needs no User info... or ...route needs User and we have User info...\r\n                    cui.log('stateChangeStart2', toState, toParams);\r\n                    go(toState, toParams, fromState, fromParams);\r\n                } else {\r\n                    // ..route needs (loggedIn) User and we need User info...\r\n                    API.authenticateUser({toState, toParams, fromState, fromParams}).then((res) => {\r\n                        cui.log('stateChangeStart3', res.redirect.toState, res.redirect.toParams);\r\n                        go(res.redirect.toState, res.redirect.toParams, res.redirect.fromState, res.redirect.fromParams);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        if (_.isEmpty(API.cui)) {\r\n            // async load API.cui\r\n            API.initApi().then(() => {\r\n                route();\r\n            });\r\n        } else {\r\n            route();\r\n        }\r\n    });\r\n\r\n    // $state.stateStack is a stack of states used by base.goBack()\r\n    $state.stateStack = []\r\n\r\n    $rootScope.$on('$stateChangeSuccess', (e, { toState, toParams, fromState, fromParams }) => {\r\n        // For base.goBack()\r\n        $state.stateStack.push({\r\n            name: fromState.name,\r\n            params: fromParams || {}\r\n        })\r\n\r\n        // routeHistory POC\r\n        var routeTextArray = toState.name.split('.');\r\n        CuiRouteHistoryFactory.add({\r\n            text: routeTextArray[routeTextArray.length - 1],\r\n            uiroute: toState.name,\r\n            uirouteparams: toParams\r\n        });\r\n\r\n        cui.log('on $stateChangeSuccess', toState, toParams, fromState, fromParams, $state.stateStack);\r\n    })\r\n\r\n    angular.forEach($cuiIcon.getIconSets(), (iconSettings, namespace) => {\r\n        $http.get(iconSettings.path, {\r\n            cache: $templateCache\r\n        });\r\n    });\r\n\r\n}]);\r\n\r\nangular.module('common')\r\n.controller('authCtrl', ['$state',function($state) {\r\n    $state.go('welcome');\r\n}]);\r\n\r\nangular.module('common')\r\n.controller('baseCtrl', function(Base, $scope) {\r\n\r\n    $scope.base = Base\r\n    $scope.base.pendingNotificationFlag=false\r\n})\r\n\r\n.filter('capitalize', function() {\r\n    return function(input) {\r\n      return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\r\n    }\r\n})\r\n\r\n.filter('capitalize', function() {\r\n    return function(input) {\r\n      return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.directive('disableAnimate', ($animate) => ({\r\n\r\n\t/*\r\n\t\tUse this directive to disable the animation window that is introduced by ng-animate.\r\n\t\tAdd the 'disable-animate' attribute to an element you need to disable ng-animate on.\r\n\r\n\t\tExample: \t<p disable-animate> Element you need to disable ng-animate on. </p>\r\n\t*/\r\n\r\n\trestrict: 'A',\r\n\tlink: (attrs, elem) => {\r\n\t\t$animate.enabled(elem, false)\r\n\t}\r\n}))\r\n\r\nangular.module('common')\r\n.factory('CuiMobileNavFactory', (PubSub,User,$filter) => {\r\n    return {\r\n        title: User.user.organization.name,\r\n        defaultTitle: User.user.organization.name,\r\n        getTitle: function() {\r\n            return this.title\r\n        },\r\n        setTitle: function(newTitle) {\r\n            this.title = newTitle\r\n            PubSub.publish('mobileNavTitleChange')\r\n        },\r\n        getDefaultTitle: function() {\r\n            return this.defaultTitle\r\n        },\r\n        setDefaultTitle: function(newDefaultTitle) {\r\n            this.defaultTitle = newDefaultTitle\r\n        }\r\n    }\r\n})\r\n.directive('cuiMobileNav', (CuiMobileNavFactory,PubSub,$state) => ({\r\n    restrict: 'E',\r\n    scope: {\r\n        showIf: '=',\r\n        links: '=',\r\n        activeTitle:'@activeTitle',\r\n        label: '=?'\r\n    },\r\n    link: (scope, elem, attrs) => {\r\n        // attrs.activeTitle ? scope.activeTitle = attrs.activeTitle : scope.activeTitle = CuiMobileNavFactory.getDefaultTitle()\r\n        scope.currentState = $state.current.name\r\n\r\n        scope.close = () => scope.showIf = false\r\n        scope.toggle = () => scope.showIf =! scope.showIf\r\n\r\n        const pubSubSubscription = PubSub.subscribe('mobileNavTitleChange', () => {\r\n            // scope.activeTitle = CuiMobileNavFactory.getTitle()\r\n        })\r\n\r\n        scope.$on('$destroy', () => {\r\n            PubSub.unsubscribe(pubSubSubscription)\r\n        })\r\n    },\r\n    template: `\r\n        <nav class=\"cui-breadcrumb--mobile\" id=\"breadcrumb-button\" aria-hidden=\"true\" ng-click=\"toggle()\" off-click=\"close()\">\r\n            <ul class=\"cui-breadcrumb__links\">\r\n                <li class=\"cui-breadcrumb__link cui-breadcrumb__link--current\">\r\n                    <span class=\"cui-breadcrumb__mobile-link\" ng-if=\"links[currentState]\" class=\"active\"><span class=\"cui-mobile-only\" ng-if=\"activeTitle\">{{activeTitle}}.</span>{{links[currentState].label}}</span>\r\n                    <span class=\"cui-breadcrumb__mobile-link\" ng-if=\"!links[currentState]\" class=\"active\"><span class=\"cui-mobile-only\" ng-if=\"activeTitle\">{{activeTitle}}.</span>{{label}}</span>\r\n                </li>\r\n                <div class=\"cui-popover cui-popover--menu cui-breadcrumb__popover cui-popover--top cui-popover__categories-popover\" tether target=\"#breadcrumb-button\" attachment=\"top left\" target-attachment=\"bottom left\" offset=\"-10px 0\" ng-if=\"showIf\">\r\n                    <li class=\"cui-breadcrumb__link cui-popover__row\" ng-repeat=\"(state, stateDetails) in links\" ng-if=\"currentState!==state\">\r\n                        <a class=\"cui-breadcrumb__mobile-link\" ui-sref=\"{{state}}(stateDetails.stateParams)\">{{stateDetails.label}}</a>\r\n                    </li>\r\n                </div>\r\n            </ul>\r\n        </nav>\r\n    `\r\n}))\r\n\r\n/*\r\nTODO\r\n    -strategically handle jumps?\r\n        - best bet is to just display last 3 routes in markup\r\n*/\r\n\r\nangular.module('common')\r\n.factory('CuiRouteHistoryFactory', () => {\r\n    var routes = [];\r\n    /*\r\n        route: {\r\n            text: '',\r\n            uiroute: '',\r\n            uirouteparams: ''\r\n        }\r\n    */\r\n    return {\r\n        add: function(route) {\r\n            routes.push(route);\r\n            return;\r\n        },\r\n        remove: function(route) {\r\n            _.remove(routes, {text: route.text});\r\n            return;\r\n        },\r\n        truncate: function(route) {\r\n            // Remove everything that follows route\r\n            var idx = routes.indexOf(route);\r\n            cui.log('truncate before', routes, route, idx);\r\n            if (idx !== -1) {\r\n                routes = routes.slice(0, idx);\r\n            }\r\n            cui.log('truncate after', routes);\r\n            return;\r\n        },\r\n        clear: function() {\r\n            routes = [];\r\n            return;\r\n        },\r\n        get: function() {\r\n            return routes;\r\n        }\r\n    }\r\n})\r\n.directive('cuiRouteHistory', (CuiRouteHistoryFactory, $state) => ({\r\n    restrict: 'E',\r\n    link: (scope, elem, attrs) => {\r\n        //scope.currentState = $state.current.name;\r\n        scope.routes = CuiRouteHistoryFactory.get();\r\n        scope.go = function(route) {\r\n            if (route.uiroute && route.uiroute !== $state.current.name) {\r\n                CuiRouteHistoryFactory.truncate(route);\r\n                if (route.uirouteparams) {\r\n                    $state.go(route.uiroute, route.uirouteparams);   \r\n                } else {\r\n                    $state.go(route.uiroute);   \r\n                }\r\n            }\r\n        };\r\n    },\r\n    template: `\r\n        <nav class=\"cui-breadcrumb\">\r\n            <ul class=\"cui-breadcrumb__links\">\r\n              <li class=\"cui-breadcrumb__link\" ng-repeat=\"route in routes | limitTo:-3\">\r\n                <span ng-class=\"{'cui-breadcrumb__route':!$last, 'cui-breadcrumb__routelast':$last}\" ng-click=\"go(route)\">{{route.text}}</span>\r\n              </li>\r\n            </ul>\r\n        </nav>\r\n    `\r\n    //            <a ng-if=\"route.uiroute !== null\" ui-sref=\"{{route.uiroute}}\">{{route.text}}</a>\r\n}))\r\n\r\nangular.module('common')\r\n.directive('cuiSuccessPane', ($state,$timeout) => ({\r\n\r\n\t/*****\r\n\t\t--- Usage ---\r\n\r\n        <cui-success-pane show-if=\"scope.variable\" close-after=\"5000\" on-close=\"scope.functionName()\">\r\n      \t\t<p class=\"cui-modal__secondary-message\">This is extra content</p>\r\n      \t\t<p class=\"cui-modal__secondary-message\">{{scope.object.name}}</p>\r\n    \t</cui-success-pane>\r\n\r\n        --- Optional Paramaters ---\r\n\r\n            close-after - specify how long before the success pane automatically closes\r\n                        - if timer is not specified, the pane will stay open until clicked\r\n\r\n            on-close    - specify what scope function to fire when the modal closes\r\n\t*****/\r\n\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n        showIf: '=',\r\n        closeAfter: '=',\r\n        onClose: '&'\r\n    },\r\n    link: (scope) => {\r\n        scope.close = () => {\r\n            scope.showIf =! scope.showIf\r\n        }\r\n\r\n        if (scope.closeAfter) {\r\n            $timeout(() => {\r\n                if (scope.onClose) {\r\n                    scope.onClose() && scope.onClose()();\r\n                }\r\n                scope.close()\r\n            }, scope.closeAfter)\r\n        }\r\n    },\r\n    template: `\r\n        <div class=\"cui-modal\" ng-if=\"showIf\" ng-click=\"close()\">\r\n            <div class=\"cui-modal__pane\">\r\n                <div class=\"cui-modal__icon\">\r\n                    <cui-icon cui-svg-icon=\"cui:check-with-border\" class=\"cui-modal__icon\"></cui-icon>\r\n                </div>\r\n                <span class=\"cui-modal__primary-message\">{{'cui-success' | translate}}</span>\r\n                <ng-transclude></ng-transclude>\r\n            </div>\r\n        </div>\r\n    `\r\n}))\r\n\r\nangular.module('common')\r\n.directive('unique', ['$parse', ($parse) => {\r\n  return {\r\n    restrict: 'A',\r\n    require: 'ngModel',\r\n    link: (scope, element, attrs, ctrl) => {\r\n      const checkIfUnique = (values) => {\r\n        ctrl.$setValidity('unique', values[0] !== (values[1] || ''));\r\n      };\r\n\r\n      scope.$watch(()=> [scope.$eval(attrs.unique), ctrl.$viewValue], checkIfUnique, (newValues,oldValues) => angular.equals(newValues,oldValues));\r\n    }\r\n  };\r\n}]);\r\nangular.module('common')\r\n.factory('API', (Base, CustomAPI, Loader, localStorageService, User, $location, $q, $timeout, $window,LocaleService) => {\r\n\r\n    let authInfo = {}\r\n    let myCUI = {}\r\n\r\n    Base.authInfo = authInfo\r\n\r\n    const populateUserInfo = (info, redirectOpts) => {\r\n        const deferred = $q.defer()\r\n        let userInfo, roleList, entitlementList\r\n        authInfo = info\r\n        User.set(info)\r\n\r\n        $q.all([\r\n            myCUI.getPersonRoles({ personId: authInfo.cuid }),\r\n            myCUI.getPersonEntitlements({ personId: authInfo.cuid }),\r\n            myCUI.getPerson({ personId: authInfo.cuid })\r\n        ])\r\n        .then(res => {\r\n            roleList = res[0].map(x => x.name)\r\n            User.setRoles(roleList)\r\n\r\n            entitlementList = res[1].map(x => x.privilegeName)\r\n            User.setEntitlements(entitlementList)\r\n\r\n            userInfo = res[2]\r\n            LocaleService.setLocaleByDisplayName(appConfig.languages[userInfo.language])\r\n            return myCUI.getOrganizationWithAttributes({ organizationId: res[2].organization.id })\r\n        })\r\n        .then(res => {\r\n            userInfo.organization = res\r\n            User.set(userInfo)\r\n            //cui.log('populateUserInfo', User);\r\n            //get user notification related information  as lazy loading,\r\n            // No need to hold entire UI apps for this loading.\r\n            getNotificationDetails(userInfo)\r\n            deferred.resolve({ roleList: roleList, redirect: redirectOpts })\r\n        })\r\n\r\n        return deferred.promise\r\n    }\r\n\r\n    const getNotificationDetails = (userInfo) => {\r\n        if (!Base.canGrantAppToUser()) {\r\n            myCUI.getPersonPendingApps({personId: userInfo.id})\r\n            .then((res) => {\r\n                userInfo.pendingApps=res.map(x=> x.name)\r\n                User.set(userInfo)\r\n            })\r\n        }\r\n        else{\r\n            $q.all([\r\n                myCUI.getRegistrationRequestsCount(),\r\n                myCUI.getPackageRequestsCount(),\r\n                myCUI.getOrgRegistrationRequestsCount(),\r\n                myCUI.getPackageRequestsCount({qs:[['requestor.id',userInfo.organization.id],['requestor.type','organization']]})\r\n            ])\r\n            .then(res => {\r\n                userInfo.userRegistrationRequestsCount=res[0]\r\n                userInfo.userAppRequestsCount=res[1]\r\n                userInfo.orgRegistrationRequestsCount=res[2]\r\n                userInfo.orgAppRequestsCount=res[3]\r\n                userInfo.totalCount=res[0]+res[1]+res[2]+res[3]\r\n                User.set(userInfo)\r\n            })\r\n        }\r\n        \r\n    }\r\n    const jwtAuthHandler = () => {\r\n        return myCUI.covAuth({\r\n            originUri: appConfig.originUri,\r\n            authRedirect: window.location.href.split('#')[0] + '#/auth',\r\n            appRedirect: $location.path()\r\n        })\r\n    }\r\n\r\n    const initApi = () => {\r\n        let deferred = $q.defer()\r\n        Loader.onFor('wholeApp','custom-api-loading')\r\n        cui.api({\r\n            retryUnseured: true,\r\n            envDefs: ['https://cuijs.run.covisintrnd.com/defs/env.json'],\r\n            dataCallDefs: [\r\n                'https://cuijs.run.covisintrnd.com/defs/auth.json',\r\n                'app/json/idm-call-defs.json',\r\n                CustomAPI\r\n            ]\r\n        })\r\n        .then((cuiObject) => {\r\n            if (appConfig.logoutUrl) {\r\n                Base.logout = () => {\r\n                    myCUI.covLogout({\r\n                        redirect: appConfig.logoutUrl,\r\n                        qs: [['type', 'logout']]\r\n                    })\r\n                }    \r\n            }\r\n            else Base.logout = cuiObject.covLogout\r\n            angular.copy(cuiObject, myCUI)\r\n            myCUI.setAuthHandler(jwtAuthHandler)\r\n            // overwrite the service url to get the solution instance id\r\n            appConfig.solutionInstancesUrl && myCUI.setServiceUrl(appConfig.solutionInstancesUrl)\r\n            return myCUI.covAuthInfo({originUri: appConfig.originUri})\r\n        })\r\n        .then(() => {\r\n            // reset the service url\r\n            appConfig.debugServiceUrl\r\n                ? myCUI.setServiceUrl(appConfig.debugServiceUrl)\r\n                : myCUI.setServiceUrl(appConfig.serviceUrl)\r\n            $timeout(() => Loader.offFor('wholeApp'), 50)\r\n            deferred.resolve()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    let apiFactory = {\r\n        cui: myCUI,\r\n        getUser: User.get,\r\n        setUser: User.set,\r\n        setPersonData: User.setPersonData,\r\n        getPersonData: User.getPersonData,\r\n        user: User.user,\r\n        initApi,\r\n        authenticateUser: (redirectOpts) => {\r\n            const deferred = $q.defer()\r\n            const sessionInfo = myCUI.getCovAuthInfo()\r\n\r\n            if (redirectOpts.toState.name!=='auth') {\r\n                localStorageService.set('appRedirect',redirectOpts) // set the redirect to whatever the last state before auth was\r\n                Loader.onFor('wholeApp','redirecting-to-sso') // don't need to turn this loader off since covAuth takes us to another page\r\n                appConfig.solutionInstancesUrl && myCUI.setServiceUrl(appConfig.solutionInstancesUrl)\r\n                jwtAuthHandler() // force redirect to SSO\r\n            }\r\n            else {\r\n                Loader.onFor('wholeApp','getting-user-info')\r\n                myCUI.handleCovAuthResponse({ selfRedirect: true })\r\n                .then(res => {\r\n                    populateUserInfo(res,localStorageService.get('appRedirect'))\r\n                    .then(res => {\r\n                        deferred.resolve(res)\r\n                        $timeout(()=> Loader.offFor('wholeApp'),50)\r\n                    })\r\n                })\r\n            }\r\n            return deferred.promise\r\n        },\r\n        setAuthInfo: function(newAuthInfo) {\r\n            angular.copy(newAuthInfo[0], authInfo)\r\n        },\r\n        authInfo: authInfo\r\n    }\r\n\r\n    return apiFactory\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('APIError', (SharedService) => {\r\n    const APIError = Object.create(SharedService)\r\n    APIError.details = Object.assign({}, APIError.details)\r\n    APIError.for = APIError.details\r\n    return APIError\r\n})\r\nangular.module('common')\r\n.factory('APIHelpers', (API,$filter) => {\r\n    'use strict'\r\n\r\n    const apiHelpers = {\r\n\r\n        getQs(opts) {\r\n            /**\r\n                return a qs array from an object of key value pairs\r\n                where the key is the search param and the value is the search value (accepts undefined values)\r\n            **/\r\n\r\n            return Object.keys(_(opts).omitBy(_.isUndefined).value())\r\n            .reduce((query, param) => {\r\n                return query.concat([[param, opts[param]]])\r\n            }, [])\r\n        },\r\n\r\n        buildPackageRequests(arrayOfApps) {\r\n            /**\r\n                returns an array of API package request promises\r\n                based on an array of apps that we want to request\r\n\r\n                the reason for the request should be under app._reason\r\n                if it does not have a reason and the service package\r\n                for that app requires one, we return undefined and\r\n                attach an _error property (app._error = true) on that app\r\n            **/\r\n\r\n            const numberOfApps = arrayOfApps.length\r\n\r\n            if (!_.isArray(arrayOfApps) || numberOfApps === 0) {\r\n                throw new Error ('The argument passed to APIHelpers.buildPackageRequests should be an array of apps, with 1 or more apps.')\r\n                return undefined\r\n            }\r\n\r\n            let error = false\r\n            for (let i=0; i < numberOfApps; i += 1) {\r\n                if (arrayOfApps[i].servicePackage.requestReasonRequired && !arrayOfApps[i]._reason) {\r\n                    arrayOfApps[i]._error = true\r\n                    if (!error) {\r\n                        error = true;\r\n                    }\r\n                }\r\n            }\r\n            if (error) {\r\n                return undefined;\r\n            }\r\n\r\n            let packagesBeingRequested = []\r\n            let packageRequests = []\r\n            for (let i=0; i < numberOfApps; i += 1) {\r\n                if (packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id) >= 0) {\r\n                    // if the service package is already being requested, simply append to the reason.\r\n                    // if the app doesn't have a reason and we got to this point then the package\r\n                    // doesn't require a reason\r\n                    if (arrayOfApps[i]._reason) {\r\n                        packageRequests[packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id)].reason +=\r\n                            ('\\n' + $filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(arrayOfApps[i].name) + ': ' + arrayOfApps[i].name._reason)\r\n                    }\r\n                }\r\n                else {\r\n                    // cache the ids in another array so that we can look for an existing package request\r\n                    // without having to search through the array of requests.\r\n                    packagesBeingRequested.push(arrayOfApps[i].servicePackage.id)\r\n                    packageRequests.push({\r\n                        requestor: {\r\n                            id: API.getUser(),\r\n                            type: 'person'\r\n                        },\r\n                        servicePackage: {\r\n                            id: arrayOfApps[i].servicePackage.id,\r\n                            type: 'servicePackage'\r\n                        },\r\n                        reason: arrayOfApps[i]._reason || ''\r\n                    })\r\n                }\r\n            }\r\n            return packageRequests.map(data => API.cui.createPackageRequest({ data }))\r\n        },\r\n\r\n        flattenOrgHierarchy(orgHierarchy) {\r\n            /*\r\n                Takes the organization hierarchy response and returns a flat object array containing the id's and name's of\r\n                the top level organization as well as it's divisions.\r\n            */\r\n\r\n            if (orgHierarchy) {\r\n                let organizationArray = [];\r\n\r\n                organizationArray.push({\r\n                    id: orgHierarchy.id,\r\n                    name: orgHierarchy.name\r\n                });\r\n\r\n                if (orgHierarchy.children) {\r\n                    orgHierarchy.children.forEach((division) => {\r\n                        organizationArray.push({\r\n                            id: division.id,\r\n                            name: division.name\r\n                        });\r\n\r\n                        if (division.children) {\r\n                            let flatArray = _.flatten(division.children);\r\n                            \r\n                            flatArray.forEach((childDivision) => {\r\n                                organizationArray.push({\r\n                                    id: childDivision.id,\r\n                                    name: childDivision.name\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                return organizationArray;\r\n            }\r\n            else {\r\n                throw new Error ('No organization hierarchy object provided');\r\n            }\r\n        },\r\n\r\n        getCollectionValuesAndCount(collection, key, returnAsCollection) {\r\n            // Given a collection and a key, will return an object containing each different value found\r\n            // for the given key as well as the count of that key. If the optional parameter `returnAsCollection`\r\n            // is provided, will return data as a collection instead of an object. This was done as in some \r\n            // cases (such as ng-repeat) it is easier to work with the data when its in an array.\r\n\r\n            // One area this method is handy is when you are getting all the different status values of a user list\r\n            // and need the count of each status.\r\n\r\n            let data = {\r\n                all: 0\r\n            }\r\n\r\n            collection.forEach(object => {\r\n                if (object.hasOwnProperty(key)) {\r\n                    let keyValue = object[key]\r\n                    if (data.hasOwnProperty(keyValue)) {\r\n                        data[keyValue] += 1\r\n                        data.all += 1\r\n                    }\r\n                    else {\r\n                        data[keyValue] = 1\r\n                        data.all += 1\r\n                    }\r\n                }\r\n            })\r\n\r\n            if (!returnAsCollection) return data\r\n            else {\r\n                let collectionData = []\r\n\r\n                Object.keys(data).forEach(dataKey => {\r\n                    let asObject = {\r\n                        value: dataKey,\r\n                        count: data[dataKey]\r\n                    }\r\n\r\n                    collectionData.push(asObject)\r\n                })\r\n\r\n                return collectionData\r\n            }\r\n        }\r\n    };\r\n\r\n    return apiHelpers\r\n\r\n});\r\n\r\nangular.module('common')\r\n.factory('Base', (APIError, BaseExtensions, Countries, Languages, LocaleService, Loader, Menu, Theme, Timezones, User, $state, $translate) => {\r\n\r\n    const baseFactory = {\r\n        apiError: APIError,\r\n        appConfig: appConfig,\r\n        countries: Countries,\r\n        getLanguageCode: Languages.getCurrentLanguageCode,\r\n        languages: Languages.all,\r\n        loader: Loader,\r\n        menu: Menu,\r\n        theme: Theme,\r\n        timezones: Timezones.all,\r\n        user: User.user,\r\n\r\n        goBack: (stateName,stateParams) => {\r\n            const numberOfStates = $state.stateStack.length\r\n            let i = numberOfStates - 1 // Last state user visited\r\n            let counter = 0\r\n            let stateParamsFromStack\r\n            do {\r\n                if ($state.stateStack[i].name === stateName) {\r\n                    stateParamsFromStack = $state.stateStack[i].params\r\n                }\r\n                i--\r\n                counter++\r\n            } while (!stateParamsFromStack && i >= 0 && counter <= 20) // limit our attempts to 20\r\n            if (stateParamsFromStack) stateParams=stateParamsFromStack\r\n            if (!stateParams) $state.go(stateName)\r\n            else $state.go(stateName, stateParams)\r\n        },\r\n\r\n        generateHiddenPassword: (password) => Array(password.length+1).join('•')\r\n    }\r\n\r\n    return Object.assign({}, baseFactory, BaseExtensions)\r\n\r\n})\r\n\r\nangular.module('common')\r\n\t.factory('BaseExtensions', ['cui.authorization.permitted', 'User', (permitted, User) => {\r\n\r\n\t\tfunction test() {\r\n\t\t\tcui.log('base extensions test');\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttest: function() {\r\n\t\t\t\treturn test();\r\n\t\t\t},\r\n\t\t\tisPermitted: function(logic) {\r\n\t\t\t\t//cui.log('isPermitted', logic, User.getRoles(), User.getEntitlements());\r\n\t\t\t\treturn permitted(logic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\tisOrgAdmin: function() {\r\n\t\t\t\t//cui.log('isOrgAdmin', appConfig.orgAdminLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t\treturn permitted(appConfig.orgAdminLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\tcanGrantAppToUser: function(){\r\n\t\t\t\treturn permitted(appConfig.grantAppToUserLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\tcanGrantAppToOrg: function(){\r\n\t\t\t\treturn permitted(appConfig.grantAppToOrgLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\taccessByAnyAdmin: function(){\r\n\t\t\t\treturn permitted(appConfig.accessByAnyAdmin, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\tglobalSearch: function(){\r\n\t\t\t\treturn permitted(appConfig.globalSearch, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\taccessToSecurityAndExchangeAdmins:function(){\r\n\t\t\t\treturn permitted(appConfig.accessToSecurityAndExchangeAdmins, User.getRoles(), User.getEntitlements());\r\n\t\t\t}\r\n\t\t}\r\n\t}])\r\n\r\nangular.module('common')\r\n.factory('CommonAPI', (API, APIError, $q) => {\r\n\t'use strict'\r\n\r\n\t// This service handles basic API calls that are done throughout the project.\r\n\t// API calls that are more specific are handled in their own services.\r\n\r\n\tconst errorName = 'CommonAPIFactory.'\r\n\r\n\tconst getPerson = (userId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getPerson')\r\n\r\n\t\tAPI.cui.getPerson({ personId: userId })\r\n\t\t.done(personResponse => {\r\n\t\t\tdefer.resolve(personResponse)\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting person information')\r\n\t\t\tAPIError.onFor(errorName + 'getPerson')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganization = (organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getOrganization')\r\n\r\n\t\tAPI.cui.getOrganization({ organizationId: organizationId })\r\n\t\t.done(orgResponse => {\r\n\t\t\tdefer.resolve(orgResponse)\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting organization information')\r\n\t\t\tAPIError.onFor(errorName + 'getOrganization')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganizationHierarchy = (organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getOrgHierarchy')\r\n\r\n\t\tAPI.cui.getOrganizationHierarchy({ organizationId: organizationId })\r\n\t\t.done(orgHierarchy => {\r\n\t\t\tdefer.resolve(orgHierarchy)\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting organization hierarchy')\r\n\t\t\tAPIError.onFor(errorName + 'getOrgHierarchy')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetPerson: getPerson,\r\n\t\tgetOrganization: getOrganization,\r\n\t\tgetOrganizationHierarchy: getOrganizationHierarchy\r\n\t}\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('Countries', function($http, $rootScope, $translate) {\r\n\r\n    let countries = []\r\n\r\n    const GetCountries = (locale) => {\r\n        return $http.get(appConfig.languageResources.url + 'countries/' + locale + '.json')\r\n    }\r\n\r\n    const setCountries = (language) => {\r\n        language = language || 'en'\r\n\r\n        if (language.indexOf('_') > -1) {\r\n            language = language.split('_')[0]\r\n        }\r\n\r\n        GetCountries(language)\r\n        .then(res => {\r\n            countries.length = 0\r\n\r\n            res.data.forEach(country => {\r\n                countries.push(country)\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    $rootScope.$on('languageChange',function(e, args) {\r\n        setCountries(args)\r\n    })\r\n\r\n    const getCountryByCode = (countryCode) => {\r\n        return _.find(countries, function(countryObject) {\r\n            return countryObject.code === countryCode\r\n        })\r\n    }\r\n\r\n    setCountries($translate.proposedLanguage())\r\n\r\n    return {\r\n        list: countries,\r\n        getCountryByCode: getCountryByCode\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('CustomAPI', (CustomAPIExtension) => {\r\n\r\n    const calls = [\r\n        {\r\n            cmd: 'getPackageClaims',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.claim.v1+json',\r\n            call: '/service/v3/claims',\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonPackageClaims',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',\r\n            call: `/service/v3/persons/${ '{grantee}' }/packages/${ '{packageId}' }/claims`,\r\n            type: 'GET' \r\n        },\r\n        {\r\n            cmd: 'getCategories',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.category.v1+json',\r\n            call: `/service/v3/categories`,\r\n            type: 'GET' \r\n        },\r\n        {\r\n            cmd: 'getPersonRequestableApps',            \r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/requestable`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonRequestableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/requestable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantedApps',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantedAppCount',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationRequestableApps',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationRequestableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/requestable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantedApps',            \r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantedCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantableApps',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/grantable`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/grantable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantableApps',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/grantable`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/grantable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonStatusHistory',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.status.history.v1+json',\r\n            call: '/person/v3/persons/statusHistory',\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonPasswordChangeHistory',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.authn.password.change.history.req.v1+json',\r\n            call: `/authentication/v4/passwords/changeHistory`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonPendingServicePackages',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.request.v1+json',\r\n            call: `/service/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPackage',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.v1+json',\r\n            call: `/service/v3/packages/${ '{packageId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'denyPackage',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            type: 'POST',\r\n            call: `/service/v3/requests/tasks/deny`,\r\n        },\r\n        {\r\n            cmd: 'approvePackage',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            type: 'POST',\r\n            call: `/service/v3/requests/tasks/approve`\r\n        },\r\n        {\r\n            cmd: 'grantClaims',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',\r\n            call: `/service/v3/packages/grants/claims`,\r\n            type: 'PUT'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationRegistrationRequest',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.organization.request.v1+json',\r\n            call: `/organization/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonRegistrationRequest',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: `/person/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'approvePersonRegistration',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: `/person/v3/requests/tasks/approve`,\r\n            type: 'POST'\r\n        },\r\n        {\r\n            cmd: 'denyPersonRegistration',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: `/person/v3/requests/tasks/deny`,\r\n            type: 'POST'\r\n        },\r\n        {\r\n            cmd: 'getAllOrganizationRequests',\r\n            accepts: 'application/vnd.com.covisint.platform.organization.request.v1+json',\r\n            call: `/organization/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonEntitlements',\r\n            cmdType: 'secured',\r\n            contentType: 'application/vnd.com.covisint.platform.person.privilege.v1+json',\r\n            accepts: 'application/vnd.com.covisint.platform.person.privilege.v1+json',\r\n            call: `/person/v3/persons/privileges/${ '{personId}'}`,\r\n            type: 'GET'\r\n        },\r\n        {   cmd: 'getPersonGrantedCount',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            call: `/person/v3/persons/count`,\r\n            type: 'GET' \r\n        },\r\n        {\r\n            cmd: 'suspendOrgPkg',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.grant.status.request.v1+json',\r\n            contentType: 'application/vnd.com.covisint.platform.package.grant.status.request.v1+json',\r\n            call: `/service/v3/grants/tasks/organization/package/suspend`,\r\n            type: 'POST'\r\n        }\r\n    ]\r\n\r\n    return calls.concat(CustomAPIExtension)\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('CustomAPIExtension', () => {\r\n\r\n\t/* \t\r\n\t\tAny calls added here will be added to the API.cui object.\r\n\t*/\r\n\r\n    const calls = [\r\n    \t/* ---------- Registration Nonce Calls ---------- */\r\n    \t{\r\n    \t\tcmd: 'initiateNonce',\r\n    \t\tcmdType: 'unsecured',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/json',\r\n    \t\tcall: '/registration/v1/registrations/open/initiate'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'getOrganizationNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.organization.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/organizations/{organizationId}'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'getOrganizationsNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.organization.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/organizations'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'getSecurityQuestionsNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.securityquestion.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/securityQuestions'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'postUserRegistrationNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'POST',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n    \t\tcontentType: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/persons/registration'\r\n    \t},\r\n    \t{\r\n            cmd: 'getPasswordPoliciesNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'application/vnd.com.covisint.platform.password.policy.v1+json',\r\n            call: '/registration/v1/registrations/passwords/policies/{policyId}'\r\n        },\r\n        {\r\n            cmd: 'postPersonRequestNonce',\r\n            cmdType: 'nonce',\r\n            type: 'POST',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            contentType: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: '/registration/v1/registrations/persons/requests'\r\n        },\r\n        {\r\n        \tcmd: 'getOrgPackageGrantsNonce',\r\n        \tcmdType: 'nonce',\r\n        \ttype: 'GET',\r\n        \taccepts: 'application/vnd.com.covisint.platform.package.grant.v1+json',\r\n        \tcall: '/registration/v1/registrations/organizations/{organizationId}/packages'\r\n        },\r\n\t\t{\r\n\t\t\tcmd: 'validateUsernameEmailNonce',\r\n\t\t\tcmdType: 'nonce',\r\n\t\t\ttype: 'POST',\r\n\t\t\taccepts: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n\t\t\tcontentType: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n\t\t\tcall: '/registration/v1/registrations/persons/registration/validate'\r\n\t\t},\r\n        {\r\n            cmd: 'securedInitiate',\r\n            cmdType: 'unsecured',\r\n            type: 'GET',\r\n            accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json',\r\n            call: '/registration/v1/registrations/securedInvite/initiate/{invitationId}'\r\n        },\r\n        {\r\n            cmd: 'getOrgAppsNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: '/registration/v1/applications/organizations/{organizationId}'\r\n        },\r\n        {\r\n            cmd: 'getOrgAppsCountNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'text/plain',\r\n            call: '/registration/v1/applications/organizations/{organizationId}/count'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationsCountNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'text/plain',\r\n            call: '/registration/v1/registrations/organizations/count'\r\n        },\r\n        //New Calls-S\r\n        {cmd: \"getOrgRegistrationRequests\",call:\"/registration/v1/organization/requests\",type:\"GET\",accepts:\"application/vnd.com.covisint.platform.organization.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.organization.request.v1+json\"},\r\n        {cmd: \"getOrgRegistrationRequestsCount\",call: \"/registration/v1/organization/requests/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: 'approveOrgRegistrationRequest', call:'/registration/v1/organization/requests/tasks/approve', type:'POST', accepts:'application/vnd.com.covisint.platform.organization.request.v1+json'},\r\n        {cmd: 'denyOrgRegistrationRequest', call:'/registration/v1/organization/requests/tasks/deny', type:'POST', accepts:'application/vnd.com.covisint.platform.organization.request.v1+json'},\r\n                // ADMIN... imported from Coke...\r\n        {cmd: 'getPackageByQuery',accepts: 'application/vnd.com.covisint.platform.package.v1+json',call: `/service/v3/packages`,type: 'GET' },\r\n        {cmd: \"getPersonByQuery\",call: \"/person/v3/persons\",type: \"GET\",accepts: \"application/vnd.com.covisint.platform.person.v1+json\"  },\r\n        {cmd: \"getRegistrationRequests\",call:\"/registration/v1/person/requests\",type:\"GET\",accepts:\"application/vnd.com.covisint.platform.person.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.person.request.v1+json\"},\r\n        {cmd: \"createRegistrationRequest\",\"cmdType\": \"unsecured\",call:\"/registration/v1/person/requests\",type:\"POST\",accepts:\"application/vnd.com.covisint.platform.person.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.person.request.v1+json\"},\r\n        {cmd: \"getOrganizationSecured\",\"cmdType\": \"secured\",\"call\": \"/organization/v3/organizations/{organizationId}\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.organization.v1+json\"},\r\n        {cmd: \"getPasswordPolicySecured\",\"cmdType\": \"secured\",\"call\": \"/authn/v4/passwords/policies/{policyId}\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.password.policy.v1+json\"},\r\n        {cmd: 'grantClaims',accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',contentType:\"application/vnd.com.covisint.platform.package.grant.claim.v1+json\",call: '/service/v3/packages/grants/claims',type: 'PUT' },\r\n        {cmd: 'initiateRegistration', cmdType: 'unsecured', call: '/registration/v1/registrations/open/initiate', type: 'GET', accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json'},\r\n        {cmd: 'initiateSecuredRegistration', cmdType: 'unsecured', call: '/registration/v1/registrations/securedInvite/initiate/{id}', type: 'GET', accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json'},\r\n        {cmd: 'createRegistrationNonce',cmdType: 'nonce',call:'/registration/v1/registrations/persons/registration',type:'POST',accepts:'application/vnd.com.covisint.platform.person.password.account.v1+json',contentType:'application/vnd.com.covisint.platform.person.password.account.v1+json'},\r\n        {cmd: 'createRegistrationRequestNonceWithPkg',cmdType: 'nonce',call:'/registration/v1/registrations/persons/requests',type:'POST',accepts:'application/vnd.com.covisint.platform.person.request.v1+json',contentType:'application/vnd.com.covisint.platform.person.request.v1+json'},\r\n        {cmd: 'approvePersonRegistrationRequest', call:'/registration/v1/person/requests/tasks/approve', type:'POST', accepts:'application/vnd.com.covisint.platform.person.request.v1+json'},\r\n        {cmd: 'denyPersonRegistrationRequest', call:'/registration/v1/person/requests/tasks/deny', type:'POST', accepts:'application/vnd.com.covisint.platform.person.request.v1+json'},\r\n        {cmd: 'validateRegistrationNonce',cmdType:'nonce',call: '/registration/v1/registrations/persons/registration/validate', type:'POST', accepts: 'text/plain'},\r\n        //{cmd: 'getOrganizationNonce',cmdType:'nonce',call: '/registration/v1/registrations/organizations/{id}', type:'GET', accepts: 'application/vnd.com.covisint.platform.organization.v1+json'},\r\n        {cmd: 'getPasswordPolicyNonce',cmdType:'nonce',call: '/registration/v1/registrations/passwords/policies/{id}', type:'GET', accepts: 'application/vnd.com.covisint.platform.password.policy.v1+json'},\r\n        {cmd: 'getAttributeTemplatesNonce',cmdType:'nonce',call: '/registration/v1/registrations/attributeTemplates', type:'GET', accepts: 'application/vnd.com.covisint.platform.attribute.template.v1+json'},\r\n        {cmd: \"getOrganizationPackagesSecured\",\"cmdType\": \"secured\",\"call\": \"/service/v3/organizations/{organizationId}/packages\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.package.grant.v1+json\"},\r\n        {cmd: \"validatePasswordSecured\",call: \"/person/v3/persons/password/validate\",type: \"POST\",accepts: \"application/vnd.com.covisint.platform.password.validation.response.v1+json\",\"contentType\": \"application/vnd.com.covisint.platform.password.validation.v1+json\"},\r\n        {cmd: \"getPackageRequestsCount\",call: \"/service/v3/requests/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: \"getOrganizationPackagesCount\",call: \"/service/v3/organizations/{organizationId}/packages/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: \"getRegistrationRequestsCount\",call: \"/registration/v1/person/requests/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: \"getPackagesRequestedCount\",call: \"/service/v3/persons/{personId}/packages/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: 'validatePasswordNonce',cmdType:'nonce',call: '/registration/v1/registrations/persons/password/validate', type:'POST', accepts: 'application/vnd.com.covisint.platform.password.validation.response.v1+json',contentType:'application/vnd.com.covisint.platform.password.validation.v1+json'}\r\n\r\n\r\n    ];\r\n\r\n    return calls\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('DataStorage', (API, localStorageService) => {\r\n\r\n    let storage = localStorageService.get('dataStorage') || {}\r\n    let dataStorage = {}\r\n\r\n    const initStorageIfUndefined = () => {\r\n        if (!storage[API.getUser()]) {\r\n            storage[API.getUser()] = {}\r\n        }\r\n    }\r\n\r\n    const saveToLocaStorage = () => {\r\n        localStorageService.set('dataStorage', storage)\r\n    }\r\n\r\n    /****************************************\r\n        FOR OBJECT AND ARRAY TYPE DATA\r\n    ****************************************/\r\n\r\n    // completely overrides a type\r\n    dataStorage.setType = (type, data) => {\r\n        initStorageIfUndefined()\r\n        storage[API.getUser()][type] = data\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    dataStorage.getType = (type) => {\r\n        if (!storage[API.getUser()]) {\r\n            return undefined\r\n        }\r\n        return storage[API.getUser()][type]\r\n    }\r\n\r\n    dataStorage.deleteType = (type) => {\r\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\r\n            return\r\n        }\r\n        delete storage[API.getUser()][type]\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    // deletes the storage for just the currently logged in user\r\n    dataStorage.deleteUserStorage = () => {\r\n        if (storage[API.getUser()]) {\r\n            delete storage[API.getUser()]\r\n        }\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    // deletes the storage for every user in local storage\r\n    dataStorage.clear = () => {\r\n        storage = {}\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    dataStorage.getUserStorage = () => storage[API.getUser()]\r\n\r\n    /****************************************\r\n        FOR ARRAY TYPE DATA ONLY\r\n    ****************************************/\r\n\r\n    // appends to a certain type\r\n    // NOTE: Make sure to use data that you can later distinguish between using dataThatMatches\r\n    // I recommend using replaceDataThatMatches instead unless you know what you're doing\r\n    dataStorage.appendToType = (type, data) => {\r\n        initStorageIfUndefined()\r\n        if (!storage[API.getUser()][type]) {\r\n            storage[API.getUser()][type] = [data]\r\n        } \r\n        else if (!_.isArray(storage[API.getUser()][type])) {\r\n            throw new Error('Tried appending to an existing data type that is not an array in dataStorage.')\r\n            return\r\n        } \r\n        else {\r\n            storage[API.getUser()][type].push(data)\r\n        }\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    // returns ALL data that matches against a given comparison or undefined if no results\r\n    dataStorage.getDataThatMatches = (type, comparison) => {\r\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\r\n            return undefined\r\n        } \r\n        else if (!_.isArray(storage[API.getUser()][type])) {\r\n            throw new Error('Tried using DataStorage.getDataThatMatches on a type that isn\\'t an array. Use .getType(type) instead.')\r\n            return\r\n        } \r\n        else {\r\n            const matches = storage[API.getUser()][type].filter(x => {\r\n                return _.isMatch(x, comparison)\r\n            })\r\n            if (matches.length > 0) {\r\n                return matches\r\n            } \r\n            else {\r\n                return undefined\r\n            }\r\n        }\r\n    }\r\n\r\n    // replaces all data that matches against a certain comparison and appends\r\n    // new data to that type's array\r\n    dataStorage.replaceDataThatMatches = (type, comparison, newData) => {\r\n        dataStorage.deleteDataThatMatches(type, newData)\r\n        dataStorage.appendToType(type, newData)\r\n    }\r\n\r\n    dataStorage.deleteDataThatMatches = (type, comparison) => {\r\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\r\n            return\r\n        } \r\n        else if (!_.isArray(storage[API.getUser()][type])) {\r\n            throw new Error('Tried using DataStorage.deleteDataThatMatches on a type that isn\\'t an array. Use .deleteType(type) instead.')\r\n            return\r\n        } \r\n        else {\r\n            storage[API.getUser()][type] = storage[API.getUser()][type].filter(x => {\r\n                return !_.isMatch(x, comparison)\r\n            })\r\n        }\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    return dataStorage\r\n})\r\n\r\nangular.module('common')\r\n.factory('Languages',['$cuiI18n','LocaleService',function($cuiI18n,LocaleService){\r\n\r\n    var languages=$cuiI18n.getLocaleCodesAndNames();\r\n\r\n    return {\r\n        all:languages,\r\n        getCurrentLanguageCode : function(){\r\n            if (LocaleService.getLocaleCode().indexOf('_')>-1) {\r\n                return LocaleService.getLocaleCode().split('_')[0];\r\n            } else {\r\n                return LocaleService.getLocaleCode();\r\n            }\r\n        }\r\n    };\r\n}]);\r\nangular.module('common')\r\n.factory('Loader', (SharedService) => {\r\n    const Loader = Object.create(SharedService)\r\n    Loader.details = Object.assign({}, Loader.details)\r\n    Loader.for = Loader.details\r\n    return Loader\r\n})\r\n\r\nangular.module('common')\r\n.factory('Menu', (snapRemote, $rootScope, $window) => {\r\n\r\n    const shouldShowMobileNav = () => {\r\n        if ($window.innerWidth >= 1000) {\r\n            snapRemote.close()\r\n        }\r\n    }\r\n\r\n    // Fixes issue where opening up the mobile menu and then expanding into desktop mode \r\n    // would leave all content pushed to the right.\r\n    $window.onresize = _.debounce(function() {\r\n        shouldShowMobileNav()\r\n    }, 1000)\r\n\r\n    return {\r\n        desktop: {\r\n            state: 'open', // default state for desktop menu\r\n            enabled: true,\r\n            open: function() {\r\n                this.state = 'closed'\r\n            },\r\n            close: function() {\r\n                this.state = 'closed'\r\n            },\r\n            toggle: function() { \r\n                this.state === 'open' ? this.state = 'closed' : this.state = 'open' \r\n            },\r\n            hide: function() {\r\n                this.enabled = false\r\n            },\r\n            show: function() {\r\n                this.enabled = true\r\n            }\r\n        },\r\n\r\n        mobile: {\r\n            state: 'closed', // default state for mobile menu\r\n            enabled: true,\r\n            open: function() {\r\n                this.state = 'open'\r\n            },\r\n            close: function() {\r\n                this.state = 'close'\r\n            },\r\n            toggle: function() {\r\n                this.state === 'open' ? this.state = 'closed' : this.state = 'open'\r\n            },\r\n            hide: function() {\r\n                this.enabled = false\r\n            },\r\n            show: function() {\r\n                this.state = true\r\n            }\r\n        },\r\n\r\n        handleStateChange: function(stateMenuOptions){\r\n            if (!angular.isDefined(stateMenuOptions)){\r\n                this.desktop.show()\r\n                this.mobile.show()\r\n            }\r\n            else {\r\n                (angular.isDefined(stateMenuOptions.desktop) && stateMenuOptions.desktop=== false)? this.desktop.hide() : this.desktop.show()\r\n                (angular.isDefined(stateMenuOptions.mobile) && stateMenuOptions.mobile=== false)? this.mobile.hide() : this.mobile.show()\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('Organization', (API, $q) => {\r\n\r\n\tconst factoryName = 'organizationFactory.'\r\n\r\n\tconst getOrganizationAdmins = (organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getOrganizationSecurityAdmins({organizationId: organizationId})\r\n\t\t.done(response => defer.resolve(response))\r\n\t\t.fail(error => defer.reject(error))\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganizationPasswordPolicy = (policyId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getPasswordPolicy({policyId: policyId})\r\n\t\t.done(response => defer.resolve(response))\r\n\t\t.fail(error => defer.reject(error))\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganizationAuthenticationPolicy = (policyId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getAuthenticationPolicy({policyId: policyId})\r\n\t\t.done(response => defer.resolve(response))\r\n\t\t.fail(error => defer.reject(error))\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganization = (organizationId) => {\r\n\t\treturn API.cui.getOrganizationWithAttributes({organizationId:organizationId})\r\n\t}\r\n\r\n\tconst initOrganizationProfile = (organizationId, policyId, authPolicyId) => {\r\n\t\tconst defer = $q.defer()\r\n\t\tconst organizationProfile = {}\r\n\t\tconst callsToComplete = 3\r\n\t\tlet callsCompleted = 0\r\n\r\n\t\tgetOrganizationAdmins(organizationId)\r\n\t\t.then(response => organizationProfile['admins'] = response)\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\r\n\t\t})\r\n\r\n\t\tgetOrganizationPasswordPolicy(policyId)\r\n\t\t.then(response => organizationProfile['passwordPolicy'] = response)\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\r\n\t\t})\r\n\r\n\t\tgetOrganizationAuthenticationPolicy(authPolicyId)\r\n\t\t.then(response => organizationProfile['authenticationPolicy'] = response)\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetOrganizationAdmins: getOrganizationAdmins,\r\n\t\tgetOrganizationPasswordPolicy: getOrganizationPasswordPolicy,\r\n\t\tgetOrganizationAuthenticationPolicy:getOrganizationAuthenticationPolicy,\r\n\t\tgetOrganization:getOrganization,\r\n\t\tinitOrganizationProfile: initOrganizationProfile\r\n\t}\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('PersonAndOrgRequest', (API, APIError, CommonAPI, $q) => {\r\n\t'use strict'\r\n\r\n\t/*\r\n\t\tUse this service as a helper when dealing with person requests.\r\n\r\n\t\tAllows you to get a person's registration request or a wrapper call that also gets you the person's and their\r\n\t\torganization's data.\r\n\t*/\r\n\r\n\tconst PersonAndOrgRequestFactory = {}\r\n\tconst errorName = 'PersonAndOrgRequestFactory.'\r\n\r\n\t/****************************************\r\n\t\t\t\tService Functions\r\n\t****************************************/\r\n\r\n\t// Returns the registration request associated with the userId\r\n\tPersonAndOrgRequestFactory.getPersonRegistrationRequest = (userId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getPersonRegistrationRequest({qs: [['registrant.id', userId]]})\r\n\t\t.done(registrationResponse => {\r\n\t\t\tdefer.resolve(registrationResponse[0])\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting user\\'s registration request')\r\n\t\t\tAPIError.onFor(errorName + 'getRegistrationRequest')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tPersonAndOrgRequestFactory.getOrgRegistrationRequest = (organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getOrgRegistrationRequests({qs: [['organization.id', organizationId]]})\r\n\t\t.done(registrationResponse => {\r\n\t\t\tdefer.resolve(registrationResponse[0])\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting organization\\'s registration request')\r\n\t\t\tAPIError.onFor(errorName + 'getRegistrationRequest')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\t/*\r\n\t\tWrapper call for: \tPersonRequest.getPersonRegistrationRequest()\r\n\t\t\t\t\t\t\tCommonAPI.getPerson()\r\n\t\t\t\t\t\t\tCommonAPI.getOrganization()\r\n\t*/\r\n\tPersonAndOrgRequestFactory.getRegistrationRequestData = (userId, organizationId, type) => {\r\n\t\tconst defer = $q.defer()\r\n\t\tlet callsCompleted = 0\r\n\t\tlet requestData = {}\r\n\r\n\t\tif (type==='person') {\r\n\t\t\tPersonAndOrgRequestFactory.getPersonRegistrationRequest(userId)\r\n\t\t\t.then(registrationRequest => {\r\n\t\t\t\trequestData.request = registrationRequest\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tcallsCompleted += 1\r\n\t\t\t\tif (callsCompleted === 3) {\r\n\t                defer.resolve(requestData);\r\n\t            }\r\n\t\t\t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tPersonAndOrgRequestFactory.getOrgRegistrationRequest(organizationId)\r\n\t\t\t.then(registrationRequest => {\r\n\t\t\t\trequestData.request = registrationRequest\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tcallsCompleted += 1\r\n\t\t\t\tif (callsCompleted === 3) {\r\n\t                defer.resolve(requestData);\r\n\t            }\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tCommonAPI.getPerson(userId)\r\n\t\t.then(personData => {\r\n\t\t\trequestData.personData = personData\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\t\r\n\t\t})\r\n\r\n\t\tCommonAPI.getOrganization(organizationId)\r\n\t\t.then(organizationData => {\r\n\t\t\trequestData.organization = organizationData\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\r\n\t\t})\r\n\t\t\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\t// Provided a decision ('approved' or 'denied') and the person request object\r\n\t// Handles the approval/denial of the person request\r\n\tPersonAndOrgRequestFactory.handleRequestApproval = (decision, request) => {\r\n\t\tlet data = [['requestId', request.id]]\r\n\r\n\t\tif (decision === 'approved') {\r\n\t\t\tAPI.cui.approvePersonRegistration({qs: data})\r\n\t\t}\r\n\t\telse if (decision === 'denied') {\r\n\t\t\tif (request.rejectReason) {\r\n\t\t\t\tdata.push(['reason', request.rejectReason])\r\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error('Requires a decision of \"approved\" or \"denied\" and the request object.')\r\n\t\t}\r\n\t}\r\n\r\n\treturn PersonAndOrgRequestFactory\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('PersonRequest', (API, APIError, CommonAPI, $q) => {\r\n\t'use strict'\r\n\r\n\t/*\r\n\t\tUse this service as a helper when dealing with person requests.\r\n\r\n\t\tAllows you to get a person's registration request or a wrapper call that also gets you the person's and their\r\n\t\torganization's data.\r\n\t*/\r\n\r\n\tconst personRequestFactory = {}\r\n\tconst errorName = 'PersonRequestFactory.'\r\n\r\n\t/****************************************\r\n\t\t\t\tService Functions\r\n\t****************************************/\r\n\r\n\t// Returns the registration request associated with the userId\r\n\tpersonRequestFactory.getPersonRegistrationRequest = (userId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getPersonRegistrationRequest({qs: [['registrant.id', userId]]})\r\n\t\t.done(registrationResponse => {\r\n\t\t\tdefer.resolve(registrationResponse[0])\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting user\\'s registration request')\r\n\t\t\tAPIError.onFor(errorName + 'getRegistrationRequest')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\t/*\r\n\t\tWrapper call for: \tPersonRequest.getPersonRegistrationRequest()\r\n\t\t\t\t\t\t\tCommonAPI.getPerson()\r\n\t\t\t\t\t\t\tCommonAPI.getOrganization()\r\n\t*/\r\n\tpersonRequestFactory.getPersonRegistrationRequestData = (userId, organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\t\tlet callsCompleted = 0\r\n\t\tlet requestData = {}\r\n\r\n\t\tpersonRequestFactory.getPersonRegistrationRequest(userId)\r\n\t\t.then(registrationRequest => {\r\n\t\t\trequestData.request = registrationRequest\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\r\n\t\t})\r\n\r\n\t\tCommonAPI.getPerson(userId)\r\n\t\t.then(personData => {\r\n\t\t\trequestData.personData = personData\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\t\r\n\t\t})\r\n\r\n\t\tCommonAPI.getOrganization(organizationId)\r\n\t\t.then(organizationData => {\r\n\t\t\trequestData.organization = organizationData\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\r\n\t\t})\r\n\t\t\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\t// Provided a decision ('approved' or 'denied') and the person request object\r\n\t// Handles the approval/denial of the person request\r\n\tpersonRequestFactory.handleRequestApproval = (decision, request) => {\r\n\t\tlet data = [['requestId', request.id]]\r\n\r\n\t\tif (decision === 'approved') {\r\n\t\t\tAPI.cui.approvePersonRegistration({qs: data})\r\n\t\t}\r\n\t\telse if (decision === 'denied') {\r\n\t\t\tif (request.rejectReason) {\r\n\t\t\t\tdata.push(['reason', request.rejectReason])\r\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error('Requires a decision of \"approved\" or \"denied\" and the request object.')\r\n\t\t}\r\n\t}\r\n\r\n\treturn personRequestFactory\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('Registration', (API, APIError, Base, $q) => {\r\n\r\n    const self = {}\r\n    const pub = {}\r\n\r\n    // Helper functions to build out the person and request objects needed for registration\r\n    const build = {\r\n        person: function(registrationData) {\r\n            const personData = Object.assign({}, registrationData.profile)\r\n\r\n            personData.addresses[0].country = registrationData.userCountry.originalObject.code\r\n            personData.organization = { id: registrationData.organization.id }\r\n            personData.language=registrationData.profile.language.id\r\n            personData.timezone=registrationData.profile.timezone.id\r\n\r\n            if (personData.phones[0]) {\r\n                personData.phones[0].type = 'main'\r\n            }\r\n\r\n            return personData\r\n        },\r\n        passwordAccount: function(registrationData) {\r\n            return {\r\n                version: '1',\r\n                username: registrationData.login.username,\r\n                password: registrationData.login.password,\r\n                passwordPolicy: registrationData.organization.passwordPolicy,\r\n                authenticationPolicy: registrationData.organization.authenticationPolicy\r\n            }\r\n        },\r\n        securityQuestionAccount: function(registrationData) {\r\n            return {\r\n                version: '1',\r\n                questions: [{\r\n                    question: {\r\n                        id: registrationData.login.question1.id,\r\n                        type: 'question',\r\n                        realm: registrationData.organization.realm\r\n                    },\r\n                    answer: registrationData.login.challengeAnswer1,\r\n                    index: 1\r\n                },\r\n                {\r\n                    question: {\r\n                        id: registrationData.login.question2.id,\r\n                        type: 'question',\r\n                        realm: registrationData.organization.realm\r\n                    },\r\n                    answer: registrationData.login.challengeAnswer2,\r\n                    index: 2\r\n                }]\r\n            }\r\n        }, \r\n        walkupSubmit: function(registrationData) {\r\n            const _registrationData = Object.assign({}, registrationData)\r\n\r\n            return {\r\n                person: this.person(_registrationData),\r\n                passwordAccount: this.passwordAccount(_registrationData),\r\n                securityQuestionAccount: this.securityQuestionAccount(_registrationData)\r\n            }\r\n        },\r\n        InvitedSubmit: function(registrationData,inviteId) {\r\n            const _registrationData = Object.assign({}, registrationData)\r\n\r\n            return {\r\n                person: this.person(_registrationData),\r\n                passwordAccount: this.passwordAccount(_registrationData),\r\n                securityQuestionAccount: this.securityQuestionAccount(_registrationData),\r\n                inviteId:inviteId\r\n            }\r\n        },\r\n        servicePackageRequest: function(personId, personRealm, packageData,requestReason) {\r\n            let request = {\r\n                registrant: {\r\n                    id: personId,\r\n                    type: 'person',\r\n                    realm: personRealm\r\n                },\r\n                justification: requestReason||'User Walkup Registration'\r\n            }\r\n\r\n            if (packageData && packageData.selected) {\r\n                request.packages = []\r\n                angular.forEach(packageData.selected, function(servicePackage) {\r\n                    // userWalkup.applications.selected is an array of strings that looks like\r\n                    // ['<appId>,<packageId>,<appName>']\r\n                    request.packages.push({\r\n                        id: servicePackage.split(',')[1],\r\n                        type: 'servicePackage'\r\n                    })\r\n                })\r\n                request.packages=_.uniqBy(request.packages,'id')    \r\n            }\r\n\r\n            return request\r\n        }\r\n    }\r\n\r\n    /**\r\n     * this method makes sure to make the call but before it calls cui.initiateNonce\r\n     * @param method method name\r\n     * @param args method arguments\r\n     * @returns {*} promise\r\n     */\r\n    self.makeNonceCall = ( method, ...args )=>{\r\n        const deferred = $.Deferred()\r\n        const tag = \"registration/self/makeNonceCall\"\r\n\r\n        API.cui.initiateNonce()\r\n        .then(res=>{\r\n\r\n            API.cui[method].apply( API.cui, args )\r\n            .then(result=>{\r\n                deferred.resolve(result)\r\n            })\r\n            .fail((error)=>{\r\n                deferred.reject(error)\r\n            })\r\n\r\n        })\r\n        .fail((error)=>{\r\n            console.error( tag, error )\r\n            deferred.reject(error)\r\n        })\r\n\r\n        return deferred.promise()\r\n    }\r\n\r\n    /**\r\n     * TODO: once the promise gets an error message, we are going to resolve as false. This is temporary.\r\n     * Makes an api call to know if the registrating user's username or email address\r\n     * appear already been taken.\r\n     * @param stringParams a param array having either or both userName and emalAddress.\r\n     * @returns {{promise, valid: (function(*=)), catch: (function(*))}}\r\n     */\r\n    self.isUsernameOrEmailTaken = stringParams => {\r\n        const tag = \"registration/self/isUsernameOrEmailTaken\";\r\n\r\n        return {\r\n            promise:(() => {\r\n                const defered = $q.defer()\r\n\r\n                if( stringParams ){\r\n\r\n                    self.makeNonceCall( \"validateUsernameEmailNonce\", {qs:stringParams} ).then( res => {\r\n                        defered.resolve( true )\r\n                    }).fail( error => {\r\n                        defered.resolve( false )\r\n                        console.error( tag + \".error\", error )\r\n                    })\r\n                }else{\r\n                    defered.resolve( true )\r\n                }\r\n\r\n                return defered.promise\r\n            })(),\r\n            valid: res => {\r\n                return res\r\n            },\r\n            catch: error => {\r\n                // do something with the error here\r\n                console.error( tag + \".catch\", \"there is an error, :) \")\r\n            }\r\n        }\r\n    }\r\n\r\n    pub.getOrganizations=()=>{\r\n        return self.makeNonceCall( \"getOrganizationsNonce\" )\r\n    }\r\n\r\n    pub.getSecurityQuestions=()=>{\r\n        return self.makeNonceCall( \"getSecurityQuestionsNonce\" )\r\n    }\r\n\r\n    // Returns organizations and security questions for the realm.\r\n    // Both must resolve for the walkup registration to work.\r\n    pub.initWalkupRegistration = (pageSize) => {    \r\n        const defer = $q.defer()\r\n        const data = {}\r\n        \r\n        APIError.offFor('RegistrationFactory.initWalkup')\r\n\r\n        API.cui.initiateNonce()\r\n        .then(() => {\r\n            //  2-13-2017 filter resuts by status is not available for count now.\r\n            return API.cui.getOrganizationsCountNonce()\r\n        })\r\n        .then((res) => {\r\n            data.organizationCount=res\r\n            return API.cui.getOrganizationsNonce({qs:[['page',1],['pageSize',pageSize],['status','active']]})\r\n        })\r\n        .then(res => {\r\n            data.organizations = res\r\n            return API.cui.getSecurityQuestionsNonce()\r\n        })\r\n        .then(res => {\r\n            data.securityQuestions = res\r\n            defer.resolve(data)\r\n        })\r\n        .fail(error => {\r\n            APIError.onFor('RegistrationFactory.initWalkup')\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n    // validates invite and Returns Target organization\r\n    //Must resolve for the Invited registration to work.\r\n    pub.initInvitedRegistration= (encodedString) =>{\r\n        const defer = $q.defer()\r\n        const data = {}\r\n        \r\n        APIError.offFor('RegistrationFactory.initInvited')\r\n\r\n        API.cui.securedInitiate({invitationId:encodedString})\r\n        .then((res) => {\r\n            data.invitationData=res;\r\n            return API.cui.getOrganizationNonce({organizationId:res.targetOrganization.id})\r\n        })\r\n        .then(res => {\r\n            data.organization = res\r\n            return API.cui.getSecurityQuestionsNonce()\r\n        })\r\n        .then(res => {\r\n            data.securityQuestions = res\r\n            defer.resolve(data)\r\n        })\r\n        .fail(error => {\r\n            APIError.onFor('RegistrationFactory.initInvited')\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    pub.walkupSubmit = (registrationData) => {\r\n        const defer = $q.defer()\r\n        const submitData = build.walkupSubmit(registrationData)\r\n\r\n        API.cui.initiateNonce()\r\n        .then(() => {\r\n            return API.cui.postUserRegistrationNonce({data: submitData})\r\n        })\r\n        .then(res => {\r\n            const packageRequestData = build.servicePackageRequest(res.person.id, res.person.realm, registrationData.applications,registrationData.requestReason)\r\n            return API.cui.postPersonRequestNonce({data: packageRequestData})\r\n        })\r\n        .then(res => {\r\n            defer.resolve(res)\r\n        })\r\n        .fail(error => {\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    pub.invitedSubmit = (registrationData,encodedString,invitationId) => {\r\n        const defer = $q.defer()\r\n        const submitData = build.InvitedSubmit(registrationData,invitationId)\r\n\r\n        API.cui.securedInitiate({invitationId:encodedString})\r\n        .then(() => {\r\n            return API.cui.postUserRegistrationNonce({qs:[['inviteId',invitationId]],data: submitData})\r\n        })\r\n        .then(res => {\r\n            const packageRequestData = build.servicePackageRequest(res.person.id, res.person.realm, registrationData.applications,registrationData.requestReason)\r\n            return API.cui.postPersonRequestNonce({data: packageRequestData})\r\n        })\r\n        .then(res => {\r\n            defer.resolve(res)\r\n        })\r\n        .fail(error => {\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    pub.getOrgAppsByPage = (page, pageSize, organizationId) => {\r\n        return API.cui.getOrgAppsNonce({organizationId: organizationId, qs:[['page',page],['pageSize',pageSize]]})\r\n    }\r\n\r\n    pub.getOrgsByPageAndName = (page,pageSize,name) => {\r\n        if (name!==undefined) {\r\n            return self.makeNonceCall(\"getOrganizationsNonce\",{qs:[['page',page],['pageSize',pageSize],['status','active'],['name',name]]})\r\n        }\r\n        else{\r\n            return self.makeNonceCall(\"getOrganizationsNonce\",{qs:[['page',page],['pageSize',pageSize],['status','active']]})\r\n        }\r\n        \r\n    }\r\n\r\n    pub.selectOrganization = (organization,pageSize)=>{\r\n        const deferred = $.Deferred()\r\n        const results = {\r\n            grants: []\r\n        }\r\n\r\n        API.cui.initiateNonce()\r\n        .then(res => {\r\n            return API.cui.getOrgAppsCountNonce({organizationId: organization.id})\r\n        })\r\n        .then(res => {\r\n            results.appCount=res\r\n            return pub.getOrgAppsByPage(1,pageSize,organization.id)\r\n        })\r\n        .then(res => {\r\n            res.forEach(grant => {\r\n                if (grant.servicePackage.requestable) results.grants.push(grant)\r\n            })\r\n            return API.cui.getPasswordPoliciesNonce({policyId: organization.passwordPolicy.id})\r\n        })\r\n        .then(res => {\r\n            results.passwordRules = res.rules\r\n            deferred.resolve(results)\r\n        })\r\n        .fail( error=>{\r\n            deferred.reject(error)\r\n        })\r\n\r\n        return deferred.promise()\r\n    }\r\n\r\n    pub.getTac = (packageId) => {\r\n        const deferred = $q.defer()\r\n        self.makeNonceCall(\"getOrgTacOfPackage\",{packageId:packageId})\r\n        .then(res =>{\r\n            deferred.resolve(res);\r\n        })\r\n        .fail(err =>{\r\n            console.log(\"Error in fetching TaC for application \"+packageId)\r\n            console.log(err);\r\n            deferred.reject(err);\r\n        })\r\n        return deferred.promise;\r\n    }\r\n\r\n    pub.isUsernameTaken = name => {\r\n        return self.isUsernameOrEmailTaken( [['userName',name]] );\r\n    }\r\n\r\n    pub.isEmailTaken = email => {\r\n        return self.isUsernameOrEmailTaken( [['emailAddress',email]] );\r\n    }\r\n\r\n    return pub\r\n\r\n})\r\n\r\nangular.module('common')\r\n.service('SharedService', function () {\r\n    /*****\r\n        this service serves as an instantiable class\r\n        that can be extended to provide information throughout the app\r\n        using the base controller\r\n\r\n        How to use:\r\n        angular.module('myModule')\r\n        .factory/service/provider('MyProvider', function(SharedService){\r\n            const MyProvider = Object.create(SharedService)\r\n        })\r\n\r\n        MyProvider now has an object that serves as a data holder for switchable loaders, error messages etc.\r\n\r\n        methods\r\n        .onFor(property:String, <message>:String)\r\n            enables that property in the details object, setting the message associated with that property\r\n            if you use onFor for multiple properties without using \"offFor\" to disable them\r\n            there's a count that gets incremented, and that property will only be disabled once offFor\r\n            is called on that property n times, where n is the amount of times it was enabled\r\n\r\n        .offFor(property:String)\r\n\r\n        .toggleFor(property:String, <message>:String)\r\n\r\n        .for\r\n            this holds a reference to the storage object, so that you can associate it with your base ctrl\r\n    *****/\r\n\r\n    this.details = {}\r\n\r\n    this.onFor = function (property, message) {\r\n        if (this.details[property]) {\r\n            this.details[property].count\r\n                ? this.details[property].count += 1\r\n                : this.details[property].count = 2 // count is only defined if there's more than 1\r\n            if (message) {\r\n                this.details[property].message = message;\r\n            }\r\n        } else {\r\n            this.details[property] = {\r\n                status: true,\r\n                message\r\n            }\r\n        }\r\n    }\r\n\r\n    this.offFor = function (property) {\r\n        if (!this.details[property]) {\r\n            return;\r\n        } else if (!this.details[property].count || this.details[property].count===1) {\r\n            delete this.details[property];\r\n        } else {\r\n            this.details[property].count -= 1;\r\n        }\r\n    }\r\n\r\n    this.toggleFor = function (property,message) {\r\n        if (this.details[property]) {\r\n            delete this.details[property];\r\n        } else {\r\n            this.details[property] = {\r\n                status:true,\r\n                message\r\n            }\r\n        }\r\n    }\r\n\r\n    this.clearAll = function() {\r\n        for (const key in this.details) delete this.details[key]\r\n    }\r\n\r\n    this.for = this.details\r\n\r\n    return this\r\n})\r\nangular.module('common')\r\n.factory('Sort',['$filter',function($filter) {\r\n    return {\r\n        listSort: function(listToSort, sortType, order) {\r\n            listToSort.sort(function(a, b) {\r\n                if (sortType === 'alphabetically') { \r\n                    if (a.name[0]) {\r\n                        a = $filter('cuiI18n')(a.name).toUpperCase(),\r\n                        b = $filter('cuiI18n')(b.name).toUpperCase();    \r\n                    }\r\n                    else {\r\n                        a = a.name.given.toUpperCase(),\r\n                        b = b.name.given.toUpperCase();\r\n                    }\r\n                }\r\n                else if (sortType=== 'date') { \r\n                    if (a.dateCreated) {\r\n                        a = a.dateCreated, b = b.dateCreated;\r\n                    }\r\n                    else {\r\n                        a = a.creation, b = b.creation;\r\n                    }\r\n                }\r\n                else { \r\n                    a = a.status, b = b.status; \r\n                }\r\n\r\n                if ( a < b ) {\r\n                    if (order) {\r\n                        return 1;\r\n                    } else {\r\n                        return -1;\r\n                    }\r\n                }\r\n                else if (a > b) {\r\n                    if (order) {\r\n                        return -1;\r\n                    } else {\r\n                        return 1;\r\n                    }\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n        }\r\n    };\r\n}]);\r\n\r\nangular.module('common')\r\n.factory('Theme', () => {\r\n\r\n\t/*\r\n\t*\tUtilize this factory when you need to set styles on the top-level element based on the current router state.\r\n\t*\t\r\n\t*\tFull documentation on how to utilize and or customize the application with this factory can be found in:\r\n\t*\t`./docs/features/factories/Theme.md`\r\n\t*/\r\n\r\n\tlet activeTheme\r\n\tlet defaultTheme\r\n\r\n\tconst getTheme = () => {\r\n\t\treturn activeTheme\r\n\t}\r\n\r\n\tconst setTheme = (cssClass) => {\r\n\t\tactiveTheme = cssClass\r\n\t}\r\n\r\n\tconst getDefaultTheme = () => {\r\n\t\treturn defaultTheme\r\n\t}\r\n\r\n\tconst setDefaultTheme = (cssClass) => {\r\n\t\tdefaultTheme = cssClass\r\n\t}\r\n\r\n\tconst clearActiveTheme = () => {\r\n\t\tactiveTheme = ''\r\n\t}\r\n\r\n\tconst useDefaultTheme = () => {\r\n\t\tactiveTheme = defaultTheme\r\n\t}\r\n\r\n\tconst setActiveDefaultTheme = (cssClass) => {\r\n\t\tdefaultTheme = cssClass\r\n\t\tactiveTheme = cssClass\r\n\t}\r\n\r\n    return {\r\n    \tget: getTheme,\r\n    \tset: setTheme,\r\n    \tgetDefault: getDefaultTheme,\r\n    \tsetDefault: setDefaultTheme,\r\n    \tuseDefault: useDefaultTheme,\r\n    \tsetActiveDefault: setActiveDefaultTheme,\r\n    \tclear: clearActiveTheme\r\n    }\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('Timezones', function($http, $rootScope, $translate) {\r\n\r\n    let timezones = []\r\n\r\n    const GetTimezones = (locale) => {\r\n        return $http.get(appConfig.languageResources.url + 'timezones/' + locale + '.json')\r\n    }\r\n\r\n    const setTimezones = (language) => {\r\n        language = language || 'en'\r\n\r\n        if (language.indexOf('_') > -1) {\r\n            language = language.split('_')[0]\r\n        }\r\n\r\n        GetTimezones(language)\r\n        .then(res => {\r\n            timezones.length = 0\r\n\r\n            res.data.forEach(timezone => {\r\n                timezones.push(timezone)\r\n            })\r\n        })\r\n        .catch(function(err) {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getTimezoneById = (id) => {\r\n        if (!id) {\r\n            return ''\r\n        }\r\n\r\n        return _.find(timezones, function(timezone) {\r\n            return timezone.id === id\r\n        }).name\r\n    }\r\n\r\n    $rootScope.$on('languageChange', function(e, args) {\r\n        setTimezones(args)\r\n    })\r\n\r\n    setTimezones($translate.proposedLanguage())\r\n\r\n    return {\r\n        all: timezones,\r\n        timezoneById: getTimezoneById\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('User', ($rootScope) => {\r\n\r\n    /*\r\n        This factory is intended to store data/logic pertaining to the logged in user only.\r\n        This data is populated right after logon (this can be found in the API.factory.js \r\n        inside the populateUserInfo method). The application will not run if those endpoints\r\n        fail.\r\n    */\r\n\r\n    let user = {\r\n        entitlements: undefined,\r\n        roles: undefined\r\n    }\r\n\r\n    return {\r\n        set : (newUser) => {\r\n            angular.merge(user, newUser);\r\n        },\r\n\r\n        get : () => user.cuid || '[cuid]',\r\n\r\n        setEntitlements : (newEntitlements) => {\r\n            user.entitlements ? user.entitlements = user.entitlements.concat(newEntitlements) : user.entitlements = newEntitlements\r\n        },\r\n\r\n        getEntitlements : () => user.entitlements,\r\n\r\n        setRoles : (newRoles) => {\r\n            user.roles ? user.roles = user.roles.concat(newRoles) : user.roles = newRoles\r\n        },\r\n\r\n        getRoles : () => user.roles,\r\n\r\n        user\r\n    }\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('UserHistory', function(API, APIError, LocaleService, $q, $timeout) {\r\n\r\n    const errorName = 'userHistoryFactory.'\r\n\r\n    const UserHistory = {\r\n        getTodaysDate:function(){\r\n            let today=new Date()\r\n            let dd=today.getDate()\r\n            let yyyy=today.getFullYear()\r\n            let mmm=today.toString().substring(4,7);\r\n            return dd+'-'+mmm+'-'+yyyy\r\n        },\r\n\r\n        initStatusHistory: function(userId) {\r\n            let defer = $q.defer()\r\n\r\n            API.cui.getPersonDetailedStatusHistory({qs : [\r\n                ['userId', userId], \r\n                ['startDate','01-Jan-2016'],\r\n                ['lastDate',UserHistory.getTodaysDate()]\r\n            ]})\r\n            .done(res => {               \r\n                defer.resolve(res)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting user status information', err)\r\n                APIError.onFor(errorName + 'initStatusHistory')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initStatusHistory')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initPasswordChangeHistory: function(userId) {\r\n            let defer = $q.defer()\r\n            API.cui.getPasswordCangeHistory({personId:userId})\r\n            .then(res => {                \r\n                defer.resolve(res)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting Password change history', err)\r\n                APIError.onFor(errorName + 'initPasswordChangeHistory')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initPasswordChangeHistory')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initUserHistory: function(userId, organizationId) {\r\n            let defer = $q.defer()\r\n            let history = {}\r\n            let callsCompleted = 0\r\n            const callsToComplete = 2\r\n\r\n            UserHistory.initStatusHistory(userId)\r\n            .then(res => {\r\n                history.statusHistory=res;\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(history)\r\n            })\r\n\r\n            UserHistory.initPasswordChangeHistory(userId)\r\n            .then(res => {\r\n                history.passwordChangeHistory=res;\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(history)\r\n            })\r\n\r\n            return defer.promise\r\n        },\r\n\r\n        injectUI: function(history, $scope, personId) {\r\n            history.fail = false\r\n            history.success = false\r\n        }\r\n    }\r\n\r\n    return UserHistory\r\n})\r\n\r\nangular.module('common')\r\n.factory('UserList', (API, APIError, APIHelpers, $q) => {\r\n\r\n\tconst errorName = 'UserListFactory.'\r\n\r\n\tconst getUsers = (opts) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getUsers')\r\n\r\n\t\tAPI.cui.getPersons(opts)\r\n\t\t.done(personResponse => {\r\n\t\t\tdefer.resolve(personResponse)\r\n\t\t})\r\n\t\t.fail(error => {\r\n\t\t\tconsole.error('Failed getting user list')\r\n\t\t\tAPIError.onFor(errorName + 'getUsers')\r\n\t\t\tdefer.reject(error)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getUserCount = (opts) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getUserCount')\r\n\r\n\t\tAPI.cui.countPersons(opts)\r\n\t\t.done(countResponse => {\r\n\t\t\tdefer.resolve(countResponse)\r\n\t\t})\r\n\t\t.fail(error => {\r\n\t\t\tconsole.error('Failed getting user count')\r\n\t\t\tAPIError.onFor(errorName + 'getUserCount')\r\n\t\t\tdefer.reject(error)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetUsers: getUsers,\r\n\t\tgetUserCount: getUserCount\r\n\t}\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('UserProfile', function(API, APIError, LocaleService, Timezones, $filter, $q, $timeout) {\r\n\r\n    const errorName = 'userProfileFactory.'\r\n\r\n    const UserProfile = {\r\n\r\n        setPhone:function(type,index){\r\n            var phone={};\r\n            phone.type=type;\r\n            phone.number=\"\";\r\n            return phone;\r\n        },\r\n\r\n        getTodaysDate:function(){\r\n            let today=new Date()\r\n            let dd=today.getDate()\r\n            let yyyy=today.getFullYear()\r\n            let mmm=today.toString().substring(4,7);\r\n            return dd+'-'+mmm+'-'+yyyy\r\n        },\r\n\r\n        initUser: function(userId) {\r\n            let defer = $q.defer()\r\n            let user = {}\r\n\r\n            API.cui.getPerson({ personId: userId })\r\n            .done(res => {\r\n                // If the person object has no addresses we need to initialize it\r\n                if (!res.addresses) {\r\n                    res.addresses = [{streets: []}];\r\n                }\r\n                //If there is no streets in address we need to initialie it\r\n                else if (!res.addresses[0].streets) {\r\n                    res.addresses[0].streets=[];\r\n                };\r\n                user.user = Object.assign({}, res)\r\n                user.tempUser = Object.assign({}, res)\r\n                //When user doesnot have any phones(data issue)\r\n                    if (!user.tempUser.phones) {\r\n                        user.tempUser.phones=[];\r\n                        user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                        user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                        user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                    }else{\r\n                        //When user have fax/mobile but not mobile\r\n                        if (user.tempUser.phones[0] && user.tempUser.phones[0].type!==\"main\") {\r\n                            if (user.tempUser.phones[0].type===\"fax\") {\r\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[0]);\r\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                                user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                            }else if (user.tempUser.phones[0].type===\"mobile\" && user.tempUser.phones[1]) {\r\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[1]);\r\n                                user.tempUser.phones[1]=angular.copy(user.tempUser.phones[0]);\r\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                            }else\r\n                            {\r\n                                user.tempUser.phones[1]=angular.copy(user.tempUser.phones[0]);\r\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                                user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                            }\r\n                        }\r\n                        else if (user.tempUser.phones[1]) {\r\n                            if (user.tempUser.phones[1].type===\"fax\") {\r\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[1]);\r\n                                user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                            }else{\r\n                                if (!user.tempUser.phones[2]) {\r\n                                    user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                                };\r\n                            }\r\n                        }else{\r\n                            user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                            user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                        }\r\n                    }\r\n                    angular.copy(user.tempUser, user.user);\r\n                defer.resolve(user)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting user information', err)\r\n                APIError.onFor(errorName + 'initUser')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initUser')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initSecurityQuestions: function(userId) {\r\n            let defer = $q.defer()\r\n            let securityQuestions = {\r\n                userSecurityQuestions: {},\r\n                tempUserSecurityQuestions: {},\r\n                allSecurityQuestions: [],\r\n                allSecurityQuestionsDup: []\r\n            }\r\n\r\n            $q.all([\r\n                API.cui.getSecurityQuestionAccount({ personId: userId }), \r\n                API.cui.getSecurityQuestions()\r\n            ])\r\n            .then(res => {\r\n                angular.copy(res[0], securityQuestions.userSecurityQuestions)\r\n                angular.copy(res[0], securityQuestions.tempUserSecurityQuestions)\r\n                angular.copy(res[1], securityQuestions.allSecurityQuestions) \r\n                angular.copy(res[1], securityQuestions.allSecurityQuestionsDup)\r\n\r\n                securityQuestions.allSecurityQuestions.splice(0, 1)\r\n\r\n                let numberOfQuestions = securityQuestions.allSecurityQuestions.length\r\n                let numberOfQuestionsFloor = Math.floor(numberOfQuestions/2)\r\n\r\n                securityQuestions.allChallengeQuestions0 = securityQuestions.allSecurityQuestions.slice(0, numberOfQuestionsFloor)\r\n                securityQuestions.allChallengeQuestions1 = securityQuestions.allSecurityQuestions.slice(numberOfQuestionsFloor)\r\n\r\n                securityQuestions.challengeQuestionsTexts = UserProfile.selectTextsForQuestions(securityQuestions)\r\n\r\n                defer.resolve(securityQuestions)\r\n            })\r\n            .catch(err => {\r\n                console.error('Failed getting security question data', err)\r\n                APIError.onFor(errorName + 'initSecurityQuestions')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initSecurityQuestions')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        selectTextsForQuestions: function(securityQuestions) {\r\n            let challengeQuestionsTexts = []\r\n\r\n            angular.forEach(securityQuestions.userSecurityQuestions.questions, (userQuestion) => {\r\n                let question = _.find(securityQuestions.allSecurityQuestionsDup, (question) => {\r\n                    return question.id === userQuestion.question.id\r\n                })\r\n                challengeQuestionsTexts.push($filter('cuiI18n')(question.question))\r\n            })\r\n            return challengeQuestionsTexts\r\n        },\r\n\r\n        initPasswordPolicy: function(organizationId) {\r\n            let defer = $q.defer()\r\n            let passwordPolicy = {}\r\n\r\n            API.cui.getOrganization({ organizationId: organizationId })\r\n            .then(res => {\r\n                passwordPolicy.organization = res\r\n                return API.cui.getPasswordPolicy({policyId: res.passwordPolicy.id})\r\n            })\r\n            .then(res => {\r\n                passwordPolicy.passwordRules = res.rules\r\n                res.rules.forEach(rule => {\r\n                    if (rule.type === 'history') {\r\n                        passwordPolicy.numberOfPasswords = rule.numberOfPasswords\r\n                    }\r\n                })\r\n                defer.resolve(passwordPolicy)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting password policy data', err)\r\n                APIError.onFor(errorName + 'initPasswordPolicy')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initPasswordPolicy')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initRegisteredDate: function(userId) {\r\n            const defer = $q.defer()\r\n            let lastDate=UserProfile.getTodaysDate();\r\n\r\n            API.cui.getPersonDetailedStatusHistory({qs : [\r\n                ['userId', userId], \r\n                ['startDate','01-Jan-2016'],\r\n                ['lastDate',lastDate]\r\n            ]})\r\n            .then(res => {\r\n                let activeStatusList=[];\r\n                res.forEach((status, index) => {\r\n                    if (status.status === 'ACTIVE') {\r\n                        activeStatusList.push(status)\r\n                    }\r\n                    if (res.length-1===index) {\r\n                        _.orderBy(activeStatusList, ['creation'], ['asc'])\r\n                        defer.resolve(activeStatusList[0].creation) \r\n                    }          \r\n                    \r\n                })\r\n            })\r\n            .fail(error => {\r\n                console.error('initRegisteredDate: There was an issue retrieving the registered date.')\r\n                APIError.onFor(errorName + 'initRegisteredDate')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initRegisteredDate')\r\n                }, 5000)\r\n                defer.reject(error)\r\n            })\r\n\r\n            return defer.promise\r\n        },\r\n\r\n        initUserProfile: function(userId, organizationId) {\r\n            let defer = $q.defer()\r\n            let profile = {}\r\n            let callsCompleted = 0\r\n            const callsToComplete = 4\r\n\r\n            UserProfile.initUser(userId)\r\n            .then(res => {\r\n                angular.merge(profile, res)\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            UserProfile.initSecurityQuestions(userId)\r\n            .then(res => {\r\n                angular.merge(profile, res)\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            UserProfile.initPasswordPolicy(organizationId)\r\n            .then(res => {\r\n                angular.merge(profile, res)\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            UserProfile.initRegisteredDate(userId)\r\n            .then(res => {\r\n                profile['registeredDate'] = res\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            return defer.promise\r\n        },\r\n\r\n        buildPersonPasswordAccount: function(user, passwordAccount, organization) {\r\n            return {\r\n                version: '1',\r\n                username: user.username,\r\n                currentPassword: passwordAccount.currentPassword,\r\n                password: passwordAccount.password,\r\n                passwordPolicy: organization.passwordPolicy,\r\n                authenticationPolicy: organization.authenticationPolicy\r\n            }\r\n        },\r\n\r\n        injectUI: function(profile, $scope, personId) {\r\n            let userId\r\n\r\n            personId\r\n                ? userId = personId\r\n                : userId = API.getUser()\r\n\r\n            profile.saving = false\r\n            profile.fail = false\r\n            profile.success = false\r\n            profile.timezoneById = Timezones.timezoneById\r\n            profile.toggleOffFunctions = {}\r\n\r\n            profile.resetAllData = () => {\r\n                angular.copy(profile.userSecurityQuestions, profile.tempUserSecurityQuestions)\r\n                angular.copy(profile.user, profile.tempUser)\r\n            }\r\n\r\n            profile.toggleAllOff = () => {\r\n                angular.forEach(profile.toggleOffFunctions, function(toggleOff) {\r\n                    toggleOff()\r\n                })\r\n                profile.resetAllData()\r\n            }\r\n\r\n            profile.pushToggleOff = (toggleOffObject) => {\r\n                if (!profile.toggleOffFunctions) {\r\n                    profile.toggleOffFunctions = {}\r\n                }\r\n                profile.toggleOffFunctions[toggleOffObject.name] = toggleOffObject.function\r\n            }\r\n\r\n            profile.resetPasswordFields = () => {\r\n                profile.userPasswordAccount = {\r\n                    currentPassword: '',\r\n                    password: ''\r\n                }\r\n                profile.passwordRe = ''\r\n            }\r\n\r\n            profile.checkIfRepeatedSecurityAnswer = (securityQuestions, formObject) => {\r\n                securityQuestions.forEach((secQuestion, i) => {\r\n                    let securityAnswerRepeatedIndex = _.findIndex(securityQuestions, (secQuestionToCompareTo, z) => {\r\n                        return z !== i && secQuestion.answer && secQuestionToCompareTo.answer && secQuestion.answer.toUpperCase() === secQuestionToCompareTo.answer.toUpperCase()\r\n                    })\r\n                    if (securityAnswerRepeatedIndex > -1) {\r\n                        if (formObject['answer' + securityAnswerRepeatedIndex]) {\r\n                            formObject['answer' + securityAnswerRepeatedIndex].$setValidity('securityAnswerRepeated', false)\r\n                        }\r\n                        if (formObject['answer' + i]) {\r\n                            formObject['answer' + i].$setValidity('securityAnswerRepeated', false)\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (formObject['answer' + i]) {\r\n                            formObject['answer' + i].$setValidity('securityAnswerRepeated', true)\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n            profile.updatePerson = (section, toggleOff) => {\r\n                let tempUserWithoutLastLogin;\r\n                if (section) {\r\n                    profile[section] = { submitting: true }\r\n                }\r\n\r\n                if (!profile.userCountry) {\r\n                    profile.tempUser.addresses[0].country = profile.user.addresses[0].country;\r\n                } else {\r\n                    profile.tempUser.addresses[0].country = profile.userCountry.originalObject.code;\r\n                }\r\n\r\n                // [7/20/2016] Note: Can't pass in 'activatedDate' anymore when updating a person\r\n                delete profile.tempUser.activatedDate\r\n                // Can't pass lastLoginDate\r\n                tempUserWithoutLastLogin= Object.assign({}, profile.tempUser)\r\n                if (tempUserWithoutLastLogin.lastLoginDate) {\r\n                    delete tempUserWithoutLastLogin.lastLoginDate\r\n                };\r\n\r\n                API.cui.updatePerson({personId: userId, data:tempUserWithoutLastLogin})\r\n                .always(() => {\r\n                    if (section) {\r\n                        profile[section].submitting = false;\r\n                    }\r\n                    $scope.$digest()\r\n                })\r\n                .done(() => {\r\n                    angular.copy(profile.tempUser, profile.user)\r\n                    LocaleService.setLocaleByDisplayName(appConfig.languages[profile.user.language])\r\n                    if (toggleOff) {\r\n                        toggleOff();\r\n                    }\r\n                })\r\n                .fail((err) => {\r\n                    console.error('Failed to update user profile:', err)\r\n                    if (section) {\r\n                        profile[section].error = true;\r\n                    }\r\n                })\r\n            }\r\n\r\n            profile.updatePassword = function(section, toggleOff) {\r\n                if (section) profile[section] = { submitting: true }\r\n                profile.lifetimeError=false\r\n\r\n                API.cui.updatePersonPassword({ \r\n                    personId: userId, \r\n                    data: UserProfile.buildPersonPasswordAccount(profile.user, profile.userPasswordAccount, profile.organization) \r\n                })\r\n                .always(() => {\r\n                    if (section) profile[section].submitting = false\r\n                })\r\n                .done(() => {\r\n                    if (toggleOff) toggleOff()\r\n                    profile.passwordUpdateSuccess = true\r\n                    $timeout(() => profile.passwordUpdateSuccess = false, 5000)\r\n                    profile.resetPasswordFields()\r\n                    $scope.$digest()\r\n                })\r\n                .fail(err => {\r\n                    console.error('Error updating password', err)\r\n                    if (err.responseJSON.apiMessage.indexOf('does not conform to policy')>1) {\r\n                        profile.lifetimeError=true\r\n                    }\r\n                    if (section) profile[section].error = true\r\n                    $scope.$digest()\r\n                })\r\n            }\r\n\r\n            profile.saveChallengeQuestions = (section, toggleOff) => {\r\n                if (section) {\r\n                    profile[section] = { submitting: true }\r\n                }\r\n                profile.userSecurityQuestions = angular.copy(profile.tempUserSecurityQuestions)\r\n\r\n                API.cui.updateSecurityQuestionAccount({\r\n                    personId: userId,\r\n                    data: {\r\n                        version: '1',\r\n                        id: userId,\r\n                        questions: profile.userSecurityQuestions.questions\r\n                    }\r\n                })\r\n                .always(() => {\r\n                    if (section) {\r\n                        profile[section].submitting = false;\r\n                    }\r\n                })\r\n                .done(() => {\r\n                    if (toggleOff) {\r\n                        toggleOff();\r\n                    }\r\n                    profile.challengeQuestionsTexts = UserProfile.selectTextsForQuestions(profile)\r\n                    $scope.$digest()\r\n                })\r\n                .fail(err => {\r\n                    console.error('Error updating security questions', err)\r\n                    if (section) {\r\n                        profile[section].error = true;\r\n                    }\r\n                    $scope.$digest()\r\n                })\r\n            }\r\n\r\n            profile.validatePassword = (password, formObject, input) => {\r\n\r\n                const validSwitch = (input, isValidBoolean, type) => {\r\n                    switch (input) {\r\n                        case 'newPassword':\r\n                            if (type==='history') \r\n                                profile.validNewPasswordHistory = isValidBoolean\r\n                            else\r\n                                profile.validNewPasswordDisallowed = isValidBoolean\r\n                        case 'newPasswordRe':\r\n                            if (type==='history') \r\n                                profile.validNewPasswordReHistory = isValidBoolean\r\n                            else\r\n                                profile.validNewPasswordReDisallowed = isValidBoolean\r\n                    }\r\n                }\r\n\r\n                const validateData = {\r\n                    userId: userId,\r\n                    organizationId: profile.user.organization.id,\r\n                    password: password,\r\n                    operations: ['PASSWORD_SPECIFY']\r\n                }\r\n\r\n                API.cui.validatePassword({data: validateData})\r\n                .then(res => {\r\n                    let validPasswordHistory = false\r\n                    let validateDisallowed =false\r\n                    // Sometimes disallowed words will not come in response, In that case need to set form object to true\r\n                    let disallowedFlag=false\r\n                    res.forEach(rule => {\r\n                        if (rule.type === 'HISTORY' && rule.isPassed) {\r\n                            validPasswordHistory = true\r\n                        }\r\n                        if (rule.type === 'DISALLOWED_WORDS'){\r\n                            disallowedFlag =true\r\n                            if(rule.isPassed) {\r\n                                validateDisallowed = true\r\n                            }\r\n                        }\r\n                    })\r\n                    //History Validation\r\n                    if (validPasswordHistory) {\r\n                        validSwitch(input, true, 'history')\r\n                    }\r\n                    else {\r\n                        validSwitch(input, false, 'history')\r\n                    }\r\n                    //Disallowed words Validation\r\n                    if (disallowedFlag===false||validateDisallowed===true) {\r\n                        validSwitch(input, true, 'disallowed')                        \r\n                    }\r\n                    else {\r\n                        validSwitch(input, false, 'disallowed')                        \r\n                    }\r\n                    if (validPasswordHistory &&(disallowedFlag===false||validateDisallowed===true)) {\r\n                        formObject[input].$setValidity(input, true)\r\n                        $scope.$digest()\r\n                    }\r\n                    else{\r\n                        formObject[input].$setValidity(input, false)\r\n                        $scope.$digest()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return UserProfile\r\n})\r\n\r\nangular.module('common')\r\n.factory('BuildPackageRequests', (API) => {\r\n\r\n    /*\r\n        Helper factory for creating and sending service package requests.\r\n\r\n        Usage: BuildPackageRequests(requestorId, requestorType, arrayOfServices)\r\n        Return: Array of API service package request promises\r\n        \r\n        Notes:\r\n            - RequestorType: Whether the requestor is a person or organization (expects 'person' or 'organization')\r\n            - The reason for the request should be under service._reason\r\n            - If no reason is provided and the service package requires a reason, returns undefined and attach\r\n              an _error property (app._error = true) for that service.\r\n            - This factory is not pure (alters the provided array of services)\r\n    */\r\n\r\n    return (requestorId, requestorType, arrayOfApps) => {\r\n        const numberOfApps = arrayOfApps.length\r\n\r\n        if (!_.isArray(arrayOfApps) || numberOfApps === 0) {\r\n            throw new Error ('The argument passed to BuildPackageRequests should be an array of 1 or more services.')\r\n            return undefined\r\n        }\r\n\r\n        let error = false\r\n\r\n        for (let i = 0; i < numberOfApps; i += 1) {\r\n            if (arrayOfApps[i].servicePackage.requestReasonRequired && !arrayOfApps[i]._reason) {\r\n                arrayOfApps[i]._error = true\r\n                if (!error) {\r\n                    error = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (error) {\r\n            return undefined;\r\n        }\r\n\r\n        let packagesBeingRequested = []\r\n        let packageRequests = []\r\n\r\n        for (let i = 0; i < numberOfApps; i += 1) {\r\n            if (packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id) >= 0) {\r\n                // If the service package is already being requested, append service to the request reason\r\n                // If the request doesn't have a reason here, then it is not required for this service package\r\n                if (arrayOfApps[i]._reason) {\r\n                    packageRequests[packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id)].reason +=\r\n                        ('\\n' + $filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(arrayOfApps[i].name) + ': ' + arrayOfApps[i].name._reason)\r\n                }\r\n            }\r\n            else {\r\n                // Cache id's in seperate array to check for existing package requests without having to search through the array of requests.\r\n                packagesBeingRequested.push(arrayOfApps[i].servicePackage.id)\r\n                packageRequests.push({\r\n                    requestor: {\r\n                        id: requestorId,\r\n                        type: requestorType\r\n                    },\r\n                    servicePackage: {\r\n                        id: arrayOfApps[i].servicePackage.id,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    reason: arrayOfApps[i]._reason || ''\r\n                })\r\n            }\r\n        }\r\n        \r\n        return packageRequests.map(data => API.cui.createPackageRequest({ data }))\r\n\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('AppRequests',['$filter',($filter) => {\r\n    var appRequestsObject={},\r\n        appRequests={};\r\n\r\n    appRequests.set=(newAppRequestsObject) => {\r\n        appRequestsObject=newAppRequestsObject;\r\n    };\r\n\r\n    appRequests.get=() => {\r\n        return appRequestsObject;\r\n    };\r\n\r\n    appRequests.clear= () => {\r\n        appRequestsObject = {};\r\n    };\r\n\r\n    appRequests.buildReason=(app,reason) => {\r\n        let tempApp={};\r\n        angular.copy(app,tempApp);\r\n        tempApp.reason=$filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(tempApp.name) + ': ' + reason;\r\n        return tempApp;\r\n    };\r\n\r\n\r\n    appRequests.getPackageRequests=(userId,arrayOfAppsBeingRequested) => {\r\n        let arrayOfPackagesBeingRequested=[],\r\n            arrayOfPackageRequests=[];\r\n        arrayOfAppsBeingRequested.forEach((app,i) => {\r\n            if(arrayOfPackagesBeingRequested.indexOf(app.servicePackage.id)>-1){ // if we've parsed an app that belongs to the same pacakge\r\n                if(app.servicePackage.reasonRequired){\r\n                    arrayOfPackageRequests.some((packageRequest,i) => {\r\n                        return arrayOfPackageRequests[i].servicePackage.id === app.servicePackage.id? (arrayOfPackageRequests[i].reason=arrayOfPackageRequests[i].reason + ('\\n\\n' + app.reason),true) : false; // if we already build a package request for this pacakge then append the reason of why we need this other app\r\n                    });\r\n                }\r\n                // if the reason isn't required then we don't need to do anything, we're already requesting this package\r\n            }\r\n            else {\r\n                arrayOfPackageRequests[i]={\r\n                    'requestor':{\r\n                        id:userId,\r\n                        type:'person'\r\n                    },\r\n                    servicePackage:{\r\n                        id:app.servicePackage.id,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    reason: app.servicePackage.reasonRequired ? app.reason : undefined\r\n                };\r\n                arrayOfPackagesBeingRequested[i] = app.servicePackage.id; // save the pacakge id that we're requesting in a throwaway array, so it's easier to check if we're\r\n                                                                // already requesting this package\r\n            }\r\n        });\r\n        return arrayOfPackageRequests;\r\n    };\r\n\r\n    return appRequests;\r\n}]);\r\nangular.module('common')\r\n.factory('ServicePackage', (API, APIError, $q) => {\r\n    'use strict'\r\n\r\n    /*\r\n        This factory was originally used as a type of data storage for storing service package data. The use of this factory\r\n        for storing data is now deprecated in favor of an actual data storage solution in our \"DataStorage\" factory. \r\n        The data storage features of this factory will be removed in a future version.\r\n\r\n        The focus of this factory will transition to dealing with any other logic associated with service packages.\r\n    */\r\n\r\n    const servicePackage = {}\r\n    const errorName = 'ServicePackageFactory.'\r\n    let servicePackageStorage = {}\r\n\r\n    /****************************************\r\n                Helper Functions\r\n    ****************************************/\r\n\r\n    // Returns services that are associated with a package id\r\n    const getPackageServices = (packageId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPackageServices({packageId: packageId})\r\n        .done(packageServices => {\r\n            defer.resolve(packageServices)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package services')\r\n            APIError.onFor(errorName + 'getPackageServices')\r\n            defer.reject(err)\r\n        })\r\n        return defer.promise\r\n    }\r\n\r\n    // Returns claims that are associated with a package id\r\n    const getPackageClaims = (packageId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPackageClaims({qs: [['packageId', packageId]]})\r\n        .done(packageClaims => {\r\n            defer.resolve(packageClaims)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package claims')\r\n            APIError.onFor(errorName + 'getPackageClaims')\r\n            defer.reject(err)\r\n        })\r\n        return defer.promise\r\n    }\r\n\r\n    // Returns all data for a specified package id\r\n    const getPackageDetails = (packageId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPackage({packageId: packageId})\r\n        .done(packageData => {\r\n            defer.resolve(packageData)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package details')\r\n            APIError.onFor(errorName + 'getPackageDetails')\r\n            defer.reject(err)\r\n        })\r\n        return defer.promise\r\n    }\r\n\r\n    /****************************************\r\n                Service Functions\r\n    ****************************************/\r\n\r\n    // Deprecated\r\n    servicePackage.set = (userId, newServicePackageArray) => {\r\n        servicePackageStorage.userId = newServicePackageArray\r\n    }\r\n\r\n    // Deprecated\r\n    servicePackage.get = (userId) => {\r\n        return servicePackageStorage.userId\r\n    }\r\n\r\n    // Deprecated\r\n    servicePackage.clear = () => {\r\n        servicePackageStorage = {}\r\n    }\r\n\r\n    // Deprecated\r\n    servicePackage.checkStorage = (userId) => {\r\n        if (servicePackageStorage.userId) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // This call wraps the getPackageServices(), getPackageClaims(), and getPackageDetails() calls\r\n    // Returns all relevant data associated with the provided packageId including its services, claims, and details\r\n    servicePackage.getPackageDetails = (packageId) => {\r\n        const defer = $q.defer()\r\n        let packageDetails = {}\r\n        let callsCompleted = 0\r\n\r\n        getPackageDetails(packageId)\r\n        .then(packageData => {\r\n            packageDetails.details = packageData\r\n        })\r\n        .finally(() => {\r\n            callsCompleted += 1\r\n            if (callsCompleted === 3) {\r\n                defer.resolve(packageDetails);\r\n            }\r\n        })\r\n\r\n        getPackageServices(packageId)\r\n        .then(packageServices => {\r\n            packageDetails.services = packageServices\r\n        })\r\n        .finally(() => {\r\n            callsCompleted += 1\r\n            if (callsCompleted === 3) {\r\n                defer.resolve(packageDetails);\r\n            }\r\n        })\r\n\r\n        getPackageClaims(packageId)\r\n        .then(packageClaims => {\r\n            packageDetails.claims = packageClaims\r\n        })\r\n        .finally(() => {\r\n            callsCompleted += 1\r\n            if (callsCompleted === 3) {\r\n                defer.resolve(packageDetails);\r\n            }  \r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    // Returns all packages for the specified userId with a pending status\r\n    servicePackage.getPersonPendingPackages = (userId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPersonPendingServicePackages({qs: [\r\n            ['requestor.id', userId],\r\n            ['requestor.type', 'person']\r\n        ]})\r\n        .done(servicePackages => {\r\n            defer.resolve(servicePackages)\r\n        })\r\n        .fail(err => {\r\n            console.error('There was an error retrieving pending service packages')\r\n            APIError.onFor(errorName + 'getPendingPackages')\r\n            defer.reject(err)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    // This call wraps the service.getPersonPendingServicesPackages() and service.getPackageDetails() calls\r\n    // Returns all relevant data for a user's pending packages\r\n    servicePackage.getAllUserPendingPackageData = (userId) => {\r\n        const defer = $q.defer()\r\n        let pendingPackageData = []\r\n\r\n        servicePackage.getPersonPendingPackages(userId)\r\n        .then(pendingPackages => {\r\n            let packageDetailCalls = []\r\n\r\n            pendingPackages.forEach(pendingPackage => {\r\n                packageDetailCalls.push(\r\n                    servicePackage.getPackageDetails(pendingPackage.servicePackage.id)\r\n                    .then(packageDetails => {\r\n                        angular.merge(pendingPackage, packageDetails)\r\n                        pendingPackageData.push(pendingPackage)\r\n                    })\r\n                )\r\n            })\r\n\r\n            $q.all(packageDetailCalls)\r\n            .then(() => {\r\n                cui.log('packageDetailCalls then', userId, pendingPackageData);\r\n                defer.resolve(pendingPackageData)\r\n            })\r\n            .catch(err => {\r\n                cui.log('packageDetailCalls catch', err);\r\n                defer.reject(err)\r\n            })\r\n        })\r\n        .catch(err => {\r\n            defer.reject(err)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    // Handles the approval/denial of a package request\r\n    // The package request must have a property of \"approval\" with either \"approved\" or \"denied\"\r\n    // If the package is denied and the package request has an optional property of \"rejectReason\", appends the reason to the payload\r\n    servicePackage.handlePackageApproval = (packageRequest) => {\r\n        let data = [['requestId', packageRequest.id]]\r\n\r\n        if (packageRequest.approval === 'approved') {\r\n            return API.cui.approvePackage({qs: data})\r\n        }\r\n        else if (packageRequest.approval === 'denied') {\r\n            if (packageRequest.rejectReason) {\r\n                data.push(['justification', packageRequest.rejectReason]);\r\n            }\r\n            return API.cui.denyPackage({qs: data})\r\n        } else {\r\n            throw new Error('Package request object must contain \"approval\" of either \"approved\" or \"denied\"');\r\n        }\r\n    }\r\n\r\n    return servicePackage\r\n\r\n})\r\n\r\nangular.module('applications',[])\r\n.config(['$stateProvider', ($stateProvider) => {\r\n\r\n    const templateBase = 'app/modules/applications/';\r\n\r\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\r\n\r\n    const loginRequired = true;\r\n\r\n    $stateProvider\r\n        .state('applications', {\r\n            url: '/applications',\r\n            template: '<div ui-view class=\"cui-applications\"></div>',\r\n            access: loginRequired,\r\n            abstract: true\r\n        })\r\n        .state('applications.myApplications', {\r\n            url: '?page&pageSize&service.category',\r\n            templateUrl: templateBase + 'myApplications/myApplications.html',\r\n            controller: returnCtrlAs('myApplications'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.myApplicationDetails', {\r\n            url: '/details/:appId',\r\n            templateUrl: templateBase + 'myApplications/myApplications-details.html',\r\n            controller: returnCtrlAs('myApplicationDetails'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.newRequest', {\r\n            url: '/request?userId',\r\n            templateUrl: templateBase + 'newRequestReview/newRequest.html',\r\n            controller: returnCtrlAs('newAppRequest'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.search', {\r\n            url: '/search?name&category&page&pageSize?userId',\r\n            templateUrl: templateBase + 'search/applicationSearch.html',\r\n            controller: returnCtrlAs('applicationSearch'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.reviewRequest', {\r\n            url: '/review?userId',\r\n            templateUrl: templateBase + 'newRequestReview/applicationReview.html',\r\n            controller: returnCtrlAs('applicationReview'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.manageApplications', {\r\n            url: '/manage?name&page&pageSize&service.category&sortBy&grant.status&service.name',\r\n            templateUrl: templateBase + 'myApplications/myApplications-manage.html',\r\n            controller: returnCtrlAs('manageApplications'),\r\n            access:loginRequired\r\n        })\r\n        // seperating out as it is a seperate icon on in menu\r\n        .state('pendingAppRequests', {\r\n            url: '/pendingAppRequests?page&pageSize&sortBy&name',\r\n            templateUrl: templateBase + 'pendingRequests/pendingRequests.html',\r\n            controller: returnCtrlAs('pendingAppRequests'),\r\n            access:loginRequired\r\n        })\r\n        /*Organization Applications*/\r\n        .state('applications.orgApplications', {\r\n            url: '/organization',\r\n            template: '<div ui-view></div>',\r\n            abstract: true,\r\n            access: loginRequired\r\n        })\r\n/*        .state('applications.orgApplications.applicationList', {\r\n            url: '?name&page&pageSize&service.category&sortBy&grant.status',\r\n            templateUrl: templateBase + 'orgApplications/applicationList/orgApplications-applicationList.html',\r\n            controller: returnCtrlAs('orgApplications'),\r\n            access: loginRequired\r\n        })\r\n        .state('applications.orgApplications.applicationDetails', {\r\n            url: '/application/:appId/details',\r\n            templateUrl: templateBase + 'orgApplications/applicationDetails/orgApplications-applicationDetails.html',\r\n            controller: returnCtrlAs('orgApplicationDetails'),\r\n            access: loginRequired\r\n        })*/\r\n        .state('applications.orgApplications.newGrant', {\r\n            url: '/application/:appId/new-grant',\r\n            templateUrl: templateBase + 'orgApplications/newGrant/orgApplications-newGrant.html',\r\n            controller: returnCtrlAs('orgAppNewGrant'),\r\n            access: loginRequired            \r\n        });\r\n/*        .state('applications.orgApplications.newRequest', {\r\n            url: '/request',\r\n            templateUrl: templateBase + 'orgApplications/appRequest/newRequest/appRequest-newRequest.html',\r\n            controller: returnCtrlAs('orgAppRequest'),\r\n            access: loginRequired\r\n        })\r\n        .state('applications.orgApplications.newRequestReview', {\r\n            url: '/request/review',\r\n            templateUrl: templateBase + 'orgApplications/appRequest/newRequestReview/appRequest-newRequestReview.html',\r\n            controller: returnCtrlAs('orgAppRequestReview'),\r\n            access: loginRequired\r\n        })\r\n        .state('applications.orgApplications.search', {\r\n            url: '/search?name&category&page&pageSize',\r\n            templateUrl: templateBase + 'orgApplications/search/orgApplications-search.html',\r\n            controller: returnCtrlAs('orgAppSearch'),\r\n            access: loginRequired\r\n        });*/\r\n}]);\r\n\r\nangular.module('applications')\r\n.controller('myApplicationDetailsCtrl', function(API, $scope, $stateParams, $state, $q, APIHelpers, Loader, APIError,DataStorage) {\r\n    let myApplicationDetails = this\r\n    myApplicationDetails.relatedApps=[]\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    const getClaims = (app) => {\r\n        const packageId = app.servicePackage.id\r\n\r\n        Loader.onFor(loaderName + 'claims')\r\n        API.cui.getPersonPackageClaims({ grantee:API.getUser(), useCuid:true, packageId })\r\n        .then(res => {\r\n            APIError.offFor(loaderName + 'claims')\r\n            myApplicationDetails.claims = res\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'claims')\r\n        })\r\n        .always(() => {\r\n            Loader.offFor(loaderName + 'claims')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    const getApp= (updating)=>{\r\n        if (!updating) {\r\n            Loader.onFor(loaderName + 'app')\r\n        }\r\n        API.cui.getPersonGrantedApps(opts)\r\n        .then(res => {\r\n            APIError.offFor(loaderName + 'app')\r\n            myApplicationDetails.app = Object.assign({}, res[0])\r\n            if (!updating) {\r\n            getClaims(myApplicationDetails.app)\r\n            getRelatedApps(myApplicationDetails.app)\r\n            }\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'app')\r\n        })\r\n        .done(() => {\r\n            Loader.offFor(loaderName + 'app')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n    const getRelatedApps=(app) => {\r\n        const packageId = app.servicePackage.id\r\n        let qs\r\n        if (app.servicePackage.parent) {\r\n            qs=[['servicePackage.id',app.servicePackage.parent.id]]\r\n        }else{\r\n            qs=[['servicePackage.parentPackage.id',app.servicePackage.id]]\r\n        }\r\n        Loader.onFor(loaderName + 'relatedApps')\r\n        let apiPromises=[\r\n        API.cui.getPersonRequestableApps({personId:API.getUser(),'qs':[['servicePackage.parentPackage.id',packageId]] }),\r\n        API.cui.getPersonGrantedApps({personId:API.getUser(),'qs':qs })\r\n        ]\r\n        $q.all(apiPromises)\r\n        .then(res=>{\r\n            APIError.offFor(loaderName + 'relatedApps')\r\n            myApplicationDetails.relatedApps=myApplicationDetails.relatedApps.concat(res[0])\r\n            myApplicationDetails.relatedApps=myApplicationDetails.relatedApps.concat(res[1])\r\n        })\r\n        .catch(err => {\r\n            APIError.onFor(loaderName + 'relatedApps')\r\n        })\r\n        .finally(()=>{\r\n            Loader.offFor(loaderName + 'relatedApps')\r\n        })\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    const loaderName = 'myApplicationDetails.'\r\n\r\n    const qs = {\r\n        'service.id': $stateParams.appId\r\n    }\r\n\r\n    const opts = {\r\n        personId: API.getUser(),\r\n        useCuid:true,\r\n        qs: APIHelpers.getQs(qs)\r\n    }\r\n    myApplicationDetails.app=DataStorage.getType('myAppDetail')\r\n    if (myApplicationDetails.app&& myApplicationDetails.app.id===$stateParams.appId) {        \r\n        getClaims(myApplicationDetails.app)\r\n        getRelatedApps(myApplicationDetails.app)\r\n        // Update application detail for any new changes during reload\r\n        // Commenting out as API is not giving full details for service.id query parameter get\r\n        //it is relying on previous page details which has full details\r\n        // getApp(true)\r\n    }\r\n    else{\r\n        getApp(false)\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\r\n\r\n    myApplicationDetails.goToDetails = (application) => {\r\n        $state.go('applications.myApplicationDetails', {\r\n            'packageId':application.packageId,\r\n            'appId':application.id\r\n        })\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('applications')\r\n.controller('manageApplicationsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\r\n    const manageApplications = this\r\n    const userId = User.user.id\r\n    const loaderName = 'manageApplications.'\r\n\r\n    let checkedLocalStorage = false\r\n\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            manageApplications.search[property] = undefined\r\n            return\r\n        }\r\n        manageApplications.search[property] = manageApplications.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    const getCountsOfStatus=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['grant.status',qsValue]]\r\n        }\r\n        API.cui.getPersonGrantedAppCount(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                manageApplications.popupCount=res;\r\n            }else if (qsValue===\"active\") {\r\n                manageApplications.activeCount=res;\r\n            }\r\n            else{\r\n                manageApplications.suspendedCount=res;\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n\r\n    const getCountsOfcategories=()=>{\r\n        manageApplications.categories.forEach((category,index)=>{\r\n            console.log($filter('cuiI18n')(category.name))\r\n            let opts = {\r\n                personId: API.getUser(),\r\n                useCuid:true\r\n            }\r\n            opts.qs=[['service.category',$filter('cuiI18n')(category.name)]]\r\n            API.cui.getPersonGrantedAppCount(opts)\r\n            .then(res=>{\r\n                category.count=res;\r\n                if (index===manageApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })\r\n            .fail(err=>{\r\n                console.log(err);\r\n                if (index===manageApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })            \r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n\r\n    const loadStoredData = () => {\r\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\r\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\r\n        const storedData = DataStorage.getType('manageApplicationsList')\r\n\r\n        if (storedData) {\r\n            Loader.onFor(loaderName + 'apps')\r\n            manageApplications.list = storedData.appList\r\n            manageApplications.count = storedData.appCount\r\n            manageApplications.categories = storedData.categories\r\n            Loader.offFor(loaderName + 'apps')\r\n        }\r\n\r\n        checkedLocalStorage = true\r\n        onLoad(false)\r\n    }\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName + 'reloadingApps')\r\n        }\r\n        else {\r\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\r\n            manageApplications.search = Object.assign({}, $stateParams)\r\n\r\n            Loader.onFor(loaderName + 'categories')\r\n            API.cui.getPersonAppCategories({personId:API.getUser()})\r\n            .then(res => {\r\n                APIError.offFor(loaderName + 'categories')\r\n                manageApplications.categories = res;\r\n                getCountsOfcategories()\r\n                APIError.offFor(loaderName + 'categories')\r\n            })\r\n            .fail(err => {\r\n                APIError.onFor(loaderName + 'categories')\r\n            })\r\n            .done(() => {\r\n                Loader.offFor(loaderName + 'categories')\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        manageApplications.search.pageSize = manageApplications.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        const opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true,\r\n            qs: APIHelpers.getQs(manageApplications.search)\r\n        }\r\n\r\n        const promises = [\r\n            API.cui.getPersonGrantedApps(opts), \r\n            API.cui.getPersonGrantedAppCount(opts)\r\n        ]\r\n\r\n        $q.all(promises)\r\n        .then(res => {\r\n            // manageApplications.list = Object.assign(res[0]).filter(x => x.hasOwnProperty('urls'))\r\n            manageApplications.count = res[1]\r\n            manageApplications.list=res[0];\r\n            // re-render pagination if available\r\n            manageApplications.reRenderPaginate && manageApplications.reRenderPaginate()\r\n\r\n            const storageData = {\r\n                appList: manageApplications.list, \r\n                appCount: manageApplications.count, \r\n                categories: manageApplications.categories\r\n            }\r\n            DataStorage.setType('manageApplicationsList', storageData)\r\n            APIError.offFor(loaderName + 'apps')\r\n        })\r\n        .catch(err => {\r\n            APIError.onFor(loaderName + 'apps')\r\n        })\r\n        .finally(() => {\r\n            if (previouslyLoaded) {\r\n                Loader.offFor(loaderName + 'reloadingApps')\r\n            } \r\n            else {\r\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\r\n            }\r\n        })\r\n        //Lazy loading of counts of applications based on status \r\n        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)\r\n\r\n\r\n    }\r\n\r\n    loadStoredData()\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    manageApplications.pageChange = (newpage) => {\r\n        manageApplications.updateSearch('page', newpage)\r\n    }\r\n\r\n    manageApplications.updateSearchByName = () => {\r\n        manageApplications.updateSearch('name',manageApplications.search['service.name'])\r\n    }\r\n    manageApplications.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name')\r\n                break\r\n            case 'date':\r\n                switchBetween('sortBy', '+grant.instant', '-grant.instant')\r\n                break\r\n            case 'status':\r\n                manageApplications.search.page = 1\r\n                manageApplications.search['grant.status'] = updateValue\r\n                break\r\n            case 'category':\r\n                manageApplications.search.page = 1\r\n                manageApplications.search['service.category'] = $filter('cuiI18n')(updateValue)\r\n                break\r\n            case 'name':\r\n                manageApplications.search.page = 1\r\n                break\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('applications.manageApplications', manageApplications.search, { notify:false })\r\n        onLoad(true)\r\n    }\r\n\r\n    manageApplications.goToDetails = (application) => {\r\n        const opts = {\r\n            appId: application.id\r\n        }\r\n        DataStorage.setType('myAppDetail',application)\r\n        $state.go('applications.myApplicationDetails', opts)\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END ---------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('applications')\r\n.controller('myApplicationsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\tconst myApplications = this\r\n    const userId = User.user.id\r\n    const loaderName = 'myApplications.'\r\n    let checkedLocalStorage = false\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n    const getCountsOfcategories=()=>{\r\n        myApplications.categories.forEach((category,index)=>{\r\n            console.log($filter('cuiI18n')(category.name))\r\n            let opts = {\r\n                personId: userId,\r\n                useCuid:true\r\n            }\r\n            opts.qs=[['service.category',$filter('cuiI18n')(category.name)]]\r\n            API.cui.getPersonGrantedAppCount(opts)\r\n            .then(res=>{\r\n                //Need to minus each category count with not displayble and other than active apps according to thier categories\r\n                category.count=res\r\n                -\r\n                (\r\n                    Object.assign(myApplications.list).filter(x => \r\n                        x.category&& $filter('cuiI18n')(x.category)===$filter('cuiI18n')(category.name)\r\n                    ).length\r\n                    -\r\n                    Object.assign(myApplications.viewList).filter(x => \r\n                            x.category&& $filter('cuiI18n')(x.category)===$filter('cuiI18n')(category.name)\r\n                    ).length\r\n                )                \r\n                if (index===myApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })\r\n            .fail(err=>{\r\n                console.log(err);\r\n                if (index===myApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })            \r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n    const loadStoredData = () => {\r\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\r\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\r\n        const storedData = DataStorage.getType('myApplicationsList')\r\n\r\n        if (storedData) {\r\n            Loader.onFor(loaderName + 'apps')\r\n            myApplications.list = storedData.appList\r\n            myApplications.viewList = Object.assign(myApplications.list).filter(x => x.servicePackage.displayable===true&&x.grant.status=='active')\r\n            myApplications.count = storedData.appCount\r\n            myApplications.categories = storedData.categories\r\n            Loader.offFor(loaderName + 'apps')\r\n        }\r\n\r\n        checkedLocalStorage = true\r\n        onLoad(false)\r\n    }\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName + 'reloadingApps')\r\n        }\r\n        else {\r\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\r\n            myApplications.search = Object.assign({}, $stateParams)\r\n\r\n            Loader.onFor(loaderName + 'categories')\r\n            API.cui.getPersonAppCategories({personId:API.getUser()})\r\n            .then(res => {\r\n                APIError.offFor(loaderName + 'categories')\r\n                myApplications.categories = res;\r\n                getCountsOfcategories()\r\n                APIError.offFor(loaderName + 'categories')\r\n            })\r\n            .fail(err => {\r\n            \tconsole.error('There was an error in fetcting user\\'s app category details ' +err)\r\n                APIError.onFor(loaderName + 'categories')\r\n            })\r\n            .done(() => {\r\n                Loader.offFor(loaderName + 'categories')\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        myApplications.search.pageSize = myApplications.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        const opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true,\r\n            qs: APIHelpers.getQs(myApplications.search)\r\n        }\r\n        opts.qs.push(['grant.status','active'])\r\n        const promises = [\r\n            API.cui.getPersonGrantedApps(opts), \r\n            API.cui.getPersonGrantedAppCount(opts)\r\n        ]\r\n\r\n        $q.all(promises)\r\n        .then(res => {\r\n            myApplications.viewList = Object.assign(res[0]).filter(x => x.servicePackage.displayable===true&&x.grant.status=='active')\r\n            if (!previouslyLoaded) {\r\n                myApplications.count = res[1]\r\n            }\r\n            myApplications.popupCount = myApplications.count-Object.assign(res[0]).filter(x => x.servicePackage.displayable!==true || x.grant.status!=='active').length\r\n            myApplications.list=res[0];\r\n            // re-render pagination if available\r\n            myApplications.reRenderPaginate && myApplications.reRenderPaginate()\r\n\r\n            const storageData = {\r\n                appList: myApplications.list, \r\n                appCount: myApplications.count, \r\n                categories: myApplications.categories\r\n            }\r\n            DataStorage.setType('myApplicationsList', storageData)\r\n            APIError.offFor(loaderName + 'apps')\r\n        })\r\n        .catch(err => {\r\n        \tconsole.error('There was an error in fetcting user\\'s granted applications ' +err)\r\n            APIError.onFor(loaderName + 'apps')\r\n        })\r\n        .finally(() => {\r\n            if (previouslyLoaded) {\r\n                Loader.offFor(loaderName + 'reloadingApps')\r\n            } \r\n            else {\r\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\r\n            }\r\n        })\r\n    }\r\n\r\n    loadStoredData()\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    myApplications.pageChange = (newpage) => {\r\n        myApplications.updateSearch('page', newpage)\r\n    }\r\n\r\n    myApplications.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'category':\r\n                myApplications.search.page = 1\r\n                myApplications.search['service.category'] = $filter('cuiI18n')(updateValue)\r\n                break\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('applications.myApplications', myApplications.search, { notify:false })\r\n        onLoad(true)\r\n    }\r\n})\r\n\r\nangular.module('applications')\r\n.controller('applicationReviewCtrl',['$scope','API','AppRequests','$timeout','$state','$q','localStorageService','$stateParams',function($scope,API,AppRequests,$timeout,$state,$q,localStorage,$stateParams) {\r\n\r\n    let applicationReview=this;\r\n    applicationReview.userId= $stateParams.userId\r\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) {\r\n        AppRequests.set(localStorage.get('appsBeingRequested'));\r\n    }\r\n\r\n    let appRequests=angular.copy(AppRequests.get());\r\n    angular.forEach(appRequests , (request) =>{\r\n        if (request.bundledApps) {\r\n            request.bundledApps.forEach(bundledApp => {\r\n                if (appRequests[bundledApp.id]) {\r\n                    delete appRequests[bundledApp.id]\r\n                }                    \r\n            })\r\n        }\r\n    })\r\n    const appsBeingRequested=Object.keys(appRequests)\r\n\r\n    if (appsBeingRequested.length===0) {\r\n        $state.go('applications.search');\r\n    }\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    applicationReview.appRequests=[];\r\n\r\n    for(let i=0; i < appsBeingRequested.length; i += 2){\r\n        const applicationGroup = [];\r\n        applicationGroup.push(appRequests[appsBeingRequested[i]]);\r\n        if (appRequests[appsBeingRequested[i+1]]) {\r\n            applicationGroup.push(appRequests[appsBeingRequested[i+1]]);\r\n        }\r\n        //get Terms And Conditions for requested packages\r\n        applicationGroup.forEach(app=>{\r\n            if (app.servicePackage.personTacEnabled) {\r\n                API.cui.getOrgTacOfPackage({packageId:app.servicePackage.id})\r\n                .then(res=>{\r\n                    app.tac=res;\r\n                })\r\n                .fail(err=>{\r\n                    console.log(\"There was an error fetching Tac\")\r\n                    console.log(err)\r\n                })\r\n            }\r\n        })\r\n        applicationReview.appRequests.push(applicationGroup);\r\n    }\r\n\r\n    applicationReview.numberOfRequests=0;\r\n    appsBeingRequested.forEach(() => {\r\n        applicationReview.numberOfRequests += 1;\r\n    });\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START ---------------------------------------------------------------------------------\r\n    let applicationRequestArray;\r\n\r\n    const requestsValid = () => {\r\n        applicationRequestArray=[];\r\n        applicationReview.attempting=true;\r\n        let error = false;\r\n        applicationReview.appRequests.forEach((appRequestGroup,i) => {\r\n\r\n            appRequestGroup.forEach((appRequest,x) => {\r\n                if (appRequest.servicePackage.reasonRequired) {\r\n                    if(!appRequest.reason || appRequest.reason===''){\r\n                        appRequest.reasonRequired=true;\r\n                        applicationReview.attempting=false;\r\n                        error=true;\r\n                    }\r\n                    else {\r\n                        appRequest.reasonRequired=false;\r\n                        applicationRequestArray[i+x] = AppRequests.buildReason(appRequest,appRequest.reason);\r\n                    }\r\n                } else {\r\n                    applicationRequestArray[i+x] = appRequest;\r\n                }\r\n            });\r\n        });\r\n        applicationReview.error = error;\r\n        if (error) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    applicationReview.submit = () => {\r\n        if (!requestsValid()) {\r\n            return;\r\n        }\r\n        const appRequests=AppRequests.getPackageRequests(applicationReview.userId,applicationRequestArray);\r\n\r\n        let requestsPromises=[];\r\n\r\n        appRequests.forEach((appRequest) => {\r\n            requestsPromises.push(API.cui.createPackageRequest({data:appRequest}))\r\n        });\r\n\r\n        $q.all(requestsPromises)\r\n        .then((res)=>{\r\n            applicationReview.attempting = false;\r\n            applicationReview.success = true;\r\n            AppRequests.clear(); // clears app requests if the request goes through\r\n            localStorage.set('appsBeingRequested',{});\r\n            $timeout(() => {\r\n                $state.go('applications.myApplications');\r\n            }, 3000);\r\n        })\r\n        .catch(() => {\r\n            applicationReview.attempting = false;\r\n            applicationReview.error = true;\r\n        });\r\n    };\r\n\r\n    applicationReview.updateSearch = (nameSearch) => {\r\n        applicationReview.search = nameSearch;\r\n    };\r\n\r\n    applicationReview.showTac= (application)=>{\r\n        if (application.tac) {\r\n            applicationReview.tacContent=application.tac.tacText\r\n            applicationReview.step=2\r\n        }\r\n    }\r\n\r\n    // Error validation\r\n    applicationReview.customError = {\r\n        email: {\r\n            email: function(){\r\n                var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n                if (applicationReview.extendedData&&applicationReview.extendedData.email) {\r\n                    return EMAIL_REGEXP.test(applicationReview.extendedData.email)\r\n                }else{\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    applicationReview.checkValidDomain = function(email) {\r\n        var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n        if (email&&EMAIL_REGEXP.test(applicationReview.extendedData.email)) {\r\n            let domain=email.slice(\r\n                applicationReview.extendedData.email.indexOf('@')+1,\r\n                applicationReview.extendedData.email.length\r\n            )\r\n            API.cui.lookupDomain({domain:domain})\r\n            .then( res => {\r\n                applicationReview.validDomain=true\r\n                $scope.$digest()\r\n            })\r\n            .fail(err =>{\r\n                console.log('Invalid mail' + err)\r\n                applicationReview.validDomain=false\r\n                $scope.$digest()\r\n            })\r\n        }\r\n    }\r\n\r\n    applicationReview.checkValidProtocol = function(protocol){\r\n        if (protocol) {\r\n            API.cui.lookupProtocol({protocol:protocol})\r\n            .then( res => {\r\n                applicationReview.validProtocol=true\r\n                $scope.$digest()\r\n            })\r\n            .fail(err =>{\r\n                console.log('Invalid mail' + err)\r\n                applicationReview.validProtocol=false\r\n                $scope.$digest()\r\n            })\r\n        }\r\n    }\r\n    // ON CLICK END -----------------------------------------------------------------------------------\r\n\r\n}]);\r\nangular.module('applications')\r\n.controller('newAppRequestCtrl',['API','$scope','$state','AppRequests','localStorageService','Loader','$pagination','APIHelpers','$stateParams',\r\nfunction(API,$scope,$state,AppRequests,localStorage,Loader, $pagination,APIHelpers,$stateParams) {\r\n\r\n    let newAppRequest = this;\r\n    newAppRequest.step=\"selectCategory\"\r\n    newAppRequest.searchParams= Object.assign({}, $stateParams)\r\n    newAppRequest.searchParams.pageSize= newAppRequest.searchParams.pageSize||$pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    // HELPER FUNCTIONS END ---------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ----------------------------------------------------------------------------------------\r\n\r\n    // QIMS Customization Start\r\n    if(_.find(API.user.roles, (role) => { return role===\"QI Employee Birthright\"})){\r\n        newAppRequest.step=\"selectUser\"\r\n        newAppRequest.requestBy=\"yourself\"\r\n    }\r\n\r\n\r\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) {\r\n        AppRequests.set(localStorage.get('appsBeingRequested'));\r\n    }\r\n    const appsBeingRequested = AppRequests.get();\r\n\r\n    newAppRequest.appsBeingRequested = [];\r\n    newAppRequest.numberOfRequests = 0;\r\n\r\n    Object.keys(appsBeingRequested).forEach((appId) => {\r\n        // This sets the checkboxes back to marked when the user clicks back\r\n        newAppRequest.numberOfRequests += 1;\r\n        newAppRequest.appsBeingRequested.push(appsBeingRequested[appId]);\r\n    });\r\n\r\n    API.cui.getCategories()\r\n    .then((res)=>{\r\n        newAppRequest.categories = res;\r\n        newAppRequest.loadingDone = true;\r\n        $scope.$digest();\r\n    })\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -----------------------------------------------------------------------\r\n\r\n    newAppRequest.searchCallback = function(searchWord) {\r\n        $state.go('applications.search', {name: searchWord , userId:newAppRequest.userId});\r\n    };\r\n\r\n    newAppRequest.updateSearchParams = (page) => {\r\n        Loader.onFor('newAppRequest.userList')\r\n        newAppRequest.searchParams.page=page\r\n        API.cui.getPersons({qs: APIHelpers.getQs(newAppRequest.searchParams)})\r\n        .then(res => {\r\n            _.remove(res,{id:API.user.id})\r\n            newAppRequest.userList=res\r\n            Loader.offFor('newAppRequest.userList')\r\n            $scope.$digest()\r\n        })\r\n        .fail( err => {\r\n            console.log('There was an error fetching persons'+ err)\r\n            Loader.offFor('newAppRequest.userList')\r\n        }) \r\n    }\r\n\r\n    newAppRequest.userClick= (user) => {\r\n        newAppRequest.step=\"selectCategory\"\r\n        newAppRequest.searchParams.userId=user.id\r\n        newAppRequest.userId=user.id\r\n        $state.transitionTo('applications.newRequest', newAppRequest.searchParams, {notify:false})\r\n    }\r\n\r\n    newAppRequest.updateSearchByEmailCallback = () => {\r\n        newAppRequest.updateSearchParams(1)\r\n    }\r\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------\r\n\r\n    // WATCHERS---------------------------------------------\r\n\r\n    $scope.$watch(\"newAppRequest.requestBy\", (newValue) => {\r\n        if (newValue&&newValue==='others') {\r\n            if (!newAppRequest.userList) {\r\n                // Loader.onFor('newAppRequest.userList')\r\n                API.cui.countPersons()\r\n                .then(count => {\r\n                    newAppRequest.userCount=count\r\n                    newAppRequest.updateSearchParams(1)\r\n                })\r\n                .fail( err => {\r\n                    console.log('There was an error fetching persons'+ err)\r\n                })\r\n            }\r\n            else{\r\n                Loader.offFor('newAppRequest.userList')\r\n            }\r\n        }\r\n    }, true)\r\n}]);\r\n\r\nangular.module('applications')\r\n.controller('pendingAppRequestsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\r\n\tconst pendingAppRequests = this\r\n    const loaderName = 'pendingAppRequests.'\r\n\r\n    let checkedLocalStorage = false\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            pendingAppRequests.search[property] = undefined\r\n            return\r\n        }\r\n        pendingAppRequests.search[property] = pendingAppRequests.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    // HELPER FUNCTIONS END ---------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n    \r\n    const loadStoredData = () => {\r\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\r\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\r\n        const storedData = DataStorage.getType('pendingAppRequestsList')\r\n\r\n        if (storedData) {\r\n            Loader.onFor(loaderName + 'apps')\r\n            pendingAppRequests.list = storedData.appList\r\n            // Pagination not supported now \r\n            // pendingAppRequests.count = storedData.appCount\r\n            Loader.offFor(loaderName + 'apps')\r\n        }\r\n\r\n        checkedLocalStorage = true\r\n        onLoad(false)\r\n    }\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName + 'reloadingApps')\r\n        }\r\n        else {\r\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\r\n            pendingAppRequests.search = Object.assign({}, $stateParams)\r\n        }\r\n        // Pagination not supported now \r\n        // pendingAppRequests.search.pageSize = pendingAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        const opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true,\r\n            qs: APIHelpers.getQs(pendingAppRequests.search)\r\n        }\r\n\r\n        const promises = [\r\n            API.cui.getPersonPendingApps(opts) \r\n            // Pagination not supported now \r\n            // API.cui.getPersonGrantedAppCount(opts)\r\n        ]\r\n\r\n        $q.all(promises)\r\n        .then(res => {\r\n        \t// Pagination not supported now \r\n            // pendingAppRequests.count = res[1]\r\n            pendingAppRequests.list=res[0];\r\n            // re-render pagination if available\r\n            // Pagination not supported now\r\n            // pendingAppRequests.reRenderPaginate && pendingAppRequests.reRenderPaginate()\r\n\r\n            const storageData = {\r\n                appList: pendingAppRequests.list\r\n                // appCount: pendingAppRequests.count, \r\n            }\r\n            DataStorage.setType('pendingAppRequestsList', storageData)\r\n            APIError.offFor(loaderName + 'apps')\r\n        })\r\n        .catch(err => {\r\n        \tconsole.error('There was an error in fetcting user\\'s pending applications ' +err)\r\n            APIError.onFor(loaderName + 'apps')\r\n        })\r\n        .finally(() => {\r\n            if (previouslyLoaded) {\r\n                Loader.offFor(loaderName + 'reloadingApps')\r\n            } \r\n            else {\r\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\r\n            }\r\n        })\r\n    }\r\n\r\n    loadStoredData()\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    pendingAppRequests.pageChange = (newpage) => {\r\n        pendingAppRequests.updateSearch('page', newpage)\r\n    }\r\n\r\n    pendingAppRequests.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name')\r\n                break\r\n            case 'date':\r\n                switchBetween('sortBy', '+requestedDate', '-requestedDate')\r\n                break\r\n            case 'name':\r\n                // Pagination not supported now \r\n                // myApplications.search.page = 1\r\n                pendingAppRequests.search['name'] = updateValue\r\n                break\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('pendingAppRequests', pendingAppRequests.search, { notify:false })\r\n        onLoad(true)\r\n    }\r\n\r\n    pendingAppRequests.searchCallback= (searchWord) => {\r\n        pendingAppRequests.updateSearch('name',searchWord)\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------------\r\n})\r\nangular.module('applications')\r\n.controller('applicationSearchCtrl',['API','$scope','$stateParams','$state','AppRequests','localStorageService','$q','$pagination', function (API,$scope,$stateParams,$state,AppRequests,localStorage,$q,$pagination) {\r\n    let applicationSearch = this;\r\n    applicationSearch.userId=$stateParams.userId\r\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) { // If there's nothing in app memory and there's something in local storage\r\n        AppRequests.set(localStorage.get('appsBeingRequested'));\r\n    }\r\n    applicationSearch.packageRequests = AppRequests.get();\r\n    applicationSearch.appCheckbox = {};\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const processNumberOfRequestedApps = (pkgRequest) => {\r\n        if (pkgRequest) {\r\n            applicationSearch.numberOfRequests += 1;\r\n        } else {\r\n            applicationSearch.numberOfRequests -= 1;\r\n        }\r\n    };\r\n\r\n    const updateViewList = (list) => {\r\n        let deferred= $q.defer()\r\n        applicationSearch.viewList=[]\r\n        let qs=[]\r\n        let apiPromises = []\r\n        angular.forEach(list, (app,parentIndex) => {\r\n            // Child App and Parent app requested by user\r\n            if(app.servicePackage.parent&&app.relatedApps){\r\n                let flag=false\r\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\r\n                    if (_.find(list,{id:realtedApp.id})) {\r\n                        flag=true\r\n                    }\r\n                    else{\r\n                        qs.push(['service.id',realtedApp.id])\r\n                    }\r\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\r\n                        apiPromises.push(API.cui.getPersonRequestableApps({personId:applicationSearch.userId,qs:qs}))\r\n                        qs=[]\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                applicationSearch.viewList.push(app)\r\n            }\r\n        })\r\n        $q.all(apiPromises)\r\n        .then(res => {\r\n            angular.forEach(res, (app) => {\r\n                if (applicationSearch.search.name) {\r\n                    app[0].expanded=true\r\n                }\r\n                applicationSearch.viewList.push(...app)\r\n                applicationSearch.list.push(...app)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"There was an error loading parent requestable apps\")\r\n                deferred.reject(err)\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    const updateViewListForUSUsers = () => {\r\n        if (applicationSearch.person.addresses[0].country!=='US') {\r\n            _.remove(applicationSearch.viewList,{id:'2757598184'})\r\n        }\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if(previouslyLoaded) {\r\n            applicationSearch.doneReloading = false;\r\n        }\r\n        else { // pre populate fields based on state params on first load\r\n            let numberOfRequests = 0;\r\n            Object.keys(applicationSearch.packageRequests).forEach(function(appId) { // Gets the list of package requests saved in memory\r\n                // This sets the checkboxes back to marked when the user clicks back after being in request review\r\n                applicationSearch.appCheckbox[appId] = true;\r\n                numberOfRequests += 1;\r\n            });\r\n            applicationSearch.numberOfRequests = numberOfRequests;\r\n\r\n            applicationSearch.search = {};\r\n            applicationSearch.search.name = $stateParams.name;\r\n            applicationSearch.search.category = $stateParams.category;\r\n            applicationSearch.search.page = parseInt($stateParams.page, 10);\r\n            applicationSearch.search.pageSize = parseInt($stateParams.pageSize, 10);\r\n        }\r\n\r\n        let query = [];\r\n        if (applicationSearch.search.name) {\r\n            query.push(['service.name',applicationSearch.search.name]);\r\n        }\r\n        if (applicationSearch.search.category) {\r\n            query.push(['service.category',applicationSearch.search.category]);\r\n        }\r\n\r\n        applicationSearch.search.pageSize = applicationSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n        query.push(['pageSize',String(applicationSearch.search.pageSize)]);\r\n\r\n        applicationSearch.search.page = applicationSearch.search.page || 1;\r\n        query.push(['page',String(applicationSearch.search.page)]);\r\n\r\n        let opts = {\r\n            personId: applicationSearch.userId,\r\n            qs: query\r\n        };\r\n\r\n        const promises = [API.cui.getPersonRequestableApps(opts),API.cui.getPersonRequestableCount(opts)];\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n             applicationSearch.list = res[0];\r\n             applicationSearch.count = res[1];\r\n             updateViewList(res[0])\r\n             .then(() =>{\r\n                updateViewListForUSUsers()\r\n                applicationSearch.doneReloading = applicationSearch.doneLoading = true;\r\n             })\r\n        });\r\n    };\r\n    API.cui.getPerson({personId:applicationSearch.userId})\r\n    .then(res => {\r\n        applicationSearch.person=res\r\n        onLoad(false)\r\n    })\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -----------------------------------------------------------------------\r\n\r\n    applicationSearch.pageChange = (newpage) => {\r\n        applicationSearch.updateSearch('page',newpage);\r\n    };\r\n\r\n    applicationSearch.updateSearch = function(updateType,updateValue) {\r\n        if (updateType!=='page'){\r\n            applicationSearch.search.page = 1;\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('applications.search', applicationSearch.search, {notify:false});\r\n        onLoad(true);\r\n    };\r\n\r\n    applicationSearch.toggleRequest = function(application) {\r\n        if (!applicationSearch.packageRequests[application.id]) {\r\n            applicationSearch.packageRequests[application.id] = application;\r\n        } else {\r\n            delete applicationSearch.packageRequests[application.id];\r\n        }\r\n        localStorage.set('appsBeingRequested',applicationSearch.packageRequests);\r\n        processNumberOfRequestedApps(applicationSearch.packageRequests[application.id]);\r\n    };\r\n\r\n    applicationSearch.saveRequestsAndCheckout = function() {\r\n        let qs = []\r\n        //needed to set a flag for related apps to display in review page\r\n        angular.forEach(applicationSearch.packageRequests,(request)=>{\r\n            if (request.relatedApps) {\r\n                request.relatedAppSelectedCount=0\r\n                request.relatedApps.forEach(relatedApp=>{\r\n                    if(_.find(applicationSearch.packageRequests,{id:relatedApp.id})){\r\n                        relatedApp.selected=true\r\n                        request.relatedAppSelectedCount++\r\n                    }\r\n                    else{\r\n                        relatedApp.selected=false\r\n                    }\r\n                })\r\n            }\r\n            // If Selected Related app full details not available need to fetch it\r\n            if (!request.servicePackage) {\r\n                qs.push(['service.id',request.id])\r\n            }\r\n        })\r\n        if (qs.length!==0) {\r\n            API.cui.getPersonRequestableApps({personId:applicationSearch.userId,qs:qs})\r\n            .then(res => {\r\n                res.forEach(app =>{\r\n                    applicationSearch.packageRequests[app.id] = app\r\n                })\r\n                AppRequests.set(applicationSearch.packageRequests);\r\n                $state.go('applications.reviewRequest',{userId:applicationSearch.userId});\r\n            })\r\n        }\r\n        else{\r\n            AppRequests.set(applicationSearch.packageRequests);\r\n            $state.go('applications.reviewRequest',{userId:applicationSearch.userId});\r\n        }\r\n    };\r\n\r\n    //Related apps will always appear inside body, So need to select parent if it is selected \r\n    applicationSearch.checkRelatedAppsBody= function(relatedApp, parent){\r\n        if (_.find(applicationSearch.list,{id:relatedApp.id})) {\r\n            applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:relatedApp.id}))\r\n        }\r\n        else{\r\n            applicationSearch.list.push(relatedApp)\r\n            applicationSearch.toggleRequest(relatedApp)\r\n        }           \r\n        applicationSearch.checkRelatedAndBundledApps(_.find(applicationSearch.list,{id:relatedApp.id}),parent)\r\n    };\r\n\r\n    //Deselect Child apps If it has any and select parent if checked from parent body \r\n    applicationSearch.checkRelatedAndBundledApps=function(application,parent){\r\n        //if unchecked the checkbox\r\n        if (!applicationSearch.packageRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!parent) {\r\n                application.relatedApps&&application.relatedApps.forEach((relatedApp)=>{\r\n                    if (applicationSearch.appCheckbox[relatedApp.id]) {\r\n                        applicationSearch.appCheckbox[relatedApp.id]=!applicationSearch.appCheckbox[relatedApp.id]\r\n                        applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:relatedApp.id}))\r\n                    }\r\n                })\r\n                applicationSearch.checkBundledApps(application,false)\r\n            }      \r\n        }else{\r\n            if (parent) {\r\n                if (!applicationSearch.appCheckbox[parent.id]) {\r\n                    applicationSearch.appCheckbox[parent.id]=true\r\n                    applicationSearch.toggleRequest(parent)\r\n                    applicationSearch.checkBundledApps(parent,true)\r\n                }\r\n            }else\r\n            applicationSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    applicationSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                applicationSearch.appCheckbox[bundledApp.id]=check\r\n                if (_.find(applicationSearch.list,{id:bundledApp.id}))\r\n                    applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:bundledApp.id}))\r\n            })\r\n        }\r\n    }\r\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------\r\n\r\n}]);\r\n\r\nangular.element(document).ready(function () {\r\n\tangular.module('app',['common','misc','registration','applications','organization','user','ngAnimate']);\r\n\r\nangular.module('app')\r\n.config(['$urlRouterProvider', ($urlRouterProvider)  => {\r\n\r\n    // Fixes infinite digest loop with ui-router (do NOT change unless absolutely required)\r\n    $urlRouterProvider.otherwise(($injector) => {\r\n      const $state = $injector.get('$state');\r\n      $state.go('welcome');\r\n    });\r\n\r\n}]);\r\n\r\n    angular.bootstrap(document, ['app']);\r\n});\r\n\t\r\n\t})\r\n})(angular, $);\r\n"]}