{"version":3,"sources":["app.js"],"names":["angular","$","appConfig","packageJson","i18nPackageJson","get","then","configData","Object","assign","envConfigData","packageJsonData","languageResources","dependencyOrigin","undefined","i18nPackageJsonData","always","module","config","$stateProvider","templateBase","returnCtrlAs","name","asPrefix","toUpperCase","slice","length","loginRequired","state","url","template","access","templateUrl","controller","Loader","User","$scope","API","APIError","$filter","$pagination","$q","$state","$stateParams","appGrantHistory","scopeName","search","page","paginationPageSize","getUserValue","getPaginationOptions","pageSize","searchBy","pageGrantedChange","newpage","updateSearch","updateType","updateValue","switchBetween","queryParams","String","sortBy","push","status","eventType","opts","personId","user","id","qs","transitionTo","notify","console","log","grantedHistory","cui","getPersonApplicationsGrantHistory","res","$digest","fail","onFor","err","property","firstValue","secondValue","getCountsOfStatus","qsValue","getUser","useCuid","popupGrantedCount","activeCount","suspendedCount","getPersonApplicationsGrantHistoryCount","count","offFor","$apply","appRequestHistory","pageChange","requestedHistory","getPersonApplicationsRequestHistory","getCountsOfApproved","popuprequestedCount","yesCount","noCount","getPersonApplicationsRequestHistoryCount","UserHistory","userHistory","injectUI","lastLogin","lastLoginDate","userName","initUserHistory","merge","UserProfile","userProfile","maskAnswers","inputType","updateUIMasking","initUserProfile","organization","$timeout","userRoles","grantedHistoryError","getRolesDetailsError","appCheckbox","handleError","loading","init","success","getPersonRolesOnly","rolesDetails","initiGrantable","getPersonRolesGrantable","rolesGrantable","assignRoles","roles","forEach","dsd","appId","test","rolesSubmitData","assignPersonRoles","data","rolessubmitError","$watch","n","key","appCheckboxValid","menu","desktop","mobile","localStorageService","Registration","LocaleService","$window","Base","userInvited","encodedString","btoa","inviteId","pin","applications","userLogin","numberOfSelected","submitError","languages","showOrgInfo","selected","d","Date","tz","toTimeString","lang","navigator","language","userLanguage","indexOf","browserPreference","initializing","addresses","streets","phones","keys","index","values","_","find","initInvitedRegistration","questions","securityQuestions","splice","numberOfQuestionsFloor","Math","floor","challengeQuestions1","challengeQuestions2","question1","question2","invitationData","email","restrictEmail","emailRe","catch","error","responseJSON","apiMessage","go","updateNumberOfSelected","checkboxValue","process","updateSelected","application","packageId","showTac","getAppicationTaC","processedSelected","app","tac","getTac","checkTacFlag","selectedApplications","TacCount","tacContent","tacText","step","oldSelected","i","split","acceptedTos","submit","submitting","registrationData","profile","login","userCountry","requestReason","reason","invitedSubmit","errorMessage","selectOrganization","grants","appCount","list","servicePackage","flagObject","preSelectApps","appsFoundFlag","subappsFoundFlag","getAllOrgApps","passwordRules","selectAndUpdateFlags","flags","personTacEnabled","bundledApps","appList","bundledAppFlags","subappFlags","subPackage","subPackages","iteration","flag","iterationOut","countOut","subpackage","deferred","defer","tempAllApps","tempAppsCount","apiPromises","getOrgAppsByPage","all","resolve","promise","updatingApps","a","set","checkDuplicateEmail","value","isEmailTaken","customErrors","usernameTaken","isUsernameTaken","EMAIL_REGEXP","answersMatch","challengeAnswer2","challengeAnswer1","inlineEdit","firstName","isDefined","firstNameError","required","noSaveFirstName","lastName","lastNameError","noSaveLastName","EMAIL_REGXP","emailError","noSaveEmail","country","countryError","noSaveCountry","address1","address1Error","noSaveAddress1","telephone","telephoneError","noSaveTelephone","userId","userIdError","noSaveUserId","challengeAnswer1Error","noSaveChallengeAnswer1","challengeAnswer2Error","noSaveChallengeAnswer2","updateFirstNameError","given","updateLastNameError","surname","updateEmailError","updateCountryError","updateAddress1Error","updateTelephoneError","number","updateUserIdError","username","updateChallengeAnswer1Error","updateChallengeAnswer2Error","$http","userWalkup","orgPaginationSize","appPaginationSize","checkOrUncheckBundledApps","bundledApp","filter","walkupSubmit","initiateNonce","getPublicPkgs","publicRegApps","submitPublic","captchaEntryError","string","captchaOnload","join","captchaEntry","method","headers","extended","medicalLicence","studyList","successCallback","response","errorCallback","appReRenderPaginate","orgPaginationPageHandler","newPage","updatingOrgs","getOrgsByPageAndName","orgPaginationCurrentPage","organizationList","appPaginationPageHandler","appPaginationCurrentPage","alpha","Array","random","b","c","e","f","g","code","reload","ValidCaptcha","string1","removeSpaces","document","getElementById","string2","abstract","permittedLogic","accessByAnyAdmin","views","grantAppToUserLogic","grantAppToOrgLogic","orgAdminLogic","DataStorage","orgAppRequest","orgAppsBeingRequested","getType","loaderName","stateParamsOrgId","numberOfOrgRequests","getOrgAppCategories","organizationId","categories","searchCallback","searchWord","BuildPackageRequests","AppRequests","orgAppRequestReview","orgId","appRequests","appsBeingRequested","applicationGroup","organizationTacEnabled","getOrgTacOfPackage","numberOfRequests","removeApplicationRequest","requestId","deleteType","setType","requestArray","appRequestGroup","appRequest","x","clear","nameSearch","APIHelpers","Sort","orgApplicationDetails","serviceId","sortFlag","checkIfRequestable","relatedAppsArray","getOrganizationRequestableApps","requestable","getGrantArrayData","grantArray","promises","grant","getPerson","grantee","person","getOrganization","getPersonPackageClaims","claims","packageClaims","grantList","getOrganizationGrantedApps","relatedApps","sort","sortValue","listSort","userList","parseGrantUsersByStatus","unparsedGrantList","filteredGrantUsers","newGrants","switchDivision","getGrants","requestRelatedApp","service","requestor","type","postRequest","mobileTabs","tab","bundled","related","suspendApplication","suspendObj","owningOrganization","realm","suspendOrgPkg","suspendError","organizationApplications","getPackageServices","ArrayOfPackages","services","onLoad","previouslyLoaded","category","refine","parseInt","getOrganizationGrantedCount","reRenderPaginate","loadingError","updateSearchByName","goToDetails","orgAppSearch","packageRequests","processNumberOfRequestedApps","pkgRequest","updateViewList","viewList","parentIndex","parent","realtedApp","getOrganizationsRequestableApps","expanded","reject","query","getOrganizationRequestableCount","toggleRequest","saveRequestsAndCheckout","request","relatedAppSelectedCount","relatedApp","getPersonRequestableApps","checkRelatedAppsBody","checkRelatedAndBundledApps","checkBundledApps","check","orgDetails","prevState","params","mobileHandler","profileUsersSwitch","appsHierarchySwitch","orgDetailsApps","orgDetailsHierarchy","pageLoader","addExpandedProperty","childOrgs","parentOrg","org","children","getOrganizationHierarchy","done","organizationHierarchy","goToOrgPrfile","toggleExpand","object","Organization","orgDetailsProfile","orgPromise","initOrganizationProfile","passwordPolicy","authenticationPolicy","securityAdmins","admins","CuiMobileNavFactory","UserList","orgDetailsUsers","getUserListAppCount","getPersonGrantedAppCount","initDirectory","apiCalls","getUsers","getQs","getUserCount","users","userCount","statusData","getCollectionValuesAndCount","setTitle","reRenderPagination","finally","sortingCallbacks","sortType","order","orderBy","updateSearchParams","actionCallbacks","refineType","hasOwnProperty","userClick","clickedUser","stateOpts","getOrgMembers","userAppDetails","dropDown","suspend","unsuspend","remove","getClaims","userClaims","getPackageClaims","getFormattedClaimData","claimSelection","packageClaim","claimId","grantedClaim","claimValues","claimValueId","claimValue","getApp","updating","getPersonGrantedApps","getRelatedApps","concat","buildData","suspendReason","unsuspendReason","justification","buildClaimData","buildPackageClaims","claimsObject","toggleDropDown","suspendApp","suspendPersonApp","suspendAppSuccess","unsuspendApp","unsuspendPersonApp","unsuspendAppSuccess","removeApp","revokePersonApp","removeAppSuccess","modifyClaims","grantClaims","modifyClaimsSuccess","userDetails","profileRolesSwitch","appsHistorySwitch","getPersonPassword","password","passwordAccount","getPasswordPolicy","policyId","rules","rule","numberOfPasswords","begun","specifyPassword","resetPassword","reset","confirm","encodeURIComponent","suspendPerson","cancel","unsuspendPerson","resetPersonPassword","resetPasswordValue","errorTimer","passwordHistoryError","newPassword","newPasswordConfirm","validate","formObject","input","validSwitch","isValidBoolean","validNewPassword","validNewPasswordRe","validateData","operations","validatePassword","validPasswordHistory","isPassed","$setValidity","specifyPersonPassword","subject","expirePersonPassword","passwordPolicyId","authenticationPolicyId","unlockUser","unlockPersonPassword","stutus","updatePerson","unlockUserSuccess","userDetailsApps","pendingService","grantedApp","getPersonPendingServicePackages","pendingServicePromises","getCategories","appCategories","userDetailsHistory","sortClicked","getPersonStatusHistory","personStatusHistory","userDetailsProfile","userDetailsRoles","getPersonRoles","assignedRoles","orgDirectory","orgHierarchy","storedData","updateOrgChildren","orgs","toggleAll","toggleFlag","updateFlag","division","sendInvitationError","userSelectedOrg","originalObject","organizationHierarchyRoot","array","text","loader","storedDatas","sendInvitation","validEmails","emailAddressError","emailArray","emailAddress","createOrgDivisionInvitation","selectOrgFromList","goToOrg","tlo","createOrgCompanyInvitation","createPersonInvitation","orgProfile","factory","newGrant","newGrantsInStorage","updateStorage","storageType","pullFromStorage","scope","resourceId","packagesBeingRequested","packages","applicationCheckbox","reduce","packageCheckbox","requests","package","claimGrants","packageRequestObject","pkgId","packageGrants","version","NewGrant","newGrantClaims","loaderType","appsBeingRequestedforPopup","copy","administratorRights","claim","claimsPromises","map","grantPersonPackage","claimsData","claimData","searchType","categoryError","optsParser","unparsedCategory","goToClaimSelection","newGrantSearch","searchUpdate","queryArray","queryOptions","getPersonGrantableCount","getPersonGrantableApps","applicationList","grantableAppsError","payload","storedRequests","stateParams","newOrgGrantClaims","grantOrganizationPackage","newOrgGrant","newOrgGrantSearch","getOrganizationGrantableCount","getOrganizationGrantableApps","orgAppRequests","foundOrgs","foundPersons","foundPackages","qsArray","getOrg","Deferred","dfr","cached","getOrganizationSecured","getPackage","pkg","p","context","retriveOrgPendingApps","calls","each","pkgReq","creator","personData","packageData","isEmpty","when","apply","getPackageRequestsCount","orgAppRequestsCount","administrator","submitted","orgRegistrationRequests","start","window","performance","now","end","getOrgRegistrationRequests","regReq","registrant","getOrgRegistrationRequestsCount","orgRegistrationRequestsCount","time","organizationName","ServicePackage","organizationAppRequest","getAllDetails","getPackageDetails","reviewApprovals","organizationAppRequestReview","handleSuccess","requestData","handlePackageApproval","organizationRequest","requestedPackage","organizationRequestReview","approvedCount","deniedCount","getApprovalCounts","approval","denyOrgRegistrationRequest","rejectReason","approveOrgRegistrationRequest","approveOrganizationRequests","packageRequestCalls","packageRequest","pendingRequests","getAllUserPendingPackageData","storageData","submitCalls","pendingRequestsReview","goBack","PersonRequest","personRequest","userRegistrationRequestsCount","completePackageData","getPersonRegistrationRequestData","approvePersonRegistrationRequest","personRequestReview","denyPersonRegistrationRequest","approvePersonRequest","usersAppRequests","getPackageRequests","userAppRequestsCount","title","usersRegistrationRequests","searchByOrg","searchByPerson","val","getRegistrationRequests","getRegistrationRequestsCount","searchValue","getOrganizations","getPersons","orgRoles","globalSearch","currentParentOrg","timer","searchOrgId","searchterms","pageError","flattenOrgHierarchy","organizationArray","flatArray","flatten","childDivision","Error","addPerson","newPerson","add","searchNow","searchOrPage","searchParams","qsArrayNameSearch","countPersons","personCount","noRecords","orgsResponse","handleAll","accessToSecurityAndExchangeAdmins","orgClick","clickedOrd","$translateProvider","$locationProvider","$urlRouterProvider","$injector","localStorageServiceProvider","$cuiIconProvider","$cuiI18nProvider","$paginationProvider","$compileProvider","$cuiResizeHandlerProvider","$location","path","hasTrailingSlash","newPath","substr","setPrefix","customDependency","customDependencyName","dependencyType","customDependencyVersion","replace","setLocaleCodesAndNames","languageKeys","getLocaleCodesAndNames","returnRegisterAvailableLanguageKeys","languageKey","useLoader","registerAvailableLanguageKeys","uniformLanguageTag","determinePreferredLanguage","fallbackLanguage","setLocalePreference","iconSets","iconSet","defaultViewBox","paginationOptions","setPaginationOptions","breakpointOption","setBreakpoint","debugInfoEnabled","run","$rootScope","$templateCache","$cuiI18n","routing","evalRouteRequest","Menu","$cuiIcon","PubSub","Theme","CuiRouteHistoryFactory","cuiApiInterceptor","cuiApiInterceptorConfig","apiUris","serviceUrl","stopIfInvalidPayload","debugServiceUrl","interceptors","interceptor","languageNameObject","LanguageKey","setLocales","$on","event","toState","toParams","fromState","fromParams","clearAll","preventDefault","attachAccessInfo","isObject","getRoles","entitlements","getEntitlements","publish","handleStateChange","route","userInfo","setUser","authenticateUser","redirect","initApi","stateStack","routeTextArray","uiroute","uirouteparams","getIconSets","iconSettings","namespace","cache","base","pendingNotificationFlag","charAt","toLowerCase","directive","$animate","restrict","link","attrs","elem","enabled","defaultTitle","getTitle","newTitle","getDefaultTitle","setDefaultTitle","newDefaultTitle","showIf","links","activeTitle","label","currentState","current","close","toggle","pubSubSubscription","subscribe","unsubscribe","routes","truncate","idx","transclude","closeAfter","onClose","$parse","require","element","ctrl","checkIfUnique","$eval","unique","$viewValue","newValues","oldValues","equals","CustomAPI","authInfo","myCUI","populateUserInfo","info","redirectOpts","roleList","entitlementList","cuid","getPersonEntitlements","setRoles","privilegeName","setEntitlements","setLocaleByDisplayName","getOrganizationWithAttributes","getNotificationDetails","canGrantAppToUser","getPersonPendingApps","pendingApps","totalCount","jwtAuthHandler","covAuth","originUri","authRedirect","location","href","appRedirect","api","retryUnseured","envDefs","dataCallDefs","cuiObject","logoutUrl","logout","covLogout","setAuthHandler","solutionInstancesUrl","setServiceUrl","covAuthInfo","apiFactory","setPersonData","getPersonData","sessionInfo","getCovAuthInfo","handleCovAuthResponse","selfRedirect","setAuthInfo","newAuthInfo","SharedService","create","details","for","apiHelpers","omitBy","isUndefined","param","buildPackageRequests","arrayOfApps","numberOfApps","isArray","requestReasonRequired","_reason","_error","createPackageRequest","collection","returnAsCollection","keyValue","collectionData","asObject","dataKey","BaseExtensions","Countries","Languages","Timezones","$translate","baseFactory","apiError","countries","getLanguageCode","getCurrentLanguageCode","theme","timezones","stateName","numberOfStates","counter","stateParamsFromStack","generateHiddenPassword","permitted","isPermitted","logic","isOrgAdmin","canGrantAppToOrg","errorName","personResponse","orgResponse","GetCountries","locale","setCountries","args","getCountryByCode","countryCode","countryObject","proposedLanguage","CustomAPIExtension","cmd","cmdType","accepts","call","contentType","storage","dataStorage","initStorageIfUndefined","saveToLocaStorage","deleteUserStorage","getUserStorage","appendToType","getDataThatMatches","comparison","matches","isMatch","replaceDataThatMatches","newData","deleteDataThatMatches","getLocaleCode","snapRemote","shouldShowMobileNav","innerWidth","onresize","debounce","open","hide","show","stateMenuOptions","factoryName","getOrganizationAdmins","getOrganizationSecurityAdmins","getOrganizationPasswordPolicy","getOrganizationAuthenticationPolicy","getAuthenticationPolicy","authPolicyId","organizationProfile","callsToComplete","callsCompleted","CommonAPI","PersonAndOrgRequestFactory","getPersonRegistrationRequest","registrationResponse","getOrgRegistrationRequest","getRegistrationRequestData","registrationRequest","organizationData","handleRequestApproval","decision","approvePersonRegistration","denyPersonRegistration","personRequestFactory","self","pub","build","timezone","securityQuestionAccount","question","answer","_registrationData","InvitedSubmit","servicePackageRequest","personRealm","uniqBy","makeNonceCall","tag","result","isUsernameOrEmailTaken","defered","stringParams","valid","getSecurityQuestions","initWalkupRegistration","getOrganizationsCountNonce","organizationCount","getOrganizationsNonce","organizations","getSecurityQuestionsNonce","securedInitiate","invitationId","getOrganizationNonce","targetOrganization","submitData","postUserRegistrationNonce","packageRequestData","postPersonRequestNonce","getOrgAppsNonce","results","getOrgAppsCountNonce","getPasswordPoliciesNonce","message","toggleFor","listToSort","dateCreated","creation","activeTheme","defaultTheme","getTheme","setTheme","cssClass","getDefaultTheme","setDefaultTheme","clearActiveTheme","useDefaultTheme","setActiveDefaultTheme","getDefault","setDefault","useDefault","setActiveDefault","GetTimezones","setTimezones","getTimezoneById","timezoneById","newUser","newEntitlements","newRoles","getTodaysDate","today","dd","getDate","yyyy","getFullYear","mmm","toString","substring","initStatusHistory","getPersonDetailedStatusHistory","initPasswordChangeHistory","getPasswordCangeHistory","history","statusHistory","passwordChangeHistory","countResponse","setPhone","phone","initUser","tempUser","initSecurityQuestions","userSecurityQuestions","tempUserSecurityQuestions","allSecurityQuestions","allSecurityQuestionsDup","getSecurityQuestionAccount","numberOfQuestions","allChallengeQuestions0","allChallengeQuestions1","challengeQuestionsTexts","selectTextsForQuestions","userQuestion","initPasswordPolicy","initRegisteredDate","lastDate","activeStatusList","buildPersonPasswordAccount","currentPassword","saving","toggleOffFunctions","resetAllData","toggleAllOff","toggleOff","pushToggleOff","toggleOffObject","function","resetPasswordFields","userPasswordAccount","passwordRe","checkIfRepeatedSecurityAnswer","secQuestion","securityAnswerRepeatedIndex","findIndex","secQuestionToCompareTo","z","section","tempUserWithoutLastLogin","activatedDate","updatePassword","lifetimeError","updatePersonPassword","passwordUpdateSuccess","saveChallengeQuestions","updateSecurityQuestionAccount","validNewPasswordHistory","validNewPasswordDisallowed","validNewPasswordReHistory","validNewPasswordReDisallowed","validateDisallowed","disallowedFlag","requestorId","requestorType","appRequestsObject","newAppRequestsObject","buildReason","tempApp","arrayOfAppsBeingRequested","arrayOfPackagesBeingRequested","arrayOfPackageRequests","reasonRequired","some","servicePackageStorage","packageServices","newServicePackageArray","checkStorage","packageDetails","getPersonPendingPackages","servicePackages","pendingPackageData","packageDetailCalls","pendingPackages","pendingPackage","approvePackage","denyPackage","myApplicationDetails","manageApplications","checkedLocalStorage","popupCount","getCountsOfcategories","loadStoredData","getPersonAppCategories","myApplications","displayable","localStorage","applicationReview","validDomain","applicationRequestArray","requestsValid","attempting","requestsPromises","customError","extendedData","checkValidDomain","domain","lookupDomain","checkValidProtocol","protocol","lookupProtocol","validProtocol","newAppRequest","role","requestBy","loadingDone","updateSearchByEmailCallback","newValue","pendingAppRequests","applicationSearch","updateViewListForUSUsers","doneReloading","getPersonRequestableCount","doneLoading","ready","otherwise","bootstrap"],"mappings":"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","file":"app.js","sourcesContent":["(function(angular, $) {\r\n\r\n\tlet appConfig\r\n\tlet packageJson\r\n\tlet i18nPackageJson\r\n\r\n\t$.get('./appConfig.json')\r\n\t.then(function(configData) {\r\n\t\tappConfig = Object.assign({}, appConfig, configData)\r\n\t\treturn $.get('./appConfig-env.json')\r\n\t})\r\n\t.then(function(envConfigData) {\r\n\t\tappConfig = Object.assign({}, appConfig, envConfigData)\r\n\t\treturn $.get('./package.json')\r\n\t})\r\n\t.then(function(packageJsonData) {\r\n\t\tpackageJson = Object.assign({}, packageJson, packageJsonData)\r\n\t\tif (appConfig.languageResources.dependencyOrigin === 'cui-idm-b2x') {\r\n\t\t\treturn $.get('./node_modules/@covisint/cui-i18n/package.json')\r\n\t\t}\r\n\t\telse return undefined\r\n\t})\r\n\t.then(function(i18nPackageJsonData) {\r\n\t\tif (i18nPackageJsonData !== undefined) {\r\n\t\t\ti18nPackageJson = Object.assign({}, i18nPackageJson, i18nPackageJsonData)\t\r\n\t\t}\r\n\t})\r\n\t.always(function() {\r\n\r\nangular.module('user', [])\r\n.config(['$stateProvider', function($stateProvider) {\r\n\r\n\tconst templateBase = 'app/modules/user/';\r\n\r\n    const returnCtrlAs = function(name, asPrefix) {\r\n        return name + 'Ctrl as ' + (asPrefix? asPrefix : '') + (asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name);\r\n    };\r\n\r\n    const loginRequired = true;\r\n\r\n    $stateProvider\r\n        .state('user', {\r\n            url: '/user',\r\n            template: '<div ui-view></div>',\r\n            access:loginRequired\r\n        })\r\n        .state('user.profile', {\r\n            url: '/profile',\r\n            templateUrl: templateBase + 'profile/user-profile.html',\r\n            controller: returnCtrlAs('userProfile'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.history',{\r\n            url: '/history',\r\n            templateUrl: templateBase + 'history/user-history.html',\r\n            controller: returnCtrlAs('userHistory'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.appRequestHistory',{\r\n            url: '/appRequestHistory?name&page&pageSize&sortBy&status',\r\n            templateUrl: templateBase + 'appHistory/app-requestHistory.html',\r\n            controller: returnCtrlAs('appRequestHistory'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.appGrantHistory',{\r\n            url: '/appGrantHistory?name&page&pageSize&sortBy&status',\r\n            templateUrl: templateBase + 'appHistory/app-grantHistory.html',\r\n            controller: returnCtrlAs('appGrantHistory'),\r\n            access:loginRequired\r\n        })\r\n        .state('user.roles',{\r\n            url: '/roles',\r\n            templateUrl: templateBase + 'roles/user-roles.html',\r\n            controller: returnCtrlAs('userRoles'),\r\n            access:loginRequired\r\n        });\r\n\r\n}]);\r\n\r\nangular.module('user')\r\n.controller('appGrantHistoryCtrl', function(Loader, User, $scope, API, APIError, $filter,$pagination,$q,$state,$stateParams) {\r\n\r\n    const appGrantHistory = this\r\n    const scopeName = 'appGrantHistory.'\r\n    appGrantHistory.search = Object.assign({}, $stateParams)\r\n    appGrantHistory.search.page = appGrantHistory.search.page || 1;\r\n    appGrantHistory.paginationPageSize = appGrantHistory.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    appGrantHistory.search.pageSize = appGrantHistory.paginationPageSize;\r\n    appGrantHistory.searchBy='name'\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    appGrantHistory.pageGrantedChange = (newpage) => {\r\n        appGrantHistory.updateSearch('page', newpage)\r\n    }\r\n\r\n    appGrantHistory.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'eventdate':\r\n                switchBetween('sortBy', '+eventDate', '-eventDate')\r\n                break\r\n            case 'eventType':\r\n                switchBetween('sortBy', '+eventType', '-eventType')\r\n                break\r\n            case 'actorId':\r\n                switchBetween('sortBy', '+actorId', '-actorId')\r\n                break\r\n            case 'status':\r\n                appGrantHistory.search.page = 1\r\n                appGrantHistory.search['status'] = updateValue\r\n                break\r\n            case 'search':\r\n                if(appGrantHistory.searchBy==='name')\r\n                    appGrantHistory.search['name'] = updateValue\r\n                else\r\n                    appGrantHistory.search['eventType'] = updateValue\r\n                break\r\n\r\n        }\r\n\r\n        let queryParams = [['page', String(appGrantHistory.search.page)], ['pageSize', String(appGrantHistory.search.pageSize)]];\r\n        if(appGrantHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appGrantHistory.search['sortBy']])\r\n        if(appGrantHistory.search.status)\r\n            queryParams.push(['status',appGrantHistory.search['status']])\r\n        if(appGrantHistory.search.name)\r\n            queryParams.push(['name',appGrantHistory.search['name']])\r\n        if(appGrantHistory.search.eventType)\r\n            queryParams.push(['eventType',appGrantHistory.search['eventType']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('user.appGrantHistory', appGrantHistory.search, { notify:false })\r\n            console.log(appGrantHistory.search);\r\n             appGrantHistory.grantedHistory = [];\r\n             API.cui.getPersonApplicationsGrantHistory(opts)\r\n             .then(res => {\r\n               appGrantHistory.grantedHistory=res;\r\n                // if(appGrantHistory.grantedHistory.length>0)\r\n                //     getPkgDetailsGrant(appGrantHistory.grantedHistory);\r\n                $scope.$digest()\r\n             })\r\n             .fail(err =>{\r\n                APIError.onFor(scopeName + 'initHistory')\r\n                console.log(err)\r\n             })\r\n          //onLoadGranted(true,opts)\r\n    }\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            appGrantHistory.search[property] = undefined\r\n            return\r\n        }\r\n        appGrantHistory.search[property] = appGrantHistory.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n     const getCountsOfStatus=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['status',qsValue]]\r\n        }\r\n        API.cui.getPersonApplicationsGrantHistory(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                appGrantHistory.popupGrantedCount=res.length;\r\n                console.log(appGrantHistory.popupGrantedCount);\r\n            }else if (qsValue===\"active\") {\r\n                appGrantHistory.activeCount=res.length;\r\n                console.log(appGrantHistory.activeCount);\r\n            }\r\n            else{\r\n                appGrantHistory.suspendedCount=res.length;\r\n                console.log(appGrantHistory.suspendedCount);\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    appGrantHistory.user=User.user\r\n\r\n    let queryParams = [['page', String(appGrantHistory.search.page)], ['pageSize', String(appGrantHistory.search.pageSize)]];\r\n        if(appGrantHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appGrantHistory.search['sortBy']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n    Loader.onFor(scopeName + 'initHistory')\r\n     API.cui.getPersonApplicationsGrantHistory(opts)\r\n     .then(res => {\r\n        appGrantHistory.grantedHistory=res;\r\n        // if(appGrantHistory.grantedHistory.length>0)\r\n        //     getPkgDetailsGrant(appGrantHistory.grantedHistory);\r\n        // if(appGrantHistory.requestedHistory.length>0)\r\n        //     getPkgDetailsRequested(appGrantHistory.requestedHistory);\r\n        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)\r\n    \r\n        return API.cui.getPersonApplicationsGrantHistoryCount(opts)\r\n     })\r\n     .then(res =>{\r\n        console.log(res)\r\n        appGrantHistory.count=res\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$apply();\r\n     })\r\n     .fail(err =>{\r\n        APIError.onFor(scopeName + 'initHistory')\r\n        console.log(err)\r\n     })\r\n     .always( ()=>{\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$digest()\r\n     })\r\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n    \r\n})\r\nangular.module('user')\r\n.controller('appRequestHistoryCtrl', function(Loader, User, $scope, API, APIError, $filter,$pagination,$q,$state,$stateParams) {\r\n\r\n    const appRequestHistory = this\r\n    const scopeName = 'appRequestHistory.'\r\n    appRequestHistory.search = Object.assign({}, $stateParams)\r\n    appRequestHistory.search.page = appRequestHistory.search.page || 1;\r\n    appRequestHistory.paginationPageSize = appRequestHistory.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    appRequestHistory.search.pageSize = appRequestHistory.paginationPageSize;\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    appRequestHistory.pageChange = (newpage) => {\r\n        appRequestHistory.updateSearch('page', newpage)\r\n    }\r\n\r\n    appRequestHistory.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name')\r\n                break\r\n            case 'requesteddate':\r\n                switchBetween('sortBy', '+requestedDate', '-requestedDate')\r\n                break\r\n            case 'decisiondate':\r\n                switchBetween('sortBy', '+evaluationDate', '-evaluationDate')\r\n                break\r\n            case 'eventdate':\r\n                switchBetween('sortBy', '+eventDate', '-eventDate')\r\n                break\r\n            case 'eventType':\r\n                switchBetween('sortBy', '+eventType', '-eventType')\r\n                break\r\n            case 'actorId':\r\n                switchBetween('sortBy', '+actorId', '-actorId')\r\n                break\r\n            case 'evaluator':\r\n                switchBetween('sortBy', '+evaluatorId', '-evaluatorId')\r\n                break\r\n            case 'status':\r\n                appRequestHistory.search.page = 1\r\n                appRequestHistory.search['grant.status'] = updateValue\r\n                break\r\n        }\r\n\r\n        let queryParams = [['page', String(appRequestHistory.search.page)], ['pageSize', String(appRequestHistory.search.pageSize)]];\r\n        if(appRequestHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appRequestHistory.search['sortBy']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('user.appRequestHistory', appRequestHistory.search, { notify:false })\r\n            console.log(appRequestHistory.search);\r\n            appRequestHistory.requestedHistory = [];\r\n             API.cui.getPersonApplicationsRequestHistory(opts)\r\n             .then(res => {\r\n                appRequestHistory.requestedHistory=res;\r\n                // if(appRequestHistory.requestedHistory.length>0)\r\n                //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\r\n                $scope.$digest()\r\n             })\r\n             .fail(err =>{\r\n                APIError.onFor(scopeName + 'initHistory')\r\n                console.log(err)\r\n             })\r\n              //onLoad(true,opts)\r\n    }\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            appRequestHistory.search[property] = undefined\r\n            return\r\n        }\r\n        appRequestHistory.search[property] = appRequestHistory.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n/*\r\n     const onLoad = (previouslyLoaded,opts) => {\r\n        console.log(appRequestHistory.search);\r\n        appRequestHistory.requestedHistory = [];\r\n         API.cui.getPersonApplicationsRequestHistory({personId:User.user.id,'qs':[['sortBy',appRequestHistory.search['sortBy']]] })\r\n         .then(res => {\r\n            appRequestHistory.requestedHistory=res;\r\n            // if(appRequestHistory.requestedHistory.length>0)\r\n            //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\r\n            $scope.$digest()\r\n         })\r\n         .fail(err =>{\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            console.log(err)\r\n         })\r\n     }*/\r\n\r\n/*     const onLoadGranted = (previouslyLoaded) => {\r\n        appRequestHistory.grantedHistory = [];\r\n         API.cui.getPersonApplicationsGrantHistory({personId:User.user.id,'qs':[['sortBy',appRequestHistory.search['sortBy']]] })\r\n         .then(res => {\r\n           appRequestHistory.grantedHistory=res;\r\n            // if(appRequestHistory.grantedHistory.length>0)\r\n            //     getPkgDetailsGrant(appRequestHistory.grantedHistory);\r\n            $scope.$digest()\r\n         })\r\n         .fail(err =>{\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            console.log(err)\r\n         })\r\n     }*/\r\n\r\n     const getCountsOfStatus=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['status',qsValue]]\r\n        }\r\n        API.cui.getPersonApplicationsGrantHistory(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                appRequestHistory.popupGrantedCount=res.length;\r\n                console.log(appRequestHistory.popupGrantedCount);\r\n            }else if (qsValue===\"active\") {\r\n                appRequestHistory.activeCount=res.length;\r\n                console.log(appRequestHistory.activeCount);\r\n            }\r\n            else{\r\n                appRequestHistory.suspendedCount=res.length;\r\n                console.log(appRequestHistory.suspendedCount);\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n\r\n    const getCountsOfApproved=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['status',qsValue]]\r\n        }\r\n        API.cui.getPersonApplicationsRequestHistory(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                appRequestHistory.popuprequestedCount=res.length;\r\n                console.log(appRequestHistory.popuprequestedCount);\r\n            }else if (qsValue===\"active\") {\r\n                appRequestHistory.yesCount=res.length;\r\n                console.log(appRequestHistory.yesCount);\r\n            }\r\n            else{\r\n                appRequestHistory.noCount=res.length;\r\n                console.log(appRequestHistory.noCount);\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    appRequestHistory.user=User.user\r\n\r\n    let queryParams = [['page', String(appRequestHistory.search.page)], ['pageSize', String(appRequestHistory.search.pageSize)]];\r\n        if(appRequestHistory.search.sortBy)\r\n            queryParams.push(['sortBy',appRequestHistory.search['sortBy']])\r\n        const opts = {\r\n            personId:User.user.id,\r\n            qs: queryParams\r\n        };\r\n\r\n    Loader.onFor(scopeName + 'initHistory')\r\n     API.cui.getPersonApplicationsRequestHistory(opts)\r\n     .then(res => {\r\n        appRequestHistory.requestedHistory=res;\r\n        // if(appRequestHistory.requestedHistory.length>0)\r\n        //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\r\n/*        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)*/\r\n/*        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)*/\r\n       /* Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$apply();*/\r\n        return API.cui.getPersonApplicationsRequestHistoryCount(opts) \r\n     })\r\n     .then(res => {\r\n        appRequestHistory.count=res\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$apply();\r\n     })\r\n     .fail(err =>{\r\n        APIError.onFor(scopeName + 'initHistory')\r\n        console.log(err)\r\n     })\r\n     .always( ()=>{\r\n        Loader.offFor(scopeName + 'initHistory')\r\n        $scope.$digest()\r\n     })\r\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n    \r\n})\r\nangular.module('user')\r\n.controller('userHistoryCtrl', function(Loader, User, UserHistory, $scope) {\r\n\r\n    const userHistory = this\r\n    const scopeName = 'userHistory.'\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    UserHistory.injectUI(userHistory, $scope, User.user.id)\r\n    userHistory.user=User.user;  //give user info to userhistory\r\n    userHistory.lastLogin=User.user.lastLoginDate\r\n    userHistory.userName=User.user.name;\r\n    Loader.onFor(scopeName + 'initHistory')\r\n    UserHistory.initUserHistory(User.user.id)\r\n    .then(res => {\r\n        angular.merge(userHistory, res)\r\n        Loader.offFor(scopeName + 'initHistory')\r\n    })\r\n\r\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n    \r\n})\r\nangular.module('user')\r\n.controller('userProfileCtrl', function(Loader, User, UserProfile, $scope) {\r\n\r\n    const userProfile = this\r\n    const scopeName = 'userProfile.'\r\n    //$cuiIconProvider.iconSet('cui','node_modules/@covisint/cui-icons/dist/icons/icons-out.svg','0 0 48 48')\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    //Error handler for email inline Edit tag\r\n    //Commenting out Inline Editing changes as they might not needed\r\n    // userProfile.email=function(value){\r\n    //     let EMAIL_REGXP=/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i\r\n    //     if (!angular.isDefined(value)) {\r\n    //         userProfile.emailError={};\r\n    //     }else{\r\n    //         userProfile.emailError={\r\n    //             required: value===\"\" || !value,\r\n    //             email:!EMAIL_REGXP.test(value)\r\n    //         }\r\n    //     }\r\n    //     userProfile.noSaveEmail= value===\"\" || !value || !EMAIL_REGXP.test(value)\r\n    // }\r\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    userProfile.maskAnswers=true;\r\n    userProfile.inputType = 'password';\r\n    userProfile.updateUIMasking=function(){\r\n         if(userProfile.maskAnswers){\r\n            userProfile.inputType='password';\r\n        }\r\n        else{\r\n            userProfile.inputType='text';\r\n        }\r\n    }\r\n    \r\n    UserProfile.injectUI(userProfile, $scope, User.user.id)\r\n\r\n    Loader.onFor(scopeName + 'initProfile')\r\n\r\n    UserProfile.initUserProfile(User.user.id, User.user.organization.id)\r\n    .then(res => {\r\n        angular.merge(userProfile, res)\r\n        Loader.offFor(scopeName + 'initProfile')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('user')\r\n.controller('userRolesCtrl', function(Loader, User, UserProfile, $scope, API, APIError, $timeout, $state) {\r\n    'use strict';\r\n\r\n    const userRoles = this\r\n    const scopeName = 'userRoles.'\r\n    userRoles.user=User.user\r\n    userRoles.grantedHistoryError=false\r\n    userRoles.getRolesDetailsError=false\r\n    userRoles.appCheckbox={}\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    var handleError = function handleError(err) {\r\n        userRoles.loading = false;\r\n        $scope.$digest();\r\n        console.log('Error', err);\r\n    };\r\n\r\n    \r\n\r\n    let init = function init(){\r\n        userRoles.success=false\r\n        Loader.onFor(scopeName + 'initHistory')\r\n        API.cui.getPersonRolesOnly({personId:User.user.id})\r\n        .then(res =>{\r\n            userRoles.rolesDetails=res;\r\n            initiGrantable();\r\n        })\r\n        .fail(err =>{\r\n            Loader.offFor(scopeName + 'initHistory')\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            userRoles.getRolesDetailsError=true\r\n            initiGrantable();\r\n        })\r\n    };\r\n\r\n    let initiGrantable = function initiGrantable(){\r\n        API.cui.getPersonRolesGrantable({personId:User.user.id})\r\n            .then(res =>{\r\n                userRoles.rolesGrantable=res\r\n                Loader.offFor(scopeName + 'initHistory')\r\n                $scope.$digest()\r\n            })\r\n            .fail(err =>{\r\n                Loader.offFor(scopeName + 'initHistory')\r\n                APIError.onFor(scopeName + 'initHistory')\r\n                userRoles.grantedHistoryError=true\r\n                $scope.$digest()\r\n            })\r\n    };\r\n\r\n    init();\r\n    \r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n    userRoles.assignRoles = () =>{\r\n       let roles =[]\r\n       angular.forEach(userRoles.appCheckbox,function(dsd,appId){\r\n       /*Object.keys(userRoles.appCheckbox).forEach(function(appId) {*/\r\n           if(dsd){\r\n                let test={\r\n                \"id\":appId\r\n               }\r\n               roles.push(test)\r\n           }\r\n        });\r\n        let rolesSubmitData={\r\n        \"userId\": User.user.id,\r\n        \"roles\": roles\r\n        }\r\n        console.log(rolesSubmitData)\r\n        \r\n       Loader.onFor(scopeName + 'initHistory')\r\n        API.cui.assignPersonRoles({data:rolesSubmitData})\r\n        .then(res =>{\r\n            console.log(res)\r\n            Loader.offFor(scopeName + 'initHistory')\r\n            $scope.$digest()\r\n            userRoles.success=true\r\n             $timeout(() => {\r\n                init();\r\n            }, 3000);\r\n            \r\n        })\r\n        .fail(err =>{\r\n            Loader.offFor(scopeName + 'initHistory')\r\n            APIError.onFor(scopeName + 'initHistory')\r\n            userRoles.rolessubmitError=true\r\n            $scope.$digest()\r\n        })\r\n    }\r\n/*    userRoles.checkrequest = (roleId) =>{\r\n        if (!userRoles.selectedCheckbox[roleId]) {\r\n            userRoles.selectedCheckbox[roleId] = roleId\r\n        } else {\r\n            delete userRoles.selectedCheckbox[roleId]\r\n        }\r\n        if(Object.keys(userRoles.selectedCheckbox).length<0){\r\n            \r\n        }else{\r\n            userRoles.appCheckboxValid=true\r\n        }\r\n    }*/\r\n     $scope.$watch(\"userRoles.appCheckbox\", function(n) {\r\n       let count=0\r\n       angular.forEach(userRoles.appCheckbox,function(dsd,key){\r\n        console.log(key)\r\n        if(dsd)\r\n            count+=1\r\n       })\r\n       if(count>0){\r\n        userRoles.appCheckboxValid=true\r\n       }else{\r\n        userRoles.appCheckboxValid=false\r\n       }\r\n    }, true);\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n});\r\n\r\n\r\nangular.module('registration',[])\r\n.config(['$stateProvider', function($stateProvider) {\r\n\r\n\tconst templateBase = 'app/modules/registration/';\r\n\r\n    const returnCtrlAs = function(name, asPrefix) {\r\n        return name + 'Ctrl as ' + (asPrefix? asPrefix : '') + (asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name);\r\n    };\r\n\r\n    $stateProvider\r\n\t.state('registration', {\r\n\t\turl: '/register',\r\n        template: '<div ui-view></div>'\r\n    })\r\n    .state('registration.walkup', {\r\n        url: '/walkup',\r\n        templateUrl:templateBase + 'userWalkup/userWalkup.html',\r\n        controller: returnCtrlAs('userWalkup'),\r\n        menu: {\r\n            desktop: false,\r\n            mobile: false\r\n        }\r\n    })\r\n    .state('registration.invitation', {\r\n        url: '/invitation?inviteId&pin',\r\n        templateUrl:templateBase + 'userInvited/userInvited.html',\r\n        controller: returnCtrlAs('userInvited'),\r\n        menu: {\r\n            desktop: false,\r\n            mobile: false\r\n        }\r\n    });\r\n\r\n}]);\r\n\r\nangular.module('registration')\r\n.controller('userInvitedCtrl', function(APIError, localStorageService, Registration, $scope, $state,$q,LocaleService, $window,Base,$stateParams,$pagination,$filter) {\r\n\r\n    const userInvited = this\r\n    let encodedString = btoa($stateParams.inviteId+':'+$stateParams.pin)\r\n    userInvited.applications = {}\r\n    userInvited.userLogin = {}\r\n    userInvited.applications.numberOfSelected = 0\r\n    userInvited.submitError = false\r\n    userInvited.languages=[];\r\n    userInvited.showOrgInfo = false\r\n    userInvited.pageSize = userInvited.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    // need to initialize to avoid undefined error when preselecting apps based on invitation data\r\n    userInvited.applications.selected={}\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    //for detectig browser time\r\n    var d = new Date();\r\n    var tz = d.toTimeString();\r\n\r\n    //for detectig browser language\r\n    var lang = $window.navigator.language || $window.navigator.userLanguage;\r\n\r\n    if (lang.indexOf('en-')>=0) { userInvited.browserPreference='en'; }\r\n    else if (lang.indexOf('zh')>=0) {userInvited.browserPreference='zh'; }\r\n    else if (lang.indexOf('pl')>=0) { userInvited.browserPreference='pl'; }\r\n    else if (lang.indexOf('pt')>=0) { userInvited.browserPreference='pt'; }\r\n    else if (lang.indexOf('tr')>=0) { userInvited.browserPreference='tr'; }\r\n    else if (lang.indexOf('fr')>=0) { userInvited.browserPreference='fr'; }\r\n    else if (lang.indexOf('ja')>=0) { userInvited.browserPreference='ja'; }\r\n    else if (lang.indexOf('es')>=0) { userInvited.browserPreference='es'; }\r\n    else if (lang.indexOf('de')>=0) { userInvited.browserPreference='de'; }\r\n    else if (lang.indexOf('ru')>=0) { userInvited.browserPreference='ru'; }\r\n    else if (lang.indexOf('it')>=0) { userInvited.browserPreference='it'; }\r\n    else { \r\n        console.log(lang+ \"not supported\")\r\n        userInvited.browserPreference='en'; \r\n    }\r\n    //LocaleService.setLocaleByDisplayName(appConfig.languages[userInvited.browserPreference])\r\n    userInvited.initializing = true\r\n\r\n    if (!localStorageService.get('userInvited.user')) {\r\n        // If registration is not saved in localstorage we need to initialize \r\n        // these arrays so ng-model treats them as arrays rather than objects \r\n        userInvited.user = { addresses: [] }\r\n        userInvited.user.addresses[0] = { streets: [] }\r\n        userInvited.user.phones = []\r\n    } \r\n    else {\r\n        userInvited.user = localStorageService.get('userInvited.user');\r\n        \r\n    }\r\n\r\n    Object.keys(Base.languages).forEach(function(id,index){\r\n        userInvited.languages[index]={\r\n            id:id\r\n        }\r\n    })\r\n    Object.values(Base.languages).forEach(function(language,index){\r\n        userInvited.languages[index].name=language;\r\n    })\r\n    userInvited.user.language=_.find(userInvited.languages,{id:userInvited.browserPreference})\r\n    Registration.initInvitedRegistration(encodedString)\r\n    .then(res => {\r\n        const questions = res.securityQuestions\r\n\r\n        // Split questions to use between 2 dropdowns\r\n        questions.splice(0, 1)\r\n        const numberOfQuestionsFloor = Math.floor(questions.length / 2)\r\n\r\n        userInvited.userLogin.challengeQuestions1 = questions.slice(0, numberOfQuestionsFloor)\r\n        userInvited.userLogin.challengeQuestions2 = questions.slice(numberOfQuestionsFloor)\r\n\r\n        // Preload questions into input\r\n        userInvited.userLogin.question1 = userInvited.userLogin.challengeQuestions1[0]\r\n        userInvited.userLogin.question2 = userInvited.userLogin.challengeQuestions2[0]\r\n\r\n        // Populate organization Data\r\n        userInvited.organization = res.organization\r\n        userInvited.invitationData=res.invitationData\r\n\r\n        //Check restrict Email flag\r\n        userInvited.user.email=\"\"\r\n        if (userInvited.invitationData.restrictEmail) {\r\n            userInvited.user.email=userInvited.invitationData.email\r\n            userInvited.emailRe=userInvited.user.email\r\n        }\r\n        userInvited.initializing = false\r\n    })\r\n    .catch(error => {\r\n        console.error(error)\r\n        if (error.responseJSON && error.responseJSON.apiMessage.indexOf(encodedString)>0) {\r\n                userInvited.initializing=false\r\n                APIError.onFor('RegistrationFactory.inValidInvite')\r\n        }else{\r\n            $state.go('misc.loadError')\r\n        }\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    userInvited.applications.updateNumberOfSelected = (checkboxValue) => {\r\n        // Update the number of selected apps everytime on of the boxes is checked/unchecked\r\n        if (checkboxValue !== null) {\r\n            userInvited.applications.numberOfSelected += 1;\r\n        } else {\r\n            userInvited.applications.numberOfSelected -= 1;\r\n        }\r\n        userInvited.applications.process()\r\n    }\r\n\r\n    userInvited.applications.updateSelected = (application, checkboxValue, index) => {\r\n        if (checkboxValue === true) {\r\n            userInvited.applications.selected[index]=application.id+','+application.packageId+','+application.name+','+application.showTac\r\n            userInvited.applications.numberOfSelected += 1;\r\n        } else {\r\n            delete userInvited.applications.selected[index]          \r\n            userInvited.applications.numberOfSelected -= 1;\r\n        }\r\n    }\r\n\r\n    userInvited.getAppicationTaC = () => {\r\n        angular.forEach(userInvited.applications.processedSelected, app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true' && app.tac===undefined) {\r\n                Registration.getTac(app.packageId)\r\n                .then(res =>{\r\n                    app.tac=res;\r\n                })\r\n                .catch(err=> {\r\n                    console.log(err);\r\n                })\r\n            };\r\n        })\r\n    }\r\n\r\n    //Check TAC flag for selected applications\r\n    userInvited.checkTacFlag = (selectedApplications) => {\r\n        let TacCount=0;\r\n        angular.forEach(selectedApplications,app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true') {\r\n                TacCount++;\r\n            };\r\n        })\r\n        return TacCount\r\n    }\r\n\r\n    userInvited.showTac= (index) => {\r\n        if (userInvited.applications.processedSelected[index].tac) {\r\n            userInvited.tacContent=userInvited.applications.processedSelected[index].tac.tacText\r\n            userInvited.applications.step=3\r\n        }\r\n    } \r\n\r\n    userInvited.applications.process = () => {\r\n        // Process the selected apps when you click next after selecting the apps you need\r\n        // returns number of apps selected\r\n        let oldSelected\r\n        let index=0;\r\n        if (userInvited.applications.processedSelected) {\r\n            oldSelected = userInvited.applications.processedSelected\r\n        }\r\n\r\n        // Fixes issue where adding and removing selected apps would leave objects with null values\r\n        angular.forEach(userInvited.applications.selected, (app, i) => {\r\n            if (app === null) delete userInvited.applications.selected[i]\r\n        })\r\n\r\n        userInvited.applications.processedSelected = []\r\n\r\n        angular.forEach(userInvited.applications.selected, function(app, i) {\r\n            if (app !== null) {\r\n                userInvited.applications.processedSelected.push({\r\n                    id: app.split(',')[0],\r\n                    packageId: app.split(',')[1],\r\n                    name: app.split(',')[2],\r\n                    // this fixes an issue where removing an app from the selected list that the user \r\n                    // had accepted the terms for would carry over that acceptance to the next app on the list\r\n                    acceptedTos: ((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].acceptedTos : false),\r\n                    showTac:app.split(',')[3],\r\n                    tac:((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].tac :undefined)\r\n                })\r\n            }\r\n            index++;\r\n        })\r\n        return userInvited.checkTacFlag(userInvited.applications.processedSelected)\r\n        \r\n    }\r\n\r\n    userInvited.submit = () => {\r\n        userInvited.submitting = true\r\n        userInvited.submitError = false\r\n\r\n        const registrationData = {\r\n            profile: userInvited.user,\r\n            organization: userInvited.organization,\r\n            login: userInvited.userLogin,\r\n            applications: userInvited.applications,\r\n            userCountry: userInvited.userCountry,\r\n            requestReason:userInvited.reason\r\n        }\r\n\r\n        Registration.invitedSubmit(registrationData,encodedString,$stateParams.inviteId)\r\n        .then(() => {\r\n            userInvited.success = true\r\n            userInvited.submitting = false\r\n            $state.go('misc.success')\r\n        })\r\n        .catch(error => {\r\n            userInvited.submitError = true\r\n            userInvited.submitting = false\r\n            if (error.responseJSON) {\r\n                userInvited.errorMessage = error.responseJSON.apiMessage\r\n            }\r\n            else {\r\n                userInvited.errorMessage = 'Error submitting registration request'\r\n            }\r\n        })\r\n    }\r\n\r\n    userInvited.selectOrganization = () => {\r\n        userInvited.applications.numberOfSelected = 0 // Restart applications count\r\n        userInvited.applications.processedSelected = undefined // Restart applications selected\r\n\r\n        Registration.selectOrganization(userInvited.organization, userInvited.pageSize)\r\n        .then(res => {\r\n            const grants = res.grants\r\n            userInvited.appCount=res.appCount\r\n            if (!grants.length) userInvited.applications.list = undefined\r\n            else {\r\n                userInvited.applications.list = grants\r\n                //Preselect the applications selected by admin\r\n                if (userInvited.invitationData.servicePackage) {\r\n                    let flagObject=userInvited.preSelectApps(userInvited.applications.list,false,false)\r\n                    // Check whether we found main apps and sub apps in the current pagination\r\n                    if(flagObject.appsFoundFlag&&flagObject.subappsFoundFlag){\r\n                        userInvited.applications.process()\r\n                    }\r\n                    // application or subapplication was not retrieved in current set of pagination\r\n                    // need to retrieve all apps and pre selects them\r\n                    else{\r\n                        userInvited.getAllOrgApps(flagObject)\r\n                        .then(() =>{\r\n                            userInvited.applications.process()\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n            // userInvited.reRenderPaginate && userInvited.reRenderPaginate()\r\n            userInvited.passwordRules = res.passwordRules\r\n        })\r\n        .fail((error) => {\r\n            console.error('Error getting organization information', error)\r\n            APIError.onFor('userInvited.orgInfo', error)\r\n        })\r\n        .always(() => {\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    //Updates the selected apps and count and set the found flags\r\n    userInvited.selectAndUpdateFlags = (application, flags) => {\r\n        userInvited.applications.selected[application.id]=application.id+','+application.servicePackage.id+','+$filter('cuiI18n')(application.name)+','+application.servicePackage.personTacEnabled\r\n        flags[application.id]=true\r\n        if (application.bundledApps&&Object.keys(flags).length===1) {\r\n            application.bundledApps.forEach(app=>{\r\n                flags[app.id]=false\r\n            })\r\n        }\r\n        return flags;\r\n    }\r\n    \r\n    userInvited.preSelectApps= (appList,appsFoundFlag,subappsFoundFlag) => {\r\n        let bundledAppFlags={}\r\n        let subappFlags={}\r\n        appList.forEach(application => {\r\n            if(appsFoundFlag!==true&&userInvited.invitationData.servicePackage.id===application.servicePackage.id){\r\n                bundledAppFlags=userInvited.selectAndUpdateFlags(application,bundledAppFlags)\r\n            }\r\n            if(subappsFoundFlag!==true&&userInvited.invitationData.subPackage){\r\n                // If subpackages\r\n                if (userInvited.invitationData.subPackage.id.indexOf(',')>0) {\r\n                    // If multiple subpackages Then subPackage.id will be string like \"id1,id2,...idn\"\r\n                    let subPackages=userInvited.invitationData.subPackage.id.split(',')\r\n                    subPackages.forEach(subPackage=>{\r\n                        subappFlags[subPackage]=subappFlags[subPackage]||{}\r\n                        if (application.servicePackage.id.indexOf(subPackage)>0) {\r\n                            subappFlags[subPackage]=userInvited.selectAndUpdateFlags(application,subappFlags[subPackage])\r\n                        }\r\n                    })                    \r\n                }\r\n                else{\r\n                    // Single Subpackage\r\n                    if (application.servicePackage.id.indexOf(userInvited.invitationData.subPackage.id)>0) {\r\n                        subappFlags[userInvited.invitationData.subPackage.id]={}\r\n                        subappFlags[userInvited.invitationData.subPackage.id]=userInvited.selectAndUpdateFlags(application,subappFlags[userInvited.invitationData.subPackage.id])\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        //Check whether we found all the main apps,\r\n        let count=0\r\n        let iteration=0\r\n        angular.forEach(bundledAppFlags,function(flag){\r\n            iteration++\r\n            if (flag===false) {\r\n                count++\r\n            }\r\n            if (iteration===Object.keys(bundledAppFlags).length) {\r\n                if (count===0) {\r\n                    appsFoundFlag=true\r\n                }\r\n            }\r\n        })\r\n        //Check wether we found all the subapps,\r\n        count=0\r\n        iteration=0\r\n        let iterationOut=0\r\n        let countOut=0\r\n        angular.forEach(subappFlags,function(subpackage){\r\n            iterationOut++\r\n            if (Object.keys(subpackage).length!==0) {\r\n                angular.forEach(subpackage,function(flag){\r\n                    iteration++\r\n                    if (flag===false) {\r\n                        count++\r\n                    }\r\n                    if (iteration===Object.keys(subpackage).length) {\r\n                        if (count===0) {\r\n                            subappsFoundFlag=true\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                countOut++\r\n            }\r\n            if (iterationOut===Object.keys(subappFlags).length) {\r\n                if (countOut===0) {\r\n                    subappsFoundFlag=true\r\n                }\r\n                else{\r\n                    subappsFoundFlag=false\r\n                }\r\n\r\n            }\r\n        })\r\n        userInvited.applications.numberOfSelected=Object.keys(userInvited.applications.selected).length\r\n        return {\r\n            appsFoundFlag:appsFoundFlag,\r\n            subappsFoundFlag:subappsFoundFlag\r\n        }\r\n    }\r\n\r\n    userInvited.getAllOrgApps=(flagObject) => {\r\n        let deferred=$q.defer()\r\n        let tempAllApps=[]\r\n        let tempAppsCount=userInvited.appCount\r\n        let page=0\r\n        let apiPromises=[]\r\n        do{\r\n            page++\r\n            apiPromises.push(Registration.getOrgAppsByPage(page,200,userInvited.organization.id))\r\n            tempAppsCount=tempAppsCount-200\r\n        }while(tempAppsCount>200)\r\n        $q.all(apiPromises)\r\n        .then(res=>{\r\n            res.forEach(appList=>{\r\n                userInvited.preSelectApps(appList,flagObject.appsFoundFlag,flagObject.subappsFoundFlag)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    userInvited.pageChange = (newpage) => {\r\n        userInvited.updatingApps = true\r\n        Registration.getOrgAppsByPage(newpage,userInvited.pageSize,userInvited.organization.id)\r\n        .then((res) => {\r\n            userInvited.page=newpage\r\n            if (!res.length) userInvited.applications.list = undefined\r\n            else {\r\n                userInvited.applications.list = res\r\n                userInvited.updatingApps = false\r\n            }\r\n        })\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n    /* -------------------------------------------- WATCHERS START -------------------------------------------- */\r\n\r\n    $scope.$watch('userInvited.user', (a) => {\r\n        if (a && Object.keys(a).length !== 0) {\r\n            localStorageService.set('userInvited.user', a);\r\n        }\r\n    }, true)\r\n\r\n    userInvited.checkDuplicateEmail = (value) => {\r\n        if (value &&value!==\"\") {\r\n            $q.all([Registration.isEmailTaken(value).promise])\r\n            .then(res => {\r\n                userInvited.isEmailTaken=res[0]\r\n            })\r\n        }\r\n        else{\r\n            userInvited.isEmailTaken=true;\r\n        }        \r\n    }\r\n    \r\n    userInvited.checkDuplicateEmail(userInvited.user.email)\r\n    userInvited.customErrors = {\r\n        userName: {\r\n            usernameTaken: Registration.isUsernameTaken\r\n        },\r\n        email: {\r\n            email: function(){\r\n                var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n                if (userInvited.user.email) {\r\n                    return EMAIL_REGEXP.test(userInvited.user.email)\r\n                }else{\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        answersMatch: {\r\n            answersMatch:function(){\r\n                if (userInvited.userLogin && userInvited.userLogin.challengeAnswer2) {\r\n                    return userInvited.userLogin.challengeAnswer2!==userInvited.userLogin.challengeAnswer1;\r\n                }else{\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Error handlers for Inline Edits in review page\r\n    userInvited.inlineEdit = {\r\n        firstName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.firstNameError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.firstNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveFirstName=value===\"\" || !value\r\n        },\r\n        lastName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.lastNameError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.lastNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveLastName=value===\"\" || !value\r\n        },\r\n        email:function(value){\r\n            var EMAIL_REGXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.emailError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.emailError={\r\n                    required: value===\"\" || !value,\r\n                    email:!EMAIL_REGXP.test(value)\r\n                }\r\n                //emailTaken:\r\n                if (!userInvited.inlineEdit.emailError.required && !userInvited.inlineEdit.emailError.email) {\r\n                    userInvited.checkDuplicateEmail(value)\r\n                }\r\n                  \r\n            }\r\n            userInvited.inlineEdit.noSaveEmail=value===\"\" || !value || !EMAIL_REGXP.test(value)\r\n        },\r\n        //For autocomplete need to handle differently\r\n        country:function(value){\r\n            console.log(value)\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.countryError={\r\n                    required:true\r\n                }\r\n            }else{\r\n                userInvited.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n            userInvited.inlineEdit.noSaveCountry=value===undefined \r\n        },\r\n        address1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.address1Error={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.address1Error={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveAddress1=value===\"\" || !value\r\n        },\r\n        telephone:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.telephoneError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.telephoneError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveTelephone=value===\"\" || !value\r\n        },\r\n        userId:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.userIdError={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.userIdError={\r\n                    required: value===\"\" || !value,\r\n                } \r\n                //usernameTaken: \r\n                if (!userInvited.inlineEdit.userIdError.required) {\r\n                    $q.all([Registration.isUsernameTaken(value).promise])\r\n                    .then(res => {\r\n                        userInvited.inlineEdit.userIdError.usernameTaken=!res[0]\r\n                        userInvited.inlineEdit.noSaveUserId=value===\"\" || !value ||userInvited.inlineEdit.userIdError.usernameTaken\r\n                    })\r\n                }\r\n                 \r\n            }\r\n             userInvited.inlineEdit.noSaveUserId=value===\"\" || !value\r\n        },\r\n        challengeAnswer1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.challengeAnswer1Error={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.challengeAnswer1Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userInvited.userLogin.challengeAnswer2\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveChallengeAnswer1=value===\"\" || !value||value===userInvited.userLogin.challengeAnswer2\r\n        },\r\n        challengeAnswer2:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userInvited.inlineEdit.challengeAnswer2Error={}\r\n            }\r\n            else{\r\n                userInvited.inlineEdit.challengeAnswer2Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userInvited.userLogin.challengeAnswer1\r\n                }   \r\n            }\r\n            userInvited.inlineEdit.noSaveChallengeAnswer2=value===\"\" || !value || value===userInvited.userLogin.challengeAnswer1\r\n        },\r\n        //on save functions needed to show error when pressed enter\r\n        updateFirstNameError:function(){\r\n            userInvited.inlineEdit.firstName(userInvited.user.name.given)\r\n        },\r\n        updateLastNameError:function(){\r\n            userInvited.inlineEdit.lastName(userInvited.user.name.surname)\r\n        },\r\n        updateEmailError: function() {\r\n            userInvited.emailRe=userInvited.user.email;\r\n            userInvited.inlineEdit.email(userInvited.user.email)\r\n        },\r\n        updateCountryError: function() {\r\n            if (userInvited.userCountry) {\r\n                userInvited.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n        },\r\n        updateAddress1Error:function(){\r\n            userInvited.inlineEdit.address1(userInvited.user.addresses[0].streets[0])\r\n        },\r\n        updateTelephoneError:function(){\r\n            userInvited.inlineEdit.telephone(userInvited.user.phones[0].number)\r\n        },\r\n        updateUserIdError:function(){\r\n            userInvited.inlineEdit.userId(userInvited.userLogin.username)\r\n        },\r\n        updateChallengeAnswer1Error:function(){\r\n            userInvited.inlineEdit.challengeAnswer1(userInvited.userLogin.challengeAnswer1)\r\n        },\r\n        updateChallengeAnswer2Error:function(){\r\n            userInvited.inlineEdit.challengeAnswer2(userInvited.userLogin.challengeAnswer2)\r\n        },\r\n\r\n    }\r\n\r\n    /* --------------------------------------------- WATCHERS END --------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('registration')\r\n.controller('userWalkupCtrl', function(APIError, localStorageService, Registration, $scope, $state,$q,LocaleService, $window,Base,$pagination,$filter,API,$http) {\r\n\r\n    const userWalkup = this\r\n\r\n    userWalkup.applications = {}\r\n    userWalkup.userLogin = {}\r\n    userWalkup.applications.numberOfSelected = 0\r\n    userWalkup.submitError = false\r\n    userWalkup.languages=[];\r\n    userWalkup.orgPaginationSize = userWalkup.orgPaginationSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    userWalkup.appPaginationSize = userWalkup.appPaginationSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    //for detectig browser time\r\n    var d = new Date();\r\n    var tz = d.toTimeString();\r\n\r\n    //for detectig browser language\r\n    var lang = $window.navigator.language || $window.navigator.userLanguage;\r\n\r\n    if (lang.indexOf('en-')>=0) { userWalkup.browserPreference='en'; }\r\n    else if (lang.indexOf('zh')>=0) {userWalkup.browserPreference='zh'; }\r\n    else if (lang.indexOf('pl')>=0) { userWalkup.browserPreference='pl'; }\r\n    else if (lang.indexOf('pt')>=0) { userWalkup.browserPreference='pt'; }\r\n    else if (lang.indexOf('tr')>=0) { userWalkup.browserPreference='tr'; }\r\n    else if (lang.indexOf('fr')>=0) { userWalkup.browserPreference='fr'; }\r\n    else if (lang.indexOf('ja')>=0) { userWalkup.browserPreference='ja'; }\r\n    else if (lang.indexOf('es')>=0) { userWalkup.browserPreference='es'; }\r\n    else if (lang.indexOf('de')>=0) { userWalkup.browserPreference='de'; }\r\n    else if (lang.indexOf('ru')>=0) { userWalkup.browserPreference='ru'; }\r\n    else if (lang.indexOf('it')>=0) { userWalkup.browserPreference='it'; }\r\n    else { \r\n        console.log(lang+ \"not supported\")\r\n        userWalkup.browserPreference='en'; \r\n    }\r\n    //LocaleService.setLocaleByDisplayName(appConfig.languages[userWalkup.browserPreference])\r\n    userWalkup.initializing = true\r\n\r\n    if (!localStorageService.get('userWalkup.user')) {\r\n        // If registration is not saved in localstorage we need to initialize \r\n        // these arrays so ng-model treats them as arrays rather than objects \r\n        userWalkup.user = { addresses: [] }\r\n        userWalkup.user.addresses[0] = { streets: [] }\r\n        userWalkup.user.phones = []\r\n    } \r\n    else {\r\n        userWalkup.user = localStorageService.get('userWalkup.user');\r\n        \r\n    }\r\n\r\n    Object.keys(Base.languages).forEach(function(id,index){\r\n        userWalkup.languages[index]={\r\n            id:id\r\n        }\r\n    })\r\n    Object.values(Base.languages).forEach(function(language,index){\r\n        userWalkup.languages[index].name=language;\r\n    })\r\n    userWalkup.user.language=_.find(userWalkup.languages,{id:userWalkup.browserPreference})\r\n    /*Registration.initWalkupRegistration(userWalkup.orgPaginationSize)\r\n    .then(res => {\r\n        const questions = res.securityQuestions\r\n\r\n        // Split questions to use between 2 dropdowns\r\n        questions.splice(0, 1)\r\n        const numberOfQuestionsFloor = Math.floor(questions.length / 2)\r\n\r\n        userWalkup.userLogin.challengeQuestions1 = questions.slice(0, numberOfQuestionsFloor)\r\n        userWalkup.userLogin.challengeQuestions2 = questions.slice(numberOfQuestionsFloor)\r\n\r\n        // Preload questions into input\r\n        userWalkup.userLogin.question1 = userWalkup.userLogin.challengeQuestions1[0]\r\n        userWalkup.userLogin.question2 = userWalkup.userLogin.challengeQuestions2[0]\r\n\r\n        // Populate organization list\r\n        userWalkup.organizationList = res.organizations\r\n        userWalkup.organizationCount = res.organizationCount\r\n        userWalkup.orgReRenderPaginate && userWalkup.orgReRenderPaginate()\r\n\r\n        userWalkup.initializing = false\r\n    })\r\n    .catch(error => {\r\n        $state.go('misc.loadError')\r\n    })*/\r\nuserWalkup.initializing = false\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    userWalkup.applications.checkOrUncheckBundledApps = (checkboxValue,application) => {\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp => {\r\n                if (checkboxValue !== null) {\r\n                    bundledApp=_.find(userWalkup.applications.list,{id:bundledApp.id})\r\n                    userWalkup.applications.selected[bundledApp.id]=bundledApp.id+','+bundledApp.servicePackage.id+','+$filter('cuiI18n')(bundledApp.name)+','+application.servicePackage.personTacEnabled\r\n                    userWalkup.applications.numberOfSelected += 1;\r\n\r\n                } else {\r\n                    userWalkup.applications.selected[bundledApp.id]=null\r\n                    userWalkup.applications.numberOfSelected -= 1;\r\n                } \r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    userWalkup.applications.updateNumberOfSelected = (checkboxValue,application) => {\r\n        // Update the number of selected apps everytime on of the boxes is checked/unchecked\r\n        if (checkboxValue !== null) {\r\n            userWalkup.applications.numberOfSelected += 1;\r\n        } else {\r\n            userWalkup.applications.numberOfSelected -= 1;\r\n        }\r\n        userWalkup.applications.checkOrUncheckBundledApps(checkboxValue,application)\r\n        userWalkup.applications.process()\r\n    }\r\n\r\n    userWalkup.applications.updateSelected = (application, checkboxValue, index) => {\r\n        let bundledApps=_.filter(userWalkup.applications.processedSelected,{packageId:application.packageId})\r\n        bundledApps.forEach(bundledApp => {\r\n            if (checkboxValue !== null) {\r\n                userWalkup.applications.selected[bundledApp.id]=bundledApp.id+','+bundledApp.packageId+','+bundledApp.name+','+bundledApp.showTac\r\n                userWalkup.applications.numberOfSelected += 1;\r\n            } else {\r\n                delete userWalkup.applications.selected[bundledApp.id]          \r\n                userWalkup.applications.numberOfSelected -= 1;\r\n            }\r\n        })\r\n    }\r\n\r\n    userWalkup.getAppicationTaC = () => {\r\n        angular.forEach(userWalkup.applications.processedSelected, app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true') {\r\n                Registration.getTac(app.packageId)\r\n                .then(res =>{\r\n                    app.tac=res;\r\n                })\r\n                .catch(err=> {\r\n                    console.log(err);\r\n                })\r\n            };\r\n        })\r\n    }\r\n\r\n    //Check TAC flag for selected applications\r\n    userWalkup.checkTacFlag = (selectedApplications) => {\r\n        let TacCount=0;\r\n        angular.forEach(selectedApplications,app =>{\r\n            //need to change later to ===\r\n            if (app.showTac=='true') {\r\n                TacCount++;\r\n            };\r\n        })\r\n        return TacCount\r\n    }\r\n\r\n    userWalkup.showTac= (index) => {\r\n        if (userWalkup.applications.processedSelected[index].tac) {\r\n            userWalkup.tacContent=userWalkup.applications.processedSelected[index].tac.tacText\r\n            userWalkup.applications.step=3\r\n        }\r\n    } \r\n\r\n    userWalkup.applications.process = () => {\r\n        // Process the selected apps when you click next after selecting the apps you need\r\n        // returns number of apps selected\r\n        let oldSelected\r\n        let index=0;\r\n        if (userWalkup.applications.processedSelected) {\r\n            oldSelected = userWalkup.applications.processedSelected\r\n        }\r\n\r\n        // Fixes issue where adding and removing selected apps would leave objects with null values\r\n        angular.forEach(userWalkup.applications.selected, (app, i) => {\r\n            if (app === null) delete userWalkup.applications.selected[i]\r\n        })\r\n\r\n        userWalkup.applications.processedSelected = []\r\n\r\n        angular.forEach(userWalkup.applications.selected, function(app, i) {\r\n            if (app !== null) {\r\n                userWalkup.applications.processedSelected.push({\r\n                    id: app.split(',')[0],\r\n                    packageId:app.split(',')[1],\r\n                    name: app.split(',')[2],\r\n                    // this fixes an issue where removing an app from the selected list that the user \r\n                    // had accepted the terms for would carry over that acceptance to the next app on the list\r\n                    acceptedTos: ((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].acceptedTos : false),\r\n                    showTac:app.split(',')[3]\r\n                })\r\n            }\r\n            index++;\r\n        })\r\n        return userWalkup.checkTacFlag(userWalkup.applications.processedSelected)\r\n        \r\n    }\r\n\r\n    userWalkup.submit = () => {\r\n        userWalkup.submitting = true\r\n        userWalkup.submitError = false\r\n\r\n        const registrationData = {\r\n            profile: userWalkup.user,\r\n            organization: userWalkup.organization,\r\n            login: userWalkup.userLogin,\r\n            applications: userWalkup.applications,\r\n            userCountry: userWalkup.userCountry,\r\n            requestReason:userWalkup.reason\r\n        }\r\n\r\n        Registration.walkupSubmit(registrationData)\r\n        .then(() => {\r\n            userWalkup.success = true\r\n            userWalkup.submitting = false\r\n            $state.go('misc.success')\r\n        })\r\n        .catch(error => {\r\n            userWalkup.submitError = true\r\n            userWalkup.submitting = false\r\n            if (error.responseJSON) {\r\n                userWalkup.errorMessage = error.responseJSON.apiMessage\r\n            }\r\n            else {\r\n                userWalkup.errorMessage = 'Error submitting registration request'\r\n            }\r\n        })\r\n    }\r\n\r\n    API.cui.initiateNonce()\r\n    .then(res=>{\r\n        API.cui.getPublicPkgs({qs:['claimId','public']})\r\n        .then(res=>{\r\n            console.log(res)\r\n            userWalkup.publicRegApps=res\r\n            $scope.$digest()\r\n        })\r\n        .fail(err=>{\r\n            console.log(err)\r\n        })\r\n    })\r\n    \r\n\r\n    userWalkup.submitPublic = () => {\r\n        userWalkup.submitting = true\r\n        userWalkup.submitError = false\r\n        userWalkup.captchaEntryError=false\r\n        let string = userWalkup.captchaOnload.split(' ').join('')\r\n\r\n        if (string == userWalkup.captchaEntry) {\r\n            $http({\r\n              method: 'POST',\r\n              url: 'https://kv-1-qa.idm.qa.covapp.io/kv/my_key',\r\n              headers: {\r\n               'Content-Type': 'text/plain',\r\n               'Accept':'text/plain',\r\n               'x-realm':'Q-QIMS-DEMO',\r\n               'x-requestor': '[Q-QIMS-DEMO]Q-QIMS-DEMO_ADMIN',\r\n               'x-requestor-app': 'jAZJnDfFXRDYen6HqADmIpTLcTEmt36z',\r\n               'Access-Control-Allow-Origin': '*',\r\n                'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\r\n                'Access-Control-Allow-Headers': 'Content-Type, X-Requested-With',\r\n                'X-Random-Shit':'123123123'\r\n             },\r\n             data: {\r\n                \"firstName\":userWalkup.user.name.given,\r\n                \"lastName\":userWalkup.user.name.surname,\r\n                \"email\":userWalkup.user.email,\r\n                \"country\":userWalkup.userCountry,\r\n                \"cellPhone\":userWalkup.user.phones[0].number,\r\n                \"medicalLicenseNo\":userWalkup.extended.medicalLicence,\r\n                \"studyList\":userWalkup.extended.studyList,\r\n                \"servicePackage\":userWalkup.applications.selected[application.id]\r\n            }\r\n            }).then(function successCallback(response) {\r\n                $state.go('misc.success')\r\n              }, function errorCallback(response) {\r\n                userWalkup.submitError = true\r\n                userWalkup.submitting = false\r\n                if (response.responseJSON) {\r\n                userWalkup.errorMessage = response.responseJSON.apiMessage\r\n            }\r\n            else {\r\n                userWalkup.errorMessage = 'Error submitting registration request'\r\n            }\r\n              });\r\n        }\r\n        else {\r\n            userWalkup.captchaEntryError=true\r\n            userWalkup.submitting = false\r\n            $scope.$digest();\r\n        }\r\n\r\n\r\n\r\n        /*API.cui.createRegPublic({key:userWalkup.user.email,data:data})\r\n        .then(() => {\r\n            userWalkup.success = true\r\n            userWalkup.submitting = false\r\n            $state.go('misc.success')\r\n        })\r\n        .fail(error => {\r\n            userWalkup.submitError = true\r\n            userWalkup.submitting = false\r\n            if (error.responseJSON) {\r\n                userWalkup.errorMessage = error.responseJSON.apiMessage\r\n            }\r\n            else {\r\n                userWalkup.errorMessage = 'Error submitting registration request'\r\n            }\r\n        })*/\r\n    }\r\n\r\n    userWalkup.selectOrganization = (organization) => {\r\n        userWalkup.organization = organization\r\n        userWalkup.applications.numberOfSelected = 0 // Restart applications count\r\n        userWalkup.applications.processedSelected = undefined // Restart applications selected\r\n\r\n        Registration.selectOrganization(organization,userWalkup.appPaginationSize)\r\n        .then(res => {\r\n            const grants = res.grants\r\n            userWalkup.appCount=res.appCount\r\n            userWalkup.appReRenderPaginate && userWalkup.appReRenderPaginate()\r\n            if (!grants.length) userWalkup.applications.list = undefined\r\n            else {\r\n                userWalkup.applications.list = grants\r\n            }\r\n\r\n            userWalkup.passwordRules = res.passwordRules\r\n        })\r\n        .fail((error) => {\r\n            console.error('Error getting organization information', error)\r\n            APIError.onFor('userWalkup.orgInfo', error)\r\n        })\r\n        .always(() => {\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    userWalkup.orgPaginationPageHandler = (newPage) => {\r\n        userWalkup.updatingOrgs = true\r\n        Registration.getOrgsByPageAndName(newPage,userWalkup.orgPaginationSize)\r\n        .then((res) => {\r\n            userWalkup.orgPaginationCurrentPage=newPage\r\n            userWalkup.organizationList = res\r\n            userWalkup.updatingOrgs = false\r\n            $scope.$digest()\r\n        })\r\n        .fail((err) => {\r\n            console.error(\"There was an error in fetching organization list for page \"+newPage +err)\r\n            userWalkup.updatingOrgs = false\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    userWalkup.appPaginationPageHandler = (newPage) => {\r\n        userWalkup.updatingApps = true\r\n        Registration.getOrgAppsByPage(newPage,userWalkup.appPaginationSize,userWalkup.organization.id)\r\n        .then((res) => {\r\n            userWalkup.appPaginationCurrentPage=newPage\r\n            if (!res.length) {\r\n                userWalkup.updatingApps=false\r\n                userWalkup.applications.list = undefined\r\n            }\r\n            else {\r\n                userWalkup.applications.list = res\r\n                userWalkup.updatingApps = false\r\n            }\r\n            $scope.$digest()\r\n        })\r\n        .fail((err) =>{\r\n            userWalkup.updatingApps =false\r\n            $scope.$digest()\r\n            console.error(\"There was an error in fetching app list for page \"+newPage +err)\r\n        })\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n    /* -------------------------------------------- WATCHERS START -------------------------------------------- */\r\n\r\n    /*$scope.$watch('userWalkup.user', (a) => {\r\n        if (a && Object.keys(a).length !== 0) {\r\n            localStorageService.set('userWalkup.user', a);\r\n        }\r\n    }, true)*/\r\n\r\n    $scope.$watch('userWalkup.orgFilterByname', (a) => {\r\n        if (a!==undefined) {\r\n            userWalkup.updatingOrgs=true\r\n            Registration.getOrgsByPageAndName(1,userWalkup.orgPaginationSize,a)\r\n            .then((res)=> {\r\n                userWalkup.organizationList = res\r\n                userWalkup.updatingOrgs=false\r\n                $scope.$digest()\r\n            })\r\n            .fail((err) => {\r\n                userWalkup.updatingOrgs=false\r\n                $scope.$digest()\r\n                 console.error(\"There was an error in filtering orgs by name \"+err)\r\n            })  \r\n        }\r\n              \r\n    })\r\n\r\n /*   userWalkup.checkDuplicateEmail = (value) => {\r\n        if (value &&value!==\"\") {\r\n            $q.all([Registration.isEmailTaken(value).promise])\r\n            .then(res => {\r\n                userWalkup.isEmailTaken=res[0]\r\n            })\r\n        }\r\n        else{\r\n            userWalkup.isEmailTaken=true;\r\n        }        \r\n    }\r\n    \r\n    userWalkup.checkDuplicateEmail(userWalkup.user.email)*/\r\n    userWalkup.customErrors = {\r\n        userName: {\r\n            usernameTaken: Registration.isUsernameTaken\r\n        },\r\n        email: {\r\n            email: function(){\r\n                var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n                if (userWalkup.user.email) {\r\n                    return EMAIL_REGEXP.test(userWalkup.user.email)\r\n                }else{\r\n                    return true;\r\n                }\r\n            }\r\n        },\r\n        answersMatch: {\r\n            answersMatch:function(){\r\n                if (userWalkup.userLogin && userWalkup.userLogin.challengeAnswer2) {\r\n                    return userWalkup.userLogin.challengeAnswer2!==userWalkup.userLogin.challengeAnswer1;\r\n                }else{\r\n                    return true\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Error handlers for Inline Edits in review page\r\n    userWalkup.inlineEdit = {\r\n        firstName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.firstNameError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.firstNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveFirstName=value===\"\" || !value\r\n        },\r\n        lastName:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.lastNameError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.lastNameError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveLastName=value===\"\" || !value\r\n        },\r\n        email:function(value){\r\n            var EMAIL_REGXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.emailError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.emailError={\r\n                    required: value===\"\" || !value,\r\n                    email:!EMAIL_REGXP.test(value)\r\n                }\r\n                //emailTaken:\r\n                /*if (!userWalkup.inlineEdit.emailError.required && !userWalkup.inlineEdit.emailError.email) {\r\n                    userWalkup.checkDuplicateEmail(value)\r\n                }*/\r\n                  \r\n            }\r\n            userWalkup.inlineEdit.noSaveEmail=value===\"\" || !value || !EMAIL_REGXP.test(value)\r\n        },\r\n        //For autocomplete need to handle differently\r\n        country:function(value){\r\n            console.log(value)\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.countryError={\r\n                    required:true\r\n                }\r\n            }else{\r\n                userWalkup.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n            userWalkup.inlineEdit.noSaveCountry=value===undefined \r\n        },\r\n        address1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.address1Error={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.address1Error={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveAddress1=value===\"\" || !value\r\n        },\r\n        telephone:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.telephoneError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.telephoneError={\r\n                    required: value===\"\" || !value\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveTelephone=value===\"\" || !value\r\n        },\r\n        userId:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.userIdError={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.userIdError={\r\n                    required: value===\"\" || !value,\r\n                } \r\n                //usernameTaken: \r\n                if (!userWalkup.inlineEdit.userIdError.required) {\r\n                    $q.all([Registration.isUsernameTaken(value).promise])\r\n                    .then(res => {\r\n                        userWalkup.inlineEdit.userIdError.usernameTaken=!res[0]\r\n                        userWalkup.inlineEdit.noSaveUserId=value===\"\" || !value ||userWalkup.inlineEdit.userIdError.usernameTaken\r\n                    })\r\n                }\r\n                 \r\n            }\r\n             userWalkup.inlineEdit.noSaveUserId=value===\"\" || !value\r\n        },\r\n        challengeAnswer1:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.challengeAnswer1Error={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.challengeAnswer1Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userWalkup.userLogin.challengeAnswer2\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveChallengeAnswer1=value===\"\" || !value||value===userWalkup.userLogin.challengeAnswer2\r\n        },\r\n        challengeAnswer2:function(value){\r\n            if (!angular.isDefined(value)) {\r\n                userWalkup.inlineEdit.challengeAnswer2Error={}\r\n            }\r\n            else{\r\n                userWalkup.inlineEdit.challengeAnswer2Error={\r\n                    required: value===\"\" || !value,\r\n                    answersMatch:value===userWalkup.userLogin.challengeAnswer1\r\n                }   \r\n            }\r\n            userWalkup.inlineEdit.noSaveChallengeAnswer2=value===\"\" || !value || value===userWalkup.userLogin.challengeAnswer1\r\n        },\r\n        //on save functions needed to show error when pressed enter\r\n        updateFirstNameError:function(){\r\n            userWalkup.inlineEdit.firstName(userWalkup.user.name.given)\r\n        },\r\n        updateLastNameError:function(){\r\n            userWalkup.inlineEdit.lastName(userWalkup.user.name.surname)\r\n        },\r\n        updateEmailError: function() {\r\n            userWalkup.emailRe=userWalkup.user.email;\r\n            userWalkup.inlineEdit.email(userWalkup.user.email)\r\n        },\r\n        updateCountryError: function() {\r\n            if (userWalkup.userCountry) {\r\n                userWalkup.inlineEdit.countryError={\r\n                    required:false\r\n                }\r\n            }\r\n        },\r\n        updateAddress1Error:function(){\r\n            userWalkup.inlineEdit.address1(userWalkup.user.addresses[0].streets[0])\r\n        },\r\n        updateTelephoneError:function(){\r\n            userWalkup.inlineEdit.telephone(userWalkup.user.phones[0].number)\r\n        },\r\n        updateUserIdError:function(){\r\n            userWalkup.inlineEdit.userId(userWalkup.userLogin.username)\r\n        },\r\n        updateChallengeAnswer1Error:function(){\r\n            userWalkup.inlineEdit.challengeAnswer1(userWalkup.userLogin.challengeAnswer1)\r\n        },\r\n        updateChallengeAnswer2Error:function(){\r\n            userWalkup.inlineEdit.challengeAnswer2(userWalkup.userLogin.challengeAnswer2)\r\n        },\r\n\r\n    }\r\n\r\n    /* --------------------------------------------- WATCHERS END --------------------------------------------- */\r\n\r\n    var alpha = new Array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\r\n    var i;\r\n    for (i = 0; i < 6; i++) {\r\n        var a = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var b = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var c = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var d = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var e = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var f = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var g = alpha[Math.floor(Math.random() * alpha.length)];\r\n    }\r\n    var code = a + ' ' + b + ' ' + ' ' + c + ' ' + d + ' ' + e + ' ' + f + ' ' + g;\r\n    userWalkup.captchaOnload = code\r\n\r\n    userWalkup.reload=()=>{\r\n        var alpha = new Array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\r\n    var i;\r\n    for (i = 0; i < 6; i++) {\r\n        var a = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var b = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var c = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var d = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var e = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var f = alpha[Math.floor(Math.random() * alpha.length)];\r\n        var g = alpha[Math.floor(Math.random() * alpha.length)];\r\n    }\r\n    var code = a + ' ' + b + ' ' + ' ' + c + ' ' + d + ' ' + e + ' ' + f + ' ' + g;\r\n    userWalkup.captchaOnload = code\r\n    }\r\n\r\nfunction ValidCaptcha() {\r\n    var string1 = removeSpaces(document.getElementById('mainCaptcha').value);\r\n    var string2 = removeSpaces(document.getElementById('txtInput').value);\r\n    if (string1 == string2) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction removeSpaces(string) {\r\n    return string.split(' ').join('');\r\n}\r\n})\r\n\r\nangular.module('organization', [])\r\n.config(['$stateProvider', ($stateProvider) =>  {\r\n\r\n    const templateBase = 'app/modules/organization/';\r\n\r\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\r\n\r\n    const loginRequired = true;\r\n\r\n    $stateProvider\r\n        .state('organization', {\r\n            url: '/organization',\r\n            template: '<div ui-view></div>',\r\n            access: loginRequired\r\n        })\r\n        // Profile --------------------------------------------------\r\n        .state('organization.profile', {\r\n            url: '/profile/:orgId?userId',\r\n            templateUrl: templateBase + 'profile/organization-profile.html',\r\n            controller: returnCtrlAs('orgProfile'),\r\n            access: loginRequired\r\n        })\r\n        // Directory ------------------------------------------------\r\n        .state('organization.directory', {\r\n            abstract:true,\r\n            template: '<div ui-view></div>'\r\n        })\r\n        .state('organization.directory.userList', {\r\n            url: '/directory/:orgId?page&pageSize&sortBy&status&fullName',\r\n            templateUrl: templateBase + 'directory/user-list/directory-userList.html',\r\n            controller: returnCtrlAs('orgDirectory'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.directory.userDetails', {\r\n            url: '/user-details?userId&orgId',\r\n            views: {\r\n                '': {\r\n                    templateUrl: templateBase + 'directory/user-details/directory-userDetails.html',\r\n                    controller: returnCtrlAs('userDetails')\r\n                },\r\n                'profile@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/profile/userDetails-profile.html',\r\n                    controller: returnCtrlAs('userDetailsProfile')\r\n                },\r\n                'applications@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/applications/userDetails-applications.html',\r\n                    controller: returnCtrlAs('userDetailsApps')\r\n                },\r\n                'roles@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/roles/userDetails-roles.html',\r\n                    controller: returnCtrlAs('userDetailsRoles')\r\n                },\r\n                'history@organization.directory.userDetails': {\r\n                    templateUrl: templateBase + 'directory/user-details/sections/history/userDetails-history.html',\r\n                    controller: returnCtrlAs('userDetailsHistory')\r\n                }\r\n            },\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.directory.userAppDetails', {\r\n            url: '/user-app-details/:appId?userId&orgId',\r\n            templateUrl: templateBase + 'directory/user-app-details/directory-userAppDetails.html',\r\n            controller: returnCtrlAs('userAppDetails'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.directory.orgDetails', {\r\n            url: '/org-details?orgId&page&pageSize',\r\n            views: {\r\n                '': {\r\n                    templateUrl: templateBase + 'directory/org-details/directory-orgDetails.html',\r\n                    controller: returnCtrlAs('orgDetails')\r\n                },\r\n                'profile@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/profile/orgDetails-profile.html',\r\n                    controller: returnCtrlAs('orgDetailsProfile')\r\n                },\r\n                'applications@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/applications/orgDetails-applications.html',\r\n                    controller: returnCtrlAs('orgDetailsApps')\r\n                },\r\n                'users@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/users/orgDetails-users.html',\r\n                    controller: returnCtrlAs('orgDetailsUsers')\r\n                },\r\n                'hierarchy@organization.directory.orgDetails': {\r\n                    templateUrl: templateBase + 'directory/org-details/sections/hierarchy/orgDetails-hierarchy.html',\r\n                    controller: returnCtrlAs('orgDetailsHierarchy')\r\n                }\r\n            },\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        // Hierarchy ------------------------------------------------\r\n        .state('organization.hierarchy', {\r\n            url: '/hierarchy/:orgId',\r\n            templateUrl: templateBase + 'hierarchy/organization-hierarchy.html',\r\n            controller: returnCtrlAs('orgHierarchy'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        // applications----------------------------------------------\r\n        .state('organization.applications', {\r\n            url: '/applications/:orgId?name&page&pageSize&service.category&sortBy&refine',\r\n            templateUrl: templateBase + 'applications/organization-applications.html',\r\n            controller: returnCtrlAs('organizationApplications'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.applicationDetails', {\r\n            url: '/applications/:appId/details/:orgId',\r\n            templateUrl: templateBase + 'applications/applicationDetails/organization-applicationDetails.html',\r\n            controller: returnCtrlAs('orgApplicationDetails'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('organization.newRequest', {\r\n            url: '/request',\r\n            templateUrl: templateBase + 'applications/appRequest/newRequest/appRequest-newRequest.html',\r\n            controller: returnCtrlAs('orgAppRequest'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.newRequestReview', {\r\n            url: '/request/review',\r\n            templateUrl: templateBase + 'applications/appRequest/newRequestReview/appRequest-newRequestReview.html',\r\n            controller: returnCtrlAs('orgAppRequestReview'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.search', {\r\n            url: '/search?name&category&page&pageSize',\r\n            templateUrl: templateBase + 'applications/search/orgApplications-search.html',\r\n            controller: returnCtrlAs('orgAppSearch'),\r\n            access: loginRequired\r\n        })\r\n        // Roles ----------------------------------------------------\r\n        .state('organization.roles', {\r\n            url: '/roles?orgID',\r\n            templateUrl: templateBase + 'roles/organization-roles.html',\r\n            controller: returnCtrlAs('orgRoles'),\r\n            access:loginRequired\r\n        })\r\n        // Requests -------------------------------------------------\r\n        .state('organization.requests', {\r\n            url: '/requests',\r\n            template: '<div ui-view></div>',\r\n            access: loginRequired\r\n        })\r\n        .state('organization.requests.newGrant', {\r\n            url: '/new-grant?orgId&userId',\r\n            templateUrl: templateBase + 'requests/newGrant/requests-newGrant.html',\r\n            controller: returnCtrlAs('newGrant'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToUserLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newGrantSearch', {\r\n            url: '/search?type&category&name&orgId&userId&page&pageSize&sortBy',\r\n            templateUrl: templateBase + 'requests/newGrant/search/search.html',\r\n            controller: returnCtrlAs('newGrantSearch'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToUserLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newGrantClaims', {\r\n            url: '/claims?orgId&userId',\r\n            templateUrl: templateBase + 'requests/newGrant/claims/claims.html',\r\n            controller: returnCtrlAs('newGrantClaims'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToUserLogic\r\n            }\r\n        })\r\n        // Org Grant\r\n        .state('organization.requests.newOrgGrant', {\r\n            url: '/new-org-grant?orgId',\r\n            templateUrl: templateBase + 'requests/newOrgGrant/requests-newGrant.html',\r\n            controller: returnCtrlAs('newOrgGrant'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToOrgLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newOrgGrantSearch', {\r\n            url: '/search-org?type&category&name&orgId&page&pageSize&sortBy',\r\n            templateUrl: templateBase + 'requests/newOrgGrant/search/search.html',\r\n            controller: returnCtrlAs('newOrgGrantSearch'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToOrgLogic\r\n            }\r\n        })\r\n        .state('organization.requests.newOrgGrantClaims', {\r\n            url: '/claims-org?orgId',\r\n            templateUrl: templateBase + 'requests/newOrgGrant/claims/claims.html',\r\n            controller: returnCtrlAs('newOrgGrantClaims'),\r\n            access: {\r\n                permittedLogic:appConfig.grantAppToOrgLogic\r\n            }\r\n        })\r\n        .state('organization.requests.pendingRequests', {\r\n            url: '/pending-requests?userId&orgId',\r\n            templateUrl: templateBase + 'requests/pendingRequestsReview/requests-pendingRequests.html',\r\n            controller: returnCtrlAs('pendingRequests'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.requests.pendingRequestsReview', {\r\n            url: '/pending-requests/review?userId&orgId',\r\n            templateUrl: templateBase + 'requests/pendingRequestsReview/requests-pendingRequestsReview.html',\r\n            controller: returnCtrlAs('pendingRequestsReview'),\r\n            access: loginRequired\r\n        })\r\n        // Approval of Org requests\r\n        .state('organization.requests.organizationRequest', {\r\n            url: '/organization-request?orgId&userId',\r\n            templateUrl: templateBase + 'requests/organizationRequest/requests-organization.html',\r\n            controller: returnCtrlAs('organizationRequest'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.organizationRequestReview', {\r\n            url: '/organization-request-review?orgId',\r\n            templateUrl: templateBase + 'requests/organizationRequest/requests-organizationReview.html',\r\n            controller: returnCtrlAs('organizationRequestReview'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.organizationAppRequest', {\r\n            url: '/organization-app-request?orgId&userId',\r\n            templateUrl: templateBase + 'requests/organizationAppRequests/requests-organization.html',\r\n            controller: returnCtrlAs('organizationAppRequest'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.organizationAppRequestReview', {\r\n            url: '/organization-app-request-review?orgId',\r\n            templateUrl: templateBase + 'requests/organizationAppRequests/requests-organizationReview.html',\r\n            controller: returnCtrlAs('organizationAppRequestReview'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.personRequest', {\r\n            url: '/person-request?userId&orgId',\r\n            templateUrl: templateBase + 'requests/personRequest/requests-person.html',\r\n            controller: returnCtrlAs('personRequest'),\r\n            access: loginRequired\r\n        })\r\n        .state('organization.requests.personRequestReview', {\r\n            url: '/person-request-review?userId&orgId',\r\n            templateUrl: templateBase + 'requests/personRequest/requests-personReview.html',\r\n            controller: returnCtrlAs('personRequestReview'),\r\n            access: loginRequired\r\n        })\r\n\r\n        // ADMIN...\r\n        .state('organization.requests.usersRegistrationRequests', {\r\n            url:'/userRequests',\r\n            templateUrl: templateBase + 'requests/usersRequests/usersRegistrationRequests/requests-RegistrationRequests.html',\r\n            controller: returnCtrlAs('usersRegistrationRequests'),\r\n            access: appConfig.orgAdminLogic\r\n        })\r\n        .state('organization.requests.usersAppRequests', {\r\n            url:'/applicationRequests',\r\n            templateUrl: templateBase + 'requests/usersRequests/usersAppRequests/requests-AppRequests.html',\r\n            controller: returnCtrlAs('usersAppRequests'),\r\n            access: appConfig.orgAdminLogic\r\n        })\r\n        .state('invitation', {\r\n            url: '/invitation',\r\n            template: '<div ui-view></div>',\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.inviteSelect', {\r\n            url: '/select',\r\n            templateUrl:templateBase + 'invitation/invitation.html',\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.inviteUser', {\r\n            url: '/user',\r\n            templateUrl:templateBase + 'invitation/user/user.html',\r\n            controller: returnCtrlAs('user'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.division', {\r\n            url: '/division',\r\n            templateUrl:templateBase + 'invitation/division/division.html',\r\n            controller: returnCtrlAs('division'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        .state('invitation.tlo', {\r\n            url: '/tlo',\r\n            templateUrl:templateBase + 'invitation/tlo/tlo.html',\r\n            controller: returnCtrlAs('tlo'),\r\n            access: {\r\n                permittedLogic:appConfig.accessByAnyAdmin\r\n            }\r\n        })\r\n        // Org Requests/ADMIN\r\n        .state('organization.requests.orgRegistrationRequests', {\r\n            url:'/orgRequests?page&pageSize&organizationName',\r\n            templateUrl: templateBase + 'requests/orgRequests/orgRegistrationRequests/requests-RegistrationRequests.html',\r\n            controller: returnCtrlAs('orgRegistrationRequests'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        })\r\n        .state('organization.requests.orgAppRequests', {\r\n            url:'/orgApplicationRequests?pageSize&page',\r\n            templateUrl: templateBase + 'requests/orgRequests/orgAppRequests/requests-AppRequests.html',\r\n            controller: returnCtrlAs('orgAppRequests'),\r\n            access: {\r\n                permittedLogic:appConfig.orgAdminLogic\r\n            }\r\n        });\r\n}]);\r\n\r\nangular.module('organization')\r\n.controller('orgAppRequestCtrl', function(API,DataStorage,Loader,User,$scope,$state,$stateParams) {\r\n\r\n    const orgAppRequest = this;\r\n    const orgAppsBeingRequested = DataStorage.getType('orgAppsBeingRequested');\r\n    const loaderName = 'orgAppRequest.loading';\r\n    orgAppRequest.stateParamsOrgId=User.user.organization.id;\r\n\r\n    orgAppRequest.orgAppsBeingRequested = [];\r\n    orgAppRequest.numberOfOrgRequests = 0;\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(loaderName);\r\n\r\n    if (orgAppsBeingRequested) {\r\n        orgAppRequest.numberOfOrgRequests = Object.keys(orgAppsBeingRequested).length;\r\n    }\r\n    \r\n    API.cui.getOrgAppCategories({organizationId:orgAppRequest.stateParamsOrgId})\r\n    .then((res)=>{\r\n        orgAppRequest.categories = res;\r\n        Loader.offFor(loaderName);\r\n        $scope.$digest();\r\n    })\r\n    .fail((err)=>{\r\n         Loader.offFor(loaderName);\r\n    });\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgAppRequest.searchCallback = function(searchWord) {\r\n        $state.go('organization.search', {name: searchWord});\r\n    };\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgAppRequestReviewCtrl', function(API,APIError,BuildPackageRequests,DataStorage,Loader,User,$q,$state,$timeout,AppRequests,$stateParams) {\r\n\r\n    const orgAppRequestReview = this\r\n    const loaderName = 'orgAppRequestReview.'\r\n    orgAppRequestReview.stateParamsOrgId=$stateParams.orgId;\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(loaderName + 'loading')\r\n    /*orgAppRequestReview.appsRequests = DataStorage.getType('orgAppsBeingRequested', User.user.id)*/\r\n    Loader.offFor(loaderName + 'loading')\r\n\r\n     if(Object.keys(AppRequests.get()).length===0 && DataStorage.getType('orgAppsBeingRequested', User.user.id)) {\r\n        AppRequests.set(DataStorage.getType('orgAppsBeingRequested', User.user.id));\r\n    }\r\n\r\n\r\n    const appRequests=AppRequests.get(),\r\n        appsBeingRequested=Object.keys(appRequests);\r\n\r\n    if (appsBeingRequested.length===0) {\r\n        $state.go('organization.search',{orgId:orgAppRequestReview.stateParamsOrgId});\r\n    }\r\n\r\n    orgAppRequestReview.appRequests=[];\r\n\r\n    for(let i=0; i < appsBeingRequested.length; i += 2){\r\n        const applicationGroup = [];\r\n        applicationGroup.push(appRequests[appsBeingRequested[i]]);\r\n        if (appRequests[appsBeingRequested[i+1]]) {\r\n            applicationGroup.push(appRequests[appsBeingRequested[i+1]]);\r\n        }\r\n        //get Terms And Conditions for requested packages\r\n        applicationGroup.forEach(app=>{\r\n            if (app.servicePackage.organizationTacEnabled) {\r\n                API.cui.getOrgTacOfPackage({packageId:app.servicePackage.id})\r\n                .then(res=>{\r\n                    app.tac=res;\r\n                })\r\n                .fail(err=>{\r\n                    console.log(\"There was an error fetching Tac\")\r\n                    console.log(err)\r\n                })\r\n            }\r\n        })\r\n        orgAppRequestReview.appRequests.push(applicationGroup);\r\n    }\r\n\r\n    orgAppRequestReview.numberOfRequests=0;\r\n    appsBeingRequested.forEach(() => {\r\n        orgAppRequestReview.numberOfRequests += 1;\r\n    });\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgAppRequestReview.removeApplicationRequest = (requestId) => {\r\n        delete orgAppRequestReview.appRequests[requestId]\r\n\r\n        if (Object.keys(orgAppRequestReview.appRequests).length === 0) {\r\n            DataStorage.deleteType('orgAppsBeingRequested')\r\n            $state.go('organization.applications',{orgId:orgAppRequestReview.stateParamsOrgId})\r\n        } \r\n        else {\r\n            DataStorage.setType('orgAppsBeingRequested', orgAppRequestReview.appRequests)\r\n        }\r\n    }\r\n\r\n    orgAppRequestReview.submit = () => {\r\n        let requestArray = []\r\n\r\n        Loader.onFor(loaderName + 'attempting')\r\n        \r\n        /*Object.keys(orgAppRequestReview.appRequests).forEach((request) => {\r\n            requestArray.push(orgAppRequestReview.appRequests[request])\r\n        })\r\n*/\r\n         orgAppRequestReview.appRequests.forEach((appRequestGroup,i) => {\r\n            appRequestGroup.forEach((appRequest,x) => {\r\n                 requestArray[i+x] = appRequest;\r\n            })\r\n            \r\n        })\r\n\r\n        $q.all(BuildPackageRequests(User.user.organization.id, 'organization', requestArray))\r\n        .then(() => {\r\n            Loader.offFor(loaderName + 'attempting')\r\n            DataStorage.deleteType('orgAppsBeingRequested')\r\n            AppRequests.clear(); // clears app requests if the request goes through\r\n            DataStorage.setType('orgAppsBeingRequested',{});\r\n            orgAppRequestReview.success=true\r\n            $timeout(() => {\r\n                 $state.go('organization.applications',{orgId:User.user.organization.id});\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n            APIError.onFor(loaderName + 'requestError')\r\n            Loader.offFor(loaderName + 'attempting')\r\n        })\r\n    }\r\n\r\n    orgAppRequestReview.updateSearch = (nameSearch) => {\r\n        orgAppRequestReview.search = nameSearch;\r\n    };\r\n\r\n    orgAppRequestReview.showTac= (application)=>{\r\n        if (application.tac) {\r\n            orgAppRequestReview.tacContent=application.tac.tacText\r\n            orgAppRequestReview.step=2\r\n        }\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgApplicationDetailsCtrl', function(API,APIHelpers,APIError,Loader,Sort,User,$q,$scope,$state,$stateParams) {\r\n\r\n    const orgApplicationDetails = this;\r\n    const organizationId = $stateParams.orgId\r\n    const serviceId = $stateParams.appId;\r\n    const loaderName = 'orgApplicationDetails.';\r\n    orgApplicationDetails.stateParamsOrgId=$stateParams.orgId\r\n\r\n    orgApplicationDetails.sortFlag = true;\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const checkIfRequestable = (organizationId, relatedAppsArray) => {\r\n    \tif (relatedAppsArray) {\r\n\t    \tAPI.cui.getOrganizationRequestableApps({organizationId: organizationId})\r\n\t    \t.then((res) => {\r\n\t    \t\trelatedAppsArray.forEach((app) => {\r\n\t    \t\t\tlet requestable = _.find(res, (id) => { return app.id = id });\r\n\t    \t\t\tif (requestable) {\r\n\t    \t\t\t\tapp.requestable = true;\r\n\t    \t\t\t}\r\n\t    \t\t});\r\n\t    \t})\r\n            .then(() => {\r\n                $scope.$digest();\r\n            });\r\n    \t}\r\n    };\r\n\r\n    const getGrantArrayData = (grantArray) => {\r\n        let promises = [];\r\n\r\n        Loader.onFor(loaderName + 'loadingPageData');\r\n\r\n        grantArray.forEach((grant) => {\r\n            promises.push(\r\n                API.cui.getPerson({personId: grant.grantee.id})\r\n                .then((res) => {\r\n                    grant.person = res;\r\n                    return API.cui.getOrganization({organizationId: grant.person.organization.id});\r\n                })\r\n                .then((res) => {\r\n                    grant.organization = res;\r\n                    return API.cui.getPersonPackageClaims({grantee: grant.person.organization.id, packageId: grant.servicePackage.id});\r\n                })\r\n                .then((res) => {\r\n                    grant.claims = res.packageClaims;\r\n                })\r\n            );\r\n        });\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n            orgApplicationDetails.grantList = grantArray;\r\n            Loader.offFor(loaderName + 'loadingPageData');\r\n        })\r\n        .catch((error) => {\r\n            Loader.offFor(loaderName + 'loadingPageData');\r\n            APIError.onFor(loaderName + 'grants: ', error);\r\n        });\r\n    };\r\n\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(loaderName + 'app');\r\n\r\n    API.cui.getOrganization({organizationId: organizationId})\r\n    .then((res) => {\r\n        orgApplicationDetails.organization = res\r\n        return API.cui.getOrganizationGrantedApps({organizationId: organizationId, qs: [['service.id', serviceId]]});\r\n    })\r\n    .then((res) => {\r\n    \torgApplicationDetails.application = res[0];\r\n    \treturn API.cui.getOrganizationRequestableApps({organizationId: organizationId, qs: [['service.id', serviceId]]});\r\n    })\r\n    .then((res) => {\r\n    \torgApplicationDetails.application.bundledApps = res[0].bundledApps;\r\n    \torgApplicationDetails.application.relatedApps = res[0].relatedApps;\r\n    \t/*return API.cui.getPackageGrants    ({qs: [\r\n    \t\t['grantedPackageId', orgApplicationDetails.application.servicePackage.id],\r\n    \t\t['granteeType', 'person']\r\n    \t]});*/\r\n        Loader.offFor(loaderName + 'app');\r\n        checkIfRequestable(organizationId, orgApplicationDetails.application.relatedApps);\r\n         $scope.$apply();\r\n    })\r\n   /* .then((res) => {\r\n        Loader.offFor(loaderName + 'app');\r\n        orgApplicationDetails.unparsedGrantList = res;\r\n        getGrantArrayData(orgApplicationDetails.unparsedGrantList);*/\r\n        /*Loader.onFor(loaderName + 'user');*/\r\n        /*checkIfRequestable(organizationId, orgApplicationDetails.application.relatedApps);*/\r\n        /*return API.cui.getPersons({qs: [\r\n            ['organization.id', organizationId]\r\n        ]});*//*Loader.offFor(loaderName + 'user');*/\r\n   /* })*/\r\n    /*.then((res) => {\r\n        orgApplicationDetails.grantList = res;\r\n        Loader.offFor(loaderName + 'user');\r\n        $scope.$apply();\r\n    })*/\r\n    .fail((error) => {\r\n    \tAPIError.onFor(loaderName + 'grants: ', error);\r\n        Loader.offFor(loaderName + 'user');\r\n    });\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgApplicationDetails.sort = (sortValue) => { \r\n        Sort.listSort(orgApplicationDetails.userList, sortValue, orgApplicationDetails.sortFlag);\r\n        orgApplicationDetails.sortFlag =! orgApplicationDetails.sortFlag;\r\n    };\r\n\r\n    orgApplicationDetails.parseGrantUsersByStatus = (status) => {\r\n        if (status === 'all') {\r\n            orgApplicationDetails.grantList = orgApplicationDetails.unparsedGrantList;\r\n        }\r\n        else {\r\n            let filteredGrantUsers = _.filter(orgApplicationDetails.unparsedGrantList, function(grant) {\r\n                return grant.person.status === status;\r\n            });\r\n            orgApplicationDetails.grantList = filteredGrantUsers;\r\n        }\r\n    };\r\n\r\n    orgApplicationDetails.newGrants = () => {\r\n        $state.go('applications.orgApplications.newGrant', {appId: serviceId});\r\n    };\r\n\r\n    orgApplicationDetails.switchDivision = (organization) => {\r\n        Loader.onFor(loaderName + 'loadingPageData');\r\n\r\n        API.cui.getGrants({qs: [\r\n            ['grantedPackageId', orgApplicationDetails.application.servicePackage.id],\r\n            ['granteeType', 'person'],\r\n            ['organization.id', organization.id]\r\n        ]})\r\n        .then((res) => {\r\n            orgApplicationDetails.unparsedGrantList = res;\r\n            getGrantArrayData(orgApplicationDetails.unparsedGrantList);\r\n            Loader.offFor(loaderName + 'loadingPageData');\r\n        })\r\n        .fail((error) => {\r\n            APIError.onFor(loaderName + 'grants: ', error);\r\n        });\r\n    };\r\n\r\n    orgApplicationDetails.requestRelatedApp = (service) => {\r\n        let data = {\r\n            requestor: {\r\n                id: organizationId,\r\n                type: 'organization'  \r\n            } ,\r\n            'servicePackage': {\r\n                id: service.packageId\r\n            }\r\n        };\r\n\r\n        Loader.onFor(loaderName + 'appRequest');\r\n\r\n        API.cui.postRequest({data: data})\r\n        .then(() => {\r\n            service.requestable = false;\r\n            Loader.offFor(loaderName + 'appRequest');\r\n            $scope.$digest();\r\n        })\r\n        .fail((error) => {\r\n            APIError.onFor(loaderName + 'appRequest')\r\n            console.log(error);\r\n            $scope.$digest();\r\n        });\r\n    };\r\n\r\n\r\n    orgApplicationDetails.mobileTabs = (tab) =>{\r\n\r\n        if(tab == 'bundled'){\r\n            orgApplicationDetails.mobileTabs.bundled   =   true;\r\n            orgApplicationDetails.mobileTabs.related   =   false;\r\n        }else if(tab == 'related'){\r\n            orgApplicationDetails.mobileTabs.bundled   =   false;\r\n            orgApplicationDetails.mobileTabs.related   =   true;\r\n        }\r\n    };\r\n\r\n    orgApplicationDetails.suspendApplication = (organization) => {\r\n        Loader.onFor(loaderName + 'app');\r\n\r\n        var suspendObj= {\r\n                \"grantee\":{\r\n                  \"id\":orgApplicationDetails.application.owningOrganization.id,\r\n                  \"type\":\"organization\",\r\n                  \"realm\":orgApplicationDetails.application.realm\r\n                },\r\n                \"servicePackage\":{\r\n                  \"id\":orgApplicationDetails.application.servicePackage.id,\r\n                  \"type\":\"servicepackage\",\r\n                  \"realm\":orgApplicationDetails.application.realm\r\n                },\r\n                \"justification\":\"Suspending Organization Application\"\r\n                };\r\n\r\n        API.cui.suspendOrgPkg({data: suspendObj})\r\n        .then((res) => {\r\n            orgApplicationDetails.success='true';\r\n            Loader.offFor(loaderName + 'app');\r\n            $timeout(() => {\r\n                $state.go('applications.orgApplications.applicationList');\r\n            }, 3000);\r\n        })\r\n        .fail((error) => {\r\n            Loader.offFor(loaderName + 'app');\r\n            orgApplicationDetails.suspendError=true;\r\n            $scope.$apply();\r\n            /*APIError.onFor(loaderName + 'grants: ', error);*/\r\n        });\r\n    };\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n});\r\nangular.module('organization')\r\n.controller('organizationApplicationsCtrl', function(API,Sort,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\r\n    const organizationApplications = this;\r\n    organizationApplications.stateParamsOrgId=$stateParams.orgId\r\n\r\n    organizationApplications.loading = true;\r\n    organizationApplications.search = {orgId:organizationApplications.stateParamsOrgId};\r\n    organizationApplications.search.page = organizationApplications.search.page || 1;\r\n    organizationApplications.paginationPageSize = organizationApplications.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    organizationApplications.search.pageSize = organizationApplications.paginationPageSize;\r\n\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) organizationApplications.search[property] = undefined;\r\n        organizationApplications.search[property] === firstValue ? organizationApplications.search[property] = secondValue : organizationApplications.search[property] = firstValue;\r\n    };*/\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) {\r\n            organizationApplications.search[property] = undefined;\r\n            return\r\n        }\r\n        organizationApplications.search[property] = organizationApplications.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }*/\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            organizationApplications.search[property] = undefined\r\n            return\r\n        }\r\n        organizationApplications.search[property] = organizationApplications.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    const getPackageServices = (ArrayOfPackages) => {\r\n        let services = [];\r\n\r\n        ArrayOfPackages.forEach((servicePackage) => {\r\n            API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\r\n            .then((res) => {\r\n                res.forEach((service) => {\r\n                    services.push(service);\r\n                });\r\n            });\r\n        });\r\n\r\n        return services;\r\n    };\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            organizationApplications.loading = false;\r\n        }\r\n        else {\r\n            organizationApplications.search.name = $stateParams.name;\r\n            organizationApplications.search.category = $stateParams.category;\r\n            organizationApplications.search.sortBy = $stateParams.sortBy;\r\n            organizationApplications.search.refine = $stateParams.refine;\r\n            if($stateParams.page)\r\n                organizationApplications.search.page = parseInt($stateParams.page);\r\n            if($stateParams.pageSize)\r\n                organizationApplications.search.pageSize = parseInt($stateParams.pageSize);\r\n\r\n            \r\n            API.cui.getOrgAppCategories({organizationId:organizationApplications.stateParamsOrgId})\r\n            .then((res)=>{\r\n                organizationApplications.categories = res;\r\n                $scope.$digest();\r\n            })\r\n            .fail((err)=>{\r\n               \r\n            });\r\n\r\n        }\r\n\r\n        let queryParams = [['page', String(organizationApplications.search.page)], ['pageSize', String(organizationApplications.search.pageSize)]];\r\n        const promises = [];\r\n        const opts = {\r\n            organizationId: organizationApplications.stateParamsOrgId,\r\n            qs: queryParams\r\n        };\r\n\r\n        if (organizationApplications.search.name) queryParams.push(['service.name', organizationApplications.search.name]);\r\n        if (organizationApplications.search.category) queryParams.push(['service.category', organizationApplications.search.category]);\r\n        // sortBy: +/-service.name, +/-service.creation, +/-grant.instant\r\n        if (organizationApplications.search.sortBy) queryParams.push(['sortBy', organizationApplications.search.sortBy]);\r\n\r\n        switch (organizationApplications.search.refine) {\r\n            case 'active':\r\n            case 'suspended':\r\n                queryParams.push(['grant.status', organizationApplications.search.refine]);\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n              /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                break;\r\n            case 'pending':\r\n                /*promises.push(\r\n                    API.cui.getOrgPendingServicePackages({qs: [['requestor.id', organizationId], ['requestor.type', 'organization']]})\r\n                    .then((res) => {\r\n                        return getPackageServices(res);\r\n                    }),\r\n                    API.cui.getOrganizationRequestableCount({organizationId: organizationId})\r\n                );*/\r\n                queryParams.push(['grant.status', organizationApplications.search.refine]);\r\n               /* promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n            case undefined:\r\n                /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n        }\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n            organizationApplications.appList = res[0];\r\n            organizationApplications.count = res[1];\r\n            /*organizationApplications.count = res[0].length;*/\r\n            organizationApplications.loading = false;\r\n            if (organizationApplications.reRenderPaginate) organizationApplications.reRenderPaginate();\r\n        })\r\n        .catch(err => {\r\n            organizationApplications.loadingError=true\r\n            organizationApplications.loading = false;\r\n        })\r\n    };\r\n    // get Organization to display name\r\n    API.cui.getOrganization({organizationId:organizationApplications.stateParamsOrgId})\r\n    .then(res => {\r\n        organizationApplications.organization=res;\r\n    })\r\n    onLoad(false);\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    organizationApplications.pageChange = (newpage) => {\r\n        organizationApplications.updateSearch('page', newpage);\r\n    };\r\n\r\n    organizationApplications.updateSearchByName = () => {\r\n        organizationApplications.updateSearch('name',organizationApplications.search['name'])\r\n    }\r\n\r\n    organizationApplications.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType){\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name');\r\n                break;\r\n            case 'date':\r\n                switchBetween('sortBy', '+grant.instant', '-grant.instant');\r\n                break;\r\n            case 'status':\r\n                organizationApplications.search.page = 1;\r\n                organizationApplications.search.refine = updateValue;\r\n                break;\r\n            case 'category':\r\n                organizationApplications.search.page = 1;\r\n                organizationApplications.search.category = $filter('cuiI18n')(updateValue);\r\n                break;\r\n            case 'name':\r\n                organizationApplications.search.page = 1\r\n                break\r\n        }\r\n\r\n        // Updates URL, doesn't change state\r\n        $state.transitionTo('organization.applications', organizationApplications.search, {notify: false});\r\n        onLoad(true);\r\n    };\r\n\r\n    organizationApplications.goToDetails = (application) => {\r\n        const opts = {\r\n            appId: application.id,\r\n            orgId: application.owningOrganization.id\r\n        };\r\n        $state.go('organization.applicationDetails', opts);\r\n    };\r\n\r\n    // ON CLICK FUNCTIONS END ---------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgAppSearchCtrl',function(API,DataStorage,Loader,User,$pagination,$q,$state,$stateParams) {\r\n\r\n    const orgAppSearch = this;\r\n    const loaderName = 'orgAppSearch.loading';\r\n    orgAppSearch.stateParamsOrgId=User.user.organization.id;\r\n\r\n    orgAppSearch.packageRequests = DataStorage.getType('orgAppsBeingRequested', User.user.id) || {};\r\n    orgAppSearch.appCheckbox = {};\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const processNumberOfRequestedApps = (pkgRequest) => {\r\n        if (pkgRequest) orgAppSearch.numberOfRequests++;\r\n        else orgAppSearch.numberOfRequests--;\r\n    };\r\n\r\n    const updateViewList = (list) => {\r\n        let deferred= $q.defer()\r\n        orgAppSearch.viewList=[]\r\n        let qs=[]\r\n        let apiPromises = []\r\n        angular.forEach(list, (app,parentIndex) => {\r\n            // Child App and Parent app requested by user\r\n            if(app.servicePackage.parent&&app.relatedApps){\r\n                let flag=false\r\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\r\n                    if (_.find(list,{id:realtedApp.id})) {\r\n                        flag=true\r\n                    }\r\n                    else{\r\n                        qs.push(['service.id',realtedApp.id])\r\n                    }\r\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\r\n                        apiPromises.push(API.cui.getOrganizationsRequestableApps({organizationId: User.user.organization.id,qs:qs}))\r\n                        qs=[]\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                orgAppSearch.viewList.push(app)\r\n            }\r\n        })\r\n        $q.all(apiPromises)\r\n        .then(res => {\r\n            angular.forEach(res, (app) => {\r\n                if (orgAppSearch.search.name) {\r\n                    app[0].expanded=true\r\n                }\r\n                orgAppSearch.viewList.push(...app)\r\n                orgAppSearch.list.push(...app)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"There was an error loading parent requestable apps\")\r\n                deferred.reject(err)\r\n        })\r\n        return deferred.promise\r\n    }\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName);\r\n        }\r\n        else { \r\n            Loader.onFor(loaderName);\r\n            // pre populate fields based on state params on first load\r\n            let numberOfRequests = 0;\r\n\r\n            Object.keys(orgAppSearch.packageRequests).forEach(function(appId) { \r\n                // Gets the list of package requests saved in memory\r\n                // This sets the checkboxes back to marked when the user clicks back after being in request review\r\n                orgAppSearch.appCheckbox[appId] = true;\r\n                numberOfRequests++;\r\n            });\r\n            \r\n            orgAppSearch.numberOfRequests = numberOfRequests;\r\n\r\n            orgAppSearch.search = {};\r\n            orgAppSearch.search.name = $stateParams.name;\r\n            orgAppSearch.search.category = $stateParams.category;\r\n            orgAppSearch.search.page = parseInt($stateParams.page);\r\n            orgAppSearch.search.pageSize = parseInt($stateParams.pageSize);\r\n        }\r\n\r\n        let query = [];\r\n\r\n        if (orgAppSearch.search.name) query.push(['service.name',orgAppSearch.search.name]);\r\n        if (orgAppSearch.search.category) query.push(['service.category',orgAppSearch.search.category]);\r\n\r\n        orgAppSearch.search.pageSize = orgAppSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0] || 25;\r\n        query.push(['pageSize',String(orgAppSearch.search.pageSize)]);\r\n\r\n        orgAppSearch.search.page = orgAppSearch.search.page || 1;\r\n        query.push(['page',String(orgAppSearch.search.page)]);\r\n\r\n        let opts = {\r\n            organizationId: User.user.organization.id,\r\n            useCuid:true,\r\n            qs: query\r\n        };\r\n        \r\n        const promises = [API.cui.getOrganizationsRequestableApps(opts), API.cui.getOrganizationRequestableCount(opts)];\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n             orgAppSearch.list = res[0];\r\n             orgAppSearch.count = res[1];\r\n             updateViewList(res[0])\r\n             .then(() =>{\r\n                Loader.offFor(loaderName);\r\n             })\r\n             \r\n        });\r\n    };\r\n\r\n    onLoad(false);\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    orgAppSearch.pageChange = (newpage) => {\r\n        orgAppSearch.updateSearch('page', newpage);\r\n    };\r\n\r\n    orgAppSearch.updateSearch = function(updateType, updateValue) {\r\n        if (updateType!=='page') {\r\n            orgAppSearch.search.page = 1\r\n        }\r\n        orgAppSearch.search.orgId=orgAppSearch.stateParamsOrgId\r\n        // Update current URL without changing the state\r\n        $state.transitionTo('organization.search', orgAppSearch.search, {notify:false});\r\n        onLoad(true);\r\n    };\r\n\r\n    orgAppSearch.toggleRequest = function(application) {\r\n        if (!orgAppSearch.packageRequests[application.id]) orgAppSearch.packageRequests[application.id] = application;\r\n        else delete orgAppSearch.packageRequests[application.id];\r\n\r\n        DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests);\r\n        processNumberOfRequestedApps(orgAppSearch.packageRequests[application.id]);\r\n    };\r\n\r\n   /* orgAppSearch.saveRequestsAndCheckout = function() {\r\n        DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests);\r\n        $state.go('organization.newRequestReview');\r\n    };*/\r\n\r\n    \r\n    orgAppSearch.saveRequestsAndCheckout = function() {\r\n        let qs = []\r\n        //needed to set a flag for related apps to display in review page\r\n        angular.forEach(orgAppSearch.packageRequests,(request)=>{\r\n            if (request.relatedApps) {\r\n                request.relatedAppSelectedCount=0\r\n                request.relatedApps.forEach(relatedApp=>{\r\n                    if(_.find(orgAppSearch.packageRequests,{id:relatedApp.id})){\r\n                        relatedApp.selected=true\r\n                        request.relatedAppSelectedCount++\r\n                    }\r\n                    else{\r\n                        relatedApp.selected=false\r\n                    }\r\n                })\r\n            }\r\n            // If Selected Related app full details not available need to fetch it\r\n            if (!request.servicePackage) {\r\n                qs.push(['service.id',request.id])\r\n            }\r\n        })\r\n        if (qs.length!==0) {\r\n            API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs})\r\n            .then(res => {\r\n                res.forEach(app =>{\r\n                    orgAppSearch.packageRequests[app.id] = app\r\n                })\r\n                /*AppRequests.set(orgAppSearch.packageRequests);*/\r\n                DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests)\r\n                $state.go('organization.newRequestReview');\r\n            })\r\n        }\r\n        else{\r\n            /*AppRequests.set(orgAppSearch.packageRequests);*/\r\n            DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests)\r\n            $state.go('organization.newRequestReview');\r\n        }\r\n    };\r\n    //Related apps will always appear inside body, So need to select parent if it is selected \r\n    orgAppSearch.checkRelatedAppsBody= function(relatedApp, parent){\r\n        if (_.find(orgAppSearch.list,{id:relatedApp.id})) {\r\n            orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:relatedApp.id}))\r\n        }\r\n        else{\r\n            orgAppSearch.list.push(relatedApp)\r\n            orgAppSearch.toggleRequest(relatedApp)\r\n        }           \r\n        orgAppSearch.checkRelatedAndBundledApps(_.find(orgAppSearch.list,{id:relatedApp.id}),parent)\r\n    };\r\n\r\n//Deselect Child apps If it has any and select parent if checked from parent body \r\n    orgAppSearch.checkRelatedAndBundledApps=function(application,parent){\r\n        //if unchecked the checkbox\r\n        if (!orgAppSearch.packageRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!parent) {\r\n                application.relatedApps&&application.relatedApps.forEach((relatedApp)=>{\r\n                    if (orgAppSearch.appCheckbox[relatedApp.id]) {\r\n                        orgAppSearch.appCheckbox[relatedApp.id]=!orgAppSearch.appCheckbox[relatedApp.id]\r\n                        orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:relatedApp.id}))\r\n                    }\r\n                })\r\n                orgAppSearch.checkBundledApps(application,false)\r\n            }      \r\n        }else{\r\n            if (parent) {\r\n                if (!orgAppSearch.appCheckbox[parent.id]) {\r\n                    orgAppSearch.appCheckbox[parent.id]=true\r\n                    orgAppSearch.toggleRequest(parent)\r\n                    orgAppSearch.checkBundledApps(parent,true)\r\n                }\r\n            }else\r\n            orgAppSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    orgAppSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                orgAppSearch.appCheckbox[bundledApp.id]=check\r\n                if (_.find(orgAppSearch.list,{id:bundledApp.id}))\r\n                    orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:bundledApp.id}))\r\n            })\r\n        }\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsCtrl', function(API, Loader, $scope, $stateParams,APIError,APIHelpers,$timeout,$q) {\r\n\r\n    const orgDetails = this\r\n    const scopeName = 'orgDetails.'\r\n    orgDetails.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userList\"\r\n    }\r\n    orgDetails.mobileHandler = 'profile'\r\n    orgDetails.profileUsersSwitch = 'profile'\r\n    orgDetails.appsHierarchySwitch = 'apps'\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(scopeName + 'orgInfo')\r\n/*\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        orgDetails.user = res\r\n        CuiMobileNavFactory.setTitle(res.name.given + '.' + res.name.surname)\r\n    })\r\n    .fail(error => {\r\n        console.error('Failed getting user information')\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(scopeName + 'userInfo')\r\n        $scope.$digest()\r\n    })*/\r\n\r\n\r\n    const apiPromises = [\r\n        API.cui.getOrganization({ organizationId: $stateParams.orgId  })\r\n    ]\r\n\r\n    $q.all(apiPromises)\r\n    .then(([organization]) => {\r\n        // CuiMobileNavFactory.setTitle(user.name.given + '.' + user.name.surname)\r\n        orgDetails.organization = Object.assign({}, organization);\r\n        Loader.offFor(scopeName + 'orgInfo')\r\n    })\r\n    .catch(() => {\r\n        Loader.offFor(scopeName + 'orgInfo')\r\n        APIError.onFor('orgDetails.org')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------------- ON CLICK START ---------------------------------------------- */\r\n\r\n    /* --------------------------------------------- ON CLICK END ---------------------------------------------- */\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsAppsCtrl',function(API,$stateParams,$q,$state,DataStorage,$pagination,Loader,$filter,$scope) {\r\n    'use strict';\r\n\r\n\t\r\n    const orgDetailsApps = this;\r\n    const scopeName = 'orgDetailsApps.'\r\n    orgDetailsApps.stateParamsOrgId=$stateParams.orgId\r\n\r\n    Loader.onFor('orgDetailsApps.init')\r\n    orgDetailsApps.search = {orgId:orgDetailsApps.stateParamsOrgId};\r\n    orgDetailsApps.search.page = orgDetailsApps.search.page || 1;\r\n    orgDetailsApps.paginationPageSize = orgDetailsApps.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n    orgDetailsApps.search.pageSize = orgDetailsApps.paginationPageSize;\r\n\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) orgDetailsApps.search[property] = undefined;\r\n        orgDetailsApps.search[property] === firstValue ? orgDetailsApps.search[property] = secondValue : orgDetailsApps.search[property] = firstValue;\r\n    };*/\r\n\r\n    /*const switchBetween = (property, firstValue, secondValue) => { \r\n        // helper function to switch a property between two values or set to undefined if values not passed;\r\n        if(!firstValue) {\r\n            orgDetailsApps.search[property] = undefined;\r\n            return\r\n        }\r\n        orgDetailsApps.search[property] = orgDetailsApps.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }*/\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            orgDetailsApps.search[property] = undefined\r\n            return\r\n        }\r\n        orgDetailsApps.search[property] = orgDetailsApps.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    const getPackageServices = (ArrayOfPackages) => {\r\n        let services = [];\r\n\r\n        ArrayOfPackages.forEach((servicePackage) => {\r\n            API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\r\n            .then((res) => {\r\n                res.forEach((service) => {\r\n                    services.push(service);\r\n                });\r\n            });\r\n        });\r\n\r\n        return services;\r\n    };\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.offFor('orgDetailsApps.init')\r\n        }\r\n        else {\r\n            orgDetailsApps.search.name = $stateParams.name;\r\n            orgDetailsApps.search.category = $stateParams.category;\r\n            orgDetailsApps.search.sortBy = $stateParams.sortBy;\r\n            orgDetailsApps.search.refine = $stateParams.refine;\r\n            if($stateParams.page)\r\n                orgDetailsApps.search.page = parseInt($stateParams.page);\r\n            if($stateParams.pageSize)\r\n                orgDetailsApps.search.pageSize = parseInt($stateParams.pageSize);\r\n\r\n            \r\n            API.cui.getOrgAppCategories({organizationId:orgDetailsApps.stateParamsOrgId})\r\n            .then((res)=>{\r\n                orgDetailsApps.categories = res;\r\n                $scope.$digest();\r\n            })\r\n            .fail((err)=>{\r\n               \r\n            });\r\n\r\n        }\r\n\r\n        let queryParams = [['page', String(orgDetailsApps.search.page)], ['pageSize', String(orgDetailsApps.search.pageSize)]];\r\n        const promises = [];\r\n        const opts = {\r\n            organizationId: orgDetailsApps.stateParamsOrgId,\r\n            qs: queryParams\r\n        };\r\n\r\n        if (orgDetailsApps.search.name) queryParams.push(['service.name', orgDetailsApps.search.name]);\r\n        if (orgDetailsApps.search.category) queryParams.push(['service.category', orgDetailsApps.search.category]);\r\n        // sortBy: +/-service.name, +/-service.creation, +/-grant.instant\r\n        if (orgDetailsApps.search.sortBy) queryParams.push(['sortBy', orgDetailsApps.search.sortBy]);\r\n\r\n        switch (orgDetailsApps.search.refine) {\r\n            case 'active':\r\n            case 'suspended':\r\n                queryParams.push(['grant.status', orgDetailsApps.search.refine]);\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n              /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                break;\r\n            case 'pending':\r\n                /*promises.push(\r\n                    API.cui.getOrgPendingServicePackages({qs: [['requestor.id', organizationId], ['requestor.type', 'organization']]})\r\n                    .then((res) => {\r\n                        return getPackageServices(res);\r\n                    }),\r\n                    API.cui.getOrganizationRequestableCount({organizationId: organizationId})\r\n                );*/\r\n                queryParams.push(['grant.status', orgDetailsApps.search.refine]);\r\n               /* promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n            case undefined:\r\n                /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\r\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\r\n                break;\r\n        }\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n            orgDetailsApps.appList = res[0];\r\n            orgDetailsApps.count = res[1];\r\n            /*orgDetailsApps.count = res[0].length;*/\r\n            Loader.offFor('orgDetailsApps.init')\r\n            if (orgDetailsApps.reRenderPaginate) orgDetailsApps.reRenderPaginate();\r\n        })\r\n        .catch(err => {\r\n            orgDetailsApps.loadingError=true\r\n            Loader.offFor('orgDetailsApps.init')\r\n        })\r\n    };\r\n    // get Organization to display name\r\n    API.cui.getOrganization({organizationId:orgDetailsApps.stateParamsOrgId})\r\n    .then(res => {\r\n        orgDetailsApps.organization=res;\r\n    })\r\n    onLoad(false);\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    orgDetailsApps.pageChange = (newpage) => {\r\n        orgDetailsApps.updateSearch('page', newpage);\r\n    };\r\n\r\n    orgDetailsApps.updateSearchByName = () => {\r\n        orgDetailsApps.updateSearch('name',orgDetailsApps.search['name'])\r\n    }\r\n\r\n    orgDetailsApps.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType){\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name');\r\n                break;\r\n            case 'date':\r\n                switchBetween('sortBy', '+grant.instant', '-grant.instant');\r\n                break;\r\n            case 'status':\r\n                orgDetailsApps.search.page = 1;\r\n                orgDetailsApps.search.refine = updateValue;\r\n                break;\r\n            case 'category':\r\n                orgDetailsApps.search.page = 1;\r\n                orgDetailsApps.search.category = $filter('cuiI18n')(updateValue);\r\n                break;\r\n            case 'name':\r\n                orgDetailsApps.search.page = 1\r\n                break\r\n        }\r\n\r\n        // Updates URL, doesn't change state\r\n        $state.transitionTo('organization.directory.orgDetails', orgDetailsApps.search, {notify: false});\r\n        onLoad(true);\r\n    };\r\n\r\n    orgDetailsApps.goToDetails = (application) => {\r\n        const opts = {\r\n            appId: application.id,\r\n            orgId: application.owningOrganization.id\r\n        };\r\n        $state.go('organization.applicationDetails', opts);\r\n    };\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsHierarchyCtrl',function(API,APIError,Loader,User,$scope,$state,$stateParams) {\r\n\t'use strict';\r\n    const orgDetailsHierarchy = this\r\n    const pageLoader = 'orgDetailsHierarchy.loading'\r\n    orgDetailsHierarchy.stateParamsOrgId=$stateParams.orgId\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    const addExpandedProperty = (childOrgs,parentOrg) => {\r\n\r\n        childOrgs.forEach(org => {\r\n            // Need to remove org if it is pending\r\n            if (org.status===\"PENDING\") {\r\n                parentOrg.children.splice(index,1)\r\n                return\r\n            }\r\n            if (org.children) {\r\n                org.expanded=false\r\n                addExpandedProperty(org.children,org)\r\n            }\r\n        })\r\n    }\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    Loader.onFor(pageLoader)\r\n    API.cui.getOrganizationHierarchy({organizationId:orgDetailsHierarchy.stateParamsOrgId })\r\n    .done(res => {\r\n        // Put hierarchy response in an array as the hierarchy directive expects an array\r\n        orgDetailsHierarchy.organizationHierarchy = [res]\r\n        // add expended property to all the org with children directive needs it to work for \r\n        // expandable and collapsable function\r\n        if (orgDetailsHierarchy.organizationHierarchy[0].children) {\r\n            addExpandedProperty(orgDetailsHierarchy.organizationHierarchy[0].children,orgDetailsHierarchy.organizationHierarchy[0])\r\n        }\r\n    })\r\n    .fail(err => {\r\n        APIError.onFor(pageLoader, err)\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(pageLoader)\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n    /* */\r\n    orgDetailsHierarchy.goToOrgPrfile = (org) => {\r\n        $state.go('organization.directory.orgDetails',{orgId:org.id})\r\n    }\r\n\r\n    orgDetailsHierarchy.toggleExpand = (object) => {\r\n        object.expanded=!object.expanded\r\n        // let updateOrgChildren= (orgs) => {\r\n        //     orgs.forEach(org => {\r\n        //         if (org.id===object.id) {\r\n        //             org.expanded=object.expanded\r\n        //             return;\r\n        //         }\r\n        //         if (org.children) {\r\n        //             updateOrgChildren(org.children)\r\n        //         }\r\n        //     })\r\n            \r\n        //     if (true) {};\r\n        // }\r\n        // updateOrgChildren(orgDetailsHierarchy.organizationHierarchy[0].children)\r\n        $scope.$digest()\r\n    }\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsProfileCtrl', function(Loader, Organization,$stateParams,$q,APIError) {\r\n\r\n\tconst orgDetailsProfile = this\r\n    const scopeName = 'orgDetailsProfile.'\r\n\r\n    orgDetailsProfile.stateParamsOrgId=$stateParams.orgId\r\n    let orgPromise=[]    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    Loader.onFor('orgDetailsProfile.init')\r\n    orgPromise.push(Organization.getOrganization($stateParams.orgId))\r\n    $q.all(orgPromise)\r\n    .then(res => {\r\n        if (orgPromise.length!==0) {\r\n            orgDetailsProfile.organization=res[0]\r\n        }\r\n            Organization.initOrganizationProfile(orgDetailsProfile.organization.id, orgDetailsProfile.organization.passwordPolicy.id, orgDetailsProfile.organization.authenticationPolicy.id)\r\n        .then(res => {\r\n            orgDetailsProfile.securityAdmins = res.admins\r\n            orgDetailsProfile.passwordPolicy = res.passwordPolicy\r\n            orgDetailsProfile.authenticationPolicy=res.authenticationPolicy\r\n            Loader.offFor('orgDetailsProfile.init')\r\n        })\r\n        .catch(err => {\r\n            console.error(\"there was an error fetching additional org details\" +err)\r\n            Loader.offFor('orgDetailsProfile.init')\r\n            APIError.onFor('orgDetailsProfile.init')\r\n        })\r\n    })\r\n    .catch(err => {\r\n        console.error(\"there was an error fetching org details\" +err)\r\n        Loader.offFor('orgDetailsProfile.init')\r\n        APIError.onFor('orgDetailsProfile.init')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgDetailsUsersCtrl', function(API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,UserList,$filter,$pagination,$q,$state,$stateParams) {\r\n    \r\n    const orgDetailsUsers = this\r\n    const scopeName = 'orgDetailsUsers.'\r\n    orgDetailsUsers.stateParamsOrgId=$stateParams.orgId\r\n    orgDetailsUsers.search = {}\r\n    orgDetailsUsers.sortBy = {}\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        orgDetailsUsers.search[property] === firstValue\r\n            ? orgDetailsUsers.search[property] = secondValue\r\n            : orgDetailsUsers.search[property] = firstValue\r\n    }\r\n\r\n    const getUserListAppCount = (userList) => {\r\n        userList.forEach(user => {\r\n            API.cui.getPersonGrantedAppCount({personId: user.id})\r\n            .then(res => {\r\n                user.appCount = res\r\n            })\r\n            .fail(error => {\r\n                user.appCount = '...'\r\n            })\r\n        })\r\n    }\r\n\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    const initDirectory = (organizationId) => {\r\n        orgDetailsUsers.search['organization.id'] = organizationId || $stateParams.orgId || User.user.organization.id\r\n        orgDetailsUsers.search.pageSize = orgDetailsUsers.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        let apiCalls = [\r\n            UserList.getUsers({ qs: APIHelpers.getQs(orgDetailsUsers.search) }),\r\n            UserList.getUserCount({ qs: [['organization.id', orgDetailsUsers.search['organization.id']]] }),\r\n            API.cui.getOrganization({organizationId: orgDetailsUsers.search['organization.id']})\r\n        ]\r\n\r\n        Loader.onFor(scopeName + 'userList')\r\n        APIError.offFor(scopeName + 'userList')\r\n\r\n        $q.all(apiCalls)\r\n        .then(([users, userCount, organization]) => {\r\n            orgDetailsUsers.organization = organization\r\n            // orgDetailsUsers.organizationList = APIHelpers.flattenOrgHierarchy(orgHierarchy)\r\n            orgDetailsUsers.userList = users\r\n            orgDetailsUsers.userCount = userCount\r\n            orgDetailsUsers.statusData = APIHelpers.getCollectionValuesAndCount(users, 'status', true)\r\n            CuiMobileNavFactory.setTitle(organization.name)\r\n            orgDetailsUsers.reRenderPagination && orgDetailsUsers.reRenderPagination()\r\n            getUserListAppCount(orgDetailsUsers.userList)\r\n        })\r\n        .catch(error => {\r\n            APIError.onFor(scopeName + 'userList')\r\n        })\r\n        .finally(() => {\r\n            Loader.offFor(scopeName + 'userList')\r\n        })\r\n    }\r\n\r\n    orgDetailsUsers.search = Object.assign({}, $stateParams)\r\n    initDirectory()\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n\r\n    // headers=\"['cui-name', 'username', 'status']\" \r\n\r\n    orgDetailsUsers.sortingCallbacks = {\r\n      name () {\r\n          orgDetailsUsers.sortBy.sortBy = 'name'\r\n          orgDetailsUsers.sort(['name.given', 'name.surname'], orgDetailsUsers.sortBy.sortType)\r\n      },\r\n      username () {\r\n          orgDetailsUsers.sortBy.sortBy = 'username'\r\n          orgDetailsUsers.sort('username', orgDetailsUsers.sortBy.sortType)\r\n      },\r\n      status () {\r\n          orgDetailsUsers.sortBy.sortBy = 'status'\r\n          orgDetailsUsers.sort('status', orgDetailsUsers.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgDetailsUsers.sort = (sortBy, order) => {\r\n        cui.log('sort', sortBy, order)\r\n\r\n      orgDetailsUsers.userList = _.orderBy(orgDetailsUsers.userList, sortBy, order)\r\n    }\r\n\r\n    orgDetailsUsers.updateSearchParams = (page) => {\r\n        if (page) orgDetailsUsers.search.page = page \r\n        $state.transitionTo('organization.directory.orgDetails', orgDetailsUsers.search, {notify: false})\r\n        initDirectory(orgDetailsUsers.search['organization.id'])\r\n    }\r\n\r\n    orgDetailsUsers.updateSearchByName = (name) => {\r\n        orgDetailsUsers.updateSearchParams()\r\n    }\r\n    orgDetailsUsers.actionCallbacks = {\r\n        sort (sortType) {\r\n            switch(sortType) {\r\n            case 'name':\r\n                switchBetween('sortBy', '+person.name', '-person.name')\r\n                break\r\n            case 'username':\r\n                switchBetween('sortBy', '+person.username', '-person.username')\r\n                break\r\n            case 'status':\r\n                switchBetween('sortBy', '+person.status', '-person.status')\r\n                break\r\n            }\r\n\r\n            // if (!orgDetailsUsers.search.hasOwnProperty('sortBy')) orgDetailsUsers.search['sortBy'] = '+' + sortType\r\n            // else if (orgDetailsUsers.search.sortBy.slice(1) !== sortType) orgDetailsUsers.search.sortBy = '+' + sortType\r\n            // else switchBetween('sortBy', '+' + sortType, '-' + sortType)\r\n            orgDetailsUsers.updateSearchParams()\r\n        },\r\n        refine (refineType) {\r\n            if (refineType === 'all') delete orgDetailsUsers.search['status']\r\n            else {\r\n                if (!orgDetailsUsers.search.hasOwnProperty('status')) orgDetailsUsers.search['status'] = refineType\r\n                else orgDetailsUsers.search.status = refineType\r\n            }\r\n            orgDetailsUsers.updateSearchParams()\r\n        }\r\n    }\r\n\r\n    orgDetailsUsers.userClick = (clickedUser) => {\r\n        const stateOpts = {\r\n            userId: clickedUser.id,\r\n            orgId: clickedUser.organization.id,\r\n        }\r\n        if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\r\n        else $state.go('organization.directory.userDetails', stateOpts)\r\n    }\r\n\r\n    orgDetailsUsers.getOrgMembers = (organization) => {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')(organization.name))\r\n        initDirectory(organization.id)\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('userAppDetailsCtrl', function(API, $scope, $stateParams, $state, $q, APIHelpers, Loader, APIError,DataStorage,$timeout) {\r\n    let userAppDetails = this\r\n    userAppDetails.relatedApps=[]\r\n    userAppDetails.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    userAppDetails.dropDown={\r\n        claims:false,\r\n        suspend:false,\r\n        unsuspend:false,\r\n        remove:false\r\n    }\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    const getClaims = (app) => {\r\n        let deferred=$q.defer()\r\n        const packageId = app.servicePackage.id\r\n\r\n        Loader.onFor(loaderName + 'claims')\r\n        API.cui.getPersonPackageClaims({ grantee:$stateParams.userId, packageId })\r\n        .then(userClaims => {\r\n            APIError.offFor(loaderName + 'claims')\r\n            deferred.resolve(userClaims)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'claims')\r\n            deferred.reject(err)\r\n        })\r\n        .always(() => {\r\n            Loader.offFor(loaderName + 'claims')\r\n            $scope.$digest()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    // Returns claims that are associated with a package id\r\n    const getPackageClaims = (packageId) => {\r\n        let deferred=$q.defer()\r\n        API.cui.getPackageClaims({qs: [['packageId', packageId]]})\r\n        .then(packageClaims => {\r\n            APIError.offFor(loaderName + 'packageClaims')\r\n            deferred.resolve(packageClaims)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package claims')\r\n            APIError.onFor(loaderName + 'packageClaims')\r\n            deferred.reject(err)\r\n        })\r\n        .always(() => {\r\n            Loader.offFor(loaderName + 'packageClaims')\r\n            $scope.$digest()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    const getFormattedClaimData = () => {\r\n        $q.all([getClaims(userAppDetails.app),getPackageClaims(userAppDetails.app.servicePackage.id)])\r\n        .then(res => {            \r\n            userAppDetails.userClaims = res[0]\r\n            userAppDetails.packageClaims=res[1]\r\n            userAppDetails.claimSelection={}\r\n            //initialize and preselect claims which are already granted to user\r\n            userAppDetails.packageClaims.forEach(packageClaim => {\r\n                userAppDetails.claimSelection[packageClaim.claimId] = {}\r\n                let grantedClaim=_.find(userAppDetails.userClaims.packageClaims,{claimId:packageClaim.claimId})\r\n                if (grantedClaim) {\r\n                    packageClaim.claimValues.forEach(claimValue => {\r\n                        if (_.find(grantedClaim.claimValues,{claimValueId:claimValue.claimValueId})) {\r\n                            userAppDetails.claimSelection[packageClaim.claimId][claimValue.claimValueId]=true\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const getApp= (updating)=>{\r\n        if (!updating) {\r\n            Loader.onFor(loaderName + 'app')\r\n        }\r\n        API.cui.getPersonGrantedApps(opts)\r\n        .then(res => {\r\n            APIError.offFor(loaderName + 'app')\r\n            userAppDetails.app = Object.assign({}, res[0])\r\n            if (!updating) {\r\n                getFormattedClaimData()\r\n                getRelatedApps(userAppDetails.app)\r\n            }\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'app')\r\n        })\r\n        .done(() => {\r\n            Loader.offFor(loaderName + 'app')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n    const getRelatedApps=(app) => {\r\n        const packageId = app.servicePackage.id\r\n        let qs\r\n        if (app.servicePackage.parent) {\r\n            qs=[['servicePackage.id',app.servicePackage.parent.id]]\r\n        }else{\r\n            qs=[['servicePackage.parentPackage.id',app.servicePackage.id]]\r\n        }\r\n        Loader.onFor(loaderName + 'relatedApps')\r\n        let apiPromises=[\r\n        API.cui.getPersonRequestableApps({personId:API.getUser(),'qs':[['servicePackage.parentPackage.id',packageId]] }),\r\n        API.cui.getPersonGrantedApps({personId:API.getUser(),'qs':qs })\r\n        ]\r\n        $q.all(apiPromises)\r\n        .then(res=>{\r\n            APIError.offFor(loaderName + 'relatedApps')\r\n            userAppDetails.relatedApps=userAppDetails.relatedApps.concat(res[0])\r\n            userAppDetails.relatedApps=userAppDetails.relatedApps.concat(res[1])\r\n        })\r\n        .catch(err => {\r\n            APIError.onFor(loaderName + 'relatedApps')\r\n        })\r\n        .finally(()=>{\r\n            Loader.offFor(loaderName + 'relatedApps')\r\n        })\r\n    }\r\n\r\n    const buildData = (type) => {\r\n        let reason\r\n        if (type==\"suspend\") {\r\n            reason=userAppDetails.suspendReason\r\n        }else{\r\n            reason=userAppDetails.unsuspendReason\r\n        }\r\n        return {\r\n            grantee:{\r\n                id:$stateParams.userId,\r\n                type:'person'\r\n            },\r\n            servicePackage:{\r\n                id:userAppDetails.app.servicePackage.id\r\n            },\r\n            justification:reason\r\n        }\r\n\r\n    }\r\n\r\n    const buildClaimData = () => {\r\n\r\n        const buildPackageClaims = (claimsObject) => {\r\n            if (Object.keys(claimsObject).length === 0) {\r\n                return undefined;\r\n            } // if there's no claims in this claim object\r\n            let packageClaims = []\r\n            Object.keys(claimsObject).forEach(claimId => {\r\n                if (Object.keys(claimsObject[claimId]).length === 0) {\r\n                    return;\r\n                } // if no claimValues selected for that claimId\r\n                let claimValues =[]\r\n                Object.keys(claimsObject[claimId]).forEach(claimValueId => {\r\n                    if (claimsObject[claimId][claimValueId]) {//If checked\r\n                        claimValues.push({claimValueId:claimValueId})\r\n                    }\r\n                })\r\n                // const claimValues = Object.keys(claimsObject[claimId]).reduce((claims, claimValueId) => {\r\n                //     claims.push({ claimValueId })\r\n                //     return claims\r\n                // },[])\r\n                if (claimValues.length!==0) {\r\n                    packageClaims.push({\r\n                        claimId,\r\n                        claimValues\r\n                    })\r\n                }\r\n            })\r\n            return packageClaims\r\n        }\r\n        return {\r\n                data: {\r\n                    grantee: {\r\n                        id: $stateParams.userId,\r\n                        type: 'person'\r\n                    },\r\n                    servicePackage: {\r\n                        id: userAppDetails.app.servicePackage.id,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    packageClaims: buildPackageClaims(userAppDetails.claimSelection)\r\n                }\r\n            }\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    const loaderName = 'userAppDetails.'\r\n\r\n    const qs = {\r\n        'service.id': $stateParams.appId\r\n    }\r\n\r\n    const opts = {\r\n        personId: $stateParams.userId,\r\n        qs: APIHelpers.getQs(qs)\r\n    }\r\n    userAppDetails.app=DataStorage.getType('userAppDetail')\r\n    if (userAppDetails.app&& userAppDetails.app.id===$stateParams.appId) {        \r\n        getFormattedClaimData()\r\n        getRelatedApps(userAppDetails.app)\r\n        // Update application detail for any new changes during reload\r\n        // Commenting out as API is not giving full details for service.id query parameter get\r\n        //it is relying on previous page details which has full details\r\n         getApp(true)\r\n    }\r\n    else{\r\n        getApp(false)\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\r\n\r\n    userAppDetails.goToDetails = (application) => {\r\n        $state.go('applications.userAppDetails', {\r\n            'packageId':application.packageId,\r\n            'appId':application.id\r\n        })\r\n    }\r\n\r\n    userAppDetails.toggleDropDown= (type) => {\r\n        Object.keys(userAppDetails.dropDown).forEach(key => {\r\n            if (key===type) {\r\n                userAppDetails.dropDown[key]=!userAppDetails.dropDown[key]\r\n            }else{\r\n                userAppDetails.dropDown[key]=false\r\n            }\r\n        })\r\n    }\r\n    userAppDetails.suspendApp = () => {\r\n        Loader.onFor(loaderName + 'suspend')\r\n        APIError.offFor(loaderName + 'suspend')\r\n        let data=buildData('suspend')\r\n        API.cui.suspendPersonApp({data:data})\r\n        .then(res => {\r\n            userAppDetails.app.grant.status=\"suspended\"\r\n            userAppDetails.suspendAppSuccess=true\r\n            Loader.offFor(loaderName + 'suspend')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.dropDown.suspend=false\r\n                userAppDetails.suspendAppSuccess=false\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'suspend')\r\n            Loader.offFor(loaderName + 'suspend')\r\n            $scope.$digest()\r\n            console.log('There was an error suspending user App', + err)\r\n        })\r\n    }\r\n\r\n    userAppDetails.unsuspendApp = () => {\r\n        Loader.onFor(loaderName + 'unsuspend')\r\n        APIError.offFor(loaderName + 'unsuspend')\r\n        let data=buildData('unsuspend')\r\n        API.cui.unsuspendPersonApp({data:data})\r\n        .then(res => {\r\n            userAppDetails.app.grant.status=\"active\"\r\n            userAppDetails.unsuspendAppSuccess=true\r\n            Loader.offFor(loaderName + 'unsuspend')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.dropDown.unsuspend=false\r\n                userAppDetails.unsuspendAppSuccess=false\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'unsuspend')\r\n            Loader.offFor(loaderName + 'unsuspend')\r\n            $scope.$digest()\r\n            console.log('There was an error suspending user App', + err)\r\n        })\r\n    }\r\n\r\n    userAppDetails.removeApp = () => {\r\n        Loader.onFor(loaderName + 'remove')\r\n        APIError.offFor(loaderName + 'remove')\r\n        API.cui.revokePersonApp({personId:$stateParams.userId,packageId:userAppDetails.app.servicePackage.id})\r\n        .then(res => {\r\n            // userAppDetails.app.grant.status=\"removeed\"\r\n            userAppDetails.removeAppSuccess=true\r\n            Loader.offFor(loaderName + 'remove')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.removeAppSuccess=false\r\n                $state.go('organization.directory.userDetails',userAppDetails.prevState.params)\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'remove')\r\n            Loader.offFor(loaderName + 'remove')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                APIError.offFor(loaderName + 'remove')\r\n            },3000)\r\n            console.log('There was an error removing user App', + err)\r\n        })\r\n    }\r\n\r\n    userAppDetails.modifyClaims = () => {\r\n        Loader.onFor(loaderName + 'modifyClaims')\r\n        APIError.offFor(loaderName + 'modifyClaims')\r\n        API.cui.grantClaims(buildClaimData())\r\n        .then(res => {\r\n            userAppDetails.modifyClaimsSuccess=true\r\n            Loader.offFor(loaderName + 'modifyClaims')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                userAppDetails.dropDown.claims=false\r\n                userAppDetails.modifyClaimsSuccess=false\r\n            },2000)\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'modifyClaims')\r\n            Loader.offFor(loaderName + 'modifyClaims')\r\n            $scope.$digest()\r\n            console.log('There was an error updating user\\'s app claims', + err)\r\n        })\r\n        \r\n    }\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userDetailsCtrl', function(API, Loader, $scope, $stateParams,APIError,APIHelpers,$timeout,$q) {\r\n\r\n    const userDetails = this\r\n    const scopeName = 'userDetails.'\r\n    userDetails.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userList\"\r\n    }\r\n    userDetails.stateParamsOrgId=$stateParams.orgId\r\n    userDetails.mobileHandler = 'profile'\r\n    userDetails.profileRolesSwitch = 'profile'\r\n    userDetails.appsHistorySwitch = 'apps'\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    Loader.onFor(scopeName + 'userInfo')\r\n/*\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        userDetails.user = res\r\n        CuiMobileNavFactory.setTitle(res.name.given + '.' + res.name.surname)\r\n    })\r\n    .fail(error => {\r\n        console.error('Failed getting user information')\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(scopeName + 'userInfo')\r\n        $scope.$digest()\r\n    })*/\r\n\r\n\r\n    const apiPromises = [\r\n        API.cui.getPerson({\r\n            personId: $stateParams.userId\r\n        }),\r\n        API.cui.getOrganization({ organizationId: $stateParams.orgId  }),\r\n        API.cui.getPersonPassword({\r\n            personId: $stateParams.userId\r\n        })\r\n    ]\r\n\r\n    $q.all(apiPromises)\r\n    .then(([ user, organization ,password]) => {\r\n        // CuiMobileNavFactory.setTitle(user.name.given + '.' + user.name.surname)\r\n       userDetails.user = Object.assign({}, user)\r\n        userDetails.organization = Object.assign({}, organization);\r\n        userDetails.passwordAccount= Object.assign({}, password)\r\n        return API.cui.getPasswordPolicy({ policyId: userDetails.organization.passwordPolicy.id })\r\n    })\r\n    .then(res => {\r\n        userDetails.passwordPolicy = res\r\n\r\n        res.rules.forEach(rule => {\r\n            if (rule.type === 'history') {\r\n                userDetails.numberOfPasswords = rule.numberOfPasswords\r\n            }\r\n        })\r\n        Loader.offFor(scopeName + 'userInfo')\r\n    })\r\n    .catch(() => {\r\n        Loader.offFor(scopeName + 'userInfo')\r\n        APIError.onFor('userDetails.user')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------------- ON CLICK START ---------------------------------------------- */\r\n    userDetails.suspend = (personId) => {\r\n\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:true\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\r\n\r\n        const name = 'userDetails.suspend'\r\n\r\n        userDetails.suspend.reset = () => {\r\n            Loader.offFor(name)\r\n            APIError.offFor(name)\r\n            userDetails.user.suspendReason = ''\r\n            userDetails.suspend.success && delete userDetails.suspend.success\r\n        }\r\n\r\n        userDetails.suspend.reset()\r\n\r\n        userDetails.suspend.confirm = () => {\r\n            Loader.onFor(name)\r\n            APIError.offFor(name)\r\n\r\n            const reason = encodeURIComponent(userDetails.user.suspendReason)\r\n\r\n            API.cui.suspendPerson({\r\n                qs: APIHelpers.getQs({\r\n                    personId,\r\n                    reason\r\n                })\r\n            })\r\n            .then(\r\n                res => {\r\n                    APIError.offFor(name)\r\n                    userDetails.suspend.success = true\r\n                    userDetails.user.status = 'suspended'\r\n                    $timeout(userDetails.suspend.cancel, 1500)\r\n                },\r\n                err => {\r\n                    APIError.onFor(name)\r\n                }\r\n            )\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.suspend.cancel = () => {\r\n            userDetails.suspend.begun = false\r\n            userDetails.suspend.reset()\r\n        }\r\n    }\r\n\r\n    userDetails.unsuspend = (personId) => {\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:true\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\r\n\r\n        const name = 'userDetails.unsuspend'\r\n\r\n        userDetails.unsuspend.reset = () => {\r\n            Loader.offFor(name)\r\n            APIError.offFor(name)\r\n            userDetails.user.unsuspendReason = ''\r\n            userDetails.unsuspend.success && delete userDetails.unsuspend.success\r\n        }\r\n\r\n        userDetails.unsuspend.reset()\r\n\r\n        userDetails.unsuspend.confirm = () => {\r\n            Loader.onFor(name)\r\n            APIError.offFor(name)\r\n\r\n            const reason = encodeURIComponent(userDetails.user.unsuspendReason)\r\n\r\n            API.cui.unsuspendPerson({\r\n                qs: APIHelpers.getQs({\r\n                    personId,\r\n                    reason\r\n                })\r\n            })\r\n            .then(\r\n                res => {\r\n                    APIError.offFor(name)\r\n                    userDetails.unsuspend.success = true\r\n                    userDetails.user.status = 'active'\r\n                    $timeout(userDetails.unsuspend.cancel, 1500)\r\n                },\r\n                err => {\r\n                    APIError.onFor(name)\r\n                }\r\n            )\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.unsuspend.cancel = () => {\r\n            userDetails.unsuspend.begun = false\r\n            userDetails.unsuspend.reset()\r\n        }\r\n    }\r\n\r\n    userDetails.resetPassword = () => {\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:true\r\n\r\n            \r\n            if(userDetails.resetPassword.begun){\r\n                const name = 'userDetails.unsuspend'\r\n\r\n            Loader.onFor(name)\r\n            APIError.offFor(name)\r\n            API.cui.resetPersonPassword({\r\n                qs: [['subject', $stateParams.userId]],\r\n            })\r\n            .then(\r\n                res => {\r\n                    APIError.offFor(name)\r\n                    userDetails.resetPasswordValue=res\r\n                    userDetails.resetPassword.begun = true\r\n                },\r\n                err => {\r\n                    APIError.onFor(name)\r\n                }\r\n            )\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    userDetails.specifyPassword = () => {\r\n        errorTimer && $timeout.cancel(errorTimer) // cancel the timer if there's one pending\r\n        let errorTimer\r\n\r\n        const name = 'userDetails.specifyPassword'\r\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:true\r\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\r\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\r\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\r\n\r\n        userDetails.specifyPassword.reset = () => {\r\n            Loader.offFor(name)\r\n            APIError.offFor(name)\r\n            APIError.offFor('userDetails.passwordHistory')\r\n            userDetails.specifyPassword.success && delete userDetails.specifyPassword.success\r\n            userDetails.specifyPassword.passwordHistoryError = false\r\n            userDetails.specifyPassword.newPassword = ''\r\n            userDetails.specifyPassword.newPasswordConfirm = ''\r\n        }\r\n\r\n        userDetails.specifyPassword.validate = (password, formObject, input) => {\r\n            const validSwitch = (input, isValidBoolean) => {\r\n                switch (input) {\r\n                    case 'newPassword':\r\n                        userDetails.specifyPassword.validNewPassword = isValidBoolean\r\n                    case 'newPasswordConfirm':\r\n                        userDetails.specifyPassword.validNewPasswordRe = isValidBoolean\r\n                }\r\n            }\r\n\r\n            const validateData = {\r\n                userId: $stateParams.userId,\r\n                organizationId: $stateParams.orgId,\r\n                password: password,\r\n                operations: ['PASSWORD_SPECIFY']\r\n            }\r\n\r\n            API.cui.validatePassword({data: validateData})\r\n            .then(res => {\r\n                let validPasswordHistory = false\r\n\r\n                res.forEach(rule => {\r\n                    if (rule.type === 'HISTORY' && rule.isPassed) {\r\n                        validPasswordHistory = true\r\n                        return\r\n                    }\r\n                })\r\n\r\n                if (validPasswordHistory) {\r\n                    validSwitch(input, true)\r\n                    formObject[input].$setValidity(input, true)\r\n                    $scope.$digest()\r\n                }\r\n                else {\r\n                    validSwitch(input, false)\r\n                    formObject[input].$setValidity(input, false)\r\n                    $scope.$digest()\r\n                }\r\n            })\r\n            .fail(err => {\r\n                validSwitch(input, false)\r\n                formObject[input].$setValidity(input, false)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.specifyPassword.confirm = () => {\r\n            APIError.offFor(name)\r\n            Loader.onFor(name)\r\n\r\n          /*  if (!userDetails.specifyPassword.form.$valid) {\r\n                angular.forEach(userDetails.specifyPassword.form.$error, error => {\r\n                    angular.forEach(error, errorField => errorField.$setTouched())\r\n                })\r\n                APIError.onFor(name)\r\n                return\r\n            }*/\r\n\r\n            API.cui.getPersonPassword({personId: $stateParams.userId})\r\n            .then(res => {\r\n                return API.cui.specifyPersonPassword({\r\n                    data: {\r\n                        subject: $stateParams.userId,\r\n                        password: userDetails.specifyPassword.newPassword\r\n                    }\r\n                })\r\n            })\r\n            .then(res => {\r\n                return API.cui.expirePersonPassword({\r\n                    qs: [['subject', $stateParams.userId]],\r\n                    data: {\r\n                        subject: $stateParams.userId,\r\n                        password: userDetails.specifyPassword.newPassword,\r\n                        passwordPolicyId: userDetails.passwordPolicy.id,\r\n                        authenticationPolicyId: userDetails.organization.authenticationPolicy.id\r\n                    }\r\n                })\r\n            })\r\n            .then(res => {\r\n                userDetails.specifyPassword.success = true\r\n                $timeout(userDetails.specifyPassword.cancel, 1500)\r\n            }, err => {\r\n                console.log(err)\r\n                APIError.onFor(name)\r\n                errorTimer = $timeout(() => APIError.offFor(name), 1500)\r\n            })\r\n            .always(() => {\r\n                Loader.offFor(name)\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        userDetails.specifyPassword.cancel = () => {\r\n            userDetails.specifyPassword.begun = false\r\n            userDetails.specifyPassword.reset()\r\n        }\r\n    }\r\n\r\n    userDetails.unlockUser = () => {\r\n        Loader.onFor('userDetails.unlockUser')\r\n        APIError.offFor('userDetails.unlockUser')\r\n        //Need to call two API's One is unlock Password Account and Update person stutus to active\r\n        API.cui.unlockPersonPassword({qs:[['subject', $stateParams.userId]]})\r\n        .then(res => {\r\n            userDetails.user.stutus='active'\r\n            API.cui.updatePerson({personId:$stateParams.userId, data:userDetails.user})\r\n            .then(res => {\r\n                userDetails.unlockUserSuccess=true\r\n            })\r\n            .fail(err => {\r\n                APIError.onFor('userDetails.unlockUser')\r\n                $timeout(() => {APIError.offFor('userDetails.unlockUser')},3000)\r\n            })\r\n            .always(() => {\r\n                Loader.offFor('userDetails.unlockUser')\r\n                $scope.$digest()\r\n            })\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor('userDetails.unlockUser')\r\n            $timeout(() => {APIError.offFor('userDetails.unlockUser')},3000)\r\n        })\r\n        .always(() => {\r\n            Loader.offFor('userDetails.unlockUser')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    /* --------------------------------------------- ON CLICK END ---------------------------------------------- */\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userDetailsAppsCtrl',function(API,$stateParams,$q,$state,DataStorage) {\r\n    'use strict';\r\n\r\n\tconst userDetailsApps = this,\r\n        userId = $stateParams.userId,\r\n        organizationId = $stateParams.orgId;\r\n\r\n    let apiPromises = [];\r\n\r\n    userDetailsApps.loading = true;\r\n    userDetailsApps.appList = [];\r\n\r\n    const getPackageServices = (servicePackage) => {\r\n        return API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\r\n        .then((res) => {\r\n            res.forEach((pendingService) => {\r\n                pendingService.grant = { \r\n                    status: 'pending'\r\n                };\r\n                pendingService.servicePackage=servicePackage\r\n                userDetailsApps.appList.push(pendingService);\r\n            });\r\n        });\r\n    };\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    apiPromises.push(\r\n        // Get user's granted applications\r\n        API.cui.getPersonGrantedApps({personId: userId})\r\n        .then((res) => {\r\n            res.forEach((grantedApp) => {\r\n                userDetailsApps.appList.push(grantedApp);\r\n            });\r\n        })\r\n    );\r\n\r\n    apiPromises.push(\r\n        // Get user's pending service packages\r\n        API.cui.getPersonPendingServicePackages({qs: [['requestor.id', userId],['requestor.type', 'person']]})\r\n        .then((res) => {\r\n            let pendingServicePromises = [];\r\n\r\n            res.forEach((servicePackage) => {\r\n                // For each packages get its services\r\n                pendingServicePromises.push(getPackageServices(servicePackage));\r\n            });\r\n\r\n            $q.all(pendingServicePromises)\r\n            .then(() => {\r\n                userDetailsApps.loading = false;\r\n            })\r\n            .catch((error) => {\r\n                userDetailsApps.loading = false;\r\n                console.log(error);\r\n            });\r\n        })\r\n    );\r\n\r\n    apiPromises.push(\r\n        // Get categories of applications\r\n        API.cui.getCategories()\r\n        .then((res) => {\r\n            userDetailsApps.appCategories = res;\r\n        })\r\n    );\r\n\r\n    apiPromises.push(\r\n        // Get user's granted applications count\r\n        API.cui.getPersonGrantedAppCount({personId: userId})\r\n        .then((res) => {\r\n            userDetailsApps.appCount = res;\r\n        })\r\n    );\r\n\r\n    $q.all(apiPromises)\r\n    .catch((error) => {\r\n        userDetailsApps.loading = false;\r\n        console.log(error);\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\r\n\r\n    userDetailsApps.goToDetails = (application) => {\r\n        DataStorage.setType('userAppDetail',application)\r\n        if (application.grant.status==='pending') {\r\n            $state.go('organization.requests.pendingRequests', {\r\n                    'userId': userId, \r\n                    'orgId': organizationId,\r\n                    'packageId': application.servicePackage.servicePackage.id\r\n                })\r\n        }\r\n        else\r\n        $state.go('organization.directory.userAppDetails',{appId:application.id,orgId:organizationId,userId:userId})\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n});\r\n\r\nangular.module('organization')\r\n.controller('userDetailsHistoryCtrl',function(API,$stateParams,$q) {\r\n\t'use strict';\r\n\r\n\tconst userDetailsHistory = this,\r\n        userId = $stateParams.userId,\r\n        organizationId = $stateParams.orgId;\r\n\r\n    let apiPromises = [];\r\n\r\n    userDetailsHistory.loading = true;\r\n    userDetailsHistory.sortClicked = false;\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n\tapiPromises.push(\r\n\t\tAPI.cui.getPersonStatusHistory({qs: [['userId', String(userId)]]})\r\n    \t.then((res) => {\r\n    \t\tuserDetailsHistory.personStatusHistory = res;\r\n    \t})\r\n    );\r\n\r\n    $q.all(apiPromises)\r\n    .then((res) => {\r\n    \tuserDetailsHistory.loading = false;\r\n    })\r\n    .catch((error) => {\r\n    \tuserDetailsHistory.loading = false;\r\n    \tconsole.log(error);\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('userDetailsProfileCtrl', function(Loader, UserProfile, $scope, $stateParams) {\r\n\r\n\tconst userDetailsProfile = this\r\n    const scopeName = 'userDetailsProfile.'\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    UserProfile.injectUI(userDetailsProfile, $scope, $stateParams.userId)\r\n\r\n    Loader.onFor(scopeName + 'initProfile')\r\n\r\n    UserProfile.initUserProfile($stateParams.userId, $stateParams.orgId)\r\n    .then(res => {\r\n        angular.merge(userDetailsProfile, res)\r\n        Loader.offFor(scopeName + 'initProfile')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userDetailsRolesCtrl',function(API,$stateParams,$q,$scope,APIError,$timeout) {\r\n\t'use strict';\r\n\r\n\tconst userDetailsRoles = this,\r\n        userId = $stateParams.userId,\r\n        organizationId = $stateParams.orgId;\r\n\r\n    let apiPromises = [];\r\n\r\n    userDetailsRoles.loading = true;\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    let init = function init(){\r\n\r\n    apiPromises.push(\r\n\t    API.cui.getPersonRoles({personId: userId})\r\n\t    .then((res) => {\r\n\t    \tuserDetailsRoles.assignedRoles = res;\r\n            API.cui.getPersonRolesGrantable({personId:userId})\r\n            .then(res =>{\r\n                userDetailsRoles.rolesGrantable=res;\r\n            })\r\n            .fail(err =>{\r\n                userDetailsRoles.grantedHistoryError=true;\r\n            })\r\n\t    })\r\n    );\r\n\r\n    apiPromises.push(\r\n        API.cui.getPersonRolesGrantable({personId:userId})\r\n        .then(res =>{\r\n            userDetailsRoles.rolesGrantable=res;\r\n        })\r\n        .fail(err =>{\r\n            userDetailsRoles.grantedHistoryError=true;\r\n        })\r\n    );\r\n\r\n    $q.all(apiPromises)\r\n    .then((res) => {\r\n    \tuserDetailsRoles.loading = false;\r\n        userDetailsRoles.success=false\r\n    })\r\n    .catch((error) => {\r\n\t\tuserDetailsRoles.loading = false;\r\n        userDetailsRoles.grantedHistoryError=true;\r\n        userDetailsRoles.success=false\r\n\t\tconsole.log(error);\r\n    });\r\n}\r\n\r\n     init();\r\n\r\n    userDetailsRoles.assignRoles = () =>{\r\n       let roles =[]\r\n       angular.forEach(userDetailsRoles.appCheckbox,function(dsd,appId){\r\n       /*Object.keys(userRoles.appCheckbox).forEach(function(appId) {*/\r\n           if(dsd){\r\n                let test={\r\n                \"id\":appId\r\n               }\r\n               roles.push(test)\r\n           }\r\n        });\r\n        let rolesSubmitData={\r\n        \"userId\": userId,\r\n        \"roles\": roles\r\n        }\r\n        console.log(rolesSubmitData)\r\n        \r\n       userDetailsRoles.loading = true\r\n        API.cui.assignPersonRoles({data:rolesSubmitData})\r\n        .then(res =>{\r\n            console.log(res)\r\n            $scope.$digest()\r\n            userDetailsRoles.success=true\r\n             $timeout(() => {\r\n                userDetailsRoles.loading = false\r\n\r\n                init();\r\n            }, 3000);\r\n            \r\n        })\r\n        .fail(err =>{\r\n            userDetailsRoles.loading=false\r\n            userDetailsRoles.rolessubmitError=true\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n     $scope.$watch(\"userDetailsRoles.appCheckbox\", function(n) {\r\n       let count=0\r\n       angular.forEach(userDetailsRoles.appCheckbox,function(dsd,key){\r\n        console.log(key)\r\n        if(dsd)\r\n            count+=1\r\n       })\r\n       if(count>0){\r\n        userDetailsRoles.appCheckboxValid=true\r\n       }else{\r\n        userDetailsRoles.appCheckboxValid=false\r\n       }\r\n    }, true);\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('orgDirectoryCtrl', function(API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,UserList,$filter,$pagination,$q,$state,$stateParams) {\r\n    \r\n    const orgDirectory = this\r\n    const scopeName = 'orgDirectory.'\r\n    orgDirectory.stateParamsOrgId=$stateParams.orgId\r\n    orgDirectory.search = {}\r\n    orgDirectory.sortBy = {}\r\n\r\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        orgDirectory.search[property] === firstValue\r\n            ? orgDirectory.search[property] = secondValue\r\n            : orgDirectory.search[property] = firstValue\r\n    }\r\n\r\n    const getUserListAppCount = (userList) => {\r\n        userList.forEach(user => {\r\n            API.cui.getPersonGrantedAppCount({personId: user.id})\r\n            .then(res => {\r\n                user.appCount = res\r\n            })\r\n            .fail(error => {\r\n                user.appCount = '...'\r\n            })\r\n        })\r\n    }\r\n\r\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    const initDirectory = (organizationId) => {\r\n        orgDirectory.search['organization.id'] = organizationId || $stateParams.orgId || User.user.organization.id\r\n        orgDirectory.search.pageSize = orgDirectory.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        let apiCalls = [\r\n            UserList.getUsers({ qs: APIHelpers.getQs(orgDirectory.search) }),\r\n            UserList.getUserCount({ qs: [['organization.id', orgDirectory.search['organization.id']]] }),\r\n            API.cui.getOrganization({organizationId: orgDirectory.search['organization.id']})\r\n        ]\r\n\r\n        Loader.onFor(scopeName + 'userList')\r\n        APIError.offFor(scopeName + 'userList')\r\n\r\n        $q.all(apiCalls)\r\n        .then(([users, userCount, organization]) => {\r\n            orgDirectory.organization = organization\r\n            // orgDirectory.organizationList = APIHelpers.flattenOrgHierarchy(orgHierarchy)\r\n            orgDirectory.userList = users\r\n            orgDirectory.userCount = userCount\r\n            orgDirectory.statusData = APIHelpers.getCollectionValuesAndCount(users, 'status', true)\r\n            CuiMobileNavFactory.setTitle(organization.name)\r\n            orgDirectory.reRenderPagination && orgDirectory.reRenderPagination()\r\n            getUserListAppCount(orgDirectory.userList)\r\n        })\r\n        .catch(error => {\r\n            APIError.onFor(scopeName + 'userList')\r\n        })\r\n        .finally(() => {\r\n            Loader.offFor(scopeName + 'userList')\r\n        })\r\n    }\r\n\r\n    orgDirectory.search = Object.assign({}, $stateParams)\r\n    initDirectory()\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n\r\n    // headers=\"['cui-name', 'username', 'status']\" \r\n\r\n    orgDirectory.sortingCallbacks = {\r\n      name () {\r\n          orgDirectory.sortBy.sortBy = 'name'\r\n          orgDirectory.sort(['name.given', 'name.surname'], orgDirectory.sortBy.sortType)\r\n      },\r\n      username () {\r\n          orgDirectory.sortBy.sortBy = 'username'\r\n          orgDirectory.sort('username', orgDirectory.sortBy.sortType)\r\n      },\r\n      status () {\r\n          orgDirectory.sortBy.sortBy = 'status'\r\n          orgDirectory.sort('status', orgDirectory.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgDirectory.sort = (sortBy, order) => {\r\n        cui.log('sort', sortBy, order)\r\n\r\n      orgDirectory.userList = _.orderBy(orgDirectory.userList, sortBy, order)\r\n    }\r\n\r\n    orgDirectory.updateSearchParams = (page) => {\r\n        if (page) orgDirectory.search.page = page \r\n        $state.transitionTo('organization.directory.userList', orgDirectory.search, {notify: false})\r\n        initDirectory(orgDirectory.search['organization.id'])\r\n    }\r\n\r\n    orgDirectory.updateSearchByName = (name) => {\r\n        orgDirectory.updateSearchParams()\r\n    }\r\n    orgDirectory.actionCallbacks = {\r\n        sort (sortType) {\r\n            switch(sortType) {\r\n            case 'name':\r\n                switchBetween('sortBy', '+name.given', '-name.given')\r\n                break\r\n            case 'username':\r\n                switchBetween('sortBy', '+person.username', '-person.username')\r\n                break\r\n            case 'status':\r\n                switchBetween('sortBy', '+person.status', '-person.status')\r\n                break\r\n            }\r\n\r\n            // if (!orgDirectory.search.hasOwnProperty('sortBy')) orgDirectory.search['sortBy'] = '+' + sortType\r\n            // else if (orgDirectory.search.sortBy.slice(1) !== sortType) orgDirectory.search.sortBy = '+' + sortType\r\n            // else switchBetween('sortBy', '+' + sortType, '-' + sortType)\r\n            orgDirectory.updateSearchParams()\r\n        },\r\n        refine (refineType) {\r\n            if (refineType === 'all') delete orgDirectory.search['status']\r\n            else {\r\n                if (!orgDirectory.search.hasOwnProperty('status')) orgDirectory.search['status'] = refineType\r\n                else orgDirectory.search.status = refineType\r\n            }\r\n            orgDirectory.updateSearchParams()\r\n        }\r\n    }\r\n\r\n    orgDirectory.userClick = (clickedUser) => {\r\n        const stateOpts = {\r\n            userId: clickedUser.id,\r\n            orgId: clickedUser.organization.id,\r\n        }\r\n        if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\r\n        else $state.go('organization.directory.userDetails', stateOpts)\r\n    }\r\n\r\n    orgDirectory.getOrgMembers = (organization) => {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')(organization.name))\r\n        initDirectory(organization.id)\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgHierarchyCtrl', function(API,APIError,DataStorage,Loader,User,$scope,$state,$stateParams) {\r\n\r\n    const orgHierarchy = this\r\n    const pageLoader = 'orgHierarchy.loading'\r\n    orgHierarchy.stateParamsOrgId=$stateParams.orgId\r\n    orgHierarchy.expanded=false\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\r\n\r\n    const addExpandedProperty = (childOrgs, parentOrg) => {\r\n        childOrgs.forEach((org ,index) => {\r\n            // Need to remove org if it is pending\r\n            if (org.status===\"PENDING\") {\r\n                parentOrg.children.splice(index,1)\r\n                return\r\n            }\r\n            if (org.children) {\r\n                org.expanded=false\r\n                addExpandedProperty(org.children,org)\r\n            }\r\n        })\r\n    }\r\n\r\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n    \r\n    const storedData = DataStorage.getType('orgHierarchy')\r\n\r\n    if (storedData) {\r\n        orgHierarchy.organizationHierarchy = storedData\r\n        // add expended property to all the org with children directive needs it to work for \r\n        // expandable and collapsable function\r\n        if (orgHierarchy.organizationHierarchy[0].children) {\r\n            addExpandedProperty(orgHierarchy.organizationHierarchy[0].children, orgHierarchy.organizationHierarchy[0])\r\n        }\r\n    }\r\n\r\n    if (!storedData) Loader.onFor(pageLoader)\r\n    // Loader.onFor(pageLoader)\r\n    API.cui.getOrganizationHierarchy({organizationId:orgHierarchy.stateParamsOrgId })\r\n    .done(res => {\r\n        // Put hierarchy response in an array as the hierarchy directive expects an array\r\n        orgHierarchy.organizationHierarchy = [res]\r\n        DataStorage.setType('orgHierarchy', orgHierarchy.organizationHierarchy)\r\n        // add expended property to all the org with children directive needs it to work for \r\n        // expandable and collapsable function\r\n        if (orgHierarchy.organizationHierarchy[0].children) {\r\n            addExpandedProperty(orgHierarchy.organizationHierarchy[0].children, orgHierarchy.organizationHierarchy[0])\r\n        }\r\n    })\r\n    .fail(err => {\r\n        APIError.onFor(pageLoader, err)\r\n    })\r\n    .always(() => {\r\n        Loader.offFor(pageLoader)\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n    /* */\r\n    orgHierarchy.goToOrgPrfile = (org) => {\r\n        $state.go('organization.directory.orgDetails',{orgId:org.id})\r\n    }\r\n\r\n    orgHierarchy.toggleExpand = (object) => {\r\n        object.expanded=!object.expanded\r\n        let updateOrgChildren= (orgs) => {\r\n            orgs.forEach(org => {\r\n                if (org.id===object.id) {\r\n                    org.expanded=object.expanded\r\n                    return;\r\n                }\r\n                if (org.children) {\r\n                    updateOrgChildren(org.children)\r\n                }\r\n            })\r\n            \r\n            if (true) {};\r\n        }\r\n        updateOrgChildren(orgHierarchy.organizationHierarchy[0].children)\r\n        $scope.$digest()\r\n    }\r\n\r\n    orgHierarchy.toggleAll = (toggleFlag) => {\r\n        orgHierarchy.expanded=!orgHierarchy.expanded\r\n        let updateFlag= (orgs) => {\r\n            orgs.forEach(org => {\r\n                if (org.children) {\r\n                    org.expanded=!toggleFlag\r\n                    updateFlag(org.children)\r\n                }\r\n            })\r\n        }\r\n        updateFlag(orgHierarchy.organizationHierarchy[0].children)\r\n    }\r\n    /* */\r\n})\r\n\r\nangular.module('organization')\r\n.controller('divisionCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout,DataStorage) {\r\n\r\n    const division = this\r\n    division.sendInvitationError=''\r\n    const promises=[]\r\n    division.userSelectedOrg={}\r\n    division.userSelectedOrg.originalObject={}\r\n    division.userSelectedOrg.originalObject.name=User.user.organization.name\r\n    division.userSelectedOrg.originalObject.id=User.user.organization.id\r\n    division.stateParamsOrgId=User.user.organization.id\r\n    //division.emailSubject='Register as an adminstrator within '\r\n\r\n    const storedData = DataStorage.getType('orgHierarchy',User.user.id)\r\n\r\n    if (storedData) {\r\n        division.organizationHierarchyRoot = storedData\r\n        division.organizationHierarchy = storedData[0].children\r\n        const organizationList=[]\r\n        angular.forEach(division.organizationHierarchy,function(value){\r\n          let array={\r\n            \"id\":value.id,\r\n            \"name\":value.name[0].text\r\n          }\r\n          organizationList.push(array)\r\n        })\r\n        division.organizationList=organizationList\r\n    }else{\r\n      division.loader=true\r\n      API.cui.getOrganizationHierarchy({organizationId:User.user.organization.id })\r\n      .done(res => {\r\n          DataStorage.setType('orgHierarchy', [res],User.user.id)\r\n          const organizationList=[]\r\n          // Put hierarchy response in an array as the hierarchy directive expects an array\r\n          const storedDatas = DataStorage.getType('orgHierarchy',User.user.id)\r\n          division.organizationHierarchyRoot = storedDatas\r\n          division.organizationHierarchy = storedDatas[0].children\r\n          \r\n          angular.forEach(division.organizationHierarchy,function(value){\r\n            let array={\r\n              \"id\":value.id,\r\n              \"name\":value.name[0].text\r\n            }\r\n           \r\n            organizationList.push(array)\r\n          })\r\n          division.organizationList=organizationList\r\n          console.log(division.organizationList)\r\n         \r\n      })\r\n      .fail(err => {\r\n          APIError.onFor(pageLoader, err)\r\n      })\r\n      .always(() => {\r\n          division.loader=false\r\n          $scope.$digest()\r\n      })\r\n  }\r\n\r\n\r\n    division.sendInvitation = () => {\r\n           const promises=[]\r\n      const validEmails=[]\r\n      division.emailAddressError=false\r\n      division.sendInvitationError=false\r\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n      division.emailArray=new Array()\r\n      division.emailArray=division.emailAddress.split(',')      \r\n      angular.forEach(division.emailArray,function(email){\r\n        if(EMAIL_REGEXP.test(email)){\r\n            validEmails.push(email)\r\n          }\r\n      })\r\n      if(validEmails.length===division.emailArray.length){\r\n        division.loader=true\r\n        angular.forEach(division.emailArray,function(email){\r\n          let opts = {\r\n            \"email\":email,\r\n            \"invitor\":{\r\n              \"id\":User.user.id,\r\n              \"type\":\"person\"\r\n              },\r\n            \"targetOrganization\":{\r\n              \"id\":division.userSelectedOrg.originalObject.id,\r\n              \"type\":\"organization\"\r\n              }\r\n          }\r\n          promises.push(API.cui.createOrgDivisionInvitation({data:opts})) \r\n        })\r\n        \r\n        $q.all(promises)\r\n        .then((res) => {\r\n          division.loader=false\r\n          division.success=true\r\n           division.sendInvitationError=false;\r\n           $timeout(() => {\r\n                 $state.go('invitation.inviteSelect');\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n             division.loader=false\r\n             division.sendInvitationError=true\r\n        });\r\n      }else{\r\n         division.emailAddressError=true\r\n      }\r\n    }\r\n    division.goToOrgPrfile = (org) => {\r\n        division.userSelectedOrg.originalObject={}\r\n        division.userSelectedOrg.originalObject.name=org.name[0].text\r\n        division.userSelectedOrg.originalObject.id=org.id\r\n        division.selectOrgFromList=false\r\n        $scope.$digest()\r\n    }\r\n     division.goToOrg = () => {\r\n        \r\n    }\r\n})\r\n\r\nangular.module('organization')\r\n.controller('tloCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout) {\r\n\r\n    const tlo = this\r\n    tlo.sendInvitationError=''\r\n    const promises=[]\r\n    tlo.organization={}\r\n    tlo.organization.name=User.user.organization.name\r\n    tlo.stateParamsOrgId=User.user.organization.id\r\n    //tlo.emailSubject='Register as a new organization'\r\n\r\n    tlo.sendInvitation = () => {\r\n      const promises=[]\r\n      const validEmails=[]\r\n      tlo.emailAddressError=false\r\n      tlo.sendInvitationError=false\r\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n      tlo.emailArray=new Array()\r\n      tlo.emailArray=tlo.emailAddress.split(',')      \r\n      angular.forEach(tlo.emailArray,function(email){\r\n        if(EMAIL_REGEXP.test(email)){\r\n            validEmails.push(email)\r\n          }\r\n      })\r\n      if(validEmails.length===tlo.emailArray.length){\r\n        tlo.loader=true\r\n        angular.forEach(tlo.emailArray,function(email){\r\n          let opts = {\r\n            \"email\":email,\r\n            \"invitor\":{\r\n              \"id\":User.user.id,\r\n              \"type\":\"person\"\r\n              },\r\n            \"targetOrganization\":{\r\n              \"id\":User.user.organization.id,\r\n              \"type\":\"organization\"\r\n              }\r\n          }\r\n          promises.push(API.cui.createOrgCompanyInvitation({data:opts})) \r\n        })\r\n        \r\n        $q.all(promises)\r\n        .then((res) => {\r\n          tlo.loader=false\r\n          tlo.success=true\r\n           tlo.sendInvitationError=false;\r\n           $timeout(() => {\r\n                 $state.go('invitation.inviteSelect');\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n             tlo.loader=false\r\n             tlo.sendInvitationError=true\r\n        });\r\n      }else{\r\n         tlo.emailAddressError=true\r\n      }\r\n    }\r\n})\r\n\r\nangular.module('organization')\r\n.controller('userCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout,DataStorage) {\r\n\r\n    const user = this\r\n    user.sendInvitationError=''\r\n    const promises=[]\r\n    user.userSelectedOrg={}\r\n    user.userSelectedOrg.originalObject={}\r\n    user.userSelectedOrg.originalObject.name=User.user.organization.name\r\n    user.userSelectedOrg.originalObject.id=User.user.organization.id\r\n    user.stateParamsOrgId=User.user.organization.id\r\n    //user.emailSubject='Register as a user to join '\r\n    user.selectOrgFromList=false\r\n\r\n    const storedData = DataStorage.getType('orgHierarchy',User.user.id)\r\n\r\n    if (storedData) {\r\n        user.organizationHierarchyRoot = storedData\r\n        user.organizationHierarchy = storedData[0].children\r\n        const organizationList=[]\r\n        angular.forEach(user.organizationHierarchy,function(value){\r\n          let array={\r\n            \"id\":value.id,\r\n            \"name\":value.name[0].text\r\n          }\r\n          organizationList.push(array)\r\n        })\r\n        user.organizationList=organizationList\r\n    }else{\r\n      user.loader=true\r\n      API.cui.getOrganizationHierarchy({organizationId:User.user.organization.id })\r\n        .done(res => {\r\n            DataStorage.setType('orgHierarchy', [res],User.user.id)\r\n            const organizationList=[]\r\n            const storedDatas = DataStorage.getType('orgHierarchy',User.user.id)\r\n            // Put hierarchy response in an array as the hierarchy directive expects an array\r\n            user.organizationHierarchyRoot = storedDatas\r\n            user.organizationHierarchy = storedDatas[0].children\r\n            \r\n            angular.forEach(user.organizationHierarchy,function(value){\r\n              let array={\r\n                \"id\":value.id,\r\n                \"name\":value.name[0].text\r\n              }\r\n             \r\n              organizationList.push(array)\r\n            })\r\n            user.organizationList=organizationList\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(pageLoader, err)\r\n        })\r\n        .always(() => {\r\n            user.loader=false\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n   \r\n    user.customErrors = {\r\n      email: {\r\n          email: function(){\r\n              var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n              if (user.email) {\r\n                  return EMAIL_REGEXP.test(user.email)\r\n              }else{\r\n                  return true;\r\n              }\r\n          }\r\n      }\r\n    }\r\n\r\n    user.sendInvitation = () => {\r\n      const promises=[]\r\n      const validEmails=[]\r\n      user.emailAddressError=false\r\n      user.sendInvitationError=false\r\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n      user.emailArray=new Array()\r\n      user.emailArray=user.emailAddress.split(',')      \r\n      angular.forEach(user.emailArray,function(email){\r\n        if(EMAIL_REGEXP.test(email)){\r\n            validEmails.push(email)\r\n          }\r\n      })\r\n      if(validEmails.length===user.emailArray.length){\r\n        user.loader=true\r\n        angular.forEach(user.emailArray,function(email){\r\n          let opts = {\r\n            \"email\":email,\r\n            \"invitor\":{\r\n              \"id\":User.user.id,\r\n              \"type\":\"person\"\r\n              },\r\n            \"targetOrganization\":{\r\n              \"id\":user.userSelectedOrg.originalObject.id,\r\n              \"type\":\"organization\"\r\n              }\r\n          }\r\n          promises.push(API.cui.createPersonInvitation({data:opts})) \r\n        })\r\n        \r\n        $q.all(promises)\r\n        .then((res) => {\r\n          user.loader=false\r\n          user.success=true\r\n           user.sendInvitationError=false;\r\n           $timeout(() => {\r\n                 $state.go('invitation.inviteSelect');\r\n            }, 3000); \r\n        })\r\n        .catch(error => {\r\n             user.loader=false\r\n             user.sendInvitationError=true\r\n        });\r\n      }else{\r\n         user.emailAddressError=true\r\n      }\r\n      \r\n    }\r\n\r\n    user.goToOrgPrfile = (org) => {\r\n        user.userSelectedOrg.originalObject={}\r\n        user.userSelectedOrg.originalObject.name=org.name[0].text\r\n        user.userSelectedOrg.originalObject.id=org.id\r\n        user.selectOrgFromList=false\r\n        $scope.$digest()\r\n    }\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgProfileCtrl', function(DataStorage, Loader, Organization, User,$stateParams,$q,APIError) {\r\n\r\n    const orgProfile = this\r\n    const storedData = DataStorage.getType('orgProfile')\r\n    orgProfile.stateParamsOrgId=$stateParams.orgId\r\n    let orgPromise=[]\r\n    if (User.user.organization.id===$stateParams.orgId) {\r\n        orgProfile.organization = User.user.organization\r\n    }\r\n    else{\r\n        // Organization is different than user's org, need to get fresh\r\n        Loader.onFor('orgProfile.init')\r\n        orgPromise.push(Organization.getOrganization($stateParams.orgId))\r\n    }\r\n    \r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    if (storedData !== undefined) {\r\n        orgProfile.securityAdmins = storedData.admins\r\n        orgProfile.passwordPolicy = storedData.passwordPolicy\r\n        orgProfile.authenticationPolicy=storedData.authenticationPolicy\r\n    }\r\n    else Loader.onFor('orgProfile.init')\r\n    $q.all(orgPromise)\r\n    .then(res => {\r\n        if (orgPromise.length!==0) {\r\n            orgProfile.organization=res[0]\r\n        }\r\n            Organization.initOrganizationProfile(orgProfile.organization.id, orgProfile.organization.passwordPolicy.id, orgProfile.organization.authenticationPolicy.id)\r\n        .then(res => {\r\n            orgProfile.securityAdmins = res.admins\r\n            orgProfile.passwordPolicy = res.passwordPolicy\r\n            orgProfile.authenticationPolicy=res.authenticationPolicy\r\n            DataStorage.setType('orgProfile', res)\r\n            Loader.offFor('orgProfile.init')\r\n        })\r\n        .catch(err => {\r\n            console.error(\"there was an error fetching additional org details\" +err)\r\n            Loader.offFor('orgProfile.init')\r\n            APIError.onFor('orgProfile.init')\r\n        })\r\n    })\r\n    .catch(err => {\r\n        console.error(\"there was an error fetching org details\" +err)\r\n        Loader.offFor('orgProfile.init')\r\n        APIError.onFor('orgProfile.init')\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.factory('NewGrant', (DataStorage, API, $stateParams) => {\r\n    let newGrant = {}\r\n    let newGrantsInStorage\r\n    /*\r\n        This Factory provides common platform to share common logic between granting an app to \r\n        User and Organization\r\n    */\r\n    // Not handling package requests as not needed\r\n    newGrant.updateStorage = (type,id,application) => {\r\n        let storageType\r\n        if(type===\"person\") storageType='newGrant'\r\n        else storageType='newOrgGrant'\r\n        DataStorage.setType(storageType, {\r\n            id: id,\r\n            type: type,\r\n            applications: application\r\n        })\r\n        // console.log(DataStorage.getType('newGrant'))\r\n    }\r\n\r\n    newGrant.pullFromStorage = (scope,resourceId,type) => {\r\n        // const newGrantsInStorage = DataStorage.getDataThatMatches('newGrant', { userId: $stateParams.userID })\r\n        if (type===\"person\") {\r\n            newGrantsInStorage = DataStorage.getType('newGrant')\r\n        }\r\n        else{\r\n            newGrantsInStorage = DataStorage.getType('newOrgGrant')\r\n        }      \r\n        if (newGrantsInStorage&&newGrantsInStorage.id==resourceId) {\r\n            scope.appsBeingRequested = Object.assign({}, newGrantsInStorage.applications)\r\n            scope.packagesBeingRequested = Object.assign({}, newGrantsInStorage.packages)\r\n        }\r\n        else {\r\n            scope.packagesBeingRequested = {}\r\n            scope.appsBeingRequested = {}\r\n        }\r\n\r\n        scope.numberOfRequests = Object.keys(scope.appsBeingRequested).length + Object.keys(scope.packagesBeingRequested).length\r\n\r\n        scope.applicationCheckbox = Object.keys(scope.appsBeingRequested).reduce((applications, appId) => {\r\n            applications[appId] = true\r\n            return applications\r\n        },{})\r\n\r\n        scope.packageCheckbox = Object.keys(scope.packagesBeingRequested).reduce((packages, appId) => {\r\n            packages[appId] = true\r\n            return packages\r\n        },{})\r\n\r\n        scope.requests = {\r\n            application: scope.appsBeingRequested,\r\n            package: scope.packagesBeingRequested\r\n        }\r\n    }\r\n\r\n    newGrant.claimGrants = (id, type,packageRequestObject) => {\r\n        let claimGrants = []\r\n\r\n        const buildPackageClaims = (claimsObject) => {\r\n            if (Object.keys(claimsObject).length === 0) {\r\n                return undefined;\r\n            } // if there's no claims in this claim object\r\n            let packageClaims = []\r\n            Object.keys(claimsObject).forEach(claimId => {\r\n                if (Object.keys(claimsObject[claimId]).length === 0) {\r\n                    return;\r\n                } // if no claimValues selected for that claimId\r\n                const claimValues = Object.keys(claimsObject[claimId]).reduce((claims, claimValueId) => {\r\n                    claims.push({ claimValueId })\r\n                    return claims\r\n                },[])\r\n\r\n                packageClaims.push({\r\n                    claimId,\r\n                    claimValues\r\n                })\r\n            })\r\n            return packageClaims\r\n        }\r\n\r\n        Object.keys(packageRequestObject).forEach(pkgId => {\r\n            claimGrants.push({\r\n                data: {\r\n                    grantee: {\r\n                        id: id,\r\n                        type: type\r\n                    },\r\n                    servicePackage: {\r\n                        id: pkgId,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    packageClaims: buildPackageClaims(packageRequestObject[pkgId].claims)\r\n                }\r\n            })\r\n        })\r\n\r\n       return claimGrants\r\n    }\r\n\r\n    newGrant.packageGrants = (id, type, packageRequestObject) => {\r\n        let packageGrants = []\r\n        let index=0\r\n        Object.keys(packageRequestObject).forEach(pkgId => {            \r\n            packageGrants.push({\r\n                packageId: pkgId,\r\n                data: {\r\n                    version:'123',\r\n                    status: 'active',\r\n                    grantee: {\r\n                        id: id,\r\n                        type: type\r\n                    },\r\n                    servicePackage: {\r\n                        id: pkgId,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    reason:packageRequestObject[pkgId].reason\r\n                }\r\n            })\r\n            if (type==='person') {\r\n                packageGrants[index].personId=id\r\n            }\r\n            else{\r\n                packageGrants[index].organizationId=id\r\n            }\r\n            index++\r\n        })\r\n\r\n        return packageGrants\r\n    }\r\n\r\n    return newGrant\r\n})\r\nangular.module('organization')\r\n.controller('newGrantClaimsCtrl', function(API,APIHelpers,DataStorage,Loader,NewGrant,$stateParams,$q,$scope,$state,$timeout) {\r\n    \r\n    const newGrantClaims = this\r\n    const loaderType = 'newGrantClaims.'\r\n    newGrantClaims.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    newGrantClaims.packageRequests = {}\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    NewGrant.pullFromStorage(newGrantClaims,$stateParams.userId,'person');\r\n    if (newGrantClaims.numberOfRequests===0) {\r\n        $state.go('organization.requests.newGrantSearch',{userId:$stateParams.userId})\r\n    }\r\n    //For PopUp\r\n    newGrantClaims.appsBeingRequestedforPopup=angular.copy(newGrantClaims.appsBeingRequested)\r\n    //Keep only one app among all bundled apps\r\n    angular.forEach(newGrantClaims.appsBeingRequested , (request) =>{\r\n        if (request.bundledApps) {\r\n            request.bundledApps.forEach(bundledApp => {\r\n                if (newGrantClaims.appsBeingRequested[bundledApp.id]) {\r\n                    delete newGrantClaims.appsBeingRequested[bundledApp.id]\r\n                }                    \r\n            })\r\n        }\r\n    })\r\n    // get the claims for each app being requested\r\n    Object.keys(newGrantClaims.appsBeingRequested).forEach((appId, i) => {\r\n        const app = newGrantClaims.appsBeingRequested[appId]\r\n\r\n        if (!newGrantClaims.packageRequests[app.servicePackage.id]) {\r\n            newGrantClaims.packageRequests[app.servicePackage.id] = {\r\n                claims: {},\r\n                administratorRights: false\r\n            }\r\n        }\r\n\r\n        Loader.onFor(loaderType + 'claims' + i)\r\n\r\n        const opts = {\r\n            qs: APIHelpers.getQs({\r\n                packageId: newGrantClaims.appsBeingRequested[appId].servicePackage.id\r\n            })\r\n        }\r\n\r\n        API.cui.getPackageClaims(opts)\r\n        .then(res => {\r\n            newGrantClaims['claims' + i] = Object.assign({}, res)\r\n            res.forEach(claim => {\r\n                newGrantClaims.packageRequests[app.servicePackage.id].claims[claim.claimId] = {}\r\n            })\r\n            Loader.offFor(loaderType + 'claims' + i)\r\n            $scope.$digest()\r\n        })\r\n        .fail(err => { \r\n            // claims endpoint throws an error when the package has no claims\r\n            newGrantClaims['claims' + i] = []\r\n            Loader.offFor(loaderType + 'claims' + i)\r\n            $scope.$digest()\r\n        })\r\n    })\r\n\r\n    Loader.onFor(loaderType + 'user')\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        newGrantClaims.user = Object.assign({}, res)\r\n        Loader.offFor(loaderType + 'user')\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    newGrantClaims.submit = () => {\r\n        Loader.onFor(loaderType + 'submit')\r\n        let claimsPromises=[]\r\n        // Grant Packages\r\n        $q.all(NewGrant.packageGrants($stateParams.userId ,'person', newGrantClaims.packageRequests).map(opts => API.cui.grantPersonPackage(opts)))\r\n        .then(res => {\r\n            // grant claims\r\n            let claimsData=NewGrant.claimGrants($stateParams.userId ,'person', newGrantClaims.packageRequests)\r\n            claimsData.forEach(claimData => {\r\n                if(claimData.data.packageClaims&&claimData.data.packageClaims.length!==0){\r\n                    claimsPromises.push(API.cui.grantClaims(claimData))\r\n                }\r\n            })\r\n            return $q.all(claimsPromises)\r\n        })\r\n        .then(res => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newGrantClaims.success = true\r\n            DataStorage.setType('newGrant',{})\r\n            $timeout(() => {\r\n                $state.go('organization.directory.userList',{userId:$stateParams.userId,orgId:$stateParams.orgId})\r\n            }, 3000);\r\n        })\r\n        .catch(err => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newGrantClaims.error = true\r\n        })\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('newGrantCtrl', function(API, $stateParams, $scope, $state, $filter, Loader, DataStorage,NewGrant) {\r\n\r\n    const newGrant = this\r\n    newGrant.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n    newGrant.searchType = 'applications'\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                userId:<user for which the grant is being made>,\r\n                applications:<array of applications being granted>,\r\n                packages:<array of packages being granted>\r\n            }\r\n        ]\r\n    ****/\r\n    NewGrant.pullFromStorage(newGrant,$stateParams.userId,'person');\r\n    Loader.onFor('newGrant.user')\r\n    API.cui.getPerson({ personId:$stateParams.userId })\r\n    .then(res => {\r\n        newGrant.user = Object.assign({}, res)\r\n        Loader.offFor('newGrant.user')\r\n        $scope.$digest()\r\n    })\r\n\r\n    Loader.onFor('newGrant.categories')\r\n    API.cui.getCategories()\r\n    .then(res => {\r\n        newGrant.categories = res.slice()\r\n        Loader.offFor('newGrant.categories')\r\n        $scope.$digest()\r\n    })\r\n    .fail(err => {\r\n        Loader.offFor('newGrant.categories')\r\n        newGrant.categoryError=true\r\n        $scope.$digest()\r\n    })\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newGrant.searchCallback = (opts) => {\r\n        if (!opts) {\r\n            $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId});\r\n        } else if (typeof opts ==='string') {\r\n            $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId, name: opts});\r\n        } else {\r\n            const optsParser = {\r\n                category: (unparsedCategory) => {\r\n                    const category = $filter('cuiI18n')(unparsedCategory)\r\n                    $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId, category})\r\n                }\r\n            }\r\n            optsParser[opts.type](opts.value)\r\n        }\r\n    }\r\n\r\n    newGrant.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newGrantClaims', { userId: $stateParams.userId, orgId: $stateParams.orgId })\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('newGrantSearchCtrl', function ($scope, $state, $stateParams, API, DataStorage, Loader, $pagination, APIHelpers, NewGrant, $q) {\r\n    const newGrantSearch = this;\r\n    newGrantSearch.prevState={\r\n        params:{\r\n            userId:$stateParams.userId,\r\n            orgId:$stateParams.orgId\r\n        },\r\n        name:\"organization.directory.userDetails\"\r\n    }\r\n    \r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                userId:<user for which the grant is being made>,\r\n                applications:<object of applications being granted>,\r\n                packages:<object of packages being granted>\r\n            }\r\n        ]\r\n    ****/\r\n\r\n    NewGrant.pullFromStorage(newGrantSearch,$stateParams.userId,'person');\r\n\r\n    Loader.onFor('newGrantSearch.user');\r\n    API.cui.getPerson({ personId: $stateParams.userId })\r\n    .then(res => {\r\n        newGrantSearch.user = Object.assign({}, res);\r\n        Loader.offFor('newGrantSearch.user');\r\n        $scope.$digest();\r\n    })\r\n    .fail(err =>{\r\n        console.error(\"There was an error in fetching user details\" + err)\r\n        Loader.offFor('newGrantSearch.user');\r\n        $scope.$digest();\r\n    })\r\n\r\n    const searchUpdate = ({ previouslyLoaded }) => {\r\n        Loader.onFor('newGrantSearch.apps');\r\n        if (!previouslyLoaded) {\r\n          newGrantSearch.search = Object.assign({}, $stateParams);\r\n        }\r\n\r\n        const type = newGrantSearch.search.type || 'applications';\r\n\r\n        const queryParams = {\r\n            'service.name': newGrantSearch.search.name,\r\n            'service.category': newGrantSearch.search.category,\r\n            page: newGrantSearch.search.page || 1,\r\n            pageSize: newGrantSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0],\r\n            sortBy: newGrantSearch.search.sortBy\r\n        };\r\n\r\n        const queryArray = APIHelpers.getQs(queryParams);\r\n\r\n        const queryOptions = {\r\n            personId: $stateParams.userId,\r\n            qs: queryArray\r\n        };\r\n\r\n        if (type === 'applications') {\r\n          // TODO: REPLACE WITH REAL COUNT\r\n          $q.all([API.cui.getPersonGrantableCount(queryOptions), API.cui.getPersonGrantableApps(queryOptions)])\r\n          .then(res => {\r\n              newGrantSearch.applicationList = res[1].slice();\r\n              newGrantSearch.count = res[0];\r\n              if(newGrantSearch.reRenderPaginate) {\r\n                newGrantSearch.reRenderPaginate();\r\n              }\r\n              Loader.offFor('newGrantSearch.apps')\r\n          })\r\n          .catch(err => {\r\n            console.error('There was an error fetching grantable apps or/and its count' + err)\r\n            Loader.offFor('newGrantSearch.apps')\r\n            newGrantSearch.grantableAppsError=true\r\n          })\r\n        }\r\n    };\r\n\r\n    searchUpdate({\r\n        previouslyLoaded: false\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newGrantSearch.toggleRequest = ({ type, payload }) => {\r\n        if (payload) {\r\n            const storedRequests = newGrantSearch.requests[type]\r\n            storedRequests[payload.id] ? delete storedRequests[payload.id] : storedRequests[payload.id] = payload\r\n            if (storedRequests[payload.id]) {\r\n                newGrantSearch[type + 'Checkbox'][payload.id] = true;\r\n            } else if (newGrantSearch[type + 'Checkbox'][payload.id]) {\r\n                delete newGrantSearch[type + 'Checkbox'][payload.id];\r\n            }\r\n            newGrantSearch.numberOfRequests = Object.keys(newGrantSearch.applicationCheckbox).length + Object.keys(newGrantSearch.packageCheckbox).length\r\n            NewGrant.updateStorage('person',$stateParams.userId, newGrantSearch.requests.application)\r\n        }\r\n    }\r\n\r\n    newGrantSearch.updateSearch = () => {\r\n        const stateParams = Object.assign({}, newGrantSearch.search)\r\n        $state.transitionTo('organization.requests.newGrantSearch', stateParams, {notify:false})\r\n        searchUpdate({\r\n            previouslyLoaded: true\r\n        })\r\n    }\r\n\r\n    newGrantSearch.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newGrantClaims', { userId: $stateParams.userId, orgId: $stateParams.orgId })\r\n    }\r\n\r\n    //select parent if it is a child, deselect child if it is a parent\r\n    newGrantSearch.checkRelatedAppsBody= function(relatedApp){\r\n        newGrantSearch.toggleRequest(_.find(newGrantSearch.list,{id:relatedApp.id}))   \r\n        newGrantSearch.checkRelatedAndBundledApps(_.find(newGrantSearch.list,{id:relatedApp.id}))\r\n    };\r\n\r\n    //deselect child if it is a parent, select parent if it is a child \r\n    newGrantSearch.checkRelatedAndBundledApps=function(type,application){\r\n        const storedRequests = newGrantSearch.requests[type]\r\n        //if unchecked the checkbox\r\n        if (!storedRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!application.servicePackage.parent) {\r\n                application.relatedApps && application.relatedApps.forEach((relatedApp)=>{\r\n                    // if (newGrantSearch[type + 'Checkbox'][relatedApp.id]) {\r\n                        // newGrantSearch[type + 'Checkbox'][relatedApp.id]=!newGrantSearch[type + 'Checkbox'][relatedApp.id]\r\n                        newGrantSearch.toggleRequest({type:'application', payload:_.find(newGrantSearch.applicationList,{id:relatedApp.id})})\r\n                    // }\r\n                })\r\n            }\r\n            newGrantSearch.checkBundledApps(application,false)           \r\n        }else{\r\n            if (application.servicePackage.parent) {\r\n                //Need to select the other parent(if it has any) If user clicks on expandabel title\r\n                newGrantSearch.applicationList.forEach(app=> {\r\n                    //if it is a parent and parent of selected app\r\n                    if (!app.servicePackage.parent&&app.servicePackage.id===application.servicePackage.parent.id&&!newGrantSearch['applicationCheckbox'][app.id]) {\r\n                       newGrantSearch['applicationCheckbox'][app.id]=!newGrantSearch['applicationCheckbox'][app.id]\r\n                       newGrantSearch.toggleRequest({type:'application', payload:app})\r\n                    }\r\n                })\r\n            }\r\n            newGrantSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    newGrantSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                // newGrantSearch['applicationCheckbox'][bundledApp.id]=check\r\n                newGrantSearch.toggleRequest({type:'application', payload:_.find(newGrantSearch.applicationList,{id:bundledApp.id})})\r\n            })\r\n        }\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('newOrgGrantClaimsCtrl', function(API,APIHelpers,DataStorage,Loader,NewGrant,$stateParams,$q,$scope,$state,$timeout) {\r\n    \r\n    const newOrgGrantClaims = this\r\n    const loaderType = 'newOrgGrantClaims.'\r\n    newOrgGrantClaims.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        }\r\n    }\r\n    if (API.user.organization.id===$stateParams.orgId) {\r\n        newOrgGrantClaims.prevState.name=\"organization.applications\"\r\n    }\r\n    else{\r\n        newOrgGrantClaims.prevState.name=\"organization.directory.orgDetails\"\r\n    }\r\n    newOrgGrantClaims.packageRequests = {}\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n    NewGrant.pullFromStorage(newOrgGrantClaims,$stateParams.orgId,'organization');\r\n    if (newOrgGrantClaims.numberOfRequests===0) {\r\n        $state.go('organization.requests.newOrgGrantSearch',{orgId:$stateParams.orgId})\r\n    }\r\n        //For PopUp\r\n    newOrgGrantClaims.appsBeingRequestedforPopup=angular.copy(newOrgGrantClaims.appsBeingRequested)\r\n    //Keep only one app among all bundled apps\r\n    angular.forEach(newOrgGrantClaims.appsBeingRequested , (request) =>{\r\n        if (request.bundledApps) {\r\n            request.bundledApps.forEach(bundledApp => {\r\n                if (newOrgGrantClaims.appsBeingRequested[bundledApp.id]) {\r\n                    delete newOrgGrantClaims.appsBeingRequested[bundledApp.id]\r\n                }                    \r\n            })\r\n        }\r\n    })\r\n    // get the claims for each app being requested\r\n    Object.keys(newOrgGrantClaims.appsBeingRequested).forEach((appId, i) => {\r\n        const app = newOrgGrantClaims.appsBeingRequested[appId]\r\n\r\n        if (!newOrgGrantClaims.packageRequests[app.servicePackage.id]) {\r\n            newOrgGrantClaims.packageRequests[app.servicePackage.id] = {\r\n                claims: {},\r\n                administratorRights: false\r\n            }\r\n        }\r\n\r\n        Loader.onFor(loaderType + 'claims' + i)\r\n\r\n        // const opts = {\r\n        //     qs: APIHelpers.getQs({\r\n        //         packageId: newOrgGrantClaims.appsBeingRequested[appId].servicePackage.id\r\n        //     })\r\n        // }\r\n\r\n        // API.cui.getPackageClaims(opts)\r\n        // .then(res => {\r\n        //     newOrgGrantClaims['claims' + i] = Object.assign({}, res)\r\n        //     res.forEach(claim => {\r\n        //         newOrgGrantClaims.packageRequests[app.servicePackage.id].claims[claim.claimId] = {}\r\n        //     })\r\n        //     Loader.offFor(loaderType + 'claims' + i)\r\n        //     $scope.$digest()\r\n        // })\r\n        // .fail(err => { \r\n        //     // claims endpoint throws an error when the package has no claims\r\n        //     newOrgGrantClaims['claims' + i] = []\r\n        //     Loader.offFor(loaderType + 'claims' + i)\r\n        //     $scope.$digest()\r\n        // })\r\n    })\r\n\r\n    Loader.onFor(loaderType + 'org')\r\n    API.cui.getOrganization({ organizationId: $stateParams.orgId })\r\n    .then(res => {\r\n        newOrgGrantClaims.org = Object.assign({}, res)\r\n        Loader.offFor(loaderType + 'org')\r\n        $scope.$digest()\r\n    })\r\n\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n\r\n    newOrgGrantClaims.submit = () => {\r\n        Loader.onFor(loaderType + 'submit')\r\n        newOrgGrantClaims.success = false;\r\n        let claimsPromises=[]\r\n        // Grant Packages\r\n        $q.all(NewGrant.packageGrants($stateParams.orgId ,'organization', newOrgGrantClaims.packageRequests).map(opts => API.cui.grantOrganizationPackage(opts)))\r\n        // .then(res => {\r\n        //     // grant claims\r\n        //     let claimsData=NewGrant.claimGrants($stateParams.orgId ,'organization', newOrgGrantClaims.packageRequests)\r\n        //     claimsData.forEach(claimData => {\r\n        //         if(claimData.data.packageClaims&&claimData.data.packageClaims.length!==0){\r\n        //             claimsPromises.push(API.cui.grantClaims(claimData))\r\n        //         }\r\n        //     })\r\n        //     return $q.all(claimsPromises)\r\n        // })\r\n        .then(res => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newOrgGrantClaims.success = true\r\n            DataStorage.setType('newOrgGrant',{})\r\n            $timeout(() => {\r\n                $state.go('organization.applications',{orgId:$stateParams.orgId});\r\n            }, 3000);\r\n        })\r\n        .catch(err => {\r\n            Loader.offFor(loaderType + 'submit')\r\n            newOrgGrantClaims.error = true\r\n        })\r\n    }\r\n\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('newOrgGrantCtrl', function(API, $stateParams, $scope, $state, $filter, Loader, DataStorage,NewGrant) {\r\n\r\n    const newOrgGrant = this\r\n    newOrgGrant.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        }\r\n    }\r\n    if (API.user.organization.id===$stateParams.orgId) {\r\n        newOrgGrant.prevState.name=\"organization.applications\"\r\n    }\r\n    else{\r\n        newOrgGrant.prevState.name=\"organization.directory.orgDetails\"\r\n    }\r\n    \r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    newOrgGrant.searchType = 'applications'\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                id:<user/org for which the grant is being made>,\r\n                applications:<array of applications being granted>,\r\n                packages:<array of packages being granted>\r\n                type:person or organiztion\r\n            }\r\n        ]\r\n    ****/\r\n    NewGrant.pullFromStorage(newOrgGrant,$stateParams.orgId,'organization');\r\n    Loader.onFor('newOrgGrant.org')\r\n    API.cui.getOrganization({ organizationId:$stateParams.orgId })\r\n    .then(res => {\r\n        newOrgGrant.org = Object.assign({}, res)\r\n        Loader.offFor('newOrgGrant.org')\r\n        $scope.$digest()\r\n    })\r\n\r\n    Loader.onFor('newOrgGrant.categories')\r\n    API.cui.getCategories()\r\n    .then(res => {\r\n        newOrgGrant.categories = res.slice()\r\n        Loader.offFor('newOrgGrant.categories')\r\n        $scope.$digest()\r\n    })\r\n    .fail(err => {\r\n        Loader.offFor('newOrgGrant.categories')\r\n        newOrgGrant.categoryError=true\r\n        $scope.$digest()\r\n    })\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newOrgGrant.searchCallback = (opts) => {\r\n        if (!opts) {\r\n            $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId});\r\n        } else if (typeof opts ==='string') {\r\n            $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId, name: opts});\r\n        } else {\r\n            const optsParser = {\r\n                category: (unparsedCategory) => {\r\n                    const category = $filter('cuiI18n')(unparsedCategory)\r\n                    $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId, category})\r\n                }\r\n            }\r\n            optsParser[opts.type](opts.value)\r\n        }\r\n    }\r\n\r\n    newOrgGrant.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newOrgGrantClaims', { orgId: $stateParams.orgId })\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('organization')\r\n.controller('newOrgGrantSearchCtrl', function ($scope, $state, $stateParams, API, DataStorage, Loader, $pagination, APIHelpers, NewGrant, $q, APIError) {\r\n    const newOrgGrantSearch = this;\r\n    newOrgGrantSearch.prevState={\r\n        params:{\r\n            orgId:$stateParams.orgId\r\n        }\r\n    }\r\n\r\n    if (API.user.organization.id===$stateParams.orgId) {\r\n        newOrgGrantSearch.prevState.name=\"organization.applications\"\r\n    }\r\n    else{\r\n        newOrgGrantSearch.prevState.name=\"organization.directory.orgDetails\"\r\n    }\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    // const updateStorage = () => {\r\n    //     DataStorage.setType('newOrgGrant', {\r\n    //         id: $stateParams.orgId,\r\n    //         type:'organization',\r\n    //         applications: newOrgGrantSearch.requests.application,\r\n    //         packages: newOrgGrantSearch.requests.package\r\n    //     })\r\n    //     console.log(DataStorage.getType('newOrgGrant'))\r\n    // };\r\n\r\n    const updateViewList = (list) => {\r\n        let deferred= $q.defer()\r\n        newOrgGrantSearch.viewList=[]\r\n        let qs=[]\r\n        let apiPromises = []\r\n        angular.forEach(list, (app,parentIndex) => {\r\n            // Child App and Parent app requested by user\r\n            if(app.servicePackage.parent&&app.relatedApps){\r\n                let flag=false\r\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\r\n                    if (_.find(list,{id:realtedApp.id})) {\r\n                        flag=true\r\n                    }\r\n                    else{\r\n                        qs.push(['service.id',realtedApp.id])\r\n                    }\r\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\r\n                        apiPromises.push(API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs}))\r\n                        qs=[]\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                newOrgGrantSearch.viewList.push(app)\r\n            }\r\n        })\r\n        $q.all(apiPromises)\r\n        .then(res => {\r\n            angular.forEach(res, (app) => {\r\n                if (newOrgGrantSearch.search.name) {\r\n                    app[0].expanded=true\r\n                }\r\n                newOrgGrantSearch.viewList.push(...app)\r\n                newOrgGrantSearch.list.push(...app)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"There was an error loading parent requestable apps\")\r\n                deferred.reject(err)\r\n        })\r\n        return deferred.promise\r\n    }    \r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    /****\r\n        grants in DataStorage are under the type 'newGrant' and look like\r\n\r\n        [\r\n            {\r\n                id:<user/org for which the grant is being made>,\r\n                applications:<object of applications being granted>,\r\n                packages:<object of packages being granted>\r\n                type:<person or org>\r\n            }\r\n        ]\r\n    ****/\r\n\r\n    NewGrant.pullFromStorage(newOrgGrantSearch,$stateParams.orgId,'organization');\r\n\r\n    Loader.onFor('newOrgGrantSearch.org');\r\n    API.cui.getOrganization({ organizationId: $stateParams.orgId })\r\n    .then(res => {\r\n        newOrgGrantSearch.org = Object.assign({}, res);\r\n        Loader.offFor('newOrgGrantSearch.org');\r\n        $scope.$digest();\r\n    })\r\n    .fail(err => {\r\n        console.error('There was an error retreiving organization details '+err)\r\n        Loader.offFor('newOrgGrantSearch.org');\r\n        $scope.$digest();\r\n    })\r\n\r\n    const searchUpdate = ({ previouslyLoaded }) => {\r\n        Loader.onFor('newOrgGrantSearch.apps');\r\n        if (!previouslyLoaded) {\r\n          newOrgGrantSearch.search = Object.assign({}, $stateParams);\r\n        }\r\n\r\n        const type = newOrgGrantSearch.search.type || 'applications';\r\n\r\n        const queryParams = {\r\n            'service.name': newOrgGrantSearch.search.name,\r\n            'service.category': newOrgGrantSearch.search.category,\r\n            page: newOrgGrantSearch.search.page || 1,\r\n            pageSize: newOrgGrantSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0],\r\n            sortBy: newOrgGrantSearch.search.sortBy\r\n        };\r\n\r\n        const queryArray = APIHelpers.getQs(queryParams);\r\n\r\n        const queryOptions = {\r\n            organizationId: $stateParams.orgId,\r\n            qs: queryArray\r\n        };\r\n\r\n        if (type === 'applications') {\r\n          // TODO: REPLACE WITH REAL COUNT\r\n          $q.all([API.cui.getOrganizationGrantableCount(queryOptions), API.cui.getOrganizationGrantableApps(queryOptions)])\r\n          .then(res => {\r\n              newOrgGrantSearch.applicationList = res[1].slice();\r\n              newOrgGrantSearch.count = res[0];\r\n              if(newOrgGrantSearch.reRenderPaginate) {\r\n                newOrgGrantSearch.reRenderPaginate();\r\n              }\r\n              updateViewList(res[1])\r\n             .then(() =>{\r\n                Loader.offFor('newOrgGrantSearch.apps');\r\n             })\r\n          })\r\n          .catch(err =>{\r\n            console.error(\"There was an error in retreiving grantable apps. \"+err)\r\n            APIError.onFor('newOrgGrantSearch.apps')\r\n            Loader.offFor('newOrgGrantSearch.apps');\r\n          })\r\n        }\r\n    };\r\n\r\n    searchUpdate({\r\n        previouslyLoaded: false\r\n    });\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    newOrgGrantSearch.toggleRequest = ({ type, payload }) => {\r\n        if (payload) {\r\n            const storedRequests = newOrgGrantSearch.requests[type]\r\n            storedRequests[payload.id] ? delete storedRequests[payload.id] : storedRequests[payload.id] = payload\r\n            if (storedRequests[payload.id]) {\r\n                newOrgGrantSearch[type + 'Checkbox'][payload.id] = true;\r\n            } else if (newOrgGrantSearch[type + 'Checkbox'][payload.id]) {\r\n                delete newOrgGrantSearch[type + 'Checkbox'][payload.id];\r\n            }\r\n            newOrgGrantSearch.numberOfRequests = Object.keys(newOrgGrantSearch.applicationCheckbox).length + Object.keys(newOrgGrantSearch.packageCheckbox).length\r\n\r\n            NewGrant.updateStorage('organization',$stateParams.orgId, newOrgGrantSearch.requests.application)\r\n        }\r\n    }\r\n\r\n    newOrgGrantSearch.updateSearch = () => {\r\n        const stateParams = Object.assign({}, newOrgGrantSearch.search)\r\n        $state.transitionTo('organization.requests.newOrgGrantSearch', stateParams, {notify:false})\r\n        searchUpdate({\r\n            previouslyLoaded: true\r\n        })\r\n    }\r\n\r\n    newOrgGrantSearch.goToClaimSelection = () => {\r\n        $state.go('organization.requests.newOrgGrantClaims', { orgId: $stateParams.orgId })\r\n    }\r\n\r\n        //select parent if it is a child, deselect child if it is a parent\r\n    newOrgGrantSearch.checkRelatedAppsBody= function(relatedApp){\r\n        newOrgGrantSearch.toggleRequest(_.find(newOrgGrantSearch.list,{id:relatedApp.id}))   \r\n        newOrgGrantSearch.checkRelatedAndBundledApps(_.find(newOrgGrantSearch.list,{id:relatedApp.id}))\r\n    };\r\n\r\n    //deselect child if it is a parent, select parent if it is a child \r\n    newOrgGrantSearch.checkRelatedAndBundledApps=function(type,application){\r\n        const storedRequests = newOrgGrantSearch.requests[type]\r\n        //if unchecked the checkbox\r\n        if (!storedRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!application.servicePackage.parent) {\r\n                application.relatedApps && application.relatedApps.forEach((relatedApp)=>{\r\n                    // if (newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]) {\r\n                        // newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]=!newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]\r\n                        newOrgGrantSearch.toggleRequest({type:'application', payload:_.find(newOrgGrantSearch.applicationList,{id:relatedApp.id})})\r\n                    // }\r\n                })\r\n            }\r\n            newOrgGrantSearch.checkBundledApps(application,false)           \r\n        }else{\r\n            if (application.servicePackage.parent) {\r\n                //Need to select the other parent(if it has any) If user clicks on expandabel title\r\n                newOrgGrantSearch.applicationList.forEach(app=> {\r\n                    //if it is a parent and parent of selected app\r\n                    if (!app.servicePackage.parent&&app.servicePackage.id===application.servicePackage.parent.id&&!newOrgGrantSearch['applicationCheckbox'][app.id]) {\r\n                       newOrgGrantSearch['applicationCheckbox'][app.id]=!newOrgGrantSearch['applicationCheckbox'][app.id]\r\n                       newOrgGrantSearch.toggleRequest({type:'application', payload:app})\r\n                    }\r\n                })\r\n            }\r\n            newOrgGrantSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    newOrgGrantSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                // newOrgGrantSearch['applicationCheckbox'][bundledApp.id]=check\r\n                newOrgGrantSearch.toggleRequest({type:'application', payload:_.find(newOrgGrantSearch.applicationList,{id:bundledApp.id})})\r\n            })\r\n        }\r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('orgAppRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,DataStorage) {\r\n\r\n    const scopeName = 'orgAppRequests.'\r\n\tconst orgAppRequests = this\r\n    orgAppRequests.search = {}\r\n\torgAppRequests.sortBy = {}\r\n\r\n\torgAppRequests.search=Object.assign({},$stateParams)\r\n\tif(!orgAppRequests.search.page)\r\n\t\torgAppRequests.search.page=1\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n\t\tvar foundOrgs = [];\r\n\t\tvar foundPersons = [];\r\n\t\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n      orgAppRequests.search['isApprovable'] = true;\r\n      orgAppRequests.search.pageSize = orgAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\t\t\tvar qsArray = APIHelpers.getQs(orgAppRequests.search);\r\n\r\n\t    orgAppRequests.data = []\r\n      Loader.onFor(scopeName + 'data')\r\n      APIError.offFor(scopeName + 'data')\r\n\r\n\r\n\t\t\tvar getOrg = function(orgId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (orgId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPerson = function(personId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (personId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPackage = function(packageId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (packageId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar done = function(context) {\r\n  \t\t\t$timeout(function() {\r\n\t        Loader.offFor(scopeName + 'data')\r\n\t        cui.log('done', context);\r\n\t        cui.log('data', orgAppRequests.data);\r\n\r\n\t        orgAppRequests.reRenderPagination && orgAppRequests.reRenderPagination()\r\n  \t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\t/*qsArray.push(['requestor.type','organization'])getPackageRequests*/\r\n\t\t\tqsArray.push(['requestor.id',User.user.organization.id])\r\n\t\t\tAPI.cui.retriveOrgPendingApps({ qs: ['requestor.id',User.user.organization.id] }).then(function(res) {\r\n\t\t\t\tvar calls = [];\r\n\r\n\t\t\t\t_.each(res, function(pkgReq) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\t\tvar data = pkgReq\r\n        \torgAppRequests.data.push(data);\r\n\r\n        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t        calls.push(\r\n\t        \tgetPerson(pkgReq.creator).then(function(person) {\r\n\t        \t\tdata.personData = person || {};\r\n\t        \t\tvar pkgId = (pkgReq && pkgReq.servicePackage) ? pkgReq.servicePackage.id : '';\r\n\t          \treturn getPackage(pkgId);\r\n\t\t\t\t\t\t}).then(function(pkg) {\r\n\t        \t\tdata.packageData = pkg;\r\n\t        \t\tvar orgId = pkgReq.requestor.id;\r\n\t\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t\t}).then(function(org) {\r\n\t\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t}).fail(function() {\r\n\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\treturn $.Deferred().resolve(calls);\r\n\t\t\t}).then(function(calls) {\r\n\t\t\t\t// do the cached calls\r\n\t\t\t\treturn $.when.apply($, calls);\r\n\t\t\t}).then(function() {\r\n\t\t\t\t// do the count (used for pagination)\r\n\t\t\t\treturn API.cui.getPackageRequestsCount();\r\n\t\t\t}).then(function(count) {\r\n\t\t\t\t// apply the count\r\n\t\t\t\torgAppRequests.userCount = count;\r\n\t\t\t\tAPI.user.orgAppRequestsCount=count\r\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t\t\t}).fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n      }).always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('App Requests'))\r\n      \tdone('finally');\r\n      });\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    orgAppRequests.sortingCallbacks = {\r\n      administrator () {\r\n          orgAppRequests.sortBy.sortBy = 'administrator'\r\n          orgAppRequests.sort(['personData.name.given', 'personData.name.surname'], orgAppRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          orgAppRequests.sortBy.sortBy = 'submitted'\r\n          orgAppRequests.sort('personData.creation', orgAppRequests.sortBy.sortType)\r\n      },\r\n      request () {\r\n          orgAppRequests.sortBy.sortBy = 'request'\r\n          orgAppRequests.sort('packageData.name', orgAppRequests.sortBy.sortType)\r\n      },\r\n      organization () {\r\n          orgAppRequests.sortBy.sortBy = 'organization'\r\n          orgAppRequests.sort('personData.organization.name', orgAppRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgAppRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      orgAppRequests.data = _.orderBy(orgAppRequests.data, sortBy, order)\r\n    }\r\n\r\n\t\torgAppRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id &&\r\n\t\t\t\trequest.packageData && request.packageData.id) {\r\n\t\t\t\tDataStorage.setType('organizationAppRequest',request)\r\n\t\t\t\t$state.go('organization.requests.organizationAppRequest', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id,\r\n\t\t\t\t\t'packageId': request.packageData.id\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('orgAppRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    orgAppRequests.updateSearchParams = (page) => {\r\n        if (page) orgAppRequests.search.page = page\r\n        $state.transitionTo('organization.requests.orgAppRequests', orgAppRequests.search, {notify: false})\r\n        init()\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('orgRegistrationRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,DataStorage) {\r\n\r\n    const scopeName = 'orgRegistrationRequests.'\r\n\tconst orgRegistrationRequests = this\r\n    orgRegistrationRequests.search = {}\r\n\torgRegistrationRequests.sortBy = {}\r\n\r\n\torgRegistrationRequests.search=Object.assign({},$stateParams)\r\n\tif(!orgRegistrationRequests.search.page)\r\n\t\torgRegistrationRequests.search.page=1\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\tvar foundOrgs = [];\r\n\tvar foundPersons = [];\r\n\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n    orgRegistrationRequests.search.pageSize = orgRegistrationRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\tvar qsArray = APIHelpers.getQs(orgRegistrationRequests.search);\r\n\t\t\t//cui.log('qsArray', qsArray);\r\n\r\n\torgRegistrationRequests.data = []\r\n    Loader.onFor(scopeName + 'data')\r\n    APIError.offFor(scopeName + 'data')\r\n\r\n\tvar getOrg = function(orgId) {\r\n\t\treturn $.Deferred(function (dfr) {\r\n\t\t\tif (orgId.length) {\r\n\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\tif (cached) {\r\n\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdfr.resolve({});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tvar getPerson = function(personId) {\r\n\t\treturn $.Deferred(function (dfr) {\r\n\t\t\tif (personId&&personId.length) {\r\n\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\tif (cached) {\r\n\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdfr.resolve({});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tvar getPackage = function(packageId) {\r\n\t\treturn $.Deferred(function (dfr) {\r\n\t\t\tif (packageId.length) {\r\n\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\tif (cached) {\r\n\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdfr.resolve({});\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tvar done = function(context) {\r\n\t\t$timeout(function() {\r\n    Loader.offFor(scopeName + 'data')\r\n    cui.log('done', context);\r\n\t\t\tcui.log('data', orgRegistrationRequests.data);\r\n\r\n    orgRegistrationRequests.reRenderPagination && orgRegistrationRequests.reRenderPagination()\r\n\t\t});\r\n\t};\r\n\r\n\tvar start = window.performance.now();\r\n\tvar end;\r\n\tAPI.cui.getOrgRegistrationRequests({ qs: qsArray })\r\n\t.then(function(res) {\r\n\t\tvar calls = [];\r\n\t\t_.each(res, function(regReq) {\r\n\t\t\t//Needed as some requests will not contain security admin details\r\n\t\t\t//And they need to be removed\r\n\t\t\tif (regReq.registrant) {\r\n\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\tvar data = regReq\r\n\t        \torgRegistrationRequests.data.push(data);\r\n\r\n\t        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t\t        calls.push(\r\n\t\t\t        getPerson(regReq.registrant&&regReq.registrant.id)\r\n\t\t\t        .then(function(person) {\r\n\t\t\t        \tdata.personData = person || {};\r\n\t\t\t        \tvar pkgId = (! _.isEmpty(regReq.packages)) ? regReq.packages[0].id : '';\r\n\t\t\t            return getPackage(pkgId);\r\n\t\t\t\t\t})\r\n\t\t\t        .then(function(pkg) {\r\n\t\t\t        \tdata.packageData = pkg;\r\n\t\t\t        \tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\r\n\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t})\r\n\t\t\t        .then(function(org) {\r\n\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\r\n\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t\t      \t\t})\r\n\t\t      \t\t.fail(function() {\r\n\t\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t\t      \t\t})\r\n\t\t\t    );\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn $.Deferred().resolve(calls);\r\n\t})\r\n\t.then(function(calls) {\r\n\t\t// do the cached calls\r\n\t\treturn $.when.apply($, calls);\r\n\t})\r\n\t.then(function() {\r\n\t\t// do the count (used for pagination)\r\n\t\treturn API.cui.getOrgRegistrationRequestsCount();\r\n\t})\r\n\t.then(function(count) {\r\n\t\t// apply the count\r\n\t\torgRegistrationRequests.userCount = count;\r\n\t\tAPI.user.orgRegistrationRequestsCount=count\r\n\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t})\r\n\t.fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n    })\r\n\t.always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('Registration Requests'))\r\n      \tdone('finally');\r\n\t\tvar end = window.performance.now();\r\n\t\tvar time = end - start;\r\n\t\tcui.log('time', time);\r\n\t\t});\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    orgRegistrationRequests.sortingCallbacks = {\r\n      administrator () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'administrator'\r\n          orgRegistrationRequests.sort(['personData.name.given', 'personData.name.surname'], orgRegistrationRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'submitted'\r\n          orgRegistrationRequests.sort('personData.creation', orgRegistrationRequests.sortBy.sortType)\r\n      },\r\n      request () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'request'\r\n          orgRegistrationRequests.sort('packageData.name', orgRegistrationRequests.sortBy.sortType)\r\n      },\r\n      organization () {\r\n          orgRegistrationRequests.sortBy.sortBy = 'organization'\r\n          orgRegistrationRequests.sort('personData.organization.name', orgRegistrationRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    orgRegistrationRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      orgRegistrationRequests.data = _.orderBy(orgRegistrationRequests.data, sortBy, order)\r\n    }\r\n\r\n\r\n\t\torgRegistrationRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id) {\r\n\t\t\t\tDataStorage.setType('organizationRegRequest',request)\r\n\t\t\t\t$state.go('organization.requests.organizationRequest', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id \r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('orgRegistrationRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    orgRegistrationRequests.updateSearch = (updateType, updateValue) => {\r\n    \t//cui.log('updateSearchParams', page);\r\n    \tswitch(updateType){\r\n    \t\tcase 'organizationName':\r\n    \t\t\torgRegistrationRequests.search.page=1\r\n    \t\t\torgRegistrationRequests.search.organizationName=updateValue\r\n    \t\t\tbreak\r\n    \t}\r\n        // WHY transition to this same route? if setting notify:false? what is the purpose? just to add an item to history?\r\n        $state.transitionTo('organization.requests.orgRegistrationRequests', orgRegistrationRequests.search, {notify: false})\r\n        init()\r\n    }\r\n\r\n    orgRegistrationRequests.pageChange = (newpage) => {\r\n        orgRegistrationRequests.updateSearch('page', newpage)\r\n    }\r\n\r\n    orgRegistrationRequests.searchCallback= (searchWord) => {\r\n        orgRegistrationRequests.updateSearch('organizationName',searchWord)\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('organizationAppRequestCtrl', function(APIError, DataStorage, Loader, $state, $stateParams, $timeout,API,$scope,$q, ServicePackage ) {\r\n    'use strict'\r\n\r\n    const organizationAppRequest = this\r\n    const userId = $stateParams.userId\r\n    const organizationId = $stateParams.orgId\r\n\r\n    // HELPER FUNCTIONS START------------------------------------------------------\r\n    let getAllDetails= () => {\r\n        let promises=[]\r\n        API.cui.getOrganization({organizationId:organizationId})\r\n        .then(res =>{\r\n            organizationAppRequest.request.personData.organization=res\r\n            $scope.$digest()\r\n        })\r\n        if (organizationAppRequest.request.packageData) {\r\n            ServicePackage.getPackageDetails(organizationAppRequest.request.packageData.id)\r\n            .then(packageData => {\r\n                organizationAppRequest.request.packageData=angular.merge(organizationAppRequest.request.packageData,packageData)\r\n            })\r\n            .catch(err => {\r\n                APIError.onFor('organizationAppRequest.packageServices')\r\n                console.log('There was an error in fetching following package service details' +err)\r\n            })\r\n            .finally(() => {\r\n                Loader.offFor('organizationAppRequest.init')\r\n            })\r\n        }\r\n        else{\r\n            Loader.offFor('organizationAppRequest.init')\r\n        }\r\n    }\r\n    // HELPER FUNCTIONS END------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationAppRequest.init')\r\n    organizationAppRequest.request=DataStorage.getType('organizationAppRequest')\r\n    console.log(organizationAppRequest.request)\r\n    if (!organizationAppRequest.request) {\r\n        APIError.onFor('organizationAppRequest.noRequest')\r\n        Loader.offFor('organizationAppRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else if (organizationAppRequest.request.personData.id!==userId || organizationAppRequest.request.personData.organization.id!==organizationId) {\r\n        APIError.onFor('organizationAppRequest.noRequest')\r\n        Loader.offFor('organizationAppRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else{\r\n        getAllDetails()\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationAppRequest.reviewApprovals = () => {\r\n        DataStorage.setType('organizationRegRequest', organizationAppRequest.request)\r\n        $state.go('organization.requests.organizationAppRequestReview', { userId: userId, orgId: organizationId })\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('organizationAppRequestReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout,APIError,API,$scope) {\r\n    'use strict'\r\n\r\n    const organizationAppRequestReview = this\r\n    const orgId = $stateParams.orgId\r\n\r\n    organizationAppRequestReview.success = false\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('organizationAppRequestReview.submitting')\r\n        organizationAppRequestReview.success = true\r\n        DataStorage.setType('organizationAppRequest',{})\r\n        $scope.$digest()\r\n            $timeout(() => {\r\n                $state.go('organization.requests.orgAppRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving org app request ${err.responseJSON}`)\r\n        if (err&&err.responseJSON.apiMessage==='The service request does not exist') {\r\n            organizationAppRequestReview.errorMessage='request-approve-or-rejected'\r\n        }else{\r\n            organizationAppRequestReview.errorMessage=undefined\r\n        }\r\n        Loader.offFor('organizationAppRequestReview.submitting')\r\n        organizationAppRequestReview.error = true\r\n        $scope.$digest()\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationAppRequestReview.init')\r\n\r\n    const requestData = DataStorage.getType('organizationAppRequest')\r\n    if (!requestData) {\r\n        APIError.onFor('organizationAppRequestReview.noRequest')\r\n        // $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else if (requestData.personData.organization.id!==orgId) {\r\n        APIError.onFor('organizationAppRequestReview.noRequest')\r\n        // $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\r\n    }\r\n    else{\r\n        Loader.offFor('organizationAppRequestReview.init')\r\n    }\r\n    organizationAppRequestReview.packageData = requestData.packageData\r\n    organizationAppRequestReview.personData = requestData.personData\r\n    organizationAppRequestReview.organization = requestData.organization\r\n    organizationAppRequestReview.request = requestData.request\r\n    organizationAppRequestReview.justification=requestData.justification\r\n    organizationAppRequestReview.id=requestData.id\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationAppRequestReview.submit = () => {\r\n        Loader.onFor('organizationAppRequestReview.submitting')\r\n        organizationAppRequestReview.packageData.id=organizationAppRequestReview.id\r\n        ServicePackage.handlePackageApproval(organizationAppRequestReview.packageData)\r\n        .then(handleSuccess)\r\n        .fail(handleError)\r\n        // if (organizationAppRequestReview.packageData.approval === 'approved'){\r\n        //     API.cui.denyOrgRegistrationRequest({qs:[['requestId',requestData.id],['reason',organizationAppRequestReview.request.rejectReason]]})\r\n        //     .then(handleSuccess)\r\n        //     .fail(handleError)\r\n        // }\r\n        // //all approval then call registration endpoint directly\r\n        // else (organizationAppRequestReview.deniedCount===0) {\r\n        //     API.cui.approveOrgRegistrationRequest({qs:[['requestId',requestData.id]]})\r\n        //     .then(handleSuccess)\r\n        //     .fail(handleError)\r\n        // }\r\n        // else {\r\n        //     API.cui.approvePersonRegistration({qs: [['requestId',requestData.registrant.requestId]]})\r\n        //     let packageRequestCalls = []\r\n\r\n        //     organizationAppRequestReview.packages.forEach(packageRequest => {\r\n        //         packageRequest.id=packageRequest.requestId\r\n        //         packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n        //     })\r\n\r\n        //     $q.all(packageRequestCalls)\r\n        //     .then( res =>{\r\n        //         Loader.offFor('organizationAppRequestReview.submitting')\r\n        //         organizationAppRequestReview.success = true\r\n        //             $timeout(() => {\r\n        //                 $state.go('organization.requests.orgRegistrationRequests')\r\n        //         }, 3000) \r\n        //     })\r\n        //     // .catch(handleError)\r\n        // }\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('organizationRequestCtrl', function(APIError, DataStorage, Loader, $state, $stateParams, $timeout,API,$scope,$q, ServicePackage ) {\r\n    'use strict'\r\n\r\n    const organizationRequest = this\r\n    const userId = $stateParams.userId\r\n    const organizationId = $stateParams.orgId\r\n\r\n    // HELPER FUNCTIONS START------------------------------------------------------\r\n    let getAllDetails= () => {\r\n        let promises=[]\r\n        API.cui.getOrganization({organizationId:organizationId})\r\n        .then(res =>{\r\n            organizationRequest.request.personData.organization=res\r\n            $scope.$digest()\r\n        })\r\n        if (organizationRequest.request.packages&&organizationRequest.request.packages.length!==0) {\r\n            organizationRequest.request.packages.forEach((requestedPackage ,index)=>{\r\n                ServicePackage.getPackageDetails(requestedPackage.id)\r\n                .then(packageData => {\r\n                    requestedPackage=angular.merge(requestedPackage,packageData)\r\n                })\r\n                .catch(err => {\r\n                    APIError.onFor('organizationRequest.packageServices')\r\n                    console.log('There was an error in fetching following package service details' +err)\r\n                    Loader.offFor('organizationRequest.init')\r\n                })\r\n                .finally(() => {\r\n                        if (index===organizationRequest.request.packages.length-1) {\r\n                        Loader.offFor('organizationRequest.init')\r\n                    }\r\n                })\r\n            })\r\n            // $q.all(promises)\r\n            // .then(res => {\r\n            //     organizationRequest.packageData =res\r\n                \r\n            // })\r\n            // .catch(err => {\r\n            //     APIError.onFor('organizationRequest.packageServices')\r\n            //     console.log('There was an error in fetching one or more package service details' +err)\r\n            //     Loader.offFor('organizationRequest.init')\r\n            // })\r\n        }\r\n        else{\r\n            Loader.offFor('organizationRequest.init')\r\n        }\r\n    }\r\n    // HELPER FUNCTIONS END------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationRequest.init')\r\n    organizationRequest.request=DataStorage.getType('organizationRegRequest')\r\n    console.log(organizationRequest.request)\r\n    if (!organizationRequest.request) {\r\n        APIError.onFor('organizationRequest.noRequest')\r\n        Loader.offFor('organizationRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else if (organizationRequest.request.personData.id!==userId || organizationRequest.request.personData.organization.id!==organizationId) {\r\n        APIError.onFor('organizationRequest.noRequest')\r\n        Loader.offFor('organizationRequest.init')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else{\r\n        getAllDetails()\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationRequest.reviewApprovals = () => {\r\n        DataStorage.setType('organizationRegRequest', organizationRequest.request)\r\n        $state.go('organization.requests.organizationRequestReview', { userId: userId, orgId: organizationId })\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('organizationRequestReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout,APIError,API,$scope) {\r\n    'use strict'\r\n\r\n    const organizationRequestReview = this\r\n    const orgId = $stateParams.orgId\r\n\r\n    organizationRequestReview.success = false\r\n    organizationRequestReview.approvedCount = 0\r\n    organizationRequestReview.deniedCount = 0\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    organizationRequestReview.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    organizationRequestReview.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('organizationRequestReview.submitting')\r\n            organizationRequestReview.success = true\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                $state.go('organization.requests.orgRegistrationRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving org registration ${err}`)\r\n        Loader.offFor('organizationRequestReview.submitting')\r\n        organizationRequestReview.error = true\r\n        $scope.$digest()\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('organizationRequestReview.init')\r\n\r\n    const requestData = DataStorage.getType('organizationRegRequest')\r\n    if (!requestData) {\r\n        APIError.onFor('organizationRequestReview.noRequest')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else if (requestData.personData.organization.id!==orgId) {\r\n        APIError.onFor('organizationRequestReview.noRequest')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else if (requestData.personData.status!==\"pending\") {\r\n        APIError.onFor('organizationRequestReview.active')\r\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\r\n    }\r\n    else{\r\n        Loader.offFor('organizationRequestReview.init')\r\n    }\r\n    organizationRequestReview.packages = requestData.packages\r\n    organizationRequestReview.personData = requestData.personData\r\n    organizationRequestReview.organization = requestData.organization\r\n    organizationRequestReview.request = requestData.request\r\n    organizationRequestReview.justification=requestData.justification\r\n    organizationRequestReview.id=requestData.id\r\n    if (organizationRequestReview.packages&&organizationRequestReview.packages.length > 0) {\r\n    \tgetApprovalCounts(organizationRequestReview.packages)\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    organizationRequestReview.submit = () => {\r\n        Loader.onFor('organizationRequestReview.submitting')\r\n\r\n        if (organizationRequestReview.request.approval === 'denied'){\r\n            API.cui.denyOrgRegistrationRequest({qs:[['requestId',requestData.id],['reason',organizationRequestReview.request.rejectReason]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        //all approval then call registration endpoint directly\r\n        else if (organizationRequestReview.deniedCount===0) {\r\n            API.cui.approveOrgRegistrationRequest({qs:[['requestId',requestData.id]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else {\r\n            API.cui.approveOrganizationRequests({qs: [['requestId',requestData.registrant.requestId]]})\r\n            .then(res =>{\r\n                let packageRequestCalls = []\r\n\r\n                organizationRequestReview.packages.forEach(packageRequest => {\r\n                    packageRequest.id=packageRequest.requestId\r\n                    packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n                })\r\n\r\n                $q.all(packageRequestCalls)\r\n                .then( res =>{\r\n                    Loader.offFor('organizationRequestReview.submitting')\r\n                    organizationRequestReview.success = true\r\n                        $timeout(() => {\r\n                            $state.go('organization.requests.orgRegistrationRequests')\r\n                    }, 3000) \r\n                })\r\n                .catch(err => {\r\n                    console.log(\"Org approval success but One or more package approval/denied failed\" +err)\r\n                    organizationRequestReview.error = true\r\n                })\r\n            })            \r\n            .fail(handleError)\r\n        }\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('pendingRequestsCtrl', function(API, DataStorage, Loader, ServicePackage, $q, $state, $stateParams,$timeout) {\r\n    'use strict'\r\n\r\n    const pendingRequests = this\r\n    const userId = $stateParams.userId\r\n    const orgId = $stateParams.orgId\r\n\r\n    pendingRequests.success = false\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n    pendingRequests.approvedCount = 0\r\n    pendingRequests.deniedCount = 0\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    pendingRequests.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    pendingRequests.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('pendingRequests.init')\r\n\r\n    $q.all([\r\n        API.cui.getPerson({personId: userId}),\r\n        ServicePackage.getAllUserPendingPackageData(userId)\r\n    ])\r\n    .then(res => {\r\n        pendingRequests.user = res[0]\r\n        pendingRequests.packages = res[1]\r\n        Loader.offFor('pendingRequests.init')\r\n    })\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    pendingRequests.reviewApprovals = () => {\r\n        const storageData = {\r\n            user: pendingRequests.user,\r\n            packages: pendingRequests.packages   \r\n        }\r\n        \r\n        DataStorage.setType('appRequests', storageData)\r\n        $state.go('organization.requests.pendingRequestsReview', { userId: userId, orgId: orgId })\r\n    }\r\n\r\n    pendingRequests.submit = () => {\r\n        let submitCalls = []\r\n        getApprovalCounts(pendingRequests.packages)\r\n        if (pendingRequests.deniedCount===0) {\r\n            pendingRequests.submitting=true\r\n            pendingRequests.packages.forEach(packageRequest => {\r\n                submitCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n            })\r\n\r\n            $q.all(submitCalls)\r\n            .then(() => {\r\n                pendingRequests.success = true\r\n                pendingRequests.submitting=false\r\n                $timeout(() => {\r\n                    $state.go('organization.requests.usersAppRequests')\r\n                }, 3000)\r\n            })\r\n            .catch(err => {\r\n                pendingRequests.submitting=false\r\n                console.log(\"There was an error in approving application requests\" + err);\r\n                pendingRequests.error=true\r\n            })\r\n        }\r\n        else{\r\n            pendingRequests.reviewApprovals()\r\n        }\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('pendingRequestsReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout) {\r\n    'use strict'\r\n\r\n    const pendingRequestsReview = this\r\n    const userId = $stateParams.userId\r\n    const orgId = $stateParams.orgId\r\n\r\n    pendingRequestsReview.success = false\r\n    pendingRequestsReview.approvedCount = 0\r\n    pendingRequestsReview.deniedCount = 0\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    pendingRequestsReview.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    pendingRequestsReview.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    Loader.onFor('pendingRequestsReview.init')\r\n\r\n    const requestData = DataStorage.getType('appRequests')\r\n\r\n    pendingRequestsReview.pendingRequests = requestData.packages\r\n    pendingRequestsReview.user = requestData.user\r\n\r\n    if (pendingRequestsReview.pendingRequests.length > 0) {\r\n        getApprovalCounts(pendingRequestsReview.pendingRequests)\r\n    }\r\n\r\n    Loader.offFor('pendingRequestsReview.init')\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    pendingRequestsReview.submit = () => {\r\n        let submitCalls = []\r\n        pendingRequestsReview.submitting=true\r\n        pendingRequestsReview.pendingRequests.forEach(packageRequest => {\r\n            submitCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n        })\r\n\r\n        $q.all(submitCalls)\r\n        .then(() => {\r\n            pendingRequestsReview.success = true\r\n            pendingRequestsReview.submitting=false\r\n            $timeout(() => {\r\n                $state.go('organization.requests.usersAppRequests',)\r\n            }, 3000)\r\n        })\r\n        .catch(err => {\r\n            console.log(\"There was an error in approving user application requests\" + err)\r\n            pendingRequestsReview.submitting=false\r\n            pendingRequestsReview.error=true\r\n        })\r\n    }\r\n\r\n    pendingRequestsReview.goBack = () => {\r\n        $state.go('organization.requests.pendingRequests', { userId: userId, orgId: orgId })\r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('personRequestCtrl', function(APIError, DataStorage, Loader, PersonRequest, ServicePackage, $state, $stateParams, $timeout,API,$scope) {\r\n    'use strict'\r\n\r\n    const personRequest = this\r\n    const userId = $stateParams.userId\r\n    const organizationId = $stateParams.orgId\r\n    // Needed when there is no packages\r\n    personRequest.approvedCount = 0\r\n    personRequest.deniedCount = 0\r\n\r\n    personRequest.success = false\r\n\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        personRequest.approvedCount = 0\r\n        personRequest.deniedCount = 0\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    personRequest.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    personRequest.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('personRequest.submitting')\r\n        personRequest.success = true\r\n        DataStorage.deleteType('userPersonRequest')\r\n        API.user.userRegistrationRequestsCount=API.user.userRegistrationRequestsCount-1\r\n        $scope.$digest()\r\n        $timeout(() => {\r\n            $state.go('organization.requests.usersRegistrationRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving user registration ${err}`)\r\n        Loader.offFor('personRequest.submitting')\r\n        personRequest.error = true\r\n        $scope.$digest()\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    let getPackageDetails = () => {\r\n        if (personRequest.request.request.packages) {\r\n            ServicePackage.getAllUserPendingPackageData(userId)\r\n            .then(res => {\r\n                personRequest.request.completePackageData = res\r\n            })\r\n            .catch(err => {\r\n                APIError.onFor('personRequest.noRequest')\r\n                $timeout(() => $state.go('organization.requests.usersRegistrationRequests'), 5000)\r\n            })\r\n        }\r\n        else{\r\n            personRequest.request.completePackageData =[]\r\n        }\r\n    }\r\n\r\n    // Check LocalStorage if data is already obtained in previous page\r\n    let storageData=DataStorage.getType('userPersonRequest')\r\n    if (storageData&&userId===storageData.request.registrant.id) {\r\n        personRequest.request=storageData;\r\n        getPackageDetails()\r\n    }\r\n    else{\r\n        Loader.onFor('personRequest.init')\r\n        PersonRequest.getPersonRegistrationRequestData(userId, organizationId)\r\n        .then(res => {\r\n            if (!res.request) {\r\n                APIError.onFor('personRequest.noRequest')\r\n                $timeout(() => $state.go('organization.requests.usersRegistrationRequests'), 5000)\r\n            }\r\n            else {\r\n                personRequest.request = res\r\n                getPackageDetails()    \r\n                Loader.offFor('personRequest.init')\r\n            }\r\n        })\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    personRequest.reviewApprovals = () => {\r\n        DataStorage.setType('userPersonRequest', personRequest.request )\r\n        $state.go('organization.requests.personRequestReview', { userId: userId, orgId: organizationId })\r\n    }\r\n\r\n    personRequest.submit = () => {\r\n        Loader.onFor('personRequest.submitting')\r\n        if (personRequest.packages&&personRequest.packages.length > 0) {\r\n            getApprovalCounts(personRequest.packages)\r\n        }\r\n        if (personRequest.request.request.approval==='denied') {\r\n            //To enter denied Reason\r\n            personRequest.reviewApprovals()\r\n            // API.cui.denyPersonRegistrationRequest({qs:[['requestId',personRequest.request.request.id],['reason',personRequestReview.request.rejectReason|\"\"]]})\r\n            // .then(handleSuccess)\r\n            // .fail(handleError)\r\n        }\r\n        else if (personRequest.deniedCount===0) {\r\n            API.cui.approvePersonRegistrationRequest({qs:[['requestId',personRequest.request.request.id]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else{\r\n            //To enter denied Reason\r\n            personRequest.reviewApprovals()\r\n            // API.cui.approvePersonRequest({qs:[['requestId',personRequest.request.request.registrant.requestId||personRequestReview.request.id]]})\r\n            // .then(res => {\r\n            //     let packageRequestCalls = []\r\n\r\n            //     personRequest.packages.forEach(packageRequest => {\r\n            //         packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n            //     })\r\n\r\n            //     $q.all(packageRequestCalls)\r\n            //     .then(() => {\r\n            //         Loader.offFor('personRequest.submitting')\r\n            //         personRequest.success = true\r\n            //         $timeout(() => {\r\n            //             $state.go('organization.requests.usersRegistrationRequests')\r\n            //         }, 3000)  \r\n            //     })\r\n            //     .catch(err => {\r\n            //         console.log(\"User approval successful but there was an error approving/denying package requests\" +err)\r\n            //         personRequest.error = true\r\n            //         personRequest.errorMessage=\"app-approval-error\"\r\n            //     })\r\n            // })\r\n            // .fail(handleError)\r\n        }        \r\n    }\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n})\r\n\r\nangular.module('organization')\r\n.controller('personRequestReviewCtrl', function(DataStorage, Loader, PersonRequest, ServicePackage, $q, $state, $stateParams, $timeout,API,$scope) {\r\n    'use strict'\r\n\r\n    const personRequestReview = this\r\n    const userId = $stateParams.userId\r\n    const orgId = $stateParams.orgId\r\n\r\n    personRequestReview.success = false\r\n    personRequestReview.approvedCount = 0\r\n    personRequestReview.deniedCount = 0\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const getApprovalCounts = (requests) => {\r\n        requests.forEach(request => {\r\n            switch (request.approval) {\r\n                case 'approved':\r\n                    personRequestReview.approvedCount += 1\r\n                    break\r\n                case 'denied':\r\n                    personRequestReview.deniedCount += 1\r\n                    break\r\n            }\r\n        })\r\n    }\r\n\r\n    const handleSuccess = (res) => {\r\n        Loader.offFor('personRequestReview.submitting')\r\n            personRequestReview.success = true\r\n            DataStorage.deleteType('userPersonRequest')\r\n            $scope.$digest()\r\n            $timeout(() => {\r\n                $state.go('organization.requests.usersRegistrationRequests')\r\n        }, 3000)  \r\n    }\r\n\r\n    const handleError = (err) => {\r\n        console.log(`There was an error in approving user registration ${err}`)\r\n        Loader.offFor('personRequestReview.submitting')\r\n        personRequestReview.error = true\r\n        $scope.$digest()\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    const requestData = DataStorage.getType('userPersonRequest')\r\n    if (requestData&&requestData.request.registrant.id===userId) {\r\n        personRequestReview.packages = requestData.completePackageData\r\n        personRequestReview.personData = requestData.personData\r\n        personRequestReview.organization = requestData.organization\r\n        personRequestReview.request = requestData.request\r\n\r\n        if (personRequestReview.packages.length > 0) {\r\n            getApprovalCounts(personRequestReview.packages)\r\n        }\r\n    }\r\n    else{\r\n        $state.go('organization.requests.personRequest',{userId:userId, orgId:orgId})\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n\r\n    personRequestReview.submit = () => {\r\n        Loader.onFor('personRequestReview.submitting')\r\n\r\n        if (personRequestReview.request.approval==='denied') {\r\n            API.cui.denyPersonRegistrationRequest({qs:[['requestId',personRequestReview.request.id],['reason',personRequestReview.request.rejectReason|\"\"]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else if (personRequestReview.deniedCount===0) {\r\n            API.cui.approvePersonRegistrationRequest({qs:[['requestId',personRequestReview.request.id]]})\r\n            .then(handleSuccess)\r\n            .fail(handleError)\r\n        }\r\n        else{\r\n            API.cui.approvePersonRequest({qs:[['requestId',personRequestReview.request.registrant.requestId||personRequestReview.request.id]]})\r\n            .then(res => {\r\n                let packageRequestCalls = []\r\n\r\n                personRequestReview.packages.forEach(packageRequest => {\r\n                    packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\r\n                })\r\n\r\n                $q.all(packageRequestCalls)\r\n                .then(() => {\r\n                    Loader.offFor('personRequestReview.submitting')\r\n                    personRequestReview.success = true\r\n                    DataStorage.deleteType('userPersonRequest')\r\n                    $timeout(() => {\r\n                        $state.go('organization.requests.usersRegistrationRequests')\r\n                    }, 3000)  \r\n                })\r\n                .catch(err => {\r\n                    console.log(\"User approval successful but there was an error approving/denying package requests\" +err)\r\n                    personRequestReview.error = true\r\n                    personRequestReview.errorMessage=\"app-approval-error\"\r\n                })\r\n            })\r\n            .fail(handleError)\r\n        }        \r\n    }\r\n\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('organization')\r\n.controller('usersAppRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User) {\r\n\r\n    const scopeName = 'usersAppRequests.'\r\n\t\tconst usersAppRequests = this\r\n    usersAppRequests.search = {}\r\n\t\tusersAppRequests.sortBy = {}\r\n\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\r\n\t\tvar foundOrgs = [];\r\n\t\tvar foundPersons = [];\r\n\t\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n      usersAppRequests.search['isApprovable'] = true;\r\n      usersAppRequests.search.pageSize = usersAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\t\t\tvar qsArray = APIHelpers.getQs(usersAppRequests.search);\r\n\r\n\t    usersAppRequests.data = []\r\n      Loader.onFor(scopeName + 'data')\r\n      APIError.offFor(scopeName + 'data')\r\n\r\n\r\n\t\t\tvar getOrg = function(orgId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (orgId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPerson = function(personId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (personId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPackage = function(packageId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (packageId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar done = function(context) {\r\n  \t\t\t$timeout(function() {\r\n\t        Loader.offFor(scopeName + 'data')\r\n\t        cui.log('done', context);\r\n\t        cui.log('data', usersAppRequests.data);\r\n\r\n\t        usersAppRequests.reRenderPagination && usersAppRequests.reRenderPagination()\r\n  \t\t\t});\r\n\t\t\t};\r\n\r\n\r\n\t\t\tAPI.cui.getPackageRequests({ qs: qsArray }).then(function(res) {\r\n\t\t\t\tvar calls = [];\r\n\r\n\t\t\t\t_.each(res, function(pkgReq) {\r\n\t\t\t\t\t\r\n\t\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\t\tvar data = {};\r\n        \tusersAppRequests.data.push(data);\r\n\r\n        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t        calls.push(\r\n\t        \tgetPerson(pkgReq.requestor.id).then(function(person) {\r\n\t        \t\tdata.personData = person || {};\r\n\t        \t\tvar pkgId = (pkgReq && pkgReq.servicePackage) ? pkgReq.servicePackage.id : '';\r\n\t          \treturn getPackage(pkgId);\r\n\t\t\t\t\t\t}).then(function(pkg) {\r\n\t        \t\tdata.packageData = pkg;\r\n\t        \t\tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\r\n\t\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t\t}).then(function(org) {\r\n\t\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t}).fail(function() {\r\n\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t      \t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t\t\treturn $.Deferred().resolve(calls);\r\n\t\t\t}).then(function(calls) {\r\n\t\t\t\t// do the cached calls\r\n\t\t\t\treturn $.when.apply($, calls);\r\n\t\t\t}).then(function() {\r\n\t\t\t\t// do the count (used for pagination)\r\n\t\t\t\treturn API.cui.getPackageRequestsCount();\r\n\t\t\t}).then(function(count) {\r\n\t\t\t\t// apply the count\r\n\t\t\t\tusersAppRequests.userCount = count;\r\n\t\t\t\tAPI.user.userAppRequestsCount=count\r\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t\t\t}).fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n      }).always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('App Requests'))\r\n      \tdone('finally');\r\n      });\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    usersAppRequests.sortingCallbacks = {\r\n      name () {\r\n          usersAppRequests.sortBy.sortBy = 'name'\r\n          usersAppRequests.sort(['personData.name.given', 'personData.name.surname'], usersAppRequests.sortBy.sortType)\r\n      },\r\n      title () {\r\n          usersAppRequests.sortBy.sortBy = 'title'\r\n          usersAppRequests.sort('personData.title', usersAppRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          usersAppRequests.sortBy.sortBy = 'submitted'\r\n          usersAppRequests.sort('personData.creation', usersAppRequests.sortBy.sortType)\r\n      },\r\n      application () {\r\n          usersAppRequests.sortBy.sortBy = 'application'\r\n          usersAppRequests.sort('packageData.name', usersAppRequests.sortBy.sortType)\r\n      },\r\n      division () {\r\n          usersAppRequests.sortBy.sortBy = 'division'\r\n          usersAppRequests.sort('personData.organization.name', usersAppRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    usersAppRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      usersAppRequests.data = _.orderBy(usersAppRequests.data, sortBy, order)\r\n    }\r\n\r\n\t\tusersAppRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id &&\r\n\t\t\t\trequest.packageData && request.packageData.id) {\r\n\t\t\t\t$state.go('organization.requests.pendingRequests', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id,\r\n\t\t\t\t\t'packageId': request.packageData.id\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('usersAppRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    usersAppRequests.updateSearchParams = (page) => {\r\n        if (page) usersAppRequests.search.page = page\r\n        $state.transitionTo('organization.requests.usersAppRequests', usersAppRequests.search, {notify: false})\r\n        init()\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('usersRegistrationRequestsCtrl', \r\n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,$scope,DataStorage) {\r\n\r\n    const scopeName = 'usersRegistrationRequests.'\r\n\t\tconst usersRegistrationRequests = this\r\n    usersRegistrationRequests.search = {}\r\n\t\tusersRegistrationRequests.sortBy = {}\r\n\tusersRegistrationRequests.searchByOrg=[]\r\n      usersRegistrationRequests.searchByPerson=[]\r\n\r\n\r\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n\t\tvar foundOrgs = [];\r\n\t\tvar foundPersons = [];\r\n\t\tvar foundPackages = [];\r\n\r\n\r\n  \tvar init = function() {\r\n  \t\tcui.log('init');\r\n\r\n      usersRegistrationRequests.search.pageSize = usersRegistrationRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\t\t\tvar qsArray = APIHelpers.getQs(usersRegistrationRequests.search);\r\n\t\t\t//cui.log('qsArray', qsArray);\r\n\t\t\tif(usersRegistrationRequests.searchByOrg.length>0){\r\n\t\t\t\tusersRegistrationRequests.searchByOrg.forEach(function(val){\r\n\t\t\t\t\tqsArray.push(['organization.id',val.id])\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t}else if(usersRegistrationRequests.searchByPerson.length>0){\r\n\t\t\t\tusersRegistrationRequests.searchByPerson.forEach(function(val){\r\n\t\t\t\t\tqsArray.push(['registrant.id',val.id])\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse{}\r\n\r\n\t    usersRegistrationRequests.data = []\r\n      Loader.onFor(scopeName + 'data')\r\n      APIError.offFor(scopeName + 'data')\r\n\r\n\t\t\tvar getOrg = function(orgId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (orgId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\r\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\r\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\r\n\t\t\t\t\t\t\t\tdfr.resolve(org);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPerson = function(personId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (personId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\r\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\r\n\t\t\t\t\t\t\t\tdfr.resolve(person);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar getPackage = function(packageId) {\r\n\t\t\t\treturn $.Deferred(function (dfr) {\r\n\t\t\t\t\tif (packageId.length) {\r\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\r\n\t\t\t\t\t\tif (cached) {\r\n\t\t\t\t\t\t\tdfr.resolve(cached);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\r\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\r\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\r\n\t\t\t\t\t\t\t\tdfr.resolve(p);\r\n\t\t\t\t\t\t\t}).fail(function(err) {\r\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\r\n\t\t\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdfr.resolve({});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar done = function(context) {\r\n  \t\t\t$timeout(function() {\r\n\t        Loader.offFor(scopeName + 'data')\r\n\t        cui.log('done', context);\r\n\t\t\t\t\tcui.log('data', usersRegistrationRequests.data);\r\n\r\n\t        usersRegistrationRequests.reRenderPagination && usersRegistrationRequests.reRenderPagination()\r\n  \t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tvar start = window.performance.now();\r\n\t\t\tvar end;\r\n\t\t\tAPI.cui.getRegistrationRequests({ qs: qsArray }).then(function(res) {\r\n\t\t\t\tvar calls = [];\r\n\r\n\t\t\t\t_.each(res, function(regReq) {\r\n\t\t\t\t\t// NB create an obj and bind it to scope...\r\n\t\t\t\t\tvar data = {};\r\n\t\t\t\t\tdata.request=regReq\r\n\t\t        \tusersRegistrationRequests.data.push(data);\r\n\r\n\t\t        \t// ..then cache the calls, which populate obj asynchronously...\r\n\t\t\t        calls.push(\r\n\t\t\t\t        getPerson(regReq.registrant.id)\r\n\t\t\t\t        .then(function(person) {\r\n\t\t\t\t        \tdata.personData = person || {};\r\n\t\t\t\t        \tvar pkgId = (! _.isEmpty(regReq.packages)) ? regReq.packages[0].id : '';\r\n\t\t\t\t          \treturn getPackage(pkgId);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t        .then(function(pkg) {\r\n\t\t\t\t        \tdata.packageData = pkg;\r\n\t\t\t\t        \tconsole.log(data.personData.organization.id)\r\n\t\t\t\t        \tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\r\n\t\t\t\t\t\t\treturn getOrg(orgId);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t        .then(function(org) {\r\n\t\t\t\t\t\t\tif (! data.personData.organization) {\r\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\r\n\t\t\t\t\t\t\tdata.organization={\r\n\t\t\t\t\t\t\t\tid:org.id,\r\n\t\t\t\t\t\t\t\tname:org.name\r\n\t\t\t\t\t\t\t}        \t\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t\t\t      \t\t}).fail(function() {\r\n\t\t\t      \t\t\t// mute the failures so as not to derail the entire list\r\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\r\n\t\t\t      \t\t})\r\n\t\t\t\t    );\r\n\t\t\t\t});\r\n\t\t\t\treturn $.Deferred().resolve(calls);\r\n\t\t\t}).then(function(calls) {\r\n\t\t\t\t// do the cached calls\r\n\t\t\t\treturn $.when.apply($, calls);\r\n\t\t\t}).then(function() {\r\n\t\t\t\t// do the count (used for pagination)\r\n\t\t\t\treturn API.cui.getRegistrationRequestsCount();\r\n\t\t\t}).then(function(count) {\r\n\t\t\t\t// apply the count\r\n\t\t\t\tusersRegistrationRequests.userCount = count;\r\n\t\t\t\tAPI.user.userRegistrationRequestsCount=count\r\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\r\n\t\t\t}).fail(function(error) {\r\n        APIError.onFor(scopeName + 'data')\r\n      }).always(function() {\r\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('Registration Requests'))\r\n      \tdone('finally');\r\n\t\t\t\tvar end = window.performance.now();\r\n\t\t\t\tvar time = end - start;\r\n\t\t\t\tcui.log('time', time);\r\n      });\r\n    };\r\n\r\n    init();\r\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\r\n\r\n\r\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\r\n    usersRegistrationRequests.sortingCallbacks = {\r\n      name () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'name'\r\n          usersRegistrationRequests.sort(['personData.name.given', 'personData.name.surname'], usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      title () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'title'\r\n          usersRegistrationRequests.sort('personData.title', usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      submitted () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'submitted'\r\n          usersRegistrationRequests.sort('personData.creation', usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      application () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'application'\r\n          usersRegistrationRequests.sort('packageData.name', usersRegistrationRequests.sortBy.sortType)\r\n      },\r\n      division () {\r\n          usersRegistrationRequests.sortBy.sortBy = 'division'\r\n          usersRegistrationRequests.sort('personData.organization.name', usersRegistrationRequests.sortBy.sortType)\r\n      }\r\n    }\r\n\r\n    usersRegistrationRequests.sort = (sortBy, order) => {\r\n    \tcui.log('sort', sortBy, order)\r\n      usersRegistrationRequests.data = _.orderBy(usersRegistrationRequests.data, sortBy, order)\r\n    }\r\n\r\n\r\n\t\tusersRegistrationRequests.goToDetails = function(request) {\r\n\t\t\tif (request.personData && request.personData.id && \r\n\t\t\t\trequest.personData.organization && request.personData.organization.id) {\r\n\t\t\t\tDataStorage.setType('userPersonRequest', {personData:request.personData, organization:request.organization,request:request.request,packageData:request.packageData} )\r\n\t\t\t\t$state.go('organization.requests.personRequest', {\r\n\t\t\t\t \t'userId': request.personData.id, \r\n\t\t\t\t\t'orgId': request.personData.organization.id \r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tcui.log('usersRegistrationRequests goToDetails missing keys', request);\r\n\t\t\t}\r\n\t\t}\r\n\r\n    usersRegistrationRequests.updateSearchParams = (page) => {\r\n    \t//cui.log('updateSearchParams', page);\r\n        if (page) usersRegistrationRequests.search.page = page\r\n        // WHY transition to this same route? if setting notify:false? what is the purpose? just to add an item to history?\r\n        $state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.search, {notify: false})\r\n        init()\r\n    }\r\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\r\n    usersRegistrationRequests.searchBy='person'\r\n    usersRegistrationRequests.updateSearchByName = () =>{     \r\n    \t//console.log(usersRegistrationRequests.searchBy)\r\n    \tif(usersRegistrationRequests.searchBy==='org'&&usersRegistrationRequests.searchValue){\r\n    \t\tLoader.onFor(scopeName + 'data')\r\n      \t\tAPIError.offFor(scopeName + 'data')\r\n      \t\t usersRegistrationRequests.searchByOrg=[]\r\n    \t\tAPI.cui.getOrganizations({qs:[['name',usersRegistrationRequests.searchValue+'*']]})\r\n    \t\t.then((res) =>{\r\n    \t\t\tconsole.log(res)\r\n    \t\t\tusersRegistrationRequests.searchByOrg=res\r\n    \t\t\tLoader.offFor(scopeName + 'data')\r\n    \t\t\tif(res.length>0){\r\n    \t\t\t\t$state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.searchByOrg, {notify: false})\r\n        \t\t\tinit()\r\n        \t\t}else{\r\n        \t\t\tusersRegistrationRequests.data=[]\r\n        \t\t\t$scope.$apply()\r\n        \t\t}\r\n    \t\t})\r\n    \t\t.fail((err) =>{\r\n    \t\t\tconsole.log(err)\r\n    \t\t})\r\n    \t}else if (usersRegistrationRequests.searchBy==='person'&&usersRegistrationRequests.searchValue){\r\n    \t\tLoader.onFor(scopeName + 'data')\r\n      \t\tAPIError.offFor(scopeName + 'data')\r\n      \t\t usersRegistrationRequests.searchByPerson=[]\r\n    \t\tAPI.cui.getPersons({qs:[['fullName',usersRegistrationRequests.searchValue]]})\r\n    \t\t.then(res =>{\r\n    \t\t\tconsole.log(res)\r\n    \t\t\tusersRegistrationRequests.searchByPerson=res\r\n    \t\t\tLoader.offFor(scopeName + 'data')\r\n    \t\t\tif(res.length>0){\r\n    \t\t\t\t$state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.searchByPerson, {notify: false})\r\n        \t\t\tinit()\r\n        \t\t}else{\r\n        \t\t\tusersRegistrationRequests.data=[]\r\n        \t\t\t$scope.$apply()\r\n        \t\t}\r\n    \t\t})\r\n    \t\t.fail(err =>{\r\n    \t\t\t\tconsole.log(err)\r\n    \t\t})\r\n    \t}else{\r\n    \t\tusersRegistrationRequests.searchByOrg=[]\r\n            usersRegistrationRequests.searchByPerson=[]\r\n    \t\t$state.transitionTo('organization.requests.usersRegistrationRequests', {notify: false})\r\n    \t\tinit()\r\n    \t}\r\n    \t\t/*return undefined*/\r\n    }\r\n\t\r\n\t});\r\n\r\nangular.module('organization')\r\n.controller('orgRolesCtrl', function($scope) {\r\n    'use strict';\r\n\r\n    const orgRoles = this;\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    var handleError = function handleError(err) {\r\n        orgRoles.loading = false;\r\n        $scope.$digest();\r\n        console.log('Error', err);\r\n    };\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START --------------------------------------------------------------------------------\r\n    // ON CLICK END ----------------------------------------------------------------------------------\r\n\r\n});\r\n\r\nangular.module('misc', [])\r\n    .config(['$stateProvider', function($stateProvider) {\r\n\r\n        const templateBase = 'app/modules/misc/';\r\n\r\n        const returnCtrlAs = function(name, asPrefix) {\r\n            return name + 'Ctrl as ' + (asPrefix ? asPrefix : '') + (asPrefix ? name[0].toUpperCase() + name.slice(1, name.length) : name);\r\n        };\r\n\r\n        const loginRequired = true;\r\n        $stateProvider\r\n            .state('welcome', {\r\n                url: '/welcome',\r\n                templateUrl: templateBase + 'welcome/welcome.html'\r\n            })\r\n            .state('search', {\r\n                url: '/search?page&pageSize',\r\n                templateUrl: templateBase + 'search/search.html',\r\n                controller: returnCtrlAs('search'),\r\n                access: {\r\n                    permittedLogic:appConfig.globalSearch\r\n                }\r\n            })\r\n            .state('misc', {\r\n                url: '/status',\r\n                templateUrl: templateBase + 'status/status.html'\r\n            })\r\n            .state('misc.404', {\r\n                url: '/404',\r\n                templateUrl: templateBase + 'status/status-404.html'\r\n            })\r\n            .state('misc.notAuth', {\r\n                url: '/notAuthorized',\r\n                templateUrl: templateBase + 'status/status-notAuth.html'\r\n            })\r\n            .state('misc.pendingStatus', {\r\n                url: '/pendingStatus',\r\n                templateUrl: templateBase + 'status/status-pendingStatus.html'\r\n            })\r\n            .state('misc.success', {\r\n                url: '/success',\r\n                templateUrl: templateBase + 'status/status-success.html'\r\n            })\r\n            .state('misc.loadError', {\r\n                url: '/error',\r\n                templateUrl: templateBase + 'status/status-loadError.html'\r\n            });\r\n\r\n    }]);\r\n\r\nangular.module('misc')\r\n    .controller('searchCtrl', ['API', '$scope', '$stateParams', '$state', '$q', '$pagination','APIHelpers','Loader', 'APIError','Base',\r\n    function(API, $scope, $stateParams, $state, $q, $pagination,APIHelpers,Loader,APIError,Base) {\r\n        let search = this;\r\n        search.currentParentOrg = API.user.organization.id;\r\n\r\n        search.users = null;\r\n        search.timer = null\r\n        search.searchType = \"organizations\";\r\n        search.searchOrgId = \"\";\r\n        search.searchterms=\"\"\r\n        search.count=1000\r\n        search.pageError=false\r\n\r\n        // search.keypress = function() {\r\n        //     search.users = [];\r\n        //     if (search.timer) { clearTimeout(search.timer); }\r\n        //     search.timer = window.setTimeout(function() {\r\n        //         search.searchNow();\r\n        //     }, 200);\r\n        // }\r\n\r\n        /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\r\n\r\n        search.flattenOrgHierarchy = function(orgHierarchy) {\r\n            /*\r\n                Takes the organization hierarchy response and returns a flat object array containing the id's and name's of\r\n                the top level organization as well as it's divisions.\r\n            */\r\n\r\n            if (orgHierarchy) {\r\n                let organizationArray = [];\r\n\r\n                organizationArray.push({\r\n                    id: orgHierarchy.id,\r\n                    name: orgHierarchy.name\r\n                });\r\n\r\n                if (orgHierarchy.children) {\r\n                    orgHierarchy.children.forEach((division) => {\r\n                        organizationArray.push({\r\n                            id: division.id,\r\n                            name: division.name\r\n                        });\r\n\r\n                        if (division.children) {\r\n                            let flatArray = _.flatten(division.children);\r\n\r\n                            flatArray.forEach((childDivision) => {\r\n                                organizationArray.push({\r\n                                    id: childDivision.id,\r\n                                    name: childDivision.name\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                return organizationArray;\r\n            } else {\r\n                throw new Error('No organization hierarchy object provided');\r\n            }\r\n        }\r\n\r\n        search.addPerson = function(newPerson) {\r\n\r\n            // Prevent Duplicates\r\n            var add = true;\r\n            search.users.forEach(function(person) {\r\n                if (newPerson.id == person.id) { add = false; }\r\n            })\r\n\r\n            if (newPerson.status == 'pending') { add = false; }\r\n            if (add) { search.users.push(newPerson) }\r\n\r\n        }\r\n\r\n        search.searchNow = function(searchOrPage) {\r\n            search.pageError=false\r\n            if (searchOrPage) {\r\n                search.searchParams.page=1\r\n            }\r\n            Loader.onFor('search.loading')\r\n            search.users = [];\r\n            search.orgs = [];\r\n            let qsArray=APIHelpers.getQs(search.searchParams)\r\n            //Need to filter out pending and unactive\r\n            qsArray.push(['status','active'],['status','suspended'])\r\n            // if (search.searchterms|| !type) {\r\n\r\n                if (search.searchType == \"people\") {\r\n                    let qsArrayNameSearch=angular.copy(qsArray)\r\n                    qsArrayNameSearch.push(['fullName', search.searchterms],['status','locked'])\r\n                    const promises= [API.cui.countPersons({qs:qsArrayNameSearch}),API.cui.getPersons({qs: qsArrayNameSearch})]\r\n                    $q.all(promises)\r\n                    .then(res=>{\r\n                        search.personCount=res[0]\r\n                        search.users=res[1]\r\n                        if (search.users.length===0) {\r\n                            search.noRecords=true\r\n                        }\r\n                        Loader.offFor('search.loading')\r\n                    })                    \r\n                    .catch(error => {\r\n                        Loader.offFor('search.loading')\r\n                        search.pageError=true\r\n                    })\r\n                    //     qsArray.push(['email', search.searchterms])\r\n                    // API.cui.getPersons({\r\n                    //         qs: qsArray\r\n                    //     })\r\n                    //     .done(personResponse => {\r\n\r\n                    //         personResponse.forEach(function(x) {\r\n                    //             search.addPerson(x);\r\n                    //         })\r\n\r\n                    //         $scope.$digest()\r\n                    //     })\r\n                    //     .fail(error => {\r\n\r\n                    //     })\r\n\r\n                }\r\n                if (search.searchType == \"organizations\") {\r\n                    qsArray.push(['name', search.searchterms + \"*\"])\r\n                    API.cui.getOrganizations({qs: qsArray})\r\n                    .done(orgsResponse => {\r\n                        search.orgs = orgsResponse;\r\n                        if (search.orgs.length===0) {\r\n                            search.noRecords=true\r\n                        }\r\n                    })\r\n                    .fail(error => {\r\n                        search.pageError=true\r\n                    })\r\n                    .always(handleAll)\r\n                }\r\n            // }\r\n        }\r\n\r\n        const handleAll= () => {\r\n            Loader.offFor('search.loading')\r\n            $scope.$digest()\r\n        }\r\n\r\n        /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\r\n\r\n        /* -------------------------------------------- ON LOAD START --------------------------------------------- */\r\n        search.searchParams = Object.assign({}, $stateParams)\r\n        search.searchParams.pageSize = search.searchParams.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n        if (!search.searchParams.page) {\r\n            search.searchParams.page=1\r\n        }\r\n        search.sortBy = {}\r\n        search.organizationList = null;\r\n        // API.cui.getOrganizationsCount({qs:APIHelpers.getQs(search.searchParams)})\r\n        // .then(count=>{\r\n        //     search.orgCount=count\r\n        //     return API.cui.getOrganizations({qs:APIHelpers.getQs(search.searchParams)})\r\n        // })\r\n        // Authorization for org serach and user search\r\n        if (Base.accessToSecurityAndExchangeAdmins()) {            \r\n            search.searchNow(true)\r\n        }\r\n        else{\r\n            search.searchType = \"people\"\r\n            search.searchNow(true)\r\n        }\r\n\r\n        /* -------------------------------------------- ON LOAD END --------------------------------------------- */\r\n\r\n        /* -------------------------------------------- ON CLICK FUNCTIONS START --------------------------------------------- */\r\n        search.updateSearchParams = function(page) {\r\n            if (page) {\r\n                search.searchParams.page=page\r\n            }\r\n            $state.transitionTo('search', search.searchParams, {notify: false})\r\n            search.searchNow()\r\n        }\r\n\r\n        search.userClick = function(clickedUser) {\r\n\r\n            const stateOpts = {\r\n                userId: clickedUser.id,\r\n                orgId: clickedUser.organization.id,\r\n            }\r\n            if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\r\n            else $state.go('organization.directory.userDetails', stateOpts)\r\n\r\n        }\r\n\r\n        search.orgClick = function(clickedOrd) {\r\n            const stateOpts = {\r\n                orgId: clickedOrd.id,\r\n            }\r\n            $state.go('organization.directory.orgDetails', stateOpts)\r\n        }\r\n\r\n        /* -------------------------------------------- ON CLICK FUNCTIONS END --------------------------------------------- */\r\n    }]);\r\n\r\nangular.module('common',['translate','ngMessages','cui.authorization','cui-ng','ui.router','snap','LocalStorageModule'])\r\n.config(($translateProvider,$locationProvider,$urlRouterProvider,$injector,\r\n    localStorageServiceProvider,$cuiIconProvider,$cuiI18nProvider,$paginationProvider,\r\n    $stateProvider,$compileProvider,$cuiResizeHandlerProvider) => {\r\n\r\n    $urlRouterProvider.rule(($injector, $location) => {\r\n        const path = $location.path()\r\n        const hasTrailingSlash = path[path.length-1] === '/'\r\n\r\n        if (hasTrailingSlash) {\r\n            const newPath = path.substr(0, path.length-1)\r\n            return newPath\r\n        }\r\n    })\r\n\r\n    localStorageServiceProvider.setPrefix('cui');\r\n    // $locationProvider.html5Mode(true);\r\n\r\n    const templateBase = 'app/modules/common/';\r\n\r\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\r\n\r\n    $stateProvider\r\n    .state('auth', {\r\n        url: '/auth?xsrfToken&cuid',\r\n        controller: returnCtrlAs('auth'),\r\n        templateUrl: templateBase + 'auth/auth.html',\r\n        access:true\r\n    });\r\n\r\n    if (appConfig.languages) {\r\n        if (!appConfig.languageResources) {\r\n            console.error('You need to configure languageResources in your appConfig.json.');\r\n        }\r\n\r\n        /*\r\n        *   This section will dynamically generate the correct path to versioned i18n assets \r\n        *   based off of current i18n version in use in the project.\r\n        *\r\n        *   This requires a proper appConfig.json setup. Please refer to the documentation in\r\n        *   ./docs/features/cui-framework/cui-i18n.md for information on how to setup the appConfig.\r\n        *\r\n        *   Note: Grunt tasks will not automatically work with all of the possible setups of i18n assets.\r\n        */\r\n\r\n        if (appConfig.languageResources.hasOwnProperty('customDependencyName')) {\r\n            // Loading in custom i18n project\r\n            const customDependency = appConfig.languageResources.customDependencyName\r\n            const dependencyType = appConfig.languageResources.dependencyType || 'dependencies'\r\n            const customDependencyVersion = packageJson[dependencyType][customDependency].split('#v')[1]\r\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, customDependencyVersion)\r\n        }\r\n        else if (appConfig.languageResources.hasOwnProperty('dependencyOrigin') && appConfig.languageResources.dependencyOrigin === 'cui-idm-b2x') {\r\n            // Loading in i18n dependency through B2X (generator projects)\r\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, i18nPackageJson.version)\r\n        }\r\n        else {\r\n            // Loading in standalone cui-i18n dependency\r\n            const dependencyType = appConfig.languageResources.dependencyType || 'dependencies'\r\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, packageJson[dependencyType]['@covisint/cui-i18n'])\r\n        }\r\n\r\n        $cuiI18nProvider.setLocaleCodesAndNames(appConfig.languages);\r\n        let languageKeys = Object.keys($cuiI18nProvider.getLocaleCodesAndNames());\r\n\r\n        const returnRegisterAvailableLanguageKeys = () => {\r\n            // Reroute unknown language to prefered language\r\n            let object = {'*': languageKeys[0]};\r\n            languageKeys.forEach(function(languageKey) {\r\n                // Redirect language keys such as en_US to en\r\n                object[languageKey + '*'] = languageKey;\r\n            });\r\n            return object;\r\n        };\r\n\r\n        $translateProvider.useLoader('LocaleLoader', appConfig.languageResources )\r\n        .registerAvailableLanguageKeys(languageKeys, returnRegisterAvailableLanguageKeys())\r\n        .uniformLanguageTag('java')\r\n        .determinePreferredLanguage()\r\n        .fallbackLanguage(languageKeys);\r\n\r\n        $cuiI18nProvider.setLocalePreference(languageKeys);\r\n    }\r\n\r\n    if (appConfig.iconSets) {\r\n        appConfig.iconSets.forEach((iconSet) => {\r\n            $cuiIconProvider.iconSet(iconSet.name, iconSet.path, iconSet.defaultViewBox || null);\r\n        });\r\n    }\r\n\r\n    // Pagination Results Per Page Options\r\n    if (appConfig.paginationOptions) {\r\n        $paginationProvider.setPaginationOptions(appConfig.paginationOptions)\r\n    }\r\n    else {\r\n        throw new Error(`You don't have paginationOptions set in your appConfig.json`)\r\n    }\r\n\r\n    // Cui Resize Handler Breakpoint Option\r\n    if (appConfig.breakpointOption) {\r\n        $cuiResizeHandlerProvider.setBreakpoint(appConfig.breakpointOption);\r\n    } else {\r\n        throw new Error('You don\\'t have breakpointOption set in your appConfig.json');\r\n    }\r\n\r\n    $compileProvider.debugInfoEnabled(false);\r\n\r\n});\r\n\r\nangular.module('common')\r\n.run(['LocaleService','$rootScope','$state','$http','$templateCache','$cuiI18n','User',\r\n    'cui.authorization.routing','cui.authorization.evalRouteRequest','Menu','API','$cuiIcon','$timeout','PubSub','APIError','Loader','Theme','CuiRouteHistoryFactory',\r\n(LocaleService,$rootScope,$state,$http,$templateCache,$cuiI18n,User,routing,evalRouteRequest,Menu,API,$cuiIcon,$timeout,PubSub,APIError,Loader,Theme,CuiRouteHistoryFactory) => {\r\n\r\n    if(window.cuiApiInterceptor) {\r\n        const cuiApiInterceptorConfig = {\r\n            apiUris: [ appConfig.serviceUrl ],\r\n            stopIfInvalidPayload: true\r\n        }\r\n\r\n        if(appConfig.debugServiceUrl) {\r\n            cuiApiInterceptorConfig.apiUris.push(appConfig.debugServiceUrl)\r\n        }\r\n\r\n        const interceptors = [\r\n            'Get',\r\n            'PrePut',\r\n            'PrePost',\r\n            'PostPut',\r\n            'PostPost'\r\n        ]\r\n\r\n        interceptors.forEach(interceptor => window.cuiApiInterceptor[`start${ interceptor }Interceptor`](cuiApiInterceptorConfig))\r\n    }\r\n\r\n    // Add locales here\r\n    const languageNameObject = $cuiI18n.getLocaleCodesAndNames();\r\n\r\n    for (var LanguageKey in languageNameObject) {\r\n        LocaleService.setLocales(LanguageKey, languageNameObject[LanguageKey]);\r\n    }\r\n\r\n    $rootScope.$on('$stateChangeStart', (event, toState, toParams, fromState, fromParams) => {\r\n        Theme.clear() \r\n        APIError.clearAll()\r\n        Loader.clearAll()\r\n        event.preventDefault();\r\n\r\n        function attachAccessInfo(toState) {\r\n            if (toState.access) {\r\n                if (! _.isObject(toState.access)) {\r\n                    toState.access = {};\r\n                }\r\n                toState.access.roles = User.getRoles();\r\n                toState.access.entitlements = User.getEntitlements();\r\n            } else {\r\n                toState.access = {};                \r\n            }\r\n        }\r\n\r\n        function go(toState, toParams, fromState, fromParams) {\r\n            // NB... detailed access logic is evaluated upstream, in cui.authorization.evalRouteRequest...\r\n            attachAccessInfo(toState);\r\n            evalRouteRequest(toState, toParams, fromState, fromParams,'misc.notAuth');\r\n            PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams }); \r\n            Menu.handleStateChange(toState.menu);\r\n        }\r\n\r\n        const route = () => {\r\n            if (appConfig.debugServiceUrl) {\r\n                /**\r\n                    appConfig.debugServiceUrl can be pointed at a localhost server to act as a mock API.\r\n                        Ex: 'debugServiceUrl': 'http://localhost:8001'\r\n                    mock api server source code \r\n                        https://github.com/thirdwavellc/cui-api-mock\r\n                    NB this workaround is not calling new evalRouteRequest() logic.\r\n                **/\r\n                let userInfo = {};\r\n                API.cui.getPerson({personId: 'personId'})\r\n                .then((res) => {\r\n                    userInfo = res;\r\n                    return API.cui.getOrganization({ organizationId: res.organization.id });\r\n                })\r\n                .then((res) => {\r\n                    userInfo.organization = res;\r\n                    API.setUser(userInfo);\r\n                });\r\n                routing(toState, toParams, fromState, fromParams, []);\r\n                PubSub.publish('stateChange',{ toState,toParams,fromState,fromParams }); // this is required to make the ui-sref-active-nested directive work\r\n                Menu.handleStateChange(toState.menu );\r\n            }\r\n            else {\r\n                /* deprecated...\r\n                if (!toState.access || !toState.access.loginRequired) {\r\n                    Menu.handleStateChange(toState.menu);\r\n                    routing(toState, toParams, fromState, fromParams, User.getEntitlements());\r\n                    PubSub.publish('stateChange',{ toState,toParams,fromState,fromParams }); // this is required to make the ui-sref-active-nested directive work with a multi-module approach\r\n                    return;\r\n                }\r\n                else if (User.get() !== '[cuid]') {\r\n                    routing(toState, toParams, fromState, fromParams, User.getEntitlements());\r\n                    PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams });\r\n                    Menu.handleStateChange(toState.menu);\r\n                }\r\n                else {\r\n                    API.authenticateUser({ toState,toParams,fromState,fromParams })\r\n                    .then((res) => {\r\n                        const { toState, toParams, fromState, fromParams } = res.redirect;\r\n                        // Determine if user is able to access the particular route we're navigating to\r\n                        routing(toState, toParams, fromState, fromParams, res.roleList);\r\n                        PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams }); // this is required to make the ui-sref-active-nested directive work with a multi-module approach\r\n                        // Menu handling\r\n                        Menu.handleStateChange(res.redirect.toState.menu);\r\n                    });\r\n                }\r\n                */\r\n                if (!toState.access || User.get() !== '[cuid]') {\r\n                    // ...route needs no User info... or ...route needs User and we have User info...\r\n                    cui.log('stateChangeStart2', toState, toParams);\r\n                    go(toState, toParams, fromState, fromParams);\r\n                } else {\r\n                    // ..route needs (loggedIn) User and we need User info...\r\n                    API.authenticateUser({toState, toParams, fromState, fromParams}).then((res) => {\r\n                        cui.log('stateChangeStart3', res.redirect.toState, res.redirect.toParams);\r\n                        go(res.redirect.toState, res.redirect.toParams, res.redirect.fromState, res.redirect.fromParams);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n\r\n        if (_.isEmpty(API.cui)) {\r\n            // async load API.cui\r\n            API.initApi().then(() => {\r\n                route();\r\n            });\r\n        } else {\r\n            route();\r\n        }\r\n    });\r\n\r\n    // $state.stateStack is a stack of states used by base.goBack()\r\n    $state.stateStack = []\r\n\r\n    $rootScope.$on('$stateChangeSuccess', (e, { toState, toParams, fromState, fromParams }) => {\r\n        // For base.goBack()\r\n        $state.stateStack.push({\r\n            name: fromState.name,\r\n            params: fromParams || {}\r\n        })\r\n\r\n        // routeHistory POC\r\n        var routeTextArray = toState.name.split('.');\r\n        CuiRouteHistoryFactory.add({\r\n            text: routeTextArray[routeTextArray.length - 1],\r\n            uiroute: toState.name,\r\n            uirouteparams: toParams\r\n        });\r\n\r\n        cui.log('on $stateChangeSuccess', toState, toParams, fromState, fromParams, $state.stateStack);\r\n    })\r\n\r\n    angular.forEach($cuiIcon.getIconSets(), (iconSettings, namespace) => {\r\n        $http.get(iconSettings.path, {\r\n            cache: $templateCache\r\n        });\r\n    });\r\n\r\n}]);\r\n\r\nangular.module('common')\r\n.controller('authCtrl', ['$state',function($state) {\r\n    $state.go('welcome');\r\n}]);\r\n\r\nangular.module('common')\r\n.controller('baseCtrl', function(Base, $scope) {\r\n\r\n    $scope.base = Base\r\n    $scope.base.pendingNotificationFlag=false\r\n})\r\n\r\n.filter('capitalize', function() {\r\n    return function(input) {\r\n      return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\r\n    }\r\n})\r\n\r\n.filter('capitalize', function() {\r\n    return function(input) {\r\n      return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.directive('disableAnimate', ($animate) => ({\r\n\r\n\t/*\r\n\t\tUse this directive to disable the animation window that is introduced by ng-animate.\r\n\t\tAdd the 'disable-animate' attribute to an element you need to disable ng-animate on.\r\n\r\n\t\tExample: \t<p disable-animate> Element you need to disable ng-animate on. </p>\r\n\t*/\r\n\r\n\trestrict: 'A',\r\n\tlink: (attrs, elem) => {\r\n\t\t$animate.enabled(elem, false)\r\n\t}\r\n}))\r\n\r\nangular.module('common')\r\n.factory('CuiMobileNavFactory', (PubSub,User,$filter) => {\r\n    return {\r\n        title: User.user.organization.name,\r\n        defaultTitle: User.user.organization.name,\r\n        getTitle: function() {\r\n            return this.title\r\n        },\r\n        setTitle: function(newTitle) {\r\n            this.title = newTitle\r\n            PubSub.publish('mobileNavTitleChange')\r\n        },\r\n        getDefaultTitle: function() {\r\n            return this.defaultTitle\r\n        },\r\n        setDefaultTitle: function(newDefaultTitle) {\r\n            this.defaultTitle = newDefaultTitle\r\n        }\r\n    }\r\n})\r\n.directive('cuiMobileNav', (CuiMobileNavFactory,PubSub,$state) => ({\r\n    restrict: 'E',\r\n    scope: {\r\n        showIf: '=',\r\n        links: '=',\r\n        activeTitle:'@activeTitle',\r\n        label: '=?'\r\n    },\r\n    link: (scope, elem, attrs) => {\r\n        // attrs.activeTitle ? scope.activeTitle = attrs.activeTitle : scope.activeTitle = CuiMobileNavFactory.getDefaultTitle()\r\n        scope.currentState = $state.current.name\r\n\r\n        scope.close = () => scope.showIf = false\r\n        scope.toggle = () => scope.showIf =! scope.showIf\r\n\r\n        const pubSubSubscription = PubSub.subscribe('mobileNavTitleChange', () => {\r\n            // scope.activeTitle = CuiMobileNavFactory.getTitle()\r\n        })\r\n\r\n        scope.$on('$destroy', () => {\r\n            PubSub.unsubscribe(pubSubSubscription)\r\n        })\r\n    },\r\n    template: `\r\n        <nav class=\"cui-breadcrumb--mobile\" id=\"breadcrumb-button\" aria-hidden=\"true\" ng-click=\"toggle()\" off-click=\"close()\">\r\n            <ul class=\"cui-breadcrumb__links\">\r\n                <li class=\"cui-breadcrumb__link cui-breadcrumb__link--current\">\r\n                    <span class=\"cui-breadcrumb__mobile-link\" ng-if=\"links[currentState]\" class=\"active\"><span class=\"cui-mobile-only\" ng-if=\"activeTitle\">{{activeTitle}}.</span>{{links[currentState].label}}</span>\r\n                    <span class=\"cui-breadcrumb__mobile-link\" ng-if=\"!links[currentState]\" class=\"active\"><span class=\"cui-mobile-only\" ng-if=\"activeTitle\">{{activeTitle}}.</span>{{label}}</span>\r\n                </li>\r\n                <div class=\"cui-popover cui-popover--menu cui-breadcrumb__popover cui-popover--top cui-popover__categories-popover\" tether target=\"#breadcrumb-button\" attachment=\"top left\" target-attachment=\"bottom left\" offset=\"-10px 0\" ng-if=\"showIf\">\r\n                    <li class=\"cui-breadcrumb__link cui-popover__row\" ng-repeat=\"(state, stateDetails) in links\" ng-if=\"currentState!==state\">\r\n                        <a class=\"cui-breadcrumb__mobile-link\" ui-sref=\"{{state}}(stateDetails.stateParams)\">{{stateDetails.label}}</a>\r\n                    </li>\r\n                </div>\r\n            </ul>\r\n        </nav>\r\n    `\r\n}))\r\n\r\n/*\r\nTODO\r\n    -strategically handle jumps?\r\n        - best bet is to just display last 3 routes in markup\r\n*/\r\n\r\nangular.module('common')\r\n.factory('CuiRouteHistoryFactory', () => {\r\n    var routes = [];\r\n    /*\r\n        route: {\r\n            text: '',\r\n            uiroute: '',\r\n            uirouteparams: ''\r\n        }\r\n    */\r\n    return {\r\n        add: function(route) {\r\n            routes.push(route);\r\n            return;\r\n        },\r\n        remove: function(route) {\r\n            _.remove(routes, {text: route.text});\r\n            return;\r\n        },\r\n        truncate: function(route) {\r\n            // Remove everything that follows route\r\n            var idx = routes.indexOf(route);\r\n            cui.log('truncate before', routes, route, idx);\r\n            if (idx !== -1) {\r\n                routes = routes.slice(0, idx);\r\n            }\r\n            cui.log('truncate after', routes);\r\n            return;\r\n        },\r\n        clear: function() {\r\n            routes = [];\r\n            return;\r\n        },\r\n        get: function() {\r\n            return routes;\r\n        }\r\n    }\r\n})\r\n.directive('cuiRouteHistory', (CuiRouteHistoryFactory, $state) => ({\r\n    restrict: 'E',\r\n    link: (scope, elem, attrs) => {\r\n        //scope.currentState = $state.current.name;\r\n        scope.routes = CuiRouteHistoryFactory.get();\r\n        scope.go = function(route) {\r\n            if (route.uiroute && route.uiroute !== $state.current.name) {\r\n                CuiRouteHistoryFactory.truncate(route);\r\n                if (route.uirouteparams) {\r\n                    $state.go(route.uiroute, route.uirouteparams);   \r\n                } else {\r\n                    $state.go(route.uiroute);   \r\n                }\r\n            }\r\n        };\r\n    },\r\n    template: `\r\n        <nav class=\"cui-breadcrumb\">\r\n            <ul class=\"cui-breadcrumb__links\">\r\n              <li class=\"cui-breadcrumb__link\" ng-repeat=\"route in routes | limitTo:-3\">\r\n                <span ng-class=\"{'cui-breadcrumb__route':!$last, 'cui-breadcrumb__routelast':$last}\" ng-click=\"go(route)\">{{route.text}}</span>\r\n              </li>\r\n            </ul>\r\n        </nav>\r\n    `\r\n    //            <a ng-if=\"route.uiroute !== null\" ui-sref=\"{{route.uiroute}}\">{{route.text}}</a>\r\n}))\r\n\r\nangular.module('common')\r\n.directive('cuiSuccessPane', ($state,$timeout) => ({\r\n\r\n\t/*****\r\n\t\t--- Usage ---\r\n\r\n        <cui-success-pane show-if=\"scope.variable\" close-after=\"5000\" on-close=\"scope.functionName()\">\r\n      \t\t<p class=\"cui-modal__secondary-message\">This is extra content</p>\r\n      \t\t<p class=\"cui-modal__secondary-message\">{{scope.object.name}}</p>\r\n    \t</cui-success-pane>\r\n\r\n        --- Optional Paramaters ---\r\n\r\n            close-after - specify how long before the success pane automatically closes\r\n                        - if timer is not specified, the pane will stay open until clicked\r\n\r\n            on-close    - specify what scope function to fire when the modal closes\r\n\t*****/\r\n\r\n    restrict: 'E',\r\n    transclude: true,\r\n    scope: {\r\n        showIf: '=',\r\n        closeAfter: '=',\r\n        onClose: '&'\r\n    },\r\n    link: (scope) => {\r\n        scope.close = () => {\r\n            scope.showIf =! scope.showIf\r\n        }\r\n\r\n        if (scope.closeAfter) {\r\n            $timeout(() => {\r\n                if (scope.onClose) {\r\n                    scope.onClose() && scope.onClose()();\r\n                }\r\n                scope.close()\r\n            }, scope.closeAfter)\r\n        }\r\n    },\r\n    template: `\r\n        <div class=\"cui-modal\" ng-if=\"showIf\" ng-click=\"close()\">\r\n            <div class=\"cui-modal__pane\">\r\n                <div class=\"cui-modal__icon\">\r\n                    <cui-icon cui-svg-icon=\"cui:check-with-border\" class=\"cui-modal__icon\"></cui-icon>\r\n                </div>\r\n                <span class=\"cui-modal__primary-message\">{{'cui-success' | translate}}</span>\r\n                <ng-transclude></ng-transclude>\r\n            </div>\r\n        </div>\r\n    `\r\n}))\r\n\r\nangular.module('common')\r\n.directive('unique', ['$parse', ($parse) => {\r\n  return {\r\n    restrict: 'A',\r\n    require: 'ngModel',\r\n    link: (scope, element, attrs, ctrl) => {\r\n      const checkIfUnique = (values) => {\r\n        ctrl.$setValidity('unique', values[0] !== (values[1] || ''));\r\n      };\r\n\r\n      scope.$watch(()=> [scope.$eval(attrs.unique), ctrl.$viewValue], checkIfUnique, (newValues,oldValues) => angular.equals(newValues,oldValues));\r\n    }\r\n  };\r\n}]);\r\nangular.module('common')\r\n.factory('API', (Base, CustomAPI, Loader, localStorageService, User, $location, $q, $timeout, $window,LocaleService) => {\r\n\r\n    let authInfo = {}\r\n    let myCUI = {}\r\n\r\n    Base.authInfo = authInfo\r\n\r\n    const populateUserInfo = (info, redirectOpts) => {\r\n        const deferred = $q.defer()\r\n        let userInfo, roleList, entitlementList\r\n        authInfo = info\r\n        User.set(info)\r\n\r\n        $q.all([\r\n            myCUI.getPersonRoles({ personId: authInfo.cuid }),\r\n            myCUI.getPersonEntitlements({ personId: authInfo.cuid }),\r\n            myCUI.getPerson({ personId: authInfo.cuid })\r\n        ])\r\n        .then(res => {\r\n            roleList = res[0].map(x => x.name)\r\n            User.setRoles(roleList)\r\n\r\n            entitlementList = res[1].map(x => x.privilegeName)\r\n            User.setEntitlements(entitlementList)\r\n\r\n            userInfo = res[2]\r\n            LocaleService.setLocaleByDisplayName(appConfig.languages[userInfo.language])\r\n            return myCUI.getOrganizationWithAttributes({ organizationId: res[2].organization.id })\r\n        })\r\n        .then(res => {\r\n            userInfo.organization = res\r\n            User.set(userInfo)\r\n            //cui.log('populateUserInfo', User);\r\n            //get user notification related information  as lazy loading,\r\n            // No need to hold entire UI apps for this loading.\r\n            getNotificationDetails(userInfo)\r\n            deferred.resolve({ roleList: roleList, redirect: redirectOpts })\r\n        })\r\n\r\n        return deferred.promise\r\n    }\r\n\r\n    const getNotificationDetails = (userInfo) => {\r\n        if (!Base.canGrantAppToUser()) {\r\n            myCUI.getPersonPendingApps({personId: userInfo.id})\r\n            .then((res) => {\r\n                userInfo.pendingApps=res.map(x=> x.name)\r\n                User.set(userInfo)\r\n            })\r\n        }\r\n        else{\r\n            $q.all([\r\n                myCUI.getRegistrationRequestsCount(),\r\n                myCUI.getPackageRequestsCount(),\r\n                myCUI.getOrgRegistrationRequestsCount(),\r\n                myCUI.getPackageRequestsCount({qs:[['requestor.id',userInfo.organization.id],['requestor.type','organization']]})\r\n            ])\r\n            .then(res => {\r\n                userInfo.userRegistrationRequestsCount=res[0]\r\n                userInfo.userAppRequestsCount=res[1]\r\n                userInfo.orgRegistrationRequestsCount=res[2]\r\n                userInfo.orgAppRequestsCount=res[3]\r\n                userInfo.totalCount=res[0]+res[1]+res[2]+res[3]\r\n                User.set(userInfo)\r\n            })\r\n        }\r\n        \r\n    }\r\n    const jwtAuthHandler = () => {\r\n        return myCUI.covAuth({\r\n            originUri: appConfig.originUri,\r\n            authRedirect: window.location.href.split('#')[0] + '#/auth',\r\n            appRedirect: $location.path()\r\n        })\r\n    }\r\n\r\n    const initApi = () => {\r\n        let deferred = $q.defer()\r\n        Loader.onFor('wholeApp','custom-api-loading')\r\n        cui.api({\r\n            retryUnseured: true,\r\n            envDefs: ['https://cuijs.run.covisintrnd.com/defs/env.json'],\r\n            dataCallDefs: [\r\n                'https://cuijs.run.covisintrnd.com/defs/auth.json',\r\n                'app/json/idm-call-defs.json',\r\n                CustomAPI\r\n            ]\r\n        })\r\n        .then((cuiObject) => {\r\n            if (appConfig.logoutUrl) {\r\n                Base.logout = () => {\r\n                    myCUI.covLogout({\r\n                        redirect: appConfig.logoutUrl,\r\n                        qs: [['type', 'logout']]\r\n                    })\r\n                }    \r\n            }\r\n            else Base.logout = cuiObject.covLogout\r\n            angular.copy(cuiObject, myCUI)\r\n            myCUI.setAuthHandler(jwtAuthHandler)\r\n            // overwrite the service url to get the solution instance id\r\n            appConfig.solutionInstancesUrl && myCUI.setServiceUrl(appConfig.solutionInstancesUrl)\r\n            return myCUI.covAuthInfo({originUri: appConfig.originUri})\r\n        })\r\n        .then(() => {\r\n            // reset the service url\r\n            appConfig.debugServiceUrl\r\n                ? myCUI.setServiceUrl(appConfig.debugServiceUrl)\r\n                : myCUI.setServiceUrl(appConfig.serviceUrl)\r\n            $timeout(() => Loader.offFor('wholeApp'), 50)\r\n            deferred.resolve()\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    let apiFactory = {\r\n        cui: myCUI,\r\n        getUser: User.get,\r\n        setUser: User.set,\r\n        setPersonData: User.setPersonData,\r\n        getPersonData: User.getPersonData,\r\n        user: User.user,\r\n        initApi,\r\n        authenticateUser: (redirectOpts) => {\r\n            const deferred = $q.defer()\r\n            const sessionInfo = myCUI.getCovAuthInfo()\r\n\r\n            if (redirectOpts.toState.name!=='auth') {\r\n                localStorageService.set('appRedirect',redirectOpts) // set the redirect to whatever the last state before auth was\r\n                Loader.onFor('wholeApp','redirecting-to-sso') // don't need to turn this loader off since covAuth takes us to another page\r\n                appConfig.solutionInstancesUrl && myCUI.setServiceUrl(appConfig.solutionInstancesUrl)\r\n                jwtAuthHandler() // force redirect to SSO\r\n            }\r\n            else {\r\n                Loader.onFor('wholeApp','getting-user-info')\r\n                myCUI.handleCovAuthResponse({ selfRedirect: true })\r\n                .then(res => {\r\n                    populateUserInfo(res,localStorageService.get('appRedirect'))\r\n                    .then(res => {\r\n                        deferred.resolve(res)\r\n                        $timeout(()=> Loader.offFor('wholeApp'),50)\r\n                    })\r\n                })\r\n            }\r\n            return deferred.promise\r\n        },\r\n        setAuthInfo: function(newAuthInfo) {\r\n            angular.copy(newAuthInfo[0], authInfo)\r\n        },\r\n        authInfo: authInfo\r\n    }\r\n\r\n    return apiFactory\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('APIError', (SharedService) => {\r\n    const APIError = Object.create(SharedService)\r\n    APIError.details = Object.assign({}, APIError.details)\r\n    APIError.for = APIError.details\r\n    return APIError\r\n})\r\nangular.module('common')\r\n.factory('APIHelpers', (API,$filter) => {\r\n    'use strict'\r\n\r\n    const apiHelpers = {\r\n\r\n        getQs(opts) {\r\n            /**\r\n                return a qs array from an object of key value pairs\r\n                where the key is the search param and the value is the search value (accepts undefined values)\r\n            **/\r\n\r\n            return Object.keys(_(opts).omitBy(_.isUndefined).value())\r\n            .reduce((query, param) => {\r\n                return query.concat([[param, opts[param]]])\r\n            }, [])\r\n        },\r\n\r\n        buildPackageRequests(arrayOfApps) {\r\n            /**\r\n                returns an array of API package request promises\r\n                based on an array of apps that we want to request\r\n\r\n                the reason for the request should be under app._reason\r\n                if it does not have a reason and the service package\r\n                for that app requires one, we return undefined and\r\n                attach an _error property (app._error = true) on that app\r\n            **/\r\n\r\n            const numberOfApps = arrayOfApps.length\r\n\r\n            if (!_.isArray(arrayOfApps) || numberOfApps === 0) {\r\n                throw new Error ('The argument passed to APIHelpers.buildPackageRequests should be an array of apps, with 1 or more apps.')\r\n                return undefined\r\n            }\r\n\r\n            let error = false\r\n            for (let i=0; i < numberOfApps; i += 1) {\r\n                if (arrayOfApps[i].servicePackage.requestReasonRequired && !arrayOfApps[i]._reason) {\r\n                    arrayOfApps[i]._error = true\r\n                    if (!error) {\r\n                        error = true;\r\n                    }\r\n                }\r\n            }\r\n            if (error) {\r\n                return undefined;\r\n            }\r\n\r\n            let packagesBeingRequested = []\r\n            let packageRequests = []\r\n            for (let i=0; i < numberOfApps; i += 1) {\r\n                if (packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id) >= 0) {\r\n                    // if the service package is already being requested, simply append to the reason.\r\n                    // if the app doesn't have a reason and we got to this point then the package\r\n                    // doesn't require a reason\r\n                    if (arrayOfApps[i]._reason) {\r\n                        packageRequests[packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id)].reason +=\r\n                            ('\\n' + $filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(arrayOfApps[i].name) + ': ' + arrayOfApps[i].name._reason)\r\n                    }\r\n                }\r\n                else {\r\n                    // cache the ids in another array so that we can look for an existing package request\r\n                    // without having to search through the array of requests.\r\n                    packagesBeingRequested.push(arrayOfApps[i].servicePackage.id)\r\n                    packageRequests.push({\r\n                        requestor: {\r\n                            id: API.getUser(),\r\n                            type: 'person'\r\n                        },\r\n                        servicePackage: {\r\n                            id: arrayOfApps[i].servicePackage.id,\r\n                            type: 'servicePackage'\r\n                        },\r\n                        reason: arrayOfApps[i]._reason || ''\r\n                    })\r\n                }\r\n            }\r\n            return packageRequests.map(data => API.cui.createPackageRequest({ data }))\r\n        },\r\n\r\n        flattenOrgHierarchy(orgHierarchy) {\r\n            /*\r\n                Takes the organization hierarchy response and returns a flat object array containing the id's and name's of\r\n                the top level organization as well as it's divisions.\r\n            */\r\n\r\n            if (orgHierarchy) {\r\n                let organizationArray = [];\r\n\r\n                organizationArray.push({\r\n                    id: orgHierarchy.id,\r\n                    name: orgHierarchy.name\r\n                });\r\n\r\n                if (orgHierarchy.children) {\r\n                    orgHierarchy.children.forEach((division) => {\r\n                        organizationArray.push({\r\n                            id: division.id,\r\n                            name: division.name\r\n                        });\r\n\r\n                        if (division.children) {\r\n                            let flatArray = _.flatten(division.children);\r\n                            \r\n                            flatArray.forEach((childDivision) => {\r\n                                organizationArray.push({\r\n                                    id: childDivision.id,\r\n                                    name: childDivision.name\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n                return organizationArray;\r\n            }\r\n            else {\r\n                throw new Error ('No organization hierarchy object provided');\r\n            }\r\n        },\r\n\r\n        getCollectionValuesAndCount(collection, key, returnAsCollection) {\r\n            // Given a collection and a key, will return an object containing each different value found\r\n            // for the given key as well as the count of that key. If the optional parameter `returnAsCollection`\r\n            // is provided, will return data as a collection instead of an object. This was done as in some \r\n            // cases (such as ng-repeat) it is easier to work with the data when its in an array.\r\n\r\n            // One area this method is handy is when you are getting all the different status values of a user list\r\n            // and need the count of each status.\r\n\r\n            let data = {\r\n                all: 0\r\n            }\r\n\r\n            collection.forEach(object => {\r\n                if (object.hasOwnProperty(key)) {\r\n                    let keyValue = object[key]\r\n                    if (data.hasOwnProperty(keyValue)) {\r\n                        data[keyValue] += 1\r\n                        data.all += 1\r\n                    }\r\n                    else {\r\n                        data[keyValue] = 1\r\n                        data.all += 1\r\n                    }\r\n                }\r\n            })\r\n\r\n            if (!returnAsCollection) return data\r\n            else {\r\n                let collectionData = []\r\n\r\n                Object.keys(data).forEach(dataKey => {\r\n                    let asObject = {\r\n                        value: dataKey,\r\n                        count: data[dataKey]\r\n                    }\r\n\r\n                    collectionData.push(asObject)\r\n                })\r\n\r\n                return collectionData\r\n            }\r\n        }\r\n    };\r\n\r\n    return apiHelpers\r\n\r\n});\r\n\r\nangular.module('common')\r\n.factory('Base', (APIError, BaseExtensions, Countries, Languages, LocaleService, Loader, Menu, Theme, Timezones, User, $state, $translate) => {\r\n\r\n    const baseFactory = {\r\n        apiError: APIError,\r\n        appConfig: appConfig,\r\n        countries: Countries,\r\n        getLanguageCode: Languages.getCurrentLanguageCode,\r\n        languages: Languages.all,\r\n        loader: Loader,\r\n        menu: Menu,\r\n        theme: Theme,\r\n        timezones: Timezones.all,\r\n        user: User.user,\r\n\r\n        goBack: (stateName,stateParams) => {\r\n            const numberOfStates = $state.stateStack.length\r\n            let i = numberOfStates - 1 // Last state user visited\r\n            let counter = 0\r\n            let stateParamsFromStack\r\n            do {\r\n                if ($state.stateStack[i].name === stateName) {\r\n                    stateParamsFromStack = $state.stateStack[i].params\r\n                }\r\n                i--\r\n                counter++\r\n            } while (!stateParamsFromStack && i >= 0 && counter <= 20) // limit our attempts to 20\r\n            if (stateParamsFromStack) stateParams=stateParamsFromStack\r\n            if (!stateParams) $state.go(stateName)\r\n            else $state.go(stateName, stateParams)\r\n        },\r\n\r\n        generateHiddenPassword: (password) => Array(password.length+1).join('•')\r\n    }\r\n\r\n    return Object.assign({}, baseFactory, BaseExtensions)\r\n\r\n})\r\n\r\nangular.module('common')\r\n\t.factory('BaseExtensions', ['cui.authorization.permitted', 'User', (permitted, User) => {\r\n\r\n\t\tfunction test() {\r\n\t\t\tcui.log('base extensions test');\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttest: function() {\r\n\t\t\t\treturn test();\r\n\t\t\t},\r\n\t\t\tisPermitted: function(logic) {\r\n\t\t\t\t//cui.log('isPermitted', logic, User.getRoles(), User.getEntitlements());\r\n\t\t\t\treturn permitted(logic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\tisOrgAdmin: function() {\r\n\t\t\t\t//cui.log('isOrgAdmin', appConfig.orgAdminLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t\treturn permitted(appConfig.orgAdminLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\tcanGrantAppToUser: function(){\r\n\t\t\t\treturn permitted(appConfig.grantAppToUserLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\tcanGrantAppToOrg: function(){\r\n\t\t\t\treturn permitted(appConfig.grantAppToOrgLogic, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\taccessByAnyAdmin: function(){\r\n\t\t\t\treturn permitted(appConfig.accessByAnyAdmin, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\tglobalSearch: function(){\r\n\t\t\t\treturn permitted(appConfig.globalSearch, User.getRoles(), User.getEntitlements());\r\n\t\t\t},\r\n\t\t\taccessToSecurityAndExchangeAdmins:function(){\r\n\t\t\t\treturn permitted(appConfig.accessToSecurityAndExchangeAdmins, User.getRoles(), User.getEntitlements());\r\n\t\t\t}\r\n\t\t}\r\n\t}])\r\n\r\nangular.module('common')\r\n.factory('CommonAPI', (API, APIError, $q) => {\r\n\t'use strict'\r\n\r\n\t// This service handles basic API calls that are done throughout the project.\r\n\t// API calls that are more specific are handled in their own services.\r\n\r\n\tconst errorName = 'CommonAPIFactory.'\r\n\r\n\tconst getPerson = (userId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getPerson')\r\n\r\n\t\tAPI.cui.getPerson({ personId: userId })\r\n\t\t.done(personResponse => {\r\n\t\t\tdefer.resolve(personResponse)\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting person information')\r\n\t\t\tAPIError.onFor(errorName + 'getPerson')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganization = (organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getOrganization')\r\n\r\n\t\tAPI.cui.getOrganization({ organizationId: organizationId })\r\n\t\t.done(orgResponse => {\r\n\t\t\tdefer.resolve(orgResponse)\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting organization information')\r\n\t\t\tAPIError.onFor(errorName + 'getOrganization')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganizationHierarchy = (organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getOrgHierarchy')\r\n\r\n\t\tAPI.cui.getOrganizationHierarchy({ organizationId: organizationId })\r\n\t\t.done(orgHierarchy => {\r\n\t\t\tdefer.resolve(orgHierarchy)\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting organization hierarchy')\r\n\t\t\tAPIError.onFor(errorName + 'getOrgHierarchy')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetPerson: getPerson,\r\n\t\tgetOrganization: getOrganization,\r\n\t\tgetOrganizationHierarchy: getOrganizationHierarchy\r\n\t}\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('Countries', function($http, $rootScope, $translate) {\r\n\r\n    let countries = []\r\n\r\n    const GetCountries = (locale) => {\r\n        return $http.get(appConfig.languageResources.url + 'countries/' + locale + '.json')\r\n    }\r\n\r\n    const setCountries = (language) => {\r\n        language = language || 'en'\r\n\r\n        if (language.indexOf('_') > -1) {\r\n            language = language.split('_')[0]\r\n        }\r\n\r\n        GetCountries(language)\r\n        .then(res => {\r\n            countries.length = 0\r\n\r\n            res.data.forEach(country => {\r\n                countries.push(country)\r\n            })\r\n        })\r\n        .catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    $rootScope.$on('languageChange',function(e, args) {\r\n        setCountries(args)\r\n    })\r\n\r\n    const getCountryByCode = (countryCode) => {\r\n        return _.find(countries, function(countryObject) {\r\n            return countryObject.code === countryCode\r\n        })\r\n    }\r\n\r\n    setCountries($translate.proposedLanguage())\r\n\r\n    return {\r\n        list: countries,\r\n        getCountryByCode: getCountryByCode\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('CustomAPI', (CustomAPIExtension) => {\r\n\r\n    const calls = [\r\n        {\r\n            cmd: 'getPackageClaims',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.claim.v1+json',\r\n            call: '/service/v3/claims',\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonPackageClaims',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',\r\n            call: `/service/v3/persons/${ '{grantee}' }/packages/${ '{packageId}' }/claims`,\r\n            type: 'GET' \r\n        },\r\n        {\r\n            cmd: 'getCategories',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.category.v1+json',\r\n            call: `/service/v3/categories`,\r\n            type: 'GET' \r\n        },\r\n        {\r\n            cmd: 'getPersonRequestableApps',            \r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/requestable`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonRequestableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/requestable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantedApps',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantedAppCount',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationRequestableApps',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationRequestableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/requestable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantedApps',            \r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantedCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantableApps',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/grantable`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonGrantableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/persons/${ '{personId}' }/grantable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantableApps',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/grantable`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationGrantableCount',\r\n            accepts: 'text/plain',\r\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/grantable/count`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonStatusHistory',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.status.history.v1+json',\r\n            call: '/person/v3/persons/statusHistory',\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonPasswordChangeHistory',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.authn.password.change.history.req.v1+json',\r\n            call: `/authentication/v4/passwords/changeHistory`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonPendingServicePackages',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.request.v1+json',\r\n            call: `/service/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPackage',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.v1+json',\r\n            call: `/service/v3/packages/${ '{packageId}' }`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'denyPackage',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            type: 'POST',\r\n            call: `/service/v3/requests/tasks/deny`,\r\n        },\r\n        {\r\n            cmd: 'approvePackage',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            type: 'POST',\r\n            call: `/service/v3/requests/tasks/approve`\r\n        },\r\n        {\r\n            cmd: 'grantClaims',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',\r\n            call: `/service/v3/packages/grants/claims`,\r\n            type: 'PUT'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationRegistrationRequest',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.organization.request.v1+json',\r\n            call: `/organization/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonRegistrationRequest',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: `/person/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'approvePersonRegistration',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: `/person/v3/requests/tasks/approve`,\r\n            type: 'POST'\r\n        },\r\n        {\r\n            cmd: 'denyPersonRegistration',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: `/person/v3/requests/tasks/deny`,\r\n            type: 'POST'\r\n        },\r\n        {\r\n            cmd: 'getAllOrganizationRequests',\r\n            accepts: 'application/vnd.com.covisint.platform.organization.request.v1+json',\r\n            call: `/organization/v3/requests`,\r\n            type: 'GET'\r\n        },\r\n        {\r\n            cmd: 'getPersonEntitlements',\r\n            cmdType: 'secured',\r\n            contentType: 'application/vnd.com.covisint.platform.person.privilege.v1+json',\r\n            accepts: 'application/vnd.com.covisint.platform.person.privilege.v1+json',\r\n            call: `/person/v3/persons/privileges/${ '{personId}'}`,\r\n            type: 'GET'\r\n        },\r\n        {   cmd: 'getPersonGrantedCount',\r\n            cmdType: 'secured',\r\n            accepts: 'text/plain',\r\n            call: `/person/v3/persons/count`,\r\n            type: 'GET' \r\n        },\r\n        {\r\n            cmd: 'suspendOrgPkg',\r\n            cmdType: 'secured',\r\n            accepts: 'application/vnd.com.covisint.platform.package.grant.status.request.v1+json',\r\n            contentType: 'application/vnd.com.covisint.platform.package.grant.status.request.v1+json',\r\n            call: `/service/v3/grants/tasks/organization/package/suspend`,\r\n            type: 'POST'\r\n        }\r\n    ]\r\n\r\n    return calls.concat(CustomAPIExtension)\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('CustomAPIExtension', () => {\r\n\r\n\t/* \t\r\n\t\tAny calls added here will be added to the API.cui object.\r\n\t*/\r\n\r\n    const calls = [\r\n    \t/* ---------- Registration Nonce Calls ---------- */\r\n    \t{\r\n    \t\tcmd: 'initiateNonce',\r\n    \t\tcmdType: 'unsecured',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/json',\r\n    \t\tcall: '/registration/v1/registrations/open/initiate'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'getOrganizationNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.organization.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/organizations/{organizationId}'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'getOrganizationsNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.organization.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/organizations'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'getSecurityQuestionsNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'GET',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.securityquestion.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/securityQuestions'\r\n    \t},\r\n    \t{\r\n    \t\tcmd: 'postUserRegistrationNonce',\r\n    \t\tcmdType: 'nonce',\r\n    \t\ttype: 'POST',\r\n    \t\taccepts: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n    \t\tcontentType: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n    \t\tcall: '/registration/v1/registrations/persons/registration'\r\n    \t},\r\n    \t{\r\n            cmd: 'getPasswordPoliciesNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'application/vnd.com.covisint.platform.password.policy.v1+json',\r\n            call: '/registration/v1/registrations/passwords/policies/{policyId}'\r\n        },\r\n        {\r\n            cmd: 'postPersonRequestNonce',\r\n            cmdType: 'nonce',\r\n            type: 'POST',\r\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            contentType: 'application/vnd.com.covisint.platform.person.request.v1+json',\r\n            call: '/registration/v1/registrations/persons/requests'\r\n        },\r\n        {\r\n        \tcmd: 'getOrgPackageGrantsNonce',\r\n        \tcmdType: 'nonce',\r\n        \ttype: 'GET',\r\n        \taccepts: 'application/vnd.com.covisint.platform.package.grant.v1+json',\r\n        \tcall: '/registration/v1/registrations/organizations/{organizationId}/packages'\r\n        },\r\n\t\t{\r\n\t\t\tcmd: 'validateUsernameEmailNonce',\r\n\t\t\tcmdType: 'nonce',\r\n\t\t\ttype: 'POST',\r\n\t\t\taccepts: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n\t\t\tcontentType: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\r\n\t\t\tcall: '/registration/v1/registrations/persons/registration/validate'\r\n\t\t},\r\n        {\r\n            cmd: 'securedInitiate',\r\n            cmdType: 'unsecured',\r\n            type: 'GET',\r\n            accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json',\r\n            call: '/registration/v1/registrations/securedInvite/initiate/{invitationId}'\r\n        },\r\n        {\r\n            cmd: 'getOrgAppsNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\r\n            call: '/registration/v1/applications/organizations/{organizationId}'\r\n        },\r\n        {\r\n            cmd: 'getOrgAppsCountNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'text/plain',\r\n            call: '/registration/v1/applications/organizations/{organizationId}/count'\r\n        },\r\n        {\r\n            cmd: 'getOrganizationsCountNonce',\r\n            cmdType: 'nonce',\r\n            type: 'GET',\r\n            accepts: 'text/plain',\r\n            call: '/registration/v1/registrations/organizations/count'\r\n        },\r\n        //New Calls-S\r\n        {cmd: \"getOrgRegistrationRequests\",call:\"/registration/v1/organization/requests\",type:\"GET\",accepts:\"application/vnd.com.covisint.platform.organization.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.organization.request.v1+json\"},\r\n        {cmd: \"getOrgRegistrationRequestsCount\",call: \"/registration/v1/organization/requests/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: 'approveOrgRegistrationRequest', call:'/registration/v1/organization/requests/tasks/approve', type:'POST', accepts:'application/vnd.com.covisint.platform.organization.request.v1+json'},\r\n        {cmd: 'denyOrgRegistrationRequest', call:'/registration/v1/organization/requests/tasks/deny', type:'POST', accepts:'application/vnd.com.covisint.platform.organization.request.v1+json'},\r\n                // ADMIN... imported from Coke...\r\n        {cmd: 'getPackageByQuery',accepts: 'application/vnd.com.covisint.platform.package.v1+json',call: `/service/v3/packages`,type: 'GET' },\r\n        {cmd: \"getPersonByQuery\",call: \"/person/v3/persons\",type: \"GET\",accepts: \"application/vnd.com.covisint.platform.person.v1+json\"  },\r\n        {cmd: \"getRegistrationRequests\",call:\"/registration/v1/person/requests\",type:\"GET\",accepts:\"application/vnd.com.covisint.platform.person.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.person.request.v1+json\"},\r\n        {cmd: \"createRegistrationRequest\",\"cmdType\": \"unsecured\",call:\"/registration/v1/person/requests\",type:\"POST\",accepts:\"application/vnd.com.covisint.platform.person.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.person.request.v1+json\"},\r\n        {cmd: \"getOrganizationSecured\",\"cmdType\": \"secured\",\"call\": \"/organization/v3/organizations/{organizationId}\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.organization.v1+json\"},\r\n        {cmd: \"getPasswordPolicySecured\",\"cmdType\": \"secured\",\"call\": \"/authn/v4/passwords/policies/{policyId}\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.password.policy.v1+json\"},\r\n        {cmd: 'grantClaims',accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',contentType:\"application/vnd.com.covisint.platform.package.grant.claim.v1+json\",call: '/service/v3/packages/grants/claims',type: 'PUT' },\r\n        {cmd: 'initiateRegistration', cmdType: 'unsecured', call: '/registration/v1/registrations/open/initiate', type: 'GET', accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json'},\r\n        {cmd: 'initiateSecuredRegistration', cmdType: 'unsecured', call: '/registration/v1/registrations/securedInvite/initiate/{id}', type: 'GET', accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json'},\r\n        {cmd: 'createRegistrationNonce',cmdType: 'nonce',call:'/registration/v1/registrations/persons/registration',type:'POST',accepts:'application/vnd.com.covisint.platform.person.password.account.v1+json',contentType:'application/vnd.com.covisint.platform.person.password.account.v1+json'},\r\n        {cmd: 'createRegistrationRequestNonceWithPkg',cmdType: 'nonce',call:'/registration/v1/registrations/persons/requests',type:'POST',accepts:'application/vnd.com.covisint.platform.person.request.v1+json',contentType:'application/vnd.com.covisint.platform.person.request.v1+json'},\r\n        {cmd: 'approvePersonRegistrationRequest', call:'/registration/v1/person/requests/tasks/approve', type:'POST', accepts:'application/vnd.com.covisint.platform.person.request.v1+json'},\r\n        {cmd: 'denyPersonRegistrationRequest', call:'/registration/v1/person/requests/tasks/deny', type:'POST', accepts:'application/vnd.com.covisint.platform.person.request.v1+json'},\r\n        {cmd: 'validateRegistrationNonce',cmdType:'nonce',call: '/registration/v1/registrations/persons/registration/validate', type:'POST', accepts: 'text/plain'},\r\n        //{cmd: 'getOrganizationNonce',cmdType:'nonce',call: '/registration/v1/registrations/organizations/{id}', type:'GET', accepts: 'application/vnd.com.covisint.platform.organization.v1+json'},\r\n        {cmd: 'getPasswordPolicyNonce',cmdType:'nonce',call: '/registration/v1/registrations/passwords/policies/{id}', type:'GET', accepts: 'application/vnd.com.covisint.platform.password.policy.v1+json'},\r\n        {cmd: 'getAttributeTemplatesNonce',cmdType:'nonce',call: '/registration/v1/registrations/attributeTemplates', type:'GET', accepts: 'application/vnd.com.covisint.platform.attribute.template.v1+json'},\r\n        {cmd: \"getOrganizationPackagesSecured\",\"cmdType\": \"secured\",\"call\": \"/service/v3/organizations/{organizationId}/packages\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.package.grant.v1+json\"},\r\n        {cmd: \"validatePasswordSecured\",call: \"/person/v3/persons/password/validate\",type: \"POST\",accepts: \"application/vnd.com.covisint.platform.password.validation.response.v1+json\",\"contentType\": \"application/vnd.com.covisint.platform.password.validation.v1+json\"},\r\n        {cmd: \"getPackageRequestsCount\",call: \"/service/v3/requests/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: \"getOrganizationPackagesCount\",call: \"/service/v3/organizations/{organizationId}/packages/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: \"getRegistrationRequestsCount\",call: \"/registration/v1/person/requests/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: \"getPackagesRequestedCount\",call: \"/service/v3/persons/{personId}/packages/count\",type: \"GET\",accepts: \"text/plain\"},\r\n        {cmd: 'validatePasswordNonce',cmdType:'nonce',call: '/registration/v1/registrations/persons/password/validate', type:'POST', accepts: 'application/vnd.com.covisint.platform.password.validation.response.v1+json',contentType:'application/vnd.com.covisint.platform.password.validation.v1+json'}\r\n\r\n\r\n    ];\r\n\r\n    return calls\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('DataStorage', (API, localStorageService) => {\r\n\r\n    let storage = localStorageService.get('dataStorage') || {}\r\n    let dataStorage = {}\r\n\r\n    const initStorageIfUndefined = () => {\r\n        if (!storage[API.getUser()]) {\r\n            storage[API.getUser()] = {}\r\n        }\r\n    }\r\n\r\n    const saveToLocaStorage = () => {\r\n        localStorageService.set('dataStorage', storage)\r\n    }\r\n\r\n    /****************************************\r\n        FOR OBJECT AND ARRAY TYPE DATA\r\n    ****************************************/\r\n\r\n    // completely overrides a type\r\n    dataStorage.setType = (type, data) => {\r\n        initStorageIfUndefined()\r\n        storage[API.getUser()][type] = data\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    dataStorage.getType = (type) => {\r\n        if (!storage[API.getUser()]) {\r\n            return undefined\r\n        }\r\n        return storage[API.getUser()][type]\r\n    }\r\n\r\n    dataStorage.deleteType = (type) => {\r\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\r\n            return\r\n        }\r\n        delete storage[API.getUser()][type]\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    // deletes the storage for just the currently logged in user\r\n    dataStorage.deleteUserStorage = () => {\r\n        if (storage[API.getUser()]) {\r\n            delete storage[API.getUser()]\r\n        }\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    // deletes the storage for every user in local storage\r\n    dataStorage.clear = () => {\r\n        storage = {}\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    dataStorage.getUserStorage = () => storage[API.getUser()]\r\n\r\n    /****************************************\r\n        FOR ARRAY TYPE DATA ONLY\r\n    ****************************************/\r\n\r\n    // appends to a certain type\r\n    // NOTE: Make sure to use data that you can later distinguish between using dataThatMatches\r\n    // I recommend using replaceDataThatMatches instead unless you know what you're doing\r\n    dataStorage.appendToType = (type, data) => {\r\n        initStorageIfUndefined()\r\n        if (!storage[API.getUser()][type]) {\r\n            storage[API.getUser()][type] = [data]\r\n        } \r\n        else if (!_.isArray(storage[API.getUser()][type])) {\r\n            throw new Error('Tried appending to an existing data type that is not an array in dataStorage.')\r\n            return\r\n        } \r\n        else {\r\n            storage[API.getUser()][type].push(data)\r\n        }\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    // returns ALL data that matches against a given comparison or undefined if no results\r\n    dataStorage.getDataThatMatches = (type, comparison) => {\r\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\r\n            return undefined\r\n        } \r\n        else if (!_.isArray(storage[API.getUser()][type])) {\r\n            throw new Error('Tried using DataStorage.getDataThatMatches on a type that isn\\'t an array. Use .getType(type) instead.')\r\n            return\r\n        } \r\n        else {\r\n            const matches = storage[API.getUser()][type].filter(x => {\r\n                return _.isMatch(x, comparison)\r\n            })\r\n            if (matches.length > 0) {\r\n                return matches\r\n            } \r\n            else {\r\n                return undefined\r\n            }\r\n        }\r\n    }\r\n\r\n    // replaces all data that matches against a certain comparison and appends\r\n    // new data to that type's array\r\n    dataStorage.replaceDataThatMatches = (type, comparison, newData) => {\r\n        dataStorage.deleteDataThatMatches(type, newData)\r\n        dataStorage.appendToType(type, newData)\r\n    }\r\n\r\n    dataStorage.deleteDataThatMatches = (type, comparison) => {\r\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\r\n            return\r\n        } \r\n        else if (!_.isArray(storage[API.getUser()][type])) {\r\n            throw new Error('Tried using DataStorage.deleteDataThatMatches on a type that isn\\'t an array. Use .deleteType(type) instead.')\r\n            return\r\n        } \r\n        else {\r\n            storage[API.getUser()][type] = storage[API.getUser()][type].filter(x => {\r\n                return !_.isMatch(x, comparison)\r\n            })\r\n        }\r\n        saveToLocaStorage()\r\n    }\r\n\r\n    return dataStorage\r\n})\r\n\r\nangular.module('common')\r\n.factory('Languages',['$cuiI18n','LocaleService',function($cuiI18n,LocaleService){\r\n\r\n    var languages=$cuiI18n.getLocaleCodesAndNames();\r\n\r\n    return {\r\n        all:languages,\r\n        getCurrentLanguageCode : function(){\r\n            if (LocaleService.getLocaleCode().indexOf('_')>-1) {\r\n                return LocaleService.getLocaleCode().split('_')[0];\r\n            } else {\r\n                return LocaleService.getLocaleCode();\r\n            }\r\n        }\r\n    };\r\n}]);\r\nangular.module('common')\r\n.factory('Loader', (SharedService) => {\r\n    const Loader = Object.create(SharedService)\r\n    Loader.details = Object.assign({}, Loader.details)\r\n    Loader.for = Loader.details\r\n    return Loader\r\n})\r\n\r\nangular.module('common')\r\n.factory('Menu', (snapRemote, $rootScope, $window) => {\r\n\r\n    const shouldShowMobileNav = () => {\r\n        if ($window.innerWidth >= 1000) {\r\n            snapRemote.close()\r\n        }\r\n    }\r\n\r\n    // Fixes issue where opening up the mobile menu and then expanding into desktop mode \r\n    // would leave all content pushed to the right.\r\n    $window.onresize = _.debounce(function() {\r\n        shouldShowMobileNav()\r\n    }, 1000)\r\n\r\n    return {\r\n        desktop: {\r\n            state: 'open', // default state for desktop menu\r\n            enabled: true,\r\n            open: function() {\r\n                this.state = 'closed'\r\n            },\r\n            close: function() {\r\n                this.state = 'closed'\r\n            },\r\n            toggle: function() { \r\n                this.state === 'open' ? this.state = 'closed' : this.state = 'open' \r\n            },\r\n            hide: function() {\r\n                this.enabled = false\r\n            },\r\n            show: function() {\r\n                this.enabled = true\r\n            }\r\n        },\r\n\r\n        mobile: {\r\n            state: 'closed', // default state for mobile menu\r\n            enabled: true,\r\n            open: function() {\r\n                this.state = 'open'\r\n            },\r\n            close: function() {\r\n                this.state = 'close'\r\n            },\r\n            toggle: function() {\r\n                this.state === 'open' ? this.state = 'closed' : this.state = 'open'\r\n            },\r\n            hide: function() {\r\n                this.enabled = false\r\n            },\r\n            show: function() {\r\n                this.state = true\r\n            }\r\n        },\r\n\r\n        handleStateChange: function(stateMenuOptions){\r\n            if (!angular.isDefined(stateMenuOptions)){\r\n                this.desktop.show()\r\n                this.mobile.show()\r\n            }\r\n            else {\r\n                (angular.isDefined(stateMenuOptions.desktop) && stateMenuOptions.desktop=== false)? this.desktop.hide() : this.desktop.show()\r\n                (angular.isDefined(stateMenuOptions.mobile) && stateMenuOptions.mobile=== false)? this.mobile.hide() : this.mobile.show()\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('Organization', (API, $q) => {\r\n\r\n\tconst factoryName = 'organizationFactory.'\r\n\r\n\tconst getOrganizationAdmins = (organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getOrganizationSecurityAdmins({organizationId: organizationId})\r\n\t\t.done(response => defer.resolve(response))\r\n\t\t.fail(error => defer.reject(error))\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganizationPasswordPolicy = (policyId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getPasswordPolicy({policyId: policyId})\r\n\t\t.done(response => defer.resolve(response))\r\n\t\t.fail(error => defer.reject(error))\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganizationAuthenticationPolicy = (policyId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getAuthenticationPolicy({policyId: policyId})\r\n\t\t.done(response => defer.resolve(response))\r\n\t\t.fail(error => defer.reject(error))\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getOrganization = (organizationId) => {\r\n\t\treturn API.cui.getOrganizationWithAttributes({organizationId:organizationId})\r\n\t}\r\n\r\n\tconst initOrganizationProfile = (organizationId, policyId, authPolicyId) => {\r\n\t\tconst defer = $q.defer()\r\n\t\tconst organizationProfile = {}\r\n\t\tconst callsToComplete = 3\r\n\t\tlet callsCompleted = 0\r\n\r\n\t\tgetOrganizationAdmins(organizationId)\r\n\t\t.then(response => organizationProfile['admins'] = response)\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\r\n\t\t})\r\n\r\n\t\tgetOrganizationPasswordPolicy(policyId)\r\n\t\t.then(response => organizationProfile['passwordPolicy'] = response)\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\r\n\t\t})\r\n\r\n\t\tgetOrganizationAuthenticationPolicy(authPolicyId)\r\n\t\t.then(response => organizationProfile['authenticationPolicy'] = response)\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetOrganizationAdmins: getOrganizationAdmins,\r\n\t\tgetOrganizationPasswordPolicy: getOrganizationPasswordPolicy,\r\n\t\tgetOrganizationAuthenticationPolicy:getOrganizationAuthenticationPolicy,\r\n\t\tgetOrganization:getOrganization,\r\n\t\tinitOrganizationProfile: initOrganizationProfile\r\n\t}\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('PersonAndOrgRequest', (API, APIError, CommonAPI, $q) => {\r\n\t'use strict'\r\n\r\n\t/*\r\n\t\tUse this service as a helper when dealing with person requests.\r\n\r\n\t\tAllows you to get a person's registration request or a wrapper call that also gets you the person's and their\r\n\t\torganization's data.\r\n\t*/\r\n\r\n\tconst PersonAndOrgRequestFactory = {}\r\n\tconst errorName = 'PersonAndOrgRequestFactory.'\r\n\r\n\t/****************************************\r\n\t\t\t\tService Functions\r\n\t****************************************/\r\n\r\n\t// Returns the registration request associated with the userId\r\n\tPersonAndOrgRequestFactory.getPersonRegistrationRequest = (userId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getPersonRegistrationRequest({qs: [['registrant.id', userId]]})\r\n\t\t.done(registrationResponse => {\r\n\t\t\tdefer.resolve(registrationResponse[0])\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting user\\'s registration request')\r\n\t\t\tAPIError.onFor(errorName + 'getRegistrationRequest')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tPersonAndOrgRequestFactory.getOrgRegistrationRequest = (organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getOrgRegistrationRequests({qs: [['organization.id', organizationId]]})\r\n\t\t.done(registrationResponse => {\r\n\t\t\tdefer.resolve(registrationResponse[0])\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting organization\\'s registration request')\r\n\t\t\tAPIError.onFor(errorName + 'getRegistrationRequest')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\t/*\r\n\t\tWrapper call for: \tPersonRequest.getPersonRegistrationRequest()\r\n\t\t\t\t\t\t\tCommonAPI.getPerson()\r\n\t\t\t\t\t\t\tCommonAPI.getOrganization()\r\n\t*/\r\n\tPersonAndOrgRequestFactory.getRegistrationRequestData = (userId, organizationId, type) => {\r\n\t\tconst defer = $q.defer()\r\n\t\tlet callsCompleted = 0\r\n\t\tlet requestData = {}\r\n\r\n\t\tif (type==='person') {\r\n\t\t\tPersonAndOrgRequestFactory.getPersonRegistrationRequest(userId)\r\n\t\t\t.then(registrationRequest => {\r\n\t\t\t\trequestData.request = registrationRequest\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tcallsCompleted += 1\r\n\t\t\t\tif (callsCompleted === 3) {\r\n\t                defer.resolve(requestData);\r\n\t            }\r\n\t\t\t})\r\n\t\t}\r\n\t\telse{\r\n\t\t\tPersonAndOrgRequestFactory.getOrgRegistrationRequest(organizationId)\r\n\t\t\t.then(registrationRequest => {\r\n\t\t\t\trequestData.request = registrationRequest\r\n\t\t\t})\r\n\t\t\t.finally(() => {\r\n\t\t\t\tcallsCompleted += 1\r\n\t\t\t\tif (callsCompleted === 3) {\r\n\t                defer.resolve(requestData);\r\n\t            }\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tCommonAPI.getPerson(userId)\r\n\t\t.then(personData => {\r\n\t\t\trequestData.personData = personData\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\t\r\n\t\t})\r\n\r\n\t\tCommonAPI.getOrganization(organizationId)\r\n\t\t.then(organizationData => {\r\n\t\t\trequestData.organization = organizationData\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\r\n\t\t})\r\n\t\t\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\t// Provided a decision ('approved' or 'denied') and the person request object\r\n\t// Handles the approval/denial of the person request\r\n\tPersonAndOrgRequestFactory.handleRequestApproval = (decision, request) => {\r\n\t\tlet data = [['requestId', request.id]]\r\n\r\n\t\tif (decision === 'approved') {\r\n\t\t\tAPI.cui.approvePersonRegistration({qs: data})\r\n\t\t}\r\n\t\telse if (decision === 'denied') {\r\n\t\t\tif (request.rejectReason) {\r\n\t\t\t\tdata.push(['reason', request.rejectReason])\r\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error('Requires a decision of \"approved\" or \"denied\" and the request object.')\r\n\t\t}\r\n\t}\r\n\r\n\treturn PersonAndOrgRequestFactory\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('PersonRequest', (API, APIError, CommonAPI, $q) => {\r\n\t'use strict'\r\n\r\n\t/*\r\n\t\tUse this service as a helper when dealing with person requests.\r\n\r\n\t\tAllows you to get a person's registration request or a wrapper call that also gets you the person's and their\r\n\t\torganization's data.\r\n\t*/\r\n\r\n\tconst personRequestFactory = {}\r\n\tconst errorName = 'PersonRequestFactory.'\r\n\r\n\t/****************************************\r\n\t\t\t\tService Functions\r\n\t****************************************/\r\n\r\n\t// Returns the registration request associated with the userId\r\n\tpersonRequestFactory.getPersonRegistrationRequest = (userId) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPI.cui.getPersonRegistrationRequest({qs: [['registrant.id', userId]]})\r\n\t\t.done(registrationResponse => {\r\n\t\t\tdefer.resolve(registrationResponse[0])\r\n\t\t})\r\n\t\t.fail(err => {\r\n\t\t\tconsole.error('Failed getting user\\'s registration request')\r\n\t\t\tAPIError.onFor(errorName + 'getRegistrationRequest')\r\n\t\t\tdefer.reject(err)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\t/*\r\n\t\tWrapper call for: \tPersonRequest.getPersonRegistrationRequest()\r\n\t\t\t\t\t\t\tCommonAPI.getPerson()\r\n\t\t\t\t\t\t\tCommonAPI.getOrganization()\r\n\t*/\r\n\tpersonRequestFactory.getPersonRegistrationRequestData = (userId, organizationId) => {\r\n\t\tconst defer = $q.defer()\r\n\t\tlet callsCompleted = 0\r\n\t\tlet requestData = {}\r\n\r\n\t\tpersonRequestFactory.getPersonRegistrationRequest(userId)\r\n\t\t.then(registrationRequest => {\r\n\t\t\trequestData.request = registrationRequest\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\r\n\t\t})\r\n\r\n\t\tCommonAPI.getPerson(userId)\r\n\t\t.then(personData => {\r\n\t\t\trequestData.personData = personData\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\t\r\n\t\t})\r\n\r\n\t\tCommonAPI.getOrganization(organizationId)\r\n\t\t.then(organizationData => {\r\n\t\t\trequestData.organization = organizationData\r\n\t\t})\r\n\t\t.finally(() => {\r\n\t\t\tcallsCompleted += 1\r\n\t\t\tif (callsCompleted === 3) {\r\n                defer.resolve(requestData);\r\n            }\r\n\t\t})\r\n\t\t\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\t// Provided a decision ('approved' or 'denied') and the person request object\r\n\t// Handles the approval/denial of the person request\r\n\tpersonRequestFactory.handleRequestApproval = (decision, request) => {\r\n\t\tlet data = [['requestId', request.id]]\r\n\r\n\t\tif (decision === 'approved') {\r\n\t\t\tAPI.cui.approvePersonRegistration({qs: data})\r\n\t\t}\r\n\t\telse if (decision === 'denied') {\r\n\t\t\tif (request.rejectReason) {\r\n\t\t\t\tdata.push(['reason', request.rejectReason])\r\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthrow new Error('Requires a decision of \"approved\" or \"denied\" and the request object.')\r\n\t\t}\r\n\t}\r\n\r\n\treturn personRequestFactory\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('Registration', (API, APIError, Base, $q) => {\r\n\r\n    const self = {}\r\n    const pub = {}\r\n\r\n    // Helper functions to build out the person and request objects needed for registration\r\n    const build = {\r\n        person: function(registrationData) {\r\n            const personData = Object.assign({}, registrationData.profile)\r\n\r\n            personData.addresses[0].country = registrationData.userCountry.originalObject.code\r\n            personData.organization = { id: registrationData.organization.id }\r\n            personData.language=registrationData.profile.language.id\r\n            personData.timezone=registrationData.profile.timezone.id\r\n\r\n            if (personData.phones[0]) {\r\n                personData.phones[0].type = 'main'\r\n            }\r\n\r\n            return personData\r\n        },\r\n        passwordAccount: function(registrationData) {\r\n            return {\r\n                version: '1',\r\n                username: registrationData.login.username,\r\n                password: registrationData.login.password,\r\n                passwordPolicy: registrationData.organization.passwordPolicy,\r\n                authenticationPolicy: registrationData.organization.authenticationPolicy\r\n            }\r\n        },\r\n        securityQuestionAccount: function(registrationData) {\r\n            return {\r\n                version: '1',\r\n                questions: [{\r\n                    question: {\r\n                        id: registrationData.login.question1.id,\r\n                        type: 'question',\r\n                        realm: registrationData.organization.realm\r\n                    },\r\n                    answer: registrationData.login.challengeAnswer1,\r\n                    index: 1\r\n                },\r\n                {\r\n                    question: {\r\n                        id: registrationData.login.question2.id,\r\n                        type: 'question',\r\n                        realm: registrationData.organization.realm\r\n                    },\r\n                    answer: registrationData.login.challengeAnswer2,\r\n                    index: 2\r\n                }]\r\n            }\r\n        }, \r\n        walkupSubmit: function(registrationData) {\r\n            const _registrationData = Object.assign({}, registrationData)\r\n\r\n            return {\r\n                person: this.person(_registrationData),\r\n                passwordAccount: this.passwordAccount(_registrationData),\r\n                securityQuestionAccount: this.securityQuestionAccount(_registrationData)\r\n            }\r\n        },\r\n        InvitedSubmit: function(registrationData,inviteId) {\r\n            const _registrationData = Object.assign({}, registrationData)\r\n\r\n            return {\r\n                person: this.person(_registrationData),\r\n                passwordAccount: this.passwordAccount(_registrationData),\r\n                securityQuestionAccount: this.securityQuestionAccount(_registrationData),\r\n                inviteId:inviteId\r\n            }\r\n        },\r\n        servicePackageRequest: function(personId, personRealm, packageData,requestReason) {\r\n            let request = {\r\n                registrant: {\r\n                    id: personId,\r\n                    type: 'person',\r\n                    realm: personRealm\r\n                },\r\n                justification: requestReason||'User Walkup Registration'\r\n            }\r\n\r\n            if (packageData && packageData.selected) {\r\n                request.packages = []\r\n                angular.forEach(packageData.selected, function(servicePackage) {\r\n                    // userWalkup.applications.selected is an array of strings that looks like\r\n                    // ['<appId>,<packageId>,<appName>']\r\n                    request.packages.push({\r\n                        id: servicePackage.split(',')[1],\r\n                        type: 'servicePackage'\r\n                    })\r\n                })\r\n                request.packages=_.uniqBy(request.packages,'id')    \r\n            }\r\n\r\n            return request\r\n        }\r\n    }\r\n\r\n    /**\r\n     * this method makes sure to make the call but before it calls cui.initiateNonce\r\n     * @param method method name\r\n     * @param args method arguments\r\n     * @returns {*} promise\r\n     */\r\n    self.makeNonceCall = ( method, ...args )=>{\r\n        const deferred = $.Deferred()\r\n        const tag = \"registration/self/makeNonceCall\"\r\n\r\n        API.cui.initiateNonce()\r\n        .then(res=>{\r\n\r\n            API.cui[method].apply( API.cui, args )\r\n            .then(result=>{\r\n                deferred.resolve(result)\r\n            })\r\n            .fail((error)=>{\r\n                deferred.reject(error)\r\n            })\r\n\r\n        })\r\n        .fail((error)=>{\r\n            console.error( tag, error )\r\n            deferred.reject(error)\r\n        })\r\n\r\n        return deferred.promise()\r\n    }\r\n\r\n    /**\r\n     * TODO: once the promise gets an error message, we are going to resolve as false. This is temporary.\r\n     * Makes an api call to know if the registrating user's username or email address\r\n     * appear already been taken.\r\n     * @param stringParams a param array having either or both userName and emalAddress.\r\n     * @returns {{promise, valid: (function(*=)), catch: (function(*))}}\r\n     */\r\n    self.isUsernameOrEmailTaken = stringParams => {\r\n        const tag = \"registration/self/isUsernameOrEmailTaken\";\r\n\r\n        return {\r\n            promise:(() => {\r\n                const defered = $q.defer()\r\n\r\n                if( stringParams ){\r\n\r\n                    self.makeNonceCall( \"validateUsernameEmailNonce\", {qs:stringParams} ).then( res => {\r\n                        defered.resolve( true )\r\n                    }).fail( error => {\r\n                        defered.resolve( false )\r\n                        console.error( tag + \".error\", error )\r\n                    })\r\n                }else{\r\n                    defered.resolve( true )\r\n                }\r\n\r\n                return defered.promise\r\n            })(),\r\n            valid: res => {\r\n                return res\r\n            },\r\n            catch: error => {\r\n                // do something with the error here\r\n                console.error( tag + \".catch\", \"there is an error, :) \")\r\n            }\r\n        }\r\n    }\r\n\r\n    pub.getOrganizations=()=>{\r\n        return self.makeNonceCall( \"getOrganizationsNonce\" )\r\n    }\r\n\r\n    pub.getSecurityQuestions=()=>{\r\n        return self.makeNonceCall( \"getSecurityQuestionsNonce\" )\r\n    }\r\n\r\n    // Returns organizations and security questions for the realm.\r\n    // Both must resolve for the walkup registration to work.\r\n    pub.initWalkupRegistration = (pageSize) => {    \r\n        const defer = $q.defer()\r\n        const data = {}\r\n        \r\n        APIError.offFor('RegistrationFactory.initWalkup')\r\n\r\n        API.cui.initiateNonce()\r\n        .then(() => {\r\n            //  2-13-2017 filter resuts by status is not available for count now.\r\n            return API.cui.getOrganizationsCountNonce()\r\n        })\r\n        .then((res) => {\r\n            data.organizationCount=res\r\n            return API.cui.getOrganizationsNonce({qs:[['page',1],['pageSize',pageSize],['status','active']]})\r\n        })\r\n        .then(res => {\r\n            data.organizations = res\r\n            return API.cui.getSecurityQuestionsNonce()\r\n        })\r\n        .then(res => {\r\n            data.securityQuestions = res\r\n            defer.resolve(data)\r\n        })\r\n        .fail(error => {\r\n            APIError.onFor('RegistrationFactory.initWalkup')\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n    // validates invite and Returns Target organization\r\n    //Must resolve for the Invited registration to work.\r\n    pub.initInvitedRegistration= (encodedString) =>{\r\n        const defer = $q.defer()\r\n        const data = {}\r\n        \r\n        APIError.offFor('RegistrationFactory.initInvited')\r\n\r\n        API.cui.securedInitiate({invitationId:encodedString})\r\n        .then((res) => {\r\n            data.invitationData=res;\r\n            return API.cui.getOrganizationNonce({organizationId:res.targetOrganization.id})\r\n        })\r\n        .then(res => {\r\n            data.organization = res\r\n            return API.cui.getSecurityQuestionsNonce()\r\n        })\r\n        .then(res => {\r\n            data.securityQuestions = res\r\n            defer.resolve(data)\r\n        })\r\n        .fail(error => {\r\n            APIError.onFor('RegistrationFactory.initInvited')\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    pub.walkupSubmit = (registrationData) => {\r\n        const defer = $q.defer()\r\n        const submitData = build.walkupSubmit(registrationData)\r\n\r\n        API.cui.initiateNonce()\r\n        .then(() => {\r\n            return API.cui.postUserRegistrationNonce({data: submitData})\r\n        })\r\n        .then(res => {\r\n            const packageRequestData = build.servicePackageRequest(res.person.id, res.person.realm, registrationData.applications,registrationData.requestReason)\r\n            return API.cui.postPersonRequestNonce({data: packageRequestData})\r\n        })\r\n        .then(res => {\r\n            defer.resolve(res)\r\n        })\r\n        .fail(error => {\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    pub.invitedSubmit = (registrationData,encodedString,invitationId) => {\r\n        const defer = $q.defer()\r\n        const submitData = build.InvitedSubmit(registrationData,invitationId)\r\n\r\n        API.cui.securedInitiate({invitationId:encodedString})\r\n        .then(() => {\r\n            return API.cui.postUserRegistrationNonce({qs:[['inviteId',invitationId]],data: submitData})\r\n        })\r\n        .then(res => {\r\n            const packageRequestData = build.servicePackageRequest(res.person.id, res.person.realm, registrationData.applications,registrationData.requestReason)\r\n            return API.cui.postPersonRequestNonce({data: packageRequestData})\r\n        })\r\n        .then(res => {\r\n            defer.resolve(res)\r\n        })\r\n        .fail(error => {\r\n            defer.reject(error)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    pub.getOrgAppsByPage = (page, pageSize, organizationId) => {\r\n        return API.cui.getOrgAppsNonce({organizationId: organizationId, qs:[['page',page],['pageSize',pageSize]]})\r\n    }\r\n\r\n    pub.getOrgsByPageAndName = (page,pageSize,name) => {\r\n        if (name!==undefined) {\r\n            return self.makeNonceCall(\"getOrganizationsNonce\",{qs:[['page',page],['pageSize',pageSize],['status','active'],['name',name]]})\r\n        }\r\n        else{\r\n            return self.makeNonceCall(\"getOrganizationsNonce\",{qs:[['page',page],['pageSize',pageSize],['status','active']]})\r\n        }\r\n        \r\n    }\r\n\r\n    pub.selectOrganization = (organization,pageSize)=>{\r\n        const deferred = $.Deferred()\r\n        const results = {\r\n            grants: []\r\n        }\r\n\r\n        API.cui.initiateNonce()\r\n        .then(res => {\r\n            return API.cui.getOrgAppsCountNonce({organizationId: organization.id})\r\n        })\r\n        .then(res => {\r\n            results.appCount=res\r\n            return pub.getOrgAppsByPage(1,pageSize,organization.id)\r\n        })\r\n        .then(res => {\r\n            res.forEach(grant => {\r\n                if (grant.servicePackage.requestable) results.grants.push(grant)\r\n            })\r\n            return API.cui.getPasswordPoliciesNonce({policyId: organization.passwordPolicy.id})\r\n        })\r\n        .then(res => {\r\n            results.passwordRules = res.rules\r\n            deferred.resolve(results)\r\n        })\r\n        .fail( error=>{\r\n            deferred.reject(error)\r\n        })\r\n\r\n        return deferred.promise()\r\n    }\r\n\r\n    pub.getTac = (packageId) => {\r\n        const deferred = $q.defer()\r\n        self.makeNonceCall(\"getOrgTacOfPackage\",{packageId:packageId})\r\n        .then(res =>{\r\n            deferred.resolve(res);\r\n        })\r\n        .fail(err =>{\r\n            console.log(\"Error in fetching TaC for application \"+packageId)\r\n            console.log(err);\r\n            deferred.reject(err);\r\n        })\r\n        return deferred.promise;\r\n    }\r\n\r\n    pub.isUsernameTaken = name => {\r\n        return self.isUsernameOrEmailTaken( [['userName',name]] );\r\n    }\r\n\r\n    pub.isEmailTaken = email => {\r\n        return self.isUsernameOrEmailTaken( [['emailAddress',email]] );\r\n    }\r\n\r\n    return pub\r\n\r\n})\r\n\r\nangular.module('common')\r\n.service('SharedService', function () {\r\n    /*****\r\n        this service serves as an instantiable class\r\n        that can be extended to provide information throughout the app\r\n        using the base controller\r\n\r\n        How to use:\r\n        angular.module('myModule')\r\n        .factory/service/provider('MyProvider', function(SharedService){\r\n            const MyProvider = Object.create(SharedService)\r\n        })\r\n\r\n        MyProvider now has an object that serves as a data holder for switchable loaders, error messages etc.\r\n\r\n        methods\r\n        .onFor(property:String, <message>:String)\r\n            enables that property in the details object, setting the message associated with that property\r\n            if you use onFor for multiple properties without using \"offFor\" to disable them\r\n            there's a count that gets incremented, and that property will only be disabled once offFor\r\n            is called on that property n times, where n is the amount of times it was enabled\r\n\r\n        .offFor(property:String)\r\n\r\n        .toggleFor(property:String, <message>:String)\r\n\r\n        .for\r\n            this holds a reference to the storage object, so that you can associate it with your base ctrl\r\n    *****/\r\n\r\n    this.details = {}\r\n\r\n    this.onFor = function (property, message) {\r\n        if (this.details[property]) {\r\n            this.details[property].count\r\n                ? this.details[property].count += 1\r\n                : this.details[property].count = 2 // count is only defined if there's more than 1\r\n            if (message) {\r\n                this.details[property].message = message;\r\n            }\r\n        } else {\r\n            this.details[property] = {\r\n                status: true,\r\n                message\r\n            }\r\n        }\r\n    }\r\n\r\n    this.offFor = function (property) {\r\n        if (!this.details[property]) {\r\n            return;\r\n        } else if (!this.details[property].count || this.details[property].count===1) {\r\n            delete this.details[property];\r\n        } else {\r\n            this.details[property].count -= 1;\r\n        }\r\n    }\r\n\r\n    this.toggleFor = function (property,message) {\r\n        if (this.details[property]) {\r\n            delete this.details[property];\r\n        } else {\r\n            this.details[property] = {\r\n                status:true,\r\n                message\r\n            }\r\n        }\r\n    }\r\n\r\n    this.clearAll = function() {\r\n        for (const key in this.details) delete this.details[key]\r\n    }\r\n\r\n    this.for = this.details\r\n\r\n    return this\r\n})\r\nangular.module('common')\r\n.factory('Sort',['$filter',function($filter) {\r\n    return {\r\n        listSort: function(listToSort, sortType, order) {\r\n            listToSort.sort(function(a, b) {\r\n                if (sortType === 'alphabetically') { \r\n                    if (a.name[0]) {\r\n                        a = $filter('cuiI18n')(a.name).toUpperCase(),\r\n                        b = $filter('cuiI18n')(b.name).toUpperCase();    \r\n                    }\r\n                    else {\r\n                        a = a.name.given.toUpperCase(),\r\n                        b = b.name.given.toUpperCase();\r\n                    }\r\n                }\r\n                else if (sortType=== 'date') { \r\n                    if (a.dateCreated) {\r\n                        a = a.dateCreated, b = b.dateCreated;\r\n                    }\r\n                    else {\r\n                        a = a.creation, b = b.creation;\r\n                    }\r\n                }\r\n                else { \r\n                    a = a.status, b = b.status; \r\n                }\r\n\r\n                if ( a < b ) {\r\n                    if (order) {\r\n                        return 1;\r\n                    } else {\r\n                        return -1;\r\n                    }\r\n                }\r\n                else if (a > b) {\r\n                    if (order) {\r\n                        return -1;\r\n                    } else {\r\n                        return 1;\r\n                    }\r\n                } else {\r\n                    return 0;\r\n                }\r\n            });\r\n        }\r\n    };\r\n}]);\r\n\r\nangular.module('common')\r\n.factory('Theme', () => {\r\n\r\n\t/*\r\n\t*\tUtilize this factory when you need to set styles on the top-level element based on the current router state.\r\n\t*\t\r\n\t*\tFull documentation on how to utilize and or customize the application with this factory can be found in:\r\n\t*\t`./docs/features/factories/Theme.md`\r\n\t*/\r\n\r\n\tlet activeTheme\r\n\tlet defaultTheme\r\n\r\n\tconst getTheme = () => {\r\n\t\treturn activeTheme\r\n\t}\r\n\r\n\tconst setTheme = (cssClass) => {\r\n\t\tactiveTheme = cssClass\r\n\t}\r\n\r\n\tconst getDefaultTheme = () => {\r\n\t\treturn defaultTheme\r\n\t}\r\n\r\n\tconst setDefaultTheme = (cssClass) => {\r\n\t\tdefaultTheme = cssClass\r\n\t}\r\n\r\n\tconst clearActiveTheme = () => {\r\n\t\tactiveTheme = ''\r\n\t}\r\n\r\n\tconst useDefaultTheme = () => {\r\n\t\tactiveTheme = defaultTheme\r\n\t}\r\n\r\n\tconst setActiveDefaultTheme = (cssClass) => {\r\n\t\tdefaultTheme = cssClass\r\n\t\tactiveTheme = cssClass\r\n\t}\r\n\r\n    return {\r\n    \tget: getTheme,\r\n    \tset: setTheme,\r\n    \tgetDefault: getDefaultTheme,\r\n    \tsetDefault: setDefaultTheme,\r\n    \tuseDefault: useDefaultTheme,\r\n    \tsetActiveDefault: setActiveDefaultTheme,\r\n    \tclear: clearActiveTheme\r\n    }\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('Timezones', function($http, $rootScope, $translate) {\r\n\r\n    let timezones = []\r\n\r\n    const GetTimezones = (locale) => {\r\n        return $http.get(appConfig.languageResources.url + 'timezones/' + locale + '.json')\r\n    }\r\n\r\n    const setTimezones = (language) => {\r\n        language = language || 'en'\r\n\r\n        if (language.indexOf('_') > -1) {\r\n            language = language.split('_')[0]\r\n        }\r\n\r\n        GetTimezones(language)\r\n        .then(res => {\r\n            timezones.length = 0\r\n\r\n            res.data.forEach(timezone => {\r\n                timezones.push(timezone)\r\n            })\r\n        })\r\n        .catch(function(err) {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const getTimezoneById = (id) => {\r\n        if (!id) {\r\n            return ''\r\n        }\r\n\r\n        return _.find(timezones, function(timezone) {\r\n            return timezone.id === id\r\n        }).name\r\n    }\r\n\r\n    $rootScope.$on('languageChange', function(e, args) {\r\n        setTimezones(args)\r\n    })\r\n\r\n    setTimezones($translate.proposedLanguage())\r\n\r\n    return {\r\n        all: timezones,\r\n        timezoneById: getTimezoneById\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('User', ($rootScope) => {\r\n\r\n    /*\r\n        This factory is intended to store data/logic pertaining to the logged in user only.\r\n        This data is populated right after logon (this can be found in the API.factory.js \r\n        inside the populateUserInfo method). The application will not run if those endpoints\r\n        fail.\r\n    */\r\n\r\n    let user = {\r\n        entitlements: undefined,\r\n        roles: undefined\r\n    }\r\n\r\n    return {\r\n        set : (newUser) => {\r\n            angular.merge(user, newUser);\r\n        },\r\n\r\n        get : () => user.cuid || '[cuid]',\r\n\r\n        setEntitlements : (newEntitlements) => {\r\n            user.entitlements ? user.entitlements = user.entitlements.concat(newEntitlements) : user.entitlements = newEntitlements\r\n        },\r\n\r\n        getEntitlements : () => user.entitlements,\r\n\r\n        setRoles : (newRoles) => {\r\n            user.roles ? user.roles = user.roles.concat(newRoles) : user.roles = newRoles\r\n        },\r\n\r\n        getRoles : () => user.roles,\r\n\r\n        user\r\n    }\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('UserHistory', function(API, APIError, LocaleService, $q, $timeout) {\r\n\r\n    const errorName = 'userHistoryFactory.'\r\n\r\n    const UserHistory = {\r\n        getTodaysDate:function(){\r\n            let today=new Date()\r\n            let dd=today.getDate()\r\n            let yyyy=today.getFullYear()\r\n            let mmm=today.toString().substring(4,7);\r\n            return dd+'-'+mmm+'-'+yyyy\r\n        },\r\n\r\n        initStatusHistory: function(userId) {\r\n            let defer = $q.defer()\r\n\r\n            API.cui.getPersonDetailedStatusHistory({qs : [\r\n                ['userId', userId], \r\n                ['startDate','01-Jan-2016'],\r\n                ['lastDate',UserHistory.getTodaysDate()]\r\n            ]})\r\n            .done(res => {               \r\n                defer.resolve(res)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting user status information', err)\r\n                APIError.onFor(errorName + 'initStatusHistory')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initStatusHistory')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initPasswordChangeHistory: function(userId) {\r\n            let defer = $q.defer()\r\n            API.cui.getPasswordCangeHistory({personId:userId})\r\n            .then(res => {                \r\n                defer.resolve(res)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting Password change history', err)\r\n                APIError.onFor(errorName + 'initPasswordChangeHistory')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initPasswordChangeHistory')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initUserHistory: function(userId, organizationId) {\r\n            let defer = $q.defer()\r\n            let history = {}\r\n            let callsCompleted = 0\r\n            const callsToComplete = 2\r\n\r\n            UserHistory.initStatusHistory(userId)\r\n            .then(res => {\r\n                history.statusHistory=res;\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(history)\r\n            })\r\n\r\n            UserHistory.initPasswordChangeHistory(userId)\r\n            .then(res => {\r\n                history.passwordChangeHistory=res;\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(history)\r\n            })\r\n\r\n            return defer.promise\r\n        },\r\n\r\n        injectUI: function(history, $scope, personId) {\r\n            history.fail = false\r\n            history.success = false\r\n        }\r\n    }\r\n\r\n    return UserHistory\r\n})\r\n\r\nangular.module('common')\r\n.factory('UserList', (API, APIError, APIHelpers, $q) => {\r\n\r\n\tconst errorName = 'UserListFactory.'\r\n\r\n\tconst getUsers = (opts) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getUsers')\r\n\r\n\t\tAPI.cui.getPersons(opts)\r\n\t\t.done(personResponse => {\r\n\t\t\tdefer.resolve(personResponse)\r\n\t\t})\r\n\t\t.fail(error => {\r\n\t\t\tconsole.error('Failed getting user list')\r\n\t\t\tAPIError.onFor(errorName + 'getUsers')\r\n\t\t\tdefer.reject(error)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\tconst getUserCount = (opts) => {\r\n\t\tconst defer = $q.defer()\r\n\r\n\t\tAPIError.offFor(errorName + 'getUserCount')\r\n\r\n\t\tAPI.cui.countPersons(opts)\r\n\t\t.done(countResponse => {\r\n\t\t\tdefer.resolve(countResponse)\r\n\t\t})\r\n\t\t.fail(error => {\r\n\t\t\tconsole.error('Failed getting user count')\r\n\t\t\tAPIError.onFor(errorName + 'getUserCount')\r\n\t\t\tdefer.reject(error)\r\n\t\t})\r\n\r\n\t\treturn defer.promise\r\n\t}\r\n\r\n\treturn {\r\n\t\tgetUsers: getUsers,\r\n\t\tgetUserCount: getUserCount\r\n\t}\r\n\r\n})\r\n\r\nangular.module('common')\r\n.factory('UserProfile', function(API, APIError, LocaleService, Timezones, $filter, $q, $timeout) {\r\n\r\n    const errorName = 'userProfileFactory.'\r\n\r\n    const UserProfile = {\r\n\r\n        setPhone:function(type,index){\r\n            var phone={};\r\n            phone.type=type;\r\n            phone.number=\"\";\r\n            return phone;\r\n        },\r\n\r\n        getTodaysDate:function(){\r\n            let today=new Date()\r\n            let dd=today.getDate()\r\n            let yyyy=today.getFullYear()\r\n            let mmm=today.toString().substring(4,7);\r\n            return dd+'-'+mmm+'-'+yyyy\r\n        },\r\n\r\n        initUser: function(userId) {\r\n            let defer = $q.defer()\r\n            let user = {}\r\n\r\n            API.cui.getPerson({ personId: userId })\r\n            .done(res => {\r\n                // If the person object has no addresses we need to initialize it\r\n                if (!res.addresses) {\r\n                    res.addresses = [{streets: []}];\r\n                }\r\n                //If there is no streets in address we need to initialie it\r\n                else if (!res.addresses[0].streets) {\r\n                    res.addresses[0].streets=[];\r\n                };\r\n                user.user = Object.assign({}, res)\r\n                user.tempUser = Object.assign({}, res)\r\n                //When user doesnot have any phones(data issue)\r\n                    if (!user.tempUser.phones) {\r\n                        user.tempUser.phones=[];\r\n                        user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                        user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                        user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                    }else{\r\n                        //When user have fax/mobile but not mobile\r\n                        if (user.tempUser.phones[0] && user.tempUser.phones[0].type!==\"main\") {\r\n                            if (user.tempUser.phones[0].type===\"fax\") {\r\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[0]);\r\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                                user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                            }else if (user.tempUser.phones[0].type===\"mobile\" && user.tempUser.phones[1]) {\r\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[1]);\r\n                                user.tempUser.phones[1]=angular.copy(user.tempUser.phones[0]);\r\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                            }else\r\n                            {\r\n                                user.tempUser.phones[1]=angular.copy(user.tempUser.phones[0]);\r\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\r\n                                user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                            }\r\n                        }\r\n                        else if (user.tempUser.phones[1]) {\r\n                            if (user.tempUser.phones[1].type===\"fax\") {\r\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[1]);\r\n                                user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                            }else{\r\n                                if (!user.tempUser.phones[2]) {\r\n                                    user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                                };\r\n                            }\r\n                        }else{\r\n                            user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\r\n                            user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\r\n                        }\r\n                    }\r\n                    angular.copy(user.tempUser, user.user);\r\n                defer.resolve(user)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting user information', err)\r\n                APIError.onFor(errorName + 'initUser')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initUser')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initSecurityQuestions: function(userId) {\r\n            let defer = $q.defer()\r\n            let securityQuestions = {\r\n                userSecurityQuestions: {},\r\n                tempUserSecurityQuestions: {},\r\n                allSecurityQuestions: [],\r\n                allSecurityQuestionsDup: []\r\n            }\r\n\r\n            $q.all([\r\n                API.cui.getSecurityQuestionAccount({ personId: userId }), \r\n                API.cui.getSecurityQuestions()\r\n            ])\r\n            .then(res => {\r\n                angular.copy(res[0], securityQuestions.userSecurityQuestions)\r\n                angular.copy(res[0], securityQuestions.tempUserSecurityQuestions)\r\n                angular.copy(res[1], securityQuestions.allSecurityQuestions) \r\n                angular.copy(res[1], securityQuestions.allSecurityQuestionsDup)\r\n\r\n                securityQuestions.allSecurityQuestions.splice(0, 1)\r\n\r\n                let numberOfQuestions = securityQuestions.allSecurityQuestions.length\r\n                let numberOfQuestionsFloor = Math.floor(numberOfQuestions/2)\r\n\r\n                securityQuestions.allChallengeQuestions0 = securityQuestions.allSecurityQuestions.slice(0, numberOfQuestionsFloor)\r\n                securityQuestions.allChallengeQuestions1 = securityQuestions.allSecurityQuestions.slice(numberOfQuestionsFloor)\r\n\r\n                securityQuestions.challengeQuestionsTexts = UserProfile.selectTextsForQuestions(securityQuestions)\r\n\r\n                defer.resolve(securityQuestions)\r\n            })\r\n            .catch(err => {\r\n                console.error('Failed getting security question data', err)\r\n                APIError.onFor(errorName + 'initSecurityQuestions')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initSecurityQuestions')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        selectTextsForQuestions: function(securityQuestions) {\r\n            let challengeQuestionsTexts = []\r\n\r\n            angular.forEach(securityQuestions.userSecurityQuestions.questions, (userQuestion) => {\r\n                let question = _.find(securityQuestions.allSecurityQuestionsDup, (question) => {\r\n                    return question.id === userQuestion.question.id\r\n                })\r\n                challengeQuestionsTexts.push($filter('cuiI18n')(question.question))\r\n            })\r\n            return challengeQuestionsTexts\r\n        },\r\n\r\n        initPasswordPolicy: function(organizationId) {\r\n            let defer = $q.defer()\r\n            let passwordPolicy = {}\r\n\r\n            API.cui.getOrganization({ organizationId: organizationId })\r\n            .then(res => {\r\n                passwordPolicy.organization = res\r\n                return API.cui.getPasswordPolicy({policyId: res.passwordPolicy.id})\r\n            })\r\n            .then(res => {\r\n                passwordPolicy.passwordRules = res.rules\r\n                res.rules.forEach(rule => {\r\n                    if (rule.type === 'history') {\r\n                        passwordPolicy.numberOfPasswords = rule.numberOfPasswords\r\n                    }\r\n                })\r\n                defer.resolve(passwordPolicy)\r\n            })\r\n            .fail(err => {\r\n                console.error('Failed getting password policy data', err)\r\n                APIError.onFor(errorName + 'initPasswordPolicy')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initPasswordPolicy')\r\n                }, 5000)\r\n                defer.reject(err)\r\n            })\r\n            return defer.promise\r\n        },\r\n\r\n        initRegisteredDate: function(userId) {\r\n            const defer = $q.defer()\r\n            let lastDate=UserProfile.getTodaysDate();\r\n\r\n            API.cui.getPersonDetailedStatusHistory({qs : [\r\n                ['userId', userId], \r\n                ['startDate','01-Jan-2016'],\r\n                ['lastDate',lastDate]\r\n            ]})\r\n            .then(res => {\r\n                let activeStatusList=[];\r\n                res.forEach((status, index) => {\r\n                    if (status.status === 'ACTIVE') {\r\n                        activeStatusList.push(status)\r\n                    }\r\n                    if (res.length-1===index) {\r\n                        _.orderBy(activeStatusList, ['creation'], ['asc'])\r\n                        defer.resolve(activeStatusList[0].creation) \r\n                    }          \r\n                    \r\n                })\r\n            })\r\n            .fail(error => {\r\n                console.error('initRegisteredDate: There was an issue retrieving the registered date.')\r\n                APIError.onFor(errorName + 'initRegisteredDate')\r\n                $timeout(() => {\r\n                    APIError.offFor(errorName + 'initRegisteredDate')\r\n                }, 5000)\r\n                defer.reject(error)\r\n            })\r\n\r\n            return defer.promise\r\n        },\r\n\r\n        initUserProfile: function(userId, organizationId) {\r\n            let defer = $q.defer()\r\n            let profile = {}\r\n            let callsCompleted = 0\r\n            const callsToComplete = 4\r\n\r\n            UserProfile.initUser(userId)\r\n            .then(res => {\r\n                angular.merge(profile, res)\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            UserProfile.initSecurityQuestions(userId)\r\n            .then(res => {\r\n                angular.merge(profile, res)\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            UserProfile.initPasswordPolicy(organizationId)\r\n            .then(res => {\r\n                angular.merge(profile, res)\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            UserProfile.initRegisteredDate(userId)\r\n            .then(res => {\r\n                profile['registeredDate'] = res\r\n            })\r\n            .finally(() => {\r\n                callsCompleted += 1\r\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\r\n            })\r\n\r\n            return defer.promise\r\n        },\r\n\r\n        buildPersonPasswordAccount: function(user, passwordAccount, organization) {\r\n            return {\r\n                version: '1',\r\n                username: user.username,\r\n                currentPassword: passwordAccount.currentPassword,\r\n                password: passwordAccount.password,\r\n                passwordPolicy: organization.passwordPolicy,\r\n                authenticationPolicy: organization.authenticationPolicy\r\n            }\r\n        },\r\n\r\n        injectUI: function(profile, $scope, personId) {\r\n            let userId\r\n\r\n            personId\r\n                ? userId = personId\r\n                : userId = API.getUser()\r\n\r\n            profile.saving = false\r\n            profile.fail = false\r\n            profile.success = false\r\n            profile.timezoneById = Timezones.timezoneById\r\n            profile.toggleOffFunctions = {}\r\n\r\n            profile.resetAllData = () => {\r\n                angular.copy(profile.userSecurityQuestions, profile.tempUserSecurityQuestions)\r\n                angular.copy(profile.user, profile.tempUser)\r\n            }\r\n\r\n            profile.toggleAllOff = () => {\r\n                angular.forEach(profile.toggleOffFunctions, function(toggleOff) {\r\n                    toggleOff()\r\n                })\r\n                profile.resetAllData()\r\n            }\r\n\r\n            profile.pushToggleOff = (toggleOffObject) => {\r\n                if (!profile.toggleOffFunctions) {\r\n                    profile.toggleOffFunctions = {}\r\n                }\r\n                profile.toggleOffFunctions[toggleOffObject.name] = toggleOffObject.function\r\n            }\r\n\r\n            profile.resetPasswordFields = () => {\r\n                profile.userPasswordAccount = {\r\n                    currentPassword: '',\r\n                    password: ''\r\n                }\r\n                profile.passwordRe = ''\r\n            }\r\n\r\n            profile.checkIfRepeatedSecurityAnswer = (securityQuestions, formObject) => {\r\n                securityQuestions.forEach((secQuestion, i) => {\r\n                    let securityAnswerRepeatedIndex = _.findIndex(securityQuestions, (secQuestionToCompareTo, z) => {\r\n                        return z !== i && secQuestion.answer && secQuestionToCompareTo.answer && secQuestion.answer.toUpperCase() === secQuestionToCompareTo.answer.toUpperCase()\r\n                    })\r\n                    if (securityAnswerRepeatedIndex > -1) {\r\n                        if (formObject['answer' + securityAnswerRepeatedIndex]) {\r\n                            formObject['answer' + securityAnswerRepeatedIndex].$setValidity('securityAnswerRepeated', false)\r\n                        }\r\n                        if (formObject['answer' + i]) {\r\n                            formObject['answer' + i].$setValidity('securityAnswerRepeated', false)\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (formObject['answer' + i]) {\r\n                            formObject['answer' + i].$setValidity('securityAnswerRepeated', true)\r\n                        }\r\n                    }\r\n                })\r\n            }\r\n\r\n            profile.updatePerson = (section, toggleOff) => {\r\n                let tempUserWithoutLastLogin;\r\n                if (section) {\r\n                    profile[section] = { submitting: true }\r\n                }\r\n\r\n                if (!profile.userCountry) {\r\n                    profile.tempUser.addresses[0].country = profile.user.addresses[0].country;\r\n                } else {\r\n                    profile.tempUser.addresses[0].country = profile.userCountry.originalObject.code;\r\n                }\r\n\r\n                // [7/20/2016] Note: Can't pass in 'activatedDate' anymore when updating a person\r\n                delete profile.tempUser.activatedDate\r\n                // Can't pass lastLoginDate\r\n                tempUserWithoutLastLogin= Object.assign({}, profile.tempUser)\r\n                if (tempUserWithoutLastLogin.lastLoginDate) {\r\n                    delete tempUserWithoutLastLogin.lastLoginDate\r\n                };\r\n\r\n                API.cui.updatePerson({personId: userId, data:tempUserWithoutLastLogin})\r\n                .always(() => {\r\n                    if (section) {\r\n                        profile[section].submitting = false;\r\n                    }\r\n                    $scope.$digest()\r\n                })\r\n                .done(() => {\r\n                    angular.copy(profile.tempUser, profile.user)\r\n                    LocaleService.setLocaleByDisplayName(appConfig.languages[profile.user.language])\r\n                    if (toggleOff) {\r\n                        toggleOff();\r\n                    }\r\n                })\r\n                .fail((err) => {\r\n                    console.error('Failed to update user profile:', err)\r\n                    if (section) {\r\n                        profile[section].error = true;\r\n                    }\r\n                })\r\n            }\r\n\r\n            profile.updatePassword = function(section, toggleOff) {\r\n                if (section) profile[section] = { submitting: true }\r\n                profile.lifetimeError=false\r\n\r\n                API.cui.updatePersonPassword({ \r\n                    personId: userId, \r\n                    data: UserProfile.buildPersonPasswordAccount(profile.user, profile.userPasswordAccount, profile.organization) \r\n                })\r\n                .always(() => {\r\n                    if (section) profile[section].submitting = false\r\n                })\r\n                .done(() => {\r\n                    if (toggleOff) toggleOff()\r\n                    profile.passwordUpdateSuccess = true\r\n                    $timeout(() => profile.passwordUpdateSuccess = false, 5000)\r\n                    profile.resetPasswordFields()\r\n                    $scope.$digest()\r\n                })\r\n                .fail(err => {\r\n                    console.error('Error updating password', err)\r\n                    if (err.responseJSON.apiMessage.indexOf('does not conform to policy')>1) {\r\n                        profile.lifetimeError=true\r\n                    }\r\n                    if (section) profile[section].error = true\r\n                    $scope.$digest()\r\n                })\r\n            }\r\n\r\n            profile.saveChallengeQuestions = (section, toggleOff) => {\r\n                if (section) {\r\n                    profile[section] = { submitting: true }\r\n                }\r\n                profile.userSecurityQuestions = angular.copy(profile.tempUserSecurityQuestions)\r\n\r\n                API.cui.updateSecurityQuestionAccount({\r\n                    personId: userId,\r\n                    data: {\r\n                        version: '1',\r\n                        id: userId,\r\n                        questions: profile.userSecurityQuestions.questions\r\n                    }\r\n                })\r\n                .always(() => {\r\n                    if (section) {\r\n                        profile[section].submitting = false;\r\n                    }\r\n                })\r\n                .done(() => {\r\n                    if (toggleOff) {\r\n                        toggleOff();\r\n                    }\r\n                    profile.challengeQuestionsTexts = UserProfile.selectTextsForQuestions(profile)\r\n                    $scope.$digest()\r\n                })\r\n                .fail(err => {\r\n                    console.error('Error updating security questions', err)\r\n                    if (section) {\r\n                        profile[section].error = true;\r\n                    }\r\n                    $scope.$digest()\r\n                })\r\n            }\r\n\r\n            profile.validatePassword = (password, formObject, input) => {\r\n\r\n                const validSwitch = (input, isValidBoolean, type) => {\r\n                    switch (input) {\r\n                        case 'newPassword':\r\n                            if (type==='history') \r\n                                profile.validNewPasswordHistory = isValidBoolean\r\n                            else\r\n                                profile.validNewPasswordDisallowed = isValidBoolean\r\n                        case 'newPasswordRe':\r\n                            if (type==='history') \r\n                                profile.validNewPasswordReHistory = isValidBoolean\r\n                            else\r\n                                profile.validNewPasswordReDisallowed = isValidBoolean\r\n                    }\r\n                }\r\n\r\n                const validateData = {\r\n                    userId: userId,\r\n                    organizationId: profile.user.organization.id,\r\n                    password: password,\r\n                    operations: ['PASSWORD_SPECIFY']\r\n                }\r\n\r\n                API.cui.validatePassword({data: validateData})\r\n                .then(res => {\r\n                    let validPasswordHistory = false\r\n                    let validateDisallowed =false\r\n                    // Sometimes disallowed words will not come in response, In that case need to set form object to true\r\n                    let disallowedFlag=false\r\n                    res.forEach(rule => {\r\n                        if (rule.type === 'HISTORY' && rule.isPassed) {\r\n                            validPasswordHistory = true\r\n                        }\r\n                        if (rule.type === 'DISALLOWED_WORDS'){\r\n                            disallowedFlag =true\r\n                            if(rule.isPassed) {\r\n                                validateDisallowed = true\r\n                            }\r\n                        }\r\n                    })\r\n                    //History Validation\r\n                    if (validPasswordHistory) {\r\n                        validSwitch(input, true, 'history')\r\n                    }\r\n                    else {\r\n                        validSwitch(input, false, 'history')\r\n                    }\r\n                    //Disallowed words Validation\r\n                    if (disallowedFlag===false||validateDisallowed===true) {\r\n                        validSwitch(input, true, 'disallowed')                        \r\n                    }\r\n                    else {\r\n                        validSwitch(input, false, 'disallowed')                        \r\n                    }\r\n                    if (validPasswordHistory &&(disallowedFlag===false||validateDisallowed===true)) {\r\n                        formObject[input].$setValidity(input, true)\r\n                        $scope.$digest()\r\n                    }\r\n                    else{\r\n                        formObject[input].$setValidity(input, false)\r\n                        $scope.$digest()\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return UserProfile\r\n})\r\n\r\nangular.module('common')\r\n.factory('BuildPackageRequests', (API) => {\r\n\r\n    /*\r\n        Helper factory for creating and sending service package requests.\r\n\r\n        Usage: BuildPackageRequests(requestorId, requestorType, arrayOfServices)\r\n        Return: Array of API service package request promises\r\n        \r\n        Notes:\r\n            - RequestorType: Whether the requestor is a person or organization (expects 'person' or 'organization')\r\n            - The reason for the request should be under service._reason\r\n            - If no reason is provided and the service package requires a reason, returns undefined and attach\r\n              an _error property (app._error = true) for that service.\r\n            - This factory is not pure (alters the provided array of services)\r\n    */\r\n\r\n    return (requestorId, requestorType, arrayOfApps) => {\r\n        const numberOfApps = arrayOfApps.length\r\n\r\n        if (!_.isArray(arrayOfApps) || numberOfApps === 0) {\r\n            throw new Error ('The argument passed to BuildPackageRequests should be an array of 1 or more services.')\r\n            return undefined\r\n        }\r\n\r\n        let error = false\r\n\r\n        for (let i = 0; i < numberOfApps; i += 1) {\r\n            if (arrayOfApps[i].servicePackage.requestReasonRequired && !arrayOfApps[i]._reason) {\r\n                arrayOfApps[i]._error = true\r\n                if (!error) {\r\n                    error = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (error) {\r\n            return undefined;\r\n        }\r\n\r\n        let packagesBeingRequested = []\r\n        let packageRequests = []\r\n\r\n        for (let i = 0; i < numberOfApps; i += 1) {\r\n            if (packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id) >= 0) {\r\n                // If the service package is already being requested, append service to the request reason\r\n                // If the request doesn't have a reason here, then it is not required for this service package\r\n                if (arrayOfApps[i]._reason) {\r\n                    packageRequests[packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id)].reason +=\r\n                        ('\\n' + $filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(arrayOfApps[i].name) + ': ' + arrayOfApps[i].name._reason)\r\n                }\r\n            }\r\n            else {\r\n                // Cache id's in seperate array to check for existing package requests without having to search through the array of requests.\r\n                packagesBeingRequested.push(arrayOfApps[i].servicePackage.id)\r\n                packageRequests.push({\r\n                    requestor: {\r\n                        id: requestorId,\r\n                        type: requestorType\r\n                    },\r\n                    servicePackage: {\r\n                        id: arrayOfApps[i].servicePackage.id,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    reason: arrayOfApps[i]._reason || ''\r\n                })\r\n            }\r\n        }\r\n        \r\n        return packageRequests.map(data => API.cui.createPackageRequest({ data }))\r\n\r\n    }\r\n})\r\n\r\nangular.module('common')\r\n.factory('AppRequests',['$filter',($filter) => {\r\n    var appRequestsObject={},\r\n        appRequests={};\r\n\r\n    appRequests.set=(newAppRequestsObject) => {\r\n        appRequestsObject=newAppRequestsObject;\r\n    };\r\n\r\n    appRequests.get=() => {\r\n        return appRequestsObject;\r\n    };\r\n\r\n    appRequests.clear= () => {\r\n        appRequestsObject = {};\r\n    };\r\n\r\n    appRequests.buildReason=(app,reason) => {\r\n        let tempApp={};\r\n        angular.copy(app,tempApp);\r\n        tempApp.reason=$filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(tempApp.name) + ': ' + reason;\r\n        return tempApp;\r\n    };\r\n\r\n\r\n    appRequests.getPackageRequests=(userId,arrayOfAppsBeingRequested) => {\r\n        let arrayOfPackagesBeingRequested=[],\r\n            arrayOfPackageRequests=[];\r\n        arrayOfAppsBeingRequested.forEach((app,i) => {\r\n            if(arrayOfPackagesBeingRequested.indexOf(app.servicePackage.id)>-1){ // if we've parsed an app that belongs to the same pacakge\r\n                if(app.servicePackage.reasonRequired){\r\n                    arrayOfPackageRequests.some((packageRequest,i) => {\r\n                        return arrayOfPackageRequests[i].servicePackage.id === app.servicePackage.id? (arrayOfPackageRequests[i].reason=arrayOfPackageRequests[i].reason + ('\\n\\n' + app.reason),true) : false; // if we already build a package request for this pacakge then append the reason of why we need this other app\r\n                    });\r\n                }\r\n                // if the reason isn't required then we don't need to do anything, we're already requesting this package\r\n            }\r\n            else {\r\n                arrayOfPackageRequests[i]={\r\n                    'requestor':{\r\n                        id:userId,\r\n                        type:'person'\r\n                    },\r\n                    servicePackage:{\r\n                        id:app.servicePackage.id,\r\n                        type: 'servicePackage'\r\n                    },\r\n                    reason: app.servicePackage.reasonRequired ? app.reason : undefined\r\n                };\r\n                arrayOfPackagesBeingRequested[i] = app.servicePackage.id; // save the pacakge id that we're requesting in a throwaway array, so it's easier to check if we're\r\n                                                                // already requesting this package\r\n            }\r\n        });\r\n        return arrayOfPackageRequests;\r\n    };\r\n\r\n    return appRequests;\r\n}]);\r\nangular.module('common')\r\n.factory('ServicePackage', (API, APIError, $q) => {\r\n    'use strict'\r\n\r\n    /*\r\n        This factory was originally used as a type of data storage for storing service package data. The use of this factory\r\n        for storing data is now deprecated in favor of an actual data storage solution in our \"DataStorage\" factory. \r\n        The data storage features of this factory will be removed in a future version.\r\n\r\n        The focus of this factory will transition to dealing with any other logic associated with service packages.\r\n    */\r\n\r\n    const servicePackage = {}\r\n    const errorName = 'ServicePackageFactory.'\r\n    let servicePackageStorage = {}\r\n\r\n    /****************************************\r\n                Helper Functions\r\n    ****************************************/\r\n\r\n    // Returns services that are associated with a package id\r\n    const getPackageServices = (packageId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPackageServices({packageId: packageId})\r\n        .done(packageServices => {\r\n            defer.resolve(packageServices)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package services')\r\n            APIError.onFor(errorName + 'getPackageServices')\r\n            defer.reject(err)\r\n        })\r\n        return defer.promise\r\n    }\r\n\r\n    // Returns claims that are associated with a package id\r\n    const getPackageClaims = (packageId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPackageClaims({qs: [['packageId', packageId]]})\r\n        .done(packageClaims => {\r\n            defer.resolve(packageClaims)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package claims')\r\n            APIError.onFor(errorName + 'getPackageClaims')\r\n            defer.reject(err)\r\n        })\r\n        return defer.promise\r\n    }\r\n\r\n    // Returns all data for a specified package id\r\n    const getPackageDetails = (packageId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPackage({packageId: packageId})\r\n        .done(packageData => {\r\n            defer.resolve(packageData)\r\n        })\r\n        .fail(err => {\r\n            console.error('Failed getting package details')\r\n            APIError.onFor(errorName + 'getPackageDetails')\r\n            defer.reject(err)\r\n        })\r\n        return defer.promise\r\n    }\r\n\r\n    /****************************************\r\n                Service Functions\r\n    ****************************************/\r\n\r\n    // Deprecated\r\n    servicePackage.set = (userId, newServicePackageArray) => {\r\n        servicePackageStorage.userId = newServicePackageArray\r\n    }\r\n\r\n    // Deprecated\r\n    servicePackage.get = (userId) => {\r\n        return servicePackageStorage.userId\r\n    }\r\n\r\n    // Deprecated\r\n    servicePackage.clear = () => {\r\n        servicePackageStorage = {}\r\n    }\r\n\r\n    // Deprecated\r\n    servicePackage.checkStorage = (userId) => {\r\n        if (servicePackageStorage.userId) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // This call wraps the getPackageServices(), getPackageClaims(), and getPackageDetails() calls\r\n    // Returns all relevant data associated with the provided packageId including its services, claims, and details\r\n    servicePackage.getPackageDetails = (packageId) => {\r\n        const defer = $q.defer()\r\n        let packageDetails = {}\r\n        let callsCompleted = 0\r\n\r\n        getPackageDetails(packageId)\r\n        .then(packageData => {\r\n            packageDetails.details = packageData\r\n        })\r\n        .finally(() => {\r\n            callsCompleted += 1\r\n            if (callsCompleted === 3) {\r\n                defer.resolve(packageDetails);\r\n            }\r\n        })\r\n\r\n        getPackageServices(packageId)\r\n        .then(packageServices => {\r\n            packageDetails.services = packageServices\r\n        })\r\n        .finally(() => {\r\n            callsCompleted += 1\r\n            if (callsCompleted === 3) {\r\n                defer.resolve(packageDetails);\r\n            }\r\n        })\r\n\r\n        getPackageClaims(packageId)\r\n        .then(packageClaims => {\r\n            packageDetails.claims = packageClaims\r\n        })\r\n        .finally(() => {\r\n            callsCompleted += 1\r\n            if (callsCompleted === 3) {\r\n                defer.resolve(packageDetails);\r\n            }  \r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    // Returns all packages for the specified userId with a pending status\r\n    servicePackage.getPersonPendingPackages = (userId) => {\r\n        const defer = $q.defer()\r\n\r\n        API.cui.getPersonPendingServicePackages({qs: [\r\n            ['requestor.id', userId],\r\n            ['requestor.type', 'person']\r\n        ]})\r\n        .done(servicePackages => {\r\n            defer.resolve(servicePackages)\r\n        })\r\n        .fail(err => {\r\n            console.error('There was an error retrieving pending service packages')\r\n            APIError.onFor(errorName + 'getPendingPackages')\r\n            defer.reject(err)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    // This call wraps the service.getPersonPendingServicesPackages() and service.getPackageDetails() calls\r\n    // Returns all relevant data for a user's pending packages\r\n    servicePackage.getAllUserPendingPackageData = (userId) => {\r\n        const defer = $q.defer()\r\n        let pendingPackageData = []\r\n\r\n        servicePackage.getPersonPendingPackages(userId)\r\n        .then(pendingPackages => {\r\n            let packageDetailCalls = []\r\n\r\n            pendingPackages.forEach(pendingPackage => {\r\n                packageDetailCalls.push(\r\n                    servicePackage.getPackageDetails(pendingPackage.servicePackage.id)\r\n                    .then(packageDetails => {\r\n                        angular.merge(pendingPackage, packageDetails)\r\n                        pendingPackageData.push(pendingPackage)\r\n                    })\r\n                )\r\n            })\r\n\r\n            $q.all(packageDetailCalls)\r\n            .then(() => {\r\n                cui.log('packageDetailCalls then', userId, pendingPackageData);\r\n                defer.resolve(pendingPackageData)\r\n            })\r\n            .catch(err => {\r\n                cui.log('packageDetailCalls catch', err);\r\n                defer.reject(err)\r\n            })\r\n        })\r\n        .catch(err => {\r\n            defer.reject(err)\r\n        })\r\n\r\n        return defer.promise\r\n    }\r\n\r\n    // Handles the approval/denial of a package request\r\n    // The package request must have a property of \"approval\" with either \"approved\" or \"denied\"\r\n    // If the package is denied and the package request has an optional property of \"rejectReason\", appends the reason to the payload\r\n    servicePackage.handlePackageApproval = (packageRequest) => {\r\n        let data = [['requestId', packageRequest.id]]\r\n\r\n        if (packageRequest.approval === 'approved') {\r\n            return API.cui.approvePackage({qs: data})\r\n        }\r\n        else if (packageRequest.approval === 'denied') {\r\n            if (packageRequest.rejectReason) {\r\n                data.push(['justification', packageRequest.rejectReason]);\r\n            }\r\n            return API.cui.denyPackage({qs: data})\r\n        } else {\r\n            throw new Error('Package request object must contain \"approval\" of either \"approved\" or \"denied\"');\r\n        }\r\n    }\r\n\r\n    return servicePackage\r\n\r\n})\r\n\r\nangular.module('applications',[])\r\n.config(['$stateProvider', ($stateProvider) => {\r\n\r\n    const templateBase = 'app/modules/applications/';\r\n\r\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\r\n\r\n    const loginRequired = true;\r\n\r\n    $stateProvider\r\n        .state('applications', {\r\n            url: '/applications',\r\n            template: '<div ui-view class=\"cui-applications\"></div>',\r\n            access: loginRequired,\r\n            abstract: true\r\n        })\r\n        .state('applications.myApplications', {\r\n            url: '?page&pageSize&service.category',\r\n            templateUrl: templateBase + 'myApplications/myApplications.html',\r\n            controller: returnCtrlAs('myApplications'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.myApplicationDetails', {\r\n            url: '/details/:appId',\r\n            templateUrl: templateBase + 'myApplications/myApplications-details.html',\r\n            controller: returnCtrlAs('myApplicationDetails'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.newRequest', {\r\n            url: '/request?userId',\r\n            templateUrl: templateBase + 'newRequestReview/newRequest.html',\r\n            controller: returnCtrlAs('newAppRequest'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.search', {\r\n            url: '/search?name&category&page&pageSize?userId',\r\n            templateUrl: templateBase + 'search/applicationSearch.html',\r\n            controller: returnCtrlAs('applicationSearch'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.reviewRequest', {\r\n            url: '/review?userId',\r\n            templateUrl: templateBase + 'newRequestReview/applicationReview.html',\r\n            controller: returnCtrlAs('applicationReview'),\r\n            access:loginRequired\r\n        })\r\n        .state('applications.manageApplications', {\r\n            url: '/manage?name&page&pageSize&service.category&sortBy&grant.status&service.name',\r\n            templateUrl: templateBase + 'myApplications/myApplications-manage.html',\r\n            controller: returnCtrlAs('manageApplications'),\r\n            access:loginRequired\r\n        })\r\n        // seperating out as it is a seperate icon on in menu\r\n        .state('pendingAppRequests', {\r\n            url: '/pendingAppRequests?page&pageSize&sortBy&name',\r\n            templateUrl: templateBase + 'pendingRequests/pendingRequests.html',\r\n            controller: returnCtrlAs('pendingAppRequests'),\r\n            access:loginRequired\r\n        })\r\n        /*Organization Applications*/\r\n        .state('applications.orgApplications', {\r\n            url: '/organization',\r\n            template: '<div ui-view></div>',\r\n            abstract: true,\r\n            access: loginRequired\r\n        })\r\n/*        .state('applications.orgApplications.applicationList', {\r\n            url: '?name&page&pageSize&service.category&sortBy&grant.status',\r\n            templateUrl: templateBase + 'orgApplications/applicationList/orgApplications-applicationList.html',\r\n            controller: returnCtrlAs('orgApplications'),\r\n            access: loginRequired\r\n        })\r\n        .state('applications.orgApplications.applicationDetails', {\r\n            url: '/application/:appId/details',\r\n            templateUrl: templateBase + 'orgApplications/applicationDetails/orgApplications-applicationDetails.html',\r\n            controller: returnCtrlAs('orgApplicationDetails'),\r\n            access: loginRequired\r\n        })*/\r\n        .state('applications.orgApplications.newGrant', {\r\n            url: '/application/:appId/new-grant',\r\n            templateUrl: templateBase + 'orgApplications/newGrant/orgApplications-newGrant.html',\r\n            controller: returnCtrlAs('orgAppNewGrant'),\r\n            access: loginRequired            \r\n        });\r\n/*        .state('applications.orgApplications.newRequest', {\r\n            url: '/request',\r\n            templateUrl: templateBase + 'orgApplications/appRequest/newRequest/appRequest-newRequest.html',\r\n            controller: returnCtrlAs('orgAppRequest'),\r\n            access: loginRequired\r\n        })\r\n        .state('applications.orgApplications.newRequestReview', {\r\n            url: '/request/review',\r\n            templateUrl: templateBase + 'orgApplications/appRequest/newRequestReview/appRequest-newRequestReview.html',\r\n            controller: returnCtrlAs('orgAppRequestReview'),\r\n            access: loginRequired\r\n        })\r\n        .state('applications.orgApplications.search', {\r\n            url: '/search?name&category&page&pageSize',\r\n            templateUrl: templateBase + 'orgApplications/search/orgApplications-search.html',\r\n            controller: returnCtrlAs('orgAppSearch'),\r\n            access: loginRequired\r\n        });*/\r\n}]);\r\n\r\nangular.module('applications')\r\n.controller('myApplicationDetailsCtrl', function(API, $scope, $stateParams, $state, $q, APIHelpers, Loader, APIError,DataStorage) {\r\n    let myApplicationDetails = this\r\n    myApplicationDetails.relatedApps=[]\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n    const getClaims = (app) => {\r\n        const packageId = app.servicePackage.id\r\n\r\n        Loader.onFor(loaderName + 'claims')\r\n        API.cui.getPersonPackageClaims({ grantee:API.getUser(), useCuid:true, packageId })\r\n        .then(res => {\r\n            APIError.offFor(loaderName + 'claims')\r\n            myApplicationDetails.claims = res\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'claims')\r\n        })\r\n        .always(() => {\r\n            Loader.offFor(loaderName + 'claims')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n\r\n    const getApp= (updating)=>{\r\n        if (!updating) {\r\n            Loader.onFor(loaderName + 'app')\r\n        }\r\n        API.cui.getPersonGrantedApps(opts)\r\n        .then(res => {\r\n            APIError.offFor(loaderName + 'app')\r\n            myApplicationDetails.app = Object.assign({}, res[0])\r\n            if (!updating) {\r\n            getClaims(myApplicationDetails.app)\r\n            getRelatedApps(myApplicationDetails.app)\r\n            }\r\n        })\r\n        .fail(err => {\r\n            APIError.onFor(loaderName + 'app')\r\n        })\r\n        .done(() => {\r\n            Loader.offFor(loaderName + 'app')\r\n            $scope.$digest()\r\n        })\r\n    }\r\n    const getRelatedApps=(app) => {\r\n        const packageId = app.servicePackage.id\r\n        let qs\r\n        if (app.servicePackage.parent) {\r\n            qs=[['servicePackage.id',app.servicePackage.parent.id]]\r\n        }else{\r\n            qs=[['servicePackage.parentPackage.id',app.servicePackage.id]]\r\n        }\r\n        Loader.onFor(loaderName + 'relatedApps')\r\n        let apiPromises=[\r\n        API.cui.getPersonRequestableApps({personId:API.getUser(),'qs':[['servicePackage.parentPackage.id',packageId]] }),\r\n        API.cui.getPersonGrantedApps({personId:API.getUser(),'qs':qs })\r\n        ]\r\n        $q.all(apiPromises)\r\n        .then(res=>{\r\n            APIError.offFor(loaderName + 'relatedApps')\r\n            myApplicationDetails.relatedApps=myApplicationDetails.relatedApps.concat(res[0])\r\n            myApplicationDetails.relatedApps=myApplicationDetails.relatedApps.concat(res[1])\r\n        })\r\n        .catch(err => {\r\n            APIError.onFor(loaderName + 'relatedApps')\r\n        })\r\n        .finally(()=>{\r\n            Loader.offFor(loaderName + 'relatedApps')\r\n        })\r\n    }\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    const loaderName = 'myApplicationDetails.'\r\n\r\n    const qs = {\r\n        'service.id': $stateParams.appId\r\n    }\r\n\r\n    const opts = {\r\n        personId: API.getUser(),\r\n        useCuid:true,\r\n        qs: APIHelpers.getQs(qs)\r\n    }\r\n    myApplicationDetails.app=DataStorage.getType('myAppDetail')\r\n    if (myApplicationDetails.app&& myApplicationDetails.app.id===$stateParams.appId) {        \r\n        getClaims(myApplicationDetails.app)\r\n        getRelatedApps(myApplicationDetails.app)\r\n        // Update application detail for any new changes during reload\r\n        // Commenting out as API is not giving full details for service.id query parameter get\r\n        //it is relying on previous page details which has full details\r\n        // getApp(true)\r\n    }\r\n    else{\r\n        getApp(false)\r\n    }\r\n\r\n    // ON LOAD END -----------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\r\n\r\n    myApplicationDetails.goToDetails = (application) => {\r\n        $state.go('applications.myApplicationDetails', {\r\n            'packageId':application.packageId,\r\n            'appId':application.id\r\n        })\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('applications')\r\n.controller('manageApplicationsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\r\n    const manageApplications = this\r\n    const userId = User.user.id\r\n    const loaderName = 'manageApplications.'\r\n\r\n    let checkedLocalStorage = false\r\n\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            manageApplications.search[property] = undefined\r\n            return\r\n        }\r\n        manageApplications.search[property] = manageApplications.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    const getCountsOfStatus=(qsValue)=>{\r\n        let opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true\r\n        }\r\n        //Assign query strings if any value passed \r\n        //otherwise it will get full count\r\n        if (qsValue) {\r\n            opts.qs = [['grant.status',qsValue]]\r\n        }\r\n        API.cui.getPersonGrantedAppCount(opts)\r\n        .then(res=>{\r\n            if (!qsValue) {\r\n                manageApplications.popupCount=res;\r\n            }else if (qsValue===\"active\") {\r\n                manageApplications.activeCount=res;\r\n            }\r\n            else{\r\n                manageApplications.suspendedCount=res;\r\n            }\r\n            $scope.$digest();\r\n        })\r\n        .fail(err=>{\r\n\r\n        })\r\n    }\r\n\r\n    const getCountsOfcategories=()=>{\r\n        manageApplications.categories.forEach((category,index)=>{\r\n            console.log($filter('cuiI18n')(category.name))\r\n            let opts = {\r\n                personId: API.getUser(),\r\n                useCuid:true\r\n            }\r\n            opts.qs=[['service.category',$filter('cuiI18n')(category.name)]]\r\n            API.cui.getPersonGrantedAppCount(opts)\r\n            .then(res=>{\r\n                category.count=res;\r\n                if (index===manageApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })\r\n            .fail(err=>{\r\n                console.log(err);\r\n                if (index===manageApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })            \r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n\r\n    const loadStoredData = () => {\r\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\r\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\r\n        const storedData = DataStorage.getType('manageApplicationsList')\r\n\r\n        if (storedData) {\r\n            Loader.onFor(loaderName + 'apps')\r\n            manageApplications.list = storedData.appList\r\n            manageApplications.count = storedData.appCount\r\n            manageApplications.categories = storedData.categories\r\n            Loader.offFor(loaderName + 'apps')\r\n        }\r\n\r\n        checkedLocalStorage = true\r\n        onLoad(false)\r\n    }\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName + 'reloadingApps')\r\n        }\r\n        else {\r\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\r\n            manageApplications.search = Object.assign({}, $stateParams)\r\n\r\n            Loader.onFor(loaderName + 'categories')\r\n            API.cui.getPersonAppCategories({personId:API.getUser()})\r\n            .then(res => {\r\n                APIError.offFor(loaderName + 'categories')\r\n                manageApplications.categories = res;\r\n                getCountsOfcategories()\r\n                APIError.offFor(loaderName + 'categories')\r\n            })\r\n            .fail(err => {\r\n                APIError.onFor(loaderName + 'categories')\r\n            })\r\n            .done(() => {\r\n                Loader.offFor(loaderName + 'categories')\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        manageApplications.search.pageSize = manageApplications.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        const opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true,\r\n            qs: APIHelpers.getQs(manageApplications.search)\r\n        }\r\n\r\n        const promises = [\r\n            API.cui.getPersonGrantedApps(opts), \r\n            API.cui.getPersonGrantedAppCount(opts)\r\n        ]\r\n\r\n        $q.all(promises)\r\n        .then(res => {\r\n            // manageApplications.list = Object.assign(res[0]).filter(x => x.hasOwnProperty('urls'))\r\n            manageApplications.count = res[1]\r\n            manageApplications.list=res[0];\r\n            // re-render pagination if available\r\n            manageApplications.reRenderPaginate && manageApplications.reRenderPaginate()\r\n\r\n            const storageData = {\r\n                appList: manageApplications.list, \r\n                appCount: manageApplications.count, \r\n                categories: manageApplications.categories\r\n            }\r\n            DataStorage.setType('manageApplicationsList', storageData)\r\n            APIError.offFor(loaderName + 'apps')\r\n        })\r\n        .catch(err => {\r\n            APIError.onFor(loaderName + 'apps')\r\n        })\r\n        .finally(() => {\r\n            if (previouslyLoaded) {\r\n                Loader.offFor(loaderName + 'reloadingApps')\r\n            } \r\n            else {\r\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\r\n            }\r\n        })\r\n        //Lazy loading of counts of applications based on status \r\n        //to display in popover\r\n        getCountsOfStatus(\"active\")\r\n        getCountsOfStatus(\"suspended\")\r\n        //To getFull count\r\n        getCountsOfStatus(undefined)\r\n\r\n\r\n    }\r\n\r\n    loadStoredData()\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    manageApplications.pageChange = (newpage) => {\r\n        manageApplications.updateSearch('page', newpage)\r\n    }\r\n\r\n    manageApplications.updateSearchByName = () => {\r\n        manageApplications.updateSearch('name',manageApplications.search['service.name'])\r\n    }\r\n    manageApplications.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name')\r\n                break\r\n            case 'date':\r\n                switchBetween('sortBy', '+grant.instant', '-grant.instant')\r\n                break\r\n            case 'status':\r\n                manageApplications.search.page = 1\r\n                manageApplications.search['grant.status'] = updateValue\r\n                break\r\n            case 'category':\r\n                manageApplications.search.page = 1\r\n                manageApplications.search['service.category'] = $filter('cuiI18n')(updateValue)\r\n                break\r\n            case 'name':\r\n                manageApplications.search.page = 1\r\n                break\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('applications.manageApplications', manageApplications.search, { notify:false })\r\n        onLoad(true)\r\n    }\r\n\r\n    manageApplications.goToDetails = (application) => {\r\n        const opts = {\r\n            appId: application.id\r\n        }\r\n        DataStorage.setType('myAppDetail',application)\r\n        $state.go('applications.myApplicationDetails', opts)\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END ---------------------------------------------------------------------------------\r\n\r\n})\r\n\r\nangular.module('applications')\r\n.controller('myApplicationsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\tconst myApplications = this\r\n    const userId = User.user.id\r\n    const loaderName = 'myApplications.'\r\n    let checkedLocalStorage = false\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n    const getCountsOfcategories=()=>{\r\n        myApplications.categories.forEach((category,index)=>{\r\n            console.log($filter('cuiI18n')(category.name))\r\n            let opts = {\r\n                personId: userId,\r\n                useCuid:true\r\n            }\r\n            opts.qs=[['service.category',$filter('cuiI18n')(category.name)]]\r\n            API.cui.getPersonGrantedAppCount(opts)\r\n            .then(res=>{\r\n                //Need to minus each category count with not displayble and other than active apps according to thier categories\r\n                category.count=res\r\n                -\r\n                (\r\n                    Object.assign(myApplications.list).filter(x => \r\n                        x.category&& $filter('cuiI18n')(x.category)===$filter('cuiI18n')(category.name)\r\n                    ).length\r\n                    -\r\n                    Object.assign(myApplications.viewList).filter(x => \r\n                            x.category&& $filter('cuiI18n')(x.category)===$filter('cuiI18n')(category.name)\r\n                    ).length\r\n                )                \r\n                if (index===myApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })\r\n            .fail(err=>{\r\n                console.log(err);\r\n                if (index===myApplications.categories.length-1) {\r\n                    $scope.$digest();\r\n                };\r\n            })            \r\n        })\r\n    }\r\n\r\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n    const loadStoredData = () => {\r\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\r\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\r\n        const storedData = DataStorage.getType('myApplicationsList')\r\n\r\n        if (storedData) {\r\n            Loader.onFor(loaderName + 'apps')\r\n            myApplications.list = storedData.appList\r\n            myApplications.viewList = Object.assign(myApplications.list).filter(x => x.servicePackage.displayable===true&&x.grant.status=='active')\r\n            myApplications.count = storedData.appCount\r\n            myApplications.categories = storedData.categories\r\n            Loader.offFor(loaderName + 'apps')\r\n        }\r\n\r\n        checkedLocalStorage = true\r\n        onLoad(false)\r\n    }\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName + 'reloadingApps')\r\n        }\r\n        else {\r\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\r\n            myApplications.search = Object.assign({}, $stateParams)\r\n\r\n            Loader.onFor(loaderName + 'categories')\r\n            API.cui.getPersonAppCategories({personId:API.getUser()})\r\n            .then(res => {\r\n                APIError.offFor(loaderName + 'categories')\r\n                myApplications.categories = res;\r\n                getCountsOfcategories()\r\n                APIError.offFor(loaderName + 'categories')\r\n            })\r\n            .fail(err => {\r\n            \tconsole.error('There was an error in fetcting user\\'s app category details ' +err)\r\n                APIError.onFor(loaderName + 'categories')\r\n            })\r\n            .done(() => {\r\n                Loader.offFor(loaderName + 'categories')\r\n                $scope.$digest()\r\n            })\r\n        }\r\n\r\n        myApplications.search.pageSize = myApplications.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        const opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true,\r\n            qs: APIHelpers.getQs(myApplications.search)\r\n        }\r\n        opts.qs.push(['grant.status','active'])\r\n        const promises = [\r\n            API.cui.getPersonGrantedApps(opts), \r\n            API.cui.getPersonGrantedAppCount(opts)\r\n        ]\r\n\r\n        $q.all(promises)\r\n        .then(res => {\r\n            myApplications.viewList = Object.assign(res[0]).filter(x => x.servicePackage.displayable===true&&x.grant.status=='active')\r\n            if (!previouslyLoaded) {\r\n                myApplications.count = res[1]\r\n            }\r\n            myApplications.popupCount = myApplications.count-Object.assign(res[0]).filter(x => x.servicePackage.displayable!==true || x.grant.status!=='active').length\r\n            myApplications.list=res[0];\r\n            // re-render pagination if available\r\n            myApplications.reRenderPaginate && myApplications.reRenderPaginate()\r\n\r\n            const storageData = {\r\n                appList: myApplications.list, \r\n                appCount: myApplications.count, \r\n                categories: myApplications.categories\r\n            }\r\n            DataStorage.setType('myApplicationsList', storageData)\r\n            APIError.offFor(loaderName + 'apps')\r\n        })\r\n        .catch(err => {\r\n        \tconsole.error('There was an error in fetcting user\\'s granted applications ' +err)\r\n            APIError.onFor(loaderName + 'apps')\r\n        })\r\n        .finally(() => {\r\n            if (previouslyLoaded) {\r\n                Loader.offFor(loaderName + 'reloadingApps')\r\n            } \r\n            else {\r\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\r\n            }\r\n        })\r\n    }\r\n\r\n    loadStoredData()\r\n\r\n    // ON LOAD END --------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    myApplications.pageChange = (newpage) => {\r\n        myApplications.updateSearch('page', newpage)\r\n    }\r\n\r\n    myApplications.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'category':\r\n                myApplications.search.page = 1\r\n                myApplications.search['service.category'] = $filter('cuiI18n')(updateValue)\r\n                break\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('applications.myApplications', myApplications.search, { notify:false })\r\n        onLoad(true)\r\n    }\r\n})\r\n\r\nangular.module('applications')\r\n.controller('applicationReviewCtrl',['$scope','API','AppRequests','$timeout','$state','$q','localStorageService','$stateParams',function($scope,API,AppRequests,$timeout,$state,$q,localStorage,$stateParams) {\r\n\r\n    let applicationReview=this;\r\n    applicationReview.userId= $stateParams.userId\r\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) {\r\n        AppRequests.set(localStorage.get('appsBeingRequested'));\r\n    }\r\n\r\n    let appRequests=angular.copy(AppRequests.get());\r\n    angular.forEach(appRequests , (request) =>{\r\n        if (request.bundledApps) {\r\n            request.bundledApps.forEach(bundledApp => {\r\n                if (appRequests[bundledApp.id]) {\r\n                    delete appRequests[bundledApp.id]\r\n                }                    \r\n            })\r\n        }\r\n    })\r\n    const appsBeingRequested=Object.keys(appRequests)\r\n\r\n    if (appsBeingRequested.length===0) {\r\n        $state.go('applications.search');\r\n    }\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    if(applicationReview.userId===API.user.id){\r\n        applicationReview.validDomain=true\r\n    }\r\n    applicationReview.appRequests=[];\r\n\r\n    for(let i=0; i < appsBeingRequested.length; i += 2){\r\n        const applicationGroup = [];\r\n        applicationGroup.push(appRequests[appsBeingRequested[i]]);\r\n        if (appRequests[appsBeingRequested[i+1]]) {\r\n            applicationGroup.push(appRequests[appsBeingRequested[i+1]]);\r\n        }\r\n        //get Terms And Conditions for requested packages\r\n        applicationGroup.forEach(app=>{\r\n            if (app.servicePackage.personTacEnabled) {\r\n                API.cui.getOrgTacOfPackage({packageId:app.servicePackage.id})\r\n                .then(res=>{\r\n                    app.tac=res;\r\n                })\r\n                .fail(err=>{\r\n                    console.log(\"There was an error fetching Tac\")\r\n                    console.log(err)\r\n                })\r\n            }\r\n        })\r\n        applicationReview.appRequests.push(applicationGroup);\r\n    }\r\n\r\n    applicationReview.numberOfRequests=0;\r\n    appsBeingRequested.forEach(() => {\r\n        applicationReview.numberOfRequests += 1;\r\n    });\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK START ---------------------------------------------------------------------------------\r\n    let applicationRequestArray;\r\n\r\n    const requestsValid = () => {\r\n        applicationRequestArray=[];\r\n        applicationReview.attempting=true;\r\n        let error = false;\r\n        applicationReview.appRequests.forEach((appRequestGroup,i) => {\r\n\r\n            appRequestGroup.forEach((appRequest,x) => {\r\n                if (appRequest.servicePackage.reasonRequired) {\r\n                    if(!appRequest.reason || appRequest.reason===''){\r\n                        appRequest.reasonRequired=true;\r\n                        applicationReview.attempting=false;\r\n                        error=true;\r\n                    }\r\n                    else {\r\n                        appRequest.reasonRequired=false;\r\n                        applicationRequestArray[i+x] = AppRequests.buildReason(appRequest,appRequest.reason);\r\n                    }\r\n                } else {\r\n                    applicationRequestArray[i+x] = appRequest;\r\n                }\r\n            });\r\n        });\r\n        applicationReview.error = error;\r\n        if (error) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n    applicationReview.submit = () => {\r\n        if (!requestsValid()) {\r\n            return;\r\n        }\r\n        const appRequests=AppRequests.getPackageRequests(applicationReview.userId,applicationRequestArray);\r\n\r\n        let requestsPromises=[];\r\n\r\n        appRequests.forEach((appRequest) => {\r\n            requestsPromises.push(API.cui.createPackageRequest({data:appRequest}))\r\n        });\r\n\r\n        $q.all(requestsPromises)\r\n        .then((res)=>{\r\n            applicationReview.attempting = false;\r\n            applicationReview.success = true;\r\n            AppRequests.clear(); // clears app requests if the request goes through\r\n            localStorage.set('appsBeingRequested',{});\r\n            $timeout(() => {\r\n                $state.go('applications.myApplications');\r\n            }, 3000);\r\n        })\r\n        .catch(() => {\r\n            applicationReview.attempting = false;\r\n            applicationReview.error = true;\r\n        });\r\n    };\r\n\r\n    applicationReview.updateSearch = (nameSearch) => {\r\n        applicationReview.search = nameSearch;\r\n    };\r\n\r\n    applicationReview.showTac= (application)=>{\r\n        if (application.tac) {\r\n            applicationReview.tacContent=application.tac.tacText\r\n            applicationReview.step=2\r\n        }\r\n    }\r\n\r\n    // Error validation\r\n    applicationReview.customError = {\r\n        email: {\r\n            email: function(){\r\n                var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n                if (applicationReview.extendedData&&applicationReview.extendedData.email) {\r\n                    return EMAIL_REGEXP.test(applicationReview.extendedData.email)\r\n                }else{\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    applicationReview.checkValidDomain = function(email) {\r\n        var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\r\n        if (email&&EMAIL_REGEXP.test(applicationReview.extendedData.email)) {\r\n            let domain=email.slice(\r\n                applicationReview.extendedData.email.indexOf('@')+1,\r\n                applicationReview.extendedData.email.length\r\n            )\r\n            API.cui.lookupDomain({domain:domain})\r\n            .then( res => {\r\n                applicationReview.validDomain=true\r\n                $scope.$digest()\r\n            })\r\n            .fail(err =>{\r\n                console.log('Invalid mail' + err)\r\n                applicationReview.validDomain=false\r\n                $scope.$digest()\r\n            })\r\n        }\r\n    }\r\n\r\n    applicationReview.checkValidProtocol = function(protocol){\r\n        if (protocol) {\r\n            API.cui.lookupProtocol({protocol:protocol})\r\n            .then( res => {\r\n                applicationReview.validProtocol=true\r\n                $scope.$digest()\r\n            })\r\n            .fail(err =>{\r\n                console.log('Invalid mail' + err)\r\n                applicationReview.validProtocol=false\r\n                $scope.$digest()\r\n            })\r\n        }\r\n    }\r\n    // ON CLICK END -----------------------------------------------------------------------------------\r\n\r\n}]);\r\nangular.module('applications')\r\n.controller('newAppRequestCtrl',['API','$scope','$state','AppRequests','localStorageService','Loader','$pagination','APIHelpers','$stateParams',\r\nfunction(API,$scope,$state,AppRequests,localStorage,Loader, $pagination,APIHelpers,$stateParams) {\r\n\r\n    let newAppRequest = this;\r\n    newAppRequest.step=\"selectCategory\"\r\n    newAppRequest.searchParams= Object.assign({}, $stateParams)\r\n    newAppRequest.searchParams.pageSize= newAppRequest.searchParams.pageSize||$pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    // HELPER FUNCTIONS END ---------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ----------------------------------------------------------------------------------------\r\n\r\n    // QIMS Customization Start\r\n    if(_.find(API.user.roles, (role) => { return role===\"QI Employee Birthright\"})){\r\n        newAppRequest.step=\"selectUser\"\r\n        newAppRequest.requestBy=\"yourself\"\r\n    }\r\n    else{\r\n        newAppRequest.searchParams.userId=API.user.id\r\n        newAppRequest.userId=API.user.id\r\n        $state.transitionTo('applications.newRequest', newAppRequest.searchParams, {notify:false})\r\n    }\r\n\r\n\r\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) {\r\n        AppRequests.set(localStorage.get('appsBeingRequested'));\r\n    }\r\n    const appsBeingRequested = AppRequests.get();\r\n\r\n    newAppRequest.appsBeingRequested = [];\r\n    newAppRequest.numberOfRequests = 0;\r\n\r\n    Object.keys(appsBeingRequested).forEach((appId) => {\r\n        // This sets the checkboxes back to marked when the user clicks back\r\n        newAppRequest.numberOfRequests += 1;\r\n        newAppRequest.appsBeingRequested.push(appsBeingRequested[appId]);\r\n    });\r\n\r\n    API.cui.getCategories()\r\n    .then((res)=>{\r\n        newAppRequest.categories = res;\r\n        newAppRequest.loadingDone = true;\r\n        $scope.$digest();\r\n    })\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -----------------------------------------------------------------------\r\n\r\n    newAppRequest.searchCallback = function(searchWord) {\r\n        $state.go('applications.search', {name: searchWord , userId:newAppRequest.userId});\r\n    };\r\n\r\n    newAppRequest.updateSearchParams = (page) => {\r\n        Loader.onFor('newAppRequest.userList')\r\n        newAppRequest.searchParams.page=page\r\n        API.cui.getPersons({qs: APIHelpers.getQs(newAppRequest.searchParams)})\r\n        .then(res => {\r\n            _.remove(res,{id:API.user.id})\r\n            newAppRequest.userList=res\r\n            Loader.offFor('newAppRequest.userList')\r\n            $scope.$digest()\r\n        })\r\n        .fail( err => {\r\n            console.log('There was an error fetching persons'+ err)\r\n            Loader.offFor('newAppRequest.userList')\r\n        }) \r\n    }\r\n\r\n    newAppRequest.userClick= (user) => {\r\n        newAppRequest.step=\"selectCategory\"\r\n        newAppRequest.searchParams.userId=user.id\r\n        newAppRequest.userId=user.id\r\n        $state.transitionTo('applications.newRequest', newAppRequest.searchParams, {notify:false})\r\n    }\r\n\r\n    newAppRequest.updateSearchByEmailCallback = () => {\r\n        newAppRequest.updateSearchParams(1)\r\n    }\r\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------\r\n\r\n    // WATCHERS---------------------------------------------\r\n\r\n    $scope.$watch(\"newAppRequest.requestBy\", (newValue) => {\r\n        if (newValue&&newValue==='others') {\r\n            if (!newAppRequest.userList) {\r\n                // Loader.onFor('newAppRequest.userList')\r\n                API.cui.countPersons()\r\n                .then(count => {\r\n                    newAppRequest.userCount=count\r\n                    newAppRequest.updateSearchParams(1)\r\n                })\r\n                .fail( err => {\r\n                    console.log('There was an error fetching persons'+ err)\r\n                })\r\n            }\r\n            else{\r\n                Loader.offFor('newAppRequest.userList')\r\n            }\r\n        }\r\n    }, true)\r\n}]);\r\n\r\nangular.module('applications')\r\n.controller('pendingAppRequestsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,$filter,$pagination,$q,$scope,$state,$stateParams) {\r\n\r\n\tconst pendingAppRequests = this\r\n    const loaderName = 'pendingAppRequests.'\r\n\r\n    let checkedLocalStorage = false\r\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\r\n\r\n    const switchBetween = (property, firstValue, secondValue) => {\r\n        // helper function to switch a property between two values or set to undefined if values not passed\r\n        if (!firstValue) {\r\n            pendingAppRequests.search[property] = undefined\r\n            return\r\n        }\r\n        pendingAppRequests.search[property] = pendingAppRequests.search[property] === firstValue\r\n            ? secondValue\r\n            : firstValue\r\n    }\r\n\r\n    // HELPER FUNCTIONS END ---------------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ------------------------------------------------------------------------------------------\r\n    \r\n    const loadStoredData = () => {\r\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\r\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\r\n        const storedData = DataStorage.getType('pendingAppRequestsList')\r\n\r\n        if (storedData) {\r\n            Loader.onFor(loaderName + 'apps')\r\n            pendingAppRequests.list = storedData.appList\r\n            // Pagination not supported now \r\n            // pendingAppRequests.count = storedData.appCount\r\n            Loader.offFor(loaderName + 'apps')\r\n        }\r\n\r\n        checkedLocalStorage = true\r\n        onLoad(false)\r\n    }\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if (previouslyLoaded) {\r\n            Loader.onFor(loaderName + 'reloadingApps')\r\n        }\r\n        else {\r\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\r\n            pendingAppRequests.search = Object.assign({}, $stateParams)\r\n        }\r\n        // Pagination not supported now \r\n        // pendingAppRequests.search.pageSize = pendingAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\r\n\r\n        const opts = {\r\n            personId: API.getUser(),\r\n            useCuid:true,\r\n            qs: APIHelpers.getQs(pendingAppRequests.search)\r\n        }\r\n\r\n        const promises = [\r\n            API.cui.getPersonPendingApps(opts) \r\n            // Pagination not supported now \r\n            // API.cui.getPersonGrantedAppCount(opts)\r\n        ]\r\n\r\n        $q.all(promises)\r\n        .then(res => {\r\n        \t// Pagination not supported now \r\n            // pendingAppRequests.count = res[1]\r\n            pendingAppRequests.list=res[0];\r\n            // re-render pagination if available\r\n            // Pagination not supported now\r\n            // pendingAppRequests.reRenderPaginate && pendingAppRequests.reRenderPaginate()\r\n\r\n            const storageData = {\r\n                appList: pendingAppRequests.list\r\n                // appCount: pendingAppRequests.count, \r\n            }\r\n            DataStorage.setType('pendingAppRequestsList', storageData)\r\n            APIError.offFor(loaderName + 'apps')\r\n        })\r\n        .catch(err => {\r\n        \tconsole.error('There was an error in fetcting user\\'s pending applications ' +err)\r\n            APIError.onFor(loaderName + 'apps')\r\n        })\r\n        .finally(() => {\r\n            if (previouslyLoaded) {\r\n                Loader.offFor(loaderName + 'reloadingApps')\r\n            } \r\n            else {\r\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\r\n            }\r\n        })\r\n    }\r\n\r\n    loadStoredData()\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\r\n\r\n    pendingAppRequests.pageChange = (newpage) => {\r\n        pendingAppRequests.updateSearch('page', newpage)\r\n    }\r\n\r\n    pendingAppRequests.updateSearch = (updateType, updateValue) => {\r\n        switch (updateType) {\r\n            case 'alphabetic':\r\n                switchBetween('sortBy', '+service.name', '-service.name')\r\n                break\r\n            case 'date':\r\n                switchBetween('sortBy', '+requestedDate', '-requestedDate')\r\n                break\r\n            case 'name':\r\n                // Pagination not supported now \r\n                // myApplications.search.page = 1\r\n                pendingAppRequests.search['name'] = updateValue\r\n                break\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('pendingAppRequests', pendingAppRequests.search, { notify:false })\r\n        onLoad(true)\r\n    }\r\n\r\n    pendingAppRequests.searchCallback= (searchWord) => {\r\n        pendingAppRequests.updateSearch('name',searchWord)\r\n    }\r\n\r\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------------\r\n})\r\nangular.module('applications')\r\n.controller('applicationSearchCtrl',['API','$scope','$stateParams','$state','AppRequests','localStorageService','$q','$pagination', function (API,$scope,$stateParams,$state,AppRequests,localStorage,$q,$pagination) {\r\n    let applicationSearch = this;\r\n    applicationSearch.userId=$stateParams.userId\r\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) { // If there's nothing in app memory and there's something in local storage\r\n        AppRequests.set(localStorage.get('appsBeingRequested'));\r\n    }\r\n    applicationSearch.packageRequests = AppRequests.get();\r\n    applicationSearch.appCheckbox = {};\r\n\r\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\r\n\r\n    const processNumberOfRequestedApps = (pkgRequest) => {\r\n        if (pkgRequest) {\r\n            applicationSearch.numberOfRequests += 1;\r\n        } else {\r\n            applicationSearch.numberOfRequests -= 1;\r\n        }\r\n    };\r\n\r\n    const updateViewList = (list) => {\r\n        let deferred= $q.defer()\r\n        applicationSearch.viewList=[]\r\n        let qs=[]\r\n        let apiPromises = []\r\n        angular.forEach(list, (app,parentIndex) => {\r\n            // Child App and Parent app requested by user\r\n            if(app.servicePackage.parent&&app.relatedApps){\r\n                let flag=false\r\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\r\n                    if (_.find(list,{id:realtedApp.id})) {\r\n                        flag=true\r\n                    }\r\n                    else{\r\n                        qs.push(['service.id',realtedApp.id])\r\n                    }\r\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\r\n                        apiPromises.push(API.cui.getPersonRequestableApps({personId:applicationSearch.userId,qs:qs}))\r\n                        qs=[]\r\n                    }\r\n                })\r\n            }\r\n            else{\r\n                applicationSearch.viewList.push(app)\r\n            }\r\n        })\r\n        $q.all(apiPromises)\r\n        .then(res => {\r\n            angular.forEach(res, (app) => {\r\n                if (applicationSearch.search.name) {\r\n                    app[0].expanded=true\r\n                }\r\n                applicationSearch.viewList.push(...app)\r\n                applicationSearch.list.push(...app)\r\n            })\r\n            deferred.resolve()\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"There was an error loading parent requestable apps\")\r\n                deferred.reject(err)\r\n        })\r\n        return deferred.promise\r\n    }\r\n\r\n    const updateViewListForUSUsers = () => {\r\n        if (applicationSearch.person.addresses[0].country!=='US') {\r\n            _.remove(applicationSearch.viewList,{id:'2757598184'})\r\n        }\r\n    }\r\n\r\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\r\n\r\n    // ON LOAD START ---------------------------------------------------------------------------------\r\n\r\n    const onLoad = (previouslyLoaded) => {\r\n        if(previouslyLoaded) {\r\n            applicationSearch.doneReloading = false;\r\n        }\r\n        else { // pre populate fields based on state params on first load\r\n            let numberOfRequests = 0;\r\n            Object.keys(applicationSearch.packageRequests).forEach(function(appId) { // Gets the list of package requests saved in memory\r\n                // This sets the checkboxes back to marked when the user clicks back after being in request review\r\n                applicationSearch.appCheckbox[appId] = true;\r\n                numberOfRequests += 1;\r\n            });\r\n            applicationSearch.numberOfRequests = numberOfRequests;\r\n\r\n            applicationSearch.search = {};\r\n            applicationSearch.search.name = $stateParams.name;\r\n            applicationSearch.search.category = $stateParams.category;\r\n            applicationSearch.search.page = parseInt($stateParams.page, 10);\r\n            applicationSearch.search.pageSize = parseInt($stateParams.pageSize, 10);\r\n        }\r\n\r\n        let query = [];\r\n        if (applicationSearch.search.name) {\r\n            query.push(['service.name',applicationSearch.search.name]);\r\n        }\r\n        if (applicationSearch.search.category) {\r\n            query.push(['service.category',applicationSearch.search.category]);\r\n        }\r\n\r\n        applicationSearch.search.pageSize = applicationSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\r\n        query.push(['pageSize',String(applicationSearch.search.pageSize)]);\r\n\r\n        applicationSearch.search.page = applicationSearch.search.page || 1;\r\n        query.push(['page',String(applicationSearch.search.page)]);\r\n\r\n        let opts = {\r\n            personId: applicationSearch.userId,\r\n            qs: query\r\n        };\r\n\r\n        const promises = [API.cui.getPersonRequestableApps(opts),API.cui.getPersonRequestableCount(opts)];\r\n\r\n        $q.all(promises)\r\n        .then((res) => {\r\n             applicationSearch.list = res[0];\r\n             applicationSearch.count = res[1];\r\n             updateViewList(res[0])\r\n             .then(() =>{\r\n                updateViewListForUSUsers()\r\n                applicationSearch.doneReloading = applicationSearch.doneLoading = true;\r\n             })\r\n        });\r\n    };\r\n    API.cui.getPerson({personId:applicationSearch.userId})\r\n    .then(res => {\r\n        applicationSearch.person=res\r\n        onLoad(false)\r\n    })\r\n\r\n    // ON LOAD END ------------------------------------------------------------------------------------\r\n\r\n    // ON CLICK FUNCTIONS START -----------------------------------------------------------------------\r\n\r\n    applicationSearch.pageChange = (newpage) => {\r\n        applicationSearch.updateSearch('page',newpage);\r\n    };\r\n\r\n    applicationSearch.updateSearch = function(updateType,updateValue) {\r\n        if (updateType!=='page'){\r\n            applicationSearch.search.page = 1;\r\n        }\r\n\r\n        // doesn't change state, only updates the url\r\n        $state.transitionTo('applications.search', applicationSearch.search, {notify:false});\r\n        onLoad(true);\r\n    };\r\n\r\n    applicationSearch.toggleRequest = function(application) {\r\n        if (!applicationSearch.packageRequests[application.id]) {\r\n            applicationSearch.packageRequests[application.id] = application;\r\n        } else {\r\n            delete applicationSearch.packageRequests[application.id];\r\n        }\r\n        localStorage.set('appsBeingRequested',applicationSearch.packageRequests);\r\n        processNumberOfRequestedApps(applicationSearch.packageRequests[application.id]);\r\n    };\r\n\r\n    applicationSearch.saveRequestsAndCheckout = function() {\r\n        let qs = []\r\n        //needed to set a flag for related apps to display in review page\r\n        angular.forEach(applicationSearch.packageRequests,(request)=>{\r\n            if (request.relatedApps) {\r\n                request.relatedAppSelectedCount=0\r\n                request.relatedApps.forEach(relatedApp=>{\r\n                    if(_.find(applicationSearch.packageRequests,{id:relatedApp.id})){\r\n                        relatedApp.selected=true\r\n                        request.relatedAppSelectedCount++\r\n                    }\r\n                    else{\r\n                        relatedApp.selected=false\r\n                    }\r\n                })\r\n            }\r\n            // If Selected Related app full details not available need to fetch it\r\n            if (!request.servicePackage) {\r\n                qs.push(['service.id',request.id])\r\n            }\r\n        })\r\n        if (qs.length!==0) {\r\n            API.cui.getPersonRequestableApps({personId:applicationSearch.userId,qs:qs})\r\n            .then(res => {\r\n                res.forEach(app =>{\r\n                    applicationSearch.packageRequests[app.id] = app\r\n                })\r\n                AppRequests.set(applicationSearch.packageRequests);\r\n                $state.go('applications.reviewRequest',{userId:applicationSearch.userId});\r\n            })\r\n        }\r\n        else{\r\n            AppRequests.set(applicationSearch.packageRequests);\r\n            $state.go('applications.reviewRequest',{userId:applicationSearch.userId});\r\n        }\r\n    };\r\n\r\n    //Related apps will always appear inside body, So need to select parent if it is selected \r\n    applicationSearch.checkRelatedAppsBody= function(relatedApp, parent){\r\n        if (_.find(applicationSearch.list,{id:relatedApp.id})) {\r\n            applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:relatedApp.id}))\r\n        }\r\n        else{\r\n            applicationSearch.list.push(relatedApp)\r\n            applicationSearch.toggleRequest(relatedApp)\r\n        }           \r\n        applicationSearch.checkRelatedAndBundledApps(_.find(applicationSearch.list,{id:relatedApp.id}),parent)\r\n    };\r\n\r\n    //Deselect Child apps If it has any and select parent if checked from parent body \r\n    applicationSearch.checkRelatedAndBundledApps=function(application,parent){\r\n        //if unchecked the checkbox\r\n        if (!applicationSearch.packageRequests[application.id]) {\r\n            //if it is a parent then then deselect childs\r\n            if (!parent) {\r\n                application.relatedApps&&application.relatedApps.forEach((relatedApp)=>{\r\n                    if (applicationSearch.appCheckbox[relatedApp.id]) {\r\n                        applicationSearch.appCheckbox[relatedApp.id]=!applicationSearch.appCheckbox[relatedApp.id]\r\n                        applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:relatedApp.id}))\r\n                    }\r\n                })\r\n                applicationSearch.checkBundledApps(application,false)\r\n            }      \r\n        }else{\r\n            if (parent) {\r\n                if (!applicationSearch.appCheckbox[parent.id]) {\r\n                    applicationSearch.appCheckbox[parent.id]=true\r\n                    applicationSearch.toggleRequest(parent)\r\n                    applicationSearch.checkBundledApps(parent,true)\r\n                }\r\n            }else\r\n            applicationSearch.checkBundledApps(application,true)\r\n        }\r\n    }\r\n\r\n    applicationSearch.checkBundledApps= function(application,check){\r\n        if (application.bundledApps) {\r\n            application.bundledApps.forEach(bundledApp=>{\r\n                applicationSearch.appCheckbox[bundledApp.id]=check\r\n                if (_.find(applicationSearch.list,{id:bundledApp.id}))\r\n                    applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:bundledApp.id}))\r\n            })\r\n        }\r\n    }\r\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------\r\n\r\n}]);\r\n\r\nangular.element(document).ready(function () {\r\n\tangular.module('app',['common','misc','registration','applications','organization','user','ngAnimate']);\r\n\r\nangular.module('app')\r\n.config(['$urlRouterProvider', ($urlRouterProvider)  => {\r\n\r\n    // Fixes infinite digest loop with ui-router (do NOT change unless absolutely required)\r\n    $urlRouterProvider.otherwise(($injector) => {\r\n      const $state = $injector.get('$state');\r\n      $state.go('welcome');\r\n    });\r\n\r\n}]);\r\n\r\n    angular.bootstrap(document, ['app']);\r\n});\r\n\t\r\n\t})\r\n})(angular, $);\r\n"]}