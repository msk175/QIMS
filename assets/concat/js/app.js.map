{"version":3,"sources":["app.js"],"names":["angular","$","appConfig","packageJson","i18nPackageJson","get","then","configData","Object","assign","envConfigData","packageJsonData","languageResources","dependencyOrigin","undefined","i18nPackageJsonData","always","module","config","$stateProvider","templateBase","returnCtrlAs","name","asPrefix","toUpperCase","slice","length","loginRequired","state","url","template","access","templateUrl","controller","Loader","User","$scope","API","APIError","$filter","$pagination","$q","$state","$stateParams","appGrantHistory","scopeName","search","page","paginationPageSize","getUserValue","getPaginationOptions","pageSize","searchBy","pageGrantedChange","newpage","updateSearch","updateType","updateValue","switchBetween","queryParams","String","sortBy","push","status","eventType","opts","personId","user","id","qs","transitionTo","notify","console","log","grantedHistory","cui","getPersonApplicationsGrantHistory","res","$digest","fail","onFor","err","property","firstValue","secondValue","getCountsOfStatus","qsValue","getUser","useCuid","popupGrantedCount","activeCount","suspendedCount","getPersonApplicationsGrantHistoryCount","count","offFor","$apply","appRequestHistory","pageChange","requestedHistory","getPersonApplicationsRequestHistory","getCountsOfApproved","popuprequestedCount","yesCount","noCount","getPersonApplicationsRequestHistoryCount","UserHistory","userHistory","injectUI","lastLogin","lastLoginDate","userName","initUserHistory","merge","UserProfile","userProfile","maskAnswers","inputType","updateUIMasking","initUserProfile","organization","$timeout","userRoles","grantedHistoryError","getRolesDetailsError","appCheckbox","handleError","loading","init","success","getPersonRolesOnly","rolesDetails","initiGrantable","getPersonRolesGrantable","rolesGrantable","assignRoles","roles","forEach","dsd","appId","test","rolesSubmitData","assignPersonRoles","data","rolessubmitError","$watch","n","key","appCheckboxValid","menu","desktop","mobile","localStorageService","Registration","LocaleService","$window","Base","userInvited","encodedString","btoa","inviteId","pin","applications","userLogin","numberOfSelected","submitError","languages","showOrgInfo","selected","d","Date","tz","toTimeString","lang","navigator","language","userLanguage","indexOf","browserPreference","initializing","addresses","streets","phones","keys","index","values","_","find","initInvitedRegistration","questions","securityQuestions","splice","numberOfQuestionsFloor","Math","floor","challengeQuestions1","challengeQuestions2","question1","question2","invitationData","email","restrictEmail","emailRe","catch","error","responseJSON","apiMessage","go","updateNumberOfSelected","checkboxValue","process","updateSelected","application","packageId","showTac","getAppicationTaC","processedSelected","app","tac","getTac","checkTacFlag","selectedApplications","TacCount","tacContent","tacText","step","oldSelected","i","split","acceptedTos","submit","submitting","registrationData","profile","login","userCountry","requestReason","reason","invitedSubmit","errorMessage","selectOrganization","grants","appCount","list","servicePackage","flagObject","preSelectApps","appsFoundFlag","subappsFoundFlag","getAllOrgApps","passwordRules","selectAndUpdateFlags","flags","personTacEnabled","bundledApps","appList","bundledAppFlags","subappFlags","subPackage","subPackages","iteration","flag","iterationOut","countOut","subpackage","deferred","defer","tempAllApps","tempAppsCount","apiPromises","getOrgAppsByPage","all","resolve","promise","updatingApps","a","set","checkDuplicateEmail","value","isEmailTaken","customErrors","usernameTaken","isUsernameTaken","EMAIL_REGEXP","answersMatch","challengeAnswer2","challengeAnswer1","inlineEdit","firstName","isDefined","firstNameError","required","noSaveFirstName","lastName","lastNameError","noSaveLastName","EMAIL_REGXP","emailError","noSaveEmail","country","countryError","noSaveCountry","address1","address1Error","noSaveAddress1","telephone","telephoneError","noSaveTelephone","userId","userIdError","noSaveUserId","challengeAnswer1Error","noSaveChallengeAnswer1","challengeAnswer2Error","noSaveChallengeAnswer2","updateFirstNameError","given","updateLastNameError","surname","updateEmailError","updateCountryError","updateAddress1Error","updateTelephoneError","number","updateUserIdError","username","updateChallengeAnswer1Error","updateChallengeAnswer2Error","userWalkup","orgPaginationSize","appPaginationSize","initWalkupRegistration","organizationList","organizations","organizationCount","orgReRenderPaginate","checkOrUncheckBundledApps","bundledApp","filter","walkupSubmit","appReRenderPaginate","orgPaginationPageHandler","newPage","updatingOrgs","getOrgsByPageAndName","orgPaginationCurrentPage","appPaginationPageHandler","appPaginationCurrentPage","abstract","permittedLogic","accessByAnyAdmin","views","grantAppToUserLogic","grantAppToOrgLogic","orgAdminLogic","DataStorage","orgAppRequest","orgAppsBeingRequested","getType","loaderName","stateParamsOrgId","numberOfOrgRequests","getOrgAppCategories","organizationId","categories","searchCallback","searchWord","BuildPackageRequests","AppRequests","orgAppRequestReview","orgId","appRequests","appsBeingRequested","applicationGroup","organizationTacEnabled","getOrgTacOfPackage","numberOfRequests","removeApplicationRequest","requestId","deleteType","setType","requestArray","appRequestGroup","appRequest","x","clear","nameSearch","APIHelpers","Sort","orgApplicationDetails","serviceId","sortFlag","checkIfRequestable","relatedAppsArray","getOrganizationRequestableApps","requestable","getGrantArrayData","grantArray","promises","grant","getPerson","grantee","person","getOrganization","getPersonPackageClaims","claims","packageClaims","grantList","getOrganizationGrantedApps","relatedApps","sort","sortValue","listSort","userList","parseGrantUsersByStatus","unparsedGrantList","filteredGrantUsers","newGrants","switchDivision","getGrants","requestRelatedApp","service","requestor","type","postRequest","mobileTabs","tab","bundled","related","suspendApplication","suspendObj","owningOrganization","realm","suspendOrgPkg","suspendError","organizationApplications","getPackageServices","ArrayOfPackages","services","onLoad","previouslyLoaded","category","refine","parseInt","getOrganizationGrantedCount","reRenderPaginate","loadingError","updateSearchByName","goToDetails","orgAppSearch","packageRequests","processNumberOfRequestedApps","pkgRequest","updateViewList","viewList","parentIndex","parent","realtedApp","getOrganizationsRequestableApps","expanded","reject","query","getOrganizationRequestableCount","toggleRequest","saveRequestsAndCheckout","request","relatedAppSelectedCount","relatedApp","getPersonRequestableApps","checkRelatedAppsBody","checkRelatedAndBundledApps","checkBundledApps","check","orgDetails","prevState","params","mobileHandler","profileUsersSwitch","appsHierarchySwitch","orgDetailsApps","orgDetailsHierarchy","pageLoader","addExpandedProperty","childOrgs","parentOrg","org","children","getOrganizationHierarchy","done","organizationHierarchy","goToOrgPrfile","toggleExpand","object","Organization","orgDetailsProfile","orgPromise","initOrganizationProfile","passwordPolicy","authenticationPolicy","securityAdmins","admins","CuiMobileNavFactory","UserList","orgDetailsUsers","getUserListAppCount","getPersonGrantedAppCount","initDirectory","apiCalls","getUsers","getQs","getUserCount","users","userCount","statusData","getCollectionValuesAndCount","setTitle","reRenderPagination","finally","sortingCallbacks","sortType","order","orderBy","updateSearchParams","actionCallbacks","refineType","hasOwnProperty","userClick","clickedUser","stateOpts","getOrgMembers","userAppDetails","dropDown","suspend","unsuspend","remove","getClaims","userClaims","getPackageClaims","getFormattedClaimData","claimSelection","packageClaim","claimId","grantedClaim","claimValues","claimValueId","claimValue","getApp","updating","getPersonGrantedApps","getRelatedApps","concat","buildData","suspendReason","unsuspendReason","justification","buildClaimData","buildPackageClaims","claimsObject","toggleDropDown","suspendApp","suspendPersonApp","suspendAppSuccess","unsuspendApp","unsuspendPersonApp","unsuspendAppSuccess","removeApp","revokePersonApp","removeAppSuccess","modifyClaims","grantClaims","modifyClaimsSuccess","userDetails","profileRolesSwitch","appsHistorySwitch","getPersonPassword","password","passwordAccount","getPasswordPolicy","policyId","rules","rule","numberOfPasswords","begun","specifyPassword","resetPassword","reset","confirm","encodeURIComponent","suspendPerson","cancel","unsuspendPerson","resetPersonPassword","resetPasswordValue","errorTimer","passwordHistoryError","newPassword","newPasswordConfirm","validate","formObject","input","validSwitch","isValidBoolean","validNewPassword","validNewPasswordRe","validateData","operations","validatePassword","validPasswordHistory","isPassed","$setValidity","specifyPersonPassword","subject","expirePersonPassword","passwordPolicyId","authenticationPolicyId","unlockUser","unlockPersonPassword","stutus","updatePerson","unlockUserSuccess","userDetailsApps","pendingService","grantedApp","getPersonPendingServicePackages","pendingServicePromises","getCategories","appCategories","userDetailsHistory","sortClicked","getPersonStatusHistory","personStatusHistory","userDetailsProfile","userDetailsRoles","getPersonRoles","assignedRoles","orgDirectory","orgHierarchy","storedData","updateOrgChildren","orgs","toggleAll","toggleFlag","updateFlag","division","sendInvitationError","userSelectedOrg","originalObject","organizationHierarchyRoot","array","text","loader","storedDatas","sendInvitation","validEmails","emailAddressError","emailArray","Array","emailAddress","createOrgDivisionInvitation","selectOrgFromList","goToOrg","tlo","createOrgCompanyInvitation","createPersonInvitation","orgProfile","factory","newGrant","newGrantsInStorage","updateStorage","storageType","pullFromStorage","scope","resourceId","packagesBeingRequested","packages","applicationCheckbox","reduce","packageCheckbox","requests","package","claimGrants","packageRequestObject","pkgId","packageGrants","version","NewGrant","newGrantClaims","loaderType","appsBeingRequestedforPopup","copy","administratorRights","claim","claimsPromises","map","grantPersonPackage","claimsData","claimData","searchType","categoryError","optsParser","unparsedCategory","goToClaimSelection","newGrantSearch","searchUpdate","queryArray","queryOptions","getPersonGrantableCount","getPersonGrantableApps","applicationList","grantableAppsError","payload","storedRequests","stateParams","newOrgGrantClaims","grantOrganizationPackage","newOrgGrant","newOrgGrantSearch","getOrganizationGrantableCount","getOrganizationGrantableApps","orgAppRequests","foundOrgs","foundPersons","foundPackages","qsArray","getOrg","Deferred","dfr","cached","getOrganizationSecured","getPackage","pkg","p","context","retriveOrgPendingApps","calls","each","pkgReq","creator","personData","packageData","isEmpty","when","apply","getPackageRequestsCount","orgAppRequestsCount","administrator","submitted","orgRegistrationRequests","start","window","performance","now","end","getOrgRegistrationRequests","regReq","registrant","getOrgRegistrationRequestsCount","orgRegistrationRequestsCount","time","organizationName","ServicePackage","organizationAppRequest","getAllDetails","getPackageDetails","reviewApprovals","organizationAppRequestReview","handleSuccess","requestData","handlePackageApproval","organizationRequest","requestedPackage","organizationRequestReview","approvedCount","deniedCount","getApprovalCounts","approval","denyOrgRegistrationRequest","rejectReason","approveOrgRegistrationRequest","approveOrganizationRequests","packageRequestCalls","packageRequest","pendingRequests","getAllUserPendingPackageData","storageData","submitCalls","pendingRequestsReview","goBack","PersonRequest","personRequest","userRegistrationRequestsCount","completePackageData","getPersonRegistrationRequestData","approvePersonRegistrationRequest","personRequestReview","denyPersonRegistrationRequest","approvePersonRequest","usersAppRequests","getPackageRequests","userAppRequestsCount","title","usersRegistrationRequests","searchByOrg","searchByPerson","val","getRegistrationRequests","getRegistrationRequestsCount","searchValue","getOrganizations","getPersons","orgRoles","globalSearch","currentParentOrg","timer","searchOrgId","searchterms","pageError","flattenOrgHierarchy","organizationArray","flatArray","flatten","childDivision","Error","addPerson","newPerson","add","searchNow","searchOrPage","searchParams","qsArrayNameSearch","countPersons","personCount","noRecords","orgsResponse","handleAll","accessToSecurityAndExchangeAdmins","orgClick","clickedOrd","$translateProvider","$locationProvider","$urlRouterProvider","$injector","localStorageServiceProvider","$cuiIconProvider","$cuiI18nProvider","$paginationProvider","$compileProvider","$cuiResizeHandlerProvider","$location","path","hasTrailingSlash","newPath","substr","setPrefix","customDependency","customDependencyName","dependencyType","customDependencyVersion","replace","setLocaleCodesAndNames","languageKeys","getLocaleCodesAndNames","returnRegisterAvailableLanguageKeys","languageKey","useLoader","registerAvailableLanguageKeys","uniformLanguageTag","determinePreferredLanguage","fallbackLanguage","setLocalePreference","iconSets","iconSet","defaultViewBox","paginationOptions","setPaginationOptions","breakpointOption","setBreakpoint","debugInfoEnabled","run","$rootScope","$http","$templateCache","$cuiI18n","routing","evalRouteRequest","Menu","$cuiIcon","PubSub","Theme","CuiRouteHistoryFactory","cuiApiInterceptor","cuiApiInterceptorConfig","apiUris","serviceUrl","stopIfInvalidPayload","debugServiceUrl","interceptors","interceptor","languageNameObject","LanguageKey","setLocales","$on","event","toState","toParams","fromState","fromParams","clearAll","preventDefault","attachAccessInfo","isObject","getRoles","entitlements","getEntitlements","publish","handleStateChange","route","userInfo","setUser","authenticateUser","redirect","initApi","stateStack","e","routeTextArray","uiroute","uirouteparams","getIconSets","iconSettings","namespace","cache","base","pendingNotificationFlag","charAt","toLowerCase","directive","$animate","restrict","link","attrs","elem","enabled","defaultTitle","getTitle","newTitle","getDefaultTitle","setDefaultTitle","newDefaultTitle","showIf","links","activeTitle","label","currentState","current","close","toggle","pubSubSubscription","subscribe","unsubscribe","routes","truncate","idx","transclude","closeAfter","onClose","$parse","require","element","ctrl","checkIfUnique","$eval","unique","$viewValue","newValues","oldValues","equals","CustomAPI","authInfo","myCUI","populateUserInfo","info","redirectOpts","roleList","entitlementList","cuid","getPersonEntitlements","setRoles","privilegeName","setEntitlements","setLocaleByDisplayName","getOrganizationWithAttributes","getNotificationDetails","canGrantAppToUser","getPersonPendingApps","pendingApps","totalCount","jwtAuthHandler","covAuth","originUri","authRedirect","location","href","appRedirect","api","retryUnseured","envDefs","dataCallDefs","cuiObject","logoutUrl","logout","covLogout","setAuthHandler","solutionInstancesUrl","setServiceUrl","covAuthInfo","apiFactory","setPersonData","getPersonData","sessionInfo","getCovAuthInfo","handleCovAuthResponse","selfRedirect","setAuthInfo","newAuthInfo","SharedService","create","details","for","apiHelpers","omitBy","isUndefined","param","buildPackageRequests","arrayOfApps","numberOfApps","isArray","requestReasonRequired","_reason","_error","createPackageRequest","collection","returnAsCollection","keyValue","collectionData","asObject","dataKey","BaseExtensions","Countries","Languages","Timezones","$translate","baseFactory","apiError","countries","getLanguageCode","getCurrentLanguageCode","theme","timezones","stateName","numberOfStates","counter","stateParamsFromStack","generateHiddenPassword","join","permitted","isPermitted","logic","isOrgAdmin","canGrantAppToOrg","errorName","personResponse","orgResponse","GetCountries","locale","setCountries","args","getCountryByCode","countryCode","countryObject","code","proposedLanguage","CustomAPIExtension","cmd","cmdType","accepts","call","contentType","storage","dataStorage","initStorageIfUndefined","saveToLocaStorage","deleteUserStorage","getUserStorage","appendToType","getDataThatMatches","comparison","matches","isMatch","replaceDataThatMatches","newData","deleteDataThatMatches","getLocaleCode","snapRemote","shouldShowMobileNav","innerWidth","onresize","debounce","open","hide","show","stateMenuOptions","factoryName","getOrganizationAdmins","getOrganizationSecurityAdmins","response","getOrganizationPasswordPolicy","getOrganizationAuthenticationPolicy","getAuthenticationPolicy","authPolicyId","organizationProfile","callsToComplete","callsCompleted","CommonAPI","PersonAndOrgRequestFactory","getPersonRegistrationRequest","registrationResponse","getOrgRegistrationRequest","getRegistrationRequestData","registrationRequest","organizationData","handleRequestApproval","decision","approvePersonRegistration","denyPersonRegistration","personRequestFactory","self","pub","build","timezone","securityQuestionAccount","question","answer","_registrationData","InvitedSubmit","servicePackageRequest","personRealm","uniqBy","makeNonceCall","method","tag","initiateNonce","result","isUsernameOrEmailTaken","defered","stringParams","valid","getSecurityQuestions","getOrganizationsCountNonce","getOrganizationsNonce","getSecurityQuestionsNonce","securedInitiate","invitationId","getOrganizationNonce","targetOrganization","submitData","postUserRegistrationNonce","packageRequestData","postPersonRequestNonce","getOrgAppsNonce","results","getOrgAppsCountNonce","getPasswordPoliciesNonce","message","toggleFor","listToSort","b","dateCreated","creation","activeTheme","defaultTheme","getTheme","setTheme","cssClass","getDefaultTheme","setDefaultTheme","clearActiveTheme","useDefaultTheme","setActiveDefaultTheme","getDefault","setDefault","useDefault","setActiveDefault","GetTimezones","setTimezones","getTimezoneById","timezoneById","newUser","newEntitlements","newRoles","getTodaysDate","today","dd","getDate","yyyy","getFullYear","mmm","toString","substring","initStatusHistory","getPersonDetailedStatusHistory","initPasswordChangeHistory","getPasswordCangeHistory","history","statusHistory","passwordChangeHistory","countResponse","setPhone","phone","initUser","tempUser","initSecurityQuestions","userSecurityQuestions","tempUserSecurityQuestions","allSecurityQuestions","allSecurityQuestionsDup","getSecurityQuestionAccount","numberOfQuestions","allChallengeQuestions0","allChallengeQuestions1","challengeQuestionsTexts","selectTextsForQuestions","userQuestion","initPasswordPolicy","initRegisteredDate","lastDate","activeStatusList","buildPersonPasswordAccount","currentPassword","saving","toggleOffFunctions","resetAllData","toggleAllOff","toggleOff","pushToggleOff","toggleOffObject","function","resetPasswordFields","userPasswordAccount","passwordRe","checkIfRepeatedSecurityAnswer","secQuestion","securityAnswerRepeatedIndex","findIndex","secQuestionToCompareTo","z","section","tempUserWithoutLastLogin","activatedDate","updatePassword","lifetimeError","updatePersonPassword","passwordUpdateSuccess","saveChallengeQuestions","updateSecurityQuestionAccount","validNewPasswordHistory","validNewPasswordDisallowed","validNewPasswordReHistory","validNewPasswordReDisallowed","validateDisallowed","disallowedFlag","requestorId","requestorType","appRequestsObject","newAppRequestsObject","buildReason","tempApp","arrayOfAppsBeingRequested","arrayOfPackagesBeingRequested","arrayOfPackageRequests","reasonRequired","some","servicePackageStorage","packageServices","newServicePackageArray","checkStorage","packageDetails","getPersonPendingPackages","servicePackages","pendingPackageData","packageDetailCalls","pendingPackages","pendingPackage","approvePackage","denyPackage","myApplicationDetails","manageApplications","checkedLocalStorage","popupCount","getCountsOfcategories","loadStoredData","getPersonAppCategories","myApplications","displayable","localStorage","applicationReview","applicationRequestArray","requestsValid","attempting","requestsPromises","customError","extendedData","newAppRequest","loadingDone","pendingAppRequests","applicationSearch","doneReloading","getPersonRequestableCount","doneLoading","document","ready","otherwise","bootstrap"],"mappings":"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","file":"app.js","sourcesContent":["(function(angular, $) {\n\n\tlet appConfig\n\tlet packageJson\n\tlet i18nPackageJson\n\n\t$.get('./appConfig.json')\n\t.then(function(configData) {\n\t\tappConfig = Object.assign({}, appConfig, configData)\n\t\treturn $.get('./appConfig-env.json')\n\t})\n\t.then(function(envConfigData) {\n\t\tappConfig = Object.assign({}, appConfig, envConfigData)\n\t\treturn $.get('./package.json')\n\t})\n\t.then(function(packageJsonData) {\n\t\tpackageJson = Object.assign({}, packageJson, packageJsonData)\n\t\tif (appConfig.languageResources.dependencyOrigin === 'cui-idm-b2x') {\n\t\t\treturn $.get('./node_modules/@covisint/cui-i18n/package.json')\n\t\t}\n\t\telse return undefined\n\t})\n\t.then(function(i18nPackageJsonData) {\n\t\tif (i18nPackageJsonData !== undefined) {\n\t\t\ti18nPackageJson = Object.assign({}, i18nPackageJson, i18nPackageJsonData)\t\n\t\t}\n\t})\n\t.always(function() {\n\r\nangular.module('user', [])\n.config(['$stateProvider', function($stateProvider) {\n\n\tconst templateBase = 'app/modules/user/';\n\n    const returnCtrlAs = function(name, asPrefix) {\n        return name + 'Ctrl as ' + (asPrefix? asPrefix : '') + (asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name);\n    };\n\n    const loginRequired = true;\n\n    $stateProvider\n        .state('user', {\n            url: '/user',\n            template: '<div ui-view></div>',\n            access:loginRequired\n        })\n        .state('user.profile', {\n            url: '/profile',\n            templateUrl: templateBase + 'profile/user-profile.html',\n            controller: returnCtrlAs('userProfile'),\n            access:loginRequired\n        })\n        .state('user.history',{\n            url: '/history',\n            templateUrl: templateBase + 'history/user-history.html',\n            controller: returnCtrlAs('userHistory'),\n            access:loginRequired\n        })\n        .state('user.appRequestHistory',{\n            url: '/appRequestHistory?name&page&pageSize&sortBy&status',\n            templateUrl: templateBase + 'appHistory/app-requestHistory.html',\n            controller: returnCtrlAs('appRequestHistory'),\n            access:loginRequired\n        })\n        .state('user.appGrantHistory',{\n            url: '/appGrantHistory?name&page&pageSize&sortBy&status',\n            templateUrl: templateBase + 'appHistory/app-grantHistory.html',\n            controller: returnCtrlAs('appGrantHistory'),\n            access:loginRequired\n        })\n        .state('user.roles',{\n            url: '/roles',\n            templateUrl: templateBase + 'roles/user-roles.html',\n            controller: returnCtrlAs('userRoles'),\n            access:loginRequired\n        });\n\n}]);\n\r\nangular.module('user')\n.controller('appGrantHistoryCtrl', function(Loader, User, $scope, API, APIError, $filter,$pagination,$q,$state,$stateParams) {\n\n    const appGrantHistory = this\n    const scopeName = 'appGrantHistory.'\n    appGrantHistory.search = Object.assign({}, $stateParams)\n    appGrantHistory.search.page = appGrantHistory.search.page || 1;\n    appGrantHistory.paginationPageSize = appGrantHistory.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\n    appGrantHistory.search.pageSize = appGrantHistory.paginationPageSize;\n    appGrantHistory.searchBy='name'\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\n\n    appGrantHistory.pageGrantedChange = (newpage) => {\n        appGrantHistory.updateSearch('page', newpage)\n    }\n\n    appGrantHistory.updateSearch = (updateType, updateValue) => {\n        switch (updateType) {\n            case 'eventdate':\n                switchBetween('sortBy', '+eventDate', '-eventDate')\n                break\n            case 'eventType':\n                switchBetween('sortBy', '+eventType', '-eventType')\n                break\n            case 'actorId':\n                switchBetween('sortBy', '+actorId', '-actorId')\n                break\n            case 'status':\n                appGrantHistory.search.page = 1\n                appGrantHistory.search['status'] = updateValue\n                break\n            case 'search':\n                if(appGrantHistory.searchBy==='name')\n                    appGrantHistory.search['name'] = updateValue\n                else\n                    appGrantHistory.search['eventType'] = updateValue\n                break\n\n        }\n\n        let queryParams = [['page', String(appGrantHistory.search.page)], ['pageSize', String(appGrantHistory.search.pageSize)]];\n        if(appGrantHistory.search.sortBy)\n            queryParams.push(['sortBy',appGrantHistory.search['sortBy']])\n        if(appGrantHistory.search.status)\n            queryParams.push(['status',appGrantHistory.search['status']])\n        if(appGrantHistory.search.name)\n            queryParams.push(['name',appGrantHistory.search['name']])\n        if(appGrantHistory.search.eventType)\n            queryParams.push(['eventType',appGrantHistory.search['eventType']])\n        const opts = {\n            personId:User.user.id,\n            qs: queryParams\n        };\n\n        // doesn't change state, only updates the url\n        $state.transitionTo('user.appGrantHistory', appGrantHistory.search, { notify:false })\n            console.log(appGrantHistory.search);\n             appGrantHistory.grantedHistory = [];\n             API.cui.getPersonApplicationsGrantHistory(opts)\n             .then(res => {\n               appGrantHistory.grantedHistory=res;\n                // if(appGrantHistory.grantedHistory.length>0)\n                //     getPkgDetailsGrant(appGrantHistory.grantedHistory);\n                $scope.$digest()\n             })\n             .fail(err =>{\n                APIError.onFor(scopeName + 'initHistory')\n                console.log(err)\n             })\n          //onLoadGranted(true,opts)\n    }\n\n    const switchBetween = (property, firstValue, secondValue) => {\n        // helper function to switch a property between two values or set to undefined if values not passed\n        if (!firstValue) {\n            appGrantHistory.search[property] = undefined\n            return\n        }\n        appGrantHistory.search[property] = appGrantHistory.search[property] === firstValue\n            ? secondValue\n            : firstValue\n    }\n\n     const getCountsOfStatus=(qsValue)=>{\n        let opts = {\n            personId: API.getUser(),\n            useCuid:true\n        }\n        //Assign query strings if any value passed \n        //otherwise it will get full count\n        if (qsValue) {\n            opts.qs = [['status',qsValue]]\n        }\n        API.cui.getPersonApplicationsGrantHistory(opts)\n        .then(res=>{\n            if (!qsValue) {\n                appGrantHistory.popupGrantedCount=res.length;\n                console.log(appGrantHistory.popupGrantedCount);\n            }else if (qsValue===\"active\") {\n                appGrantHistory.activeCount=res.length;\n                console.log(appGrantHistory.activeCount);\n            }\n            else{\n                appGrantHistory.suspendedCount=res.length;\n                console.log(appGrantHistory.suspendedCount);\n            }\n            $scope.$digest();\n        })\n        .fail(err=>{\n\n        })\n    }\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    appGrantHistory.user=User.user\n\n    let queryParams = [['page', String(appGrantHistory.search.page)], ['pageSize', String(appGrantHistory.search.pageSize)]];\n        if(appGrantHistory.search.sortBy)\n            queryParams.push(['sortBy',appGrantHistory.search['sortBy']])\n        const opts = {\n            personId:User.user.id,\n            qs: queryParams\n        };\n\n    Loader.onFor(scopeName + 'initHistory')\n     API.cui.getPersonApplicationsGrantHistory(opts)\n     .then(res => {\n        appGrantHistory.grantedHistory=res;\n        // if(appGrantHistory.grantedHistory.length>0)\n        //     getPkgDetailsGrant(appGrantHistory.grantedHistory);\n        // if(appGrantHistory.requestedHistory.length>0)\n        //     getPkgDetailsRequested(appGrantHistory.requestedHistory);\n        //to display in popover\n        getCountsOfStatus(\"active\")\n        getCountsOfStatus(\"suspended\")\n        //To getFull count\n        getCountsOfStatus(undefined)\n    \n        return API.cui.getPersonApplicationsGrantHistoryCount(opts)\n     })\n     .then(res =>{\n        console.log(res)\n        appGrantHistory.count=res\n        Loader.offFor(scopeName + 'initHistory')\n        $scope.$apply();\n     })\n     .fail(err =>{\n        APIError.onFor(scopeName + 'initHistory')\n        console.log(err)\n     })\n     .always( ()=>{\n        Loader.offFor(scopeName + 'initHistory')\n        $scope.$digest()\n     })\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\n    \n})\r\nangular.module('user')\n.controller('appRequestHistoryCtrl', function(Loader, User, $scope, API, APIError, $filter,$pagination,$q,$state,$stateParams) {\n\n    const appRequestHistory = this\n    const scopeName = 'appRequestHistory.'\n    appRequestHistory.search = Object.assign({}, $stateParams)\n    appRequestHistory.search.page = appRequestHistory.search.page || 1;\n    appRequestHistory.paginationPageSize = appRequestHistory.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\n    appRequestHistory.search.pageSize = appRequestHistory.paginationPageSize;\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\n\n    appRequestHistory.pageChange = (newpage) => {\n        appRequestHistory.updateSearch('page', newpage)\n    }\n\n    appRequestHistory.updateSearch = (updateType, updateValue) => {\n        switch (updateType) {\n            case 'alphabetic':\n                switchBetween('sortBy', '+service.name', '-service.name')\n                break\n            case 'requesteddate':\n                switchBetween('sortBy', '+requestedDate', '-requestedDate')\n                break\n            case 'decisiondate':\n                switchBetween('sortBy', '+evaluationDate', '-evaluationDate')\n                break\n            case 'eventdate':\n                switchBetween('sortBy', '+eventDate', '-eventDate')\n                break\n            case 'eventType':\n                switchBetween('sortBy', '+eventType', '-eventType')\n                break\n            case 'actorId':\n                switchBetween('sortBy', '+actorId', '-actorId')\n                break\n            case 'evaluator':\n                switchBetween('sortBy', '+evaluatorId', '-evaluatorId')\n                break\n            case 'status':\n                appRequestHistory.search.page = 1\n                appRequestHistory.search['grant.status'] = updateValue\n                break\n        }\n\n        let queryParams = [['page', String(appRequestHistory.search.page)], ['pageSize', String(appRequestHistory.search.pageSize)]];\n        if(appRequestHistory.search.sortBy)\n            queryParams.push(['sortBy',appRequestHistory.search['sortBy']])\n        const opts = {\n            personId:User.user.id,\n            qs: queryParams\n        };\n\n        // doesn't change state, only updates the url\n        $state.transitionTo('user.appRequestHistory', appRequestHistory.search, { notify:false })\n            console.log(appRequestHistory.search);\n            appRequestHistory.requestedHistory = [];\n             API.cui.getPersonApplicationsRequestHistory(opts)\n             .then(res => {\n                appRequestHistory.requestedHistory=res;\n                // if(appRequestHistory.requestedHistory.length>0)\n                //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\n                $scope.$digest()\n             })\n             .fail(err =>{\n                APIError.onFor(scopeName + 'initHistory')\n                console.log(err)\n             })\n              //onLoad(true,opts)\n    }\n\n    const switchBetween = (property, firstValue, secondValue) => {\n        // helper function to switch a property between two values or set to undefined if values not passed\n        if (!firstValue) {\n            appRequestHistory.search[property] = undefined\n            return\n        }\n        appRequestHistory.search[property] = appRequestHistory.search[property] === firstValue\n            ? secondValue\n            : firstValue\n    }\n/*\n     const onLoad = (previouslyLoaded,opts) => {\n        console.log(appRequestHistory.search);\n        appRequestHistory.requestedHistory = [];\n         API.cui.getPersonApplicationsRequestHistory({personId:User.user.id,'qs':[['sortBy',appRequestHistory.search['sortBy']]] })\n         .then(res => {\n            appRequestHistory.requestedHistory=res;\n            // if(appRequestHistory.requestedHistory.length>0)\n            //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\n            $scope.$digest()\n         })\n         .fail(err =>{\n            APIError.onFor(scopeName + 'initHistory')\n            console.log(err)\n         })\n     }*/\n\n/*     const onLoadGranted = (previouslyLoaded) => {\n        appRequestHistory.grantedHistory = [];\n         API.cui.getPersonApplicationsGrantHistory({personId:User.user.id,'qs':[['sortBy',appRequestHistory.search['sortBy']]] })\n         .then(res => {\n           appRequestHistory.grantedHistory=res;\n            // if(appRequestHistory.grantedHistory.length>0)\n            //     getPkgDetailsGrant(appRequestHistory.grantedHistory);\n            $scope.$digest()\n         })\n         .fail(err =>{\n            APIError.onFor(scopeName + 'initHistory')\n            console.log(err)\n         })\n     }*/\n\n     const getCountsOfStatus=(qsValue)=>{\n        let opts = {\n            personId: API.getUser(),\n            useCuid:true\n        }\n        //Assign query strings if any value passed \n        //otherwise it will get full count\n        if (qsValue) {\n            opts.qs = [['status',qsValue]]\n        }\n        API.cui.getPersonApplicationsGrantHistory(opts)\n        .then(res=>{\n            if (!qsValue) {\n                appRequestHistory.popupGrantedCount=res.length;\n                console.log(appRequestHistory.popupGrantedCount);\n            }else if (qsValue===\"active\") {\n                appRequestHistory.activeCount=res.length;\n                console.log(appRequestHistory.activeCount);\n            }\n            else{\n                appRequestHistory.suspendedCount=res.length;\n                console.log(appRequestHistory.suspendedCount);\n            }\n            $scope.$digest();\n        })\n        .fail(err=>{\n\n        })\n    }\n\n    const getCountsOfApproved=(qsValue)=>{\n        let opts = {\n            personId: API.getUser(),\n            useCuid:true\n        }\n        //Assign query strings if any value passed \n        //otherwise it will get full count\n        if (qsValue) {\n            opts.qs = [['status',qsValue]]\n        }\n        API.cui.getPersonApplicationsRequestHistory(opts)\n        .then(res=>{\n            if (!qsValue) {\n                appRequestHistory.popuprequestedCount=res.length;\n                console.log(appRequestHistory.popuprequestedCount);\n            }else if (qsValue===\"active\") {\n                appRequestHistory.yesCount=res.length;\n                console.log(appRequestHistory.yesCount);\n            }\n            else{\n                appRequestHistory.noCount=res.length;\n                console.log(appRequestHistory.noCount);\n            }\n            $scope.$digest();\n        })\n        .fail(err=>{\n\n        })\n    }\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    appRequestHistory.user=User.user\n\n    let queryParams = [['page', String(appRequestHistory.search.page)], ['pageSize', String(appRequestHistory.search.pageSize)]];\n        if(appRequestHistory.search.sortBy)\n            queryParams.push(['sortBy',appRequestHistory.search['sortBy']])\n        const opts = {\n            personId:User.user.id,\n            qs: queryParams\n        };\n\n    Loader.onFor(scopeName + 'initHistory')\n     API.cui.getPersonApplicationsRequestHistory(opts)\n     .then(res => {\n        appRequestHistory.requestedHistory=res;\n        // if(appRequestHistory.requestedHistory.length>0)\n        //     getPkgDetailsRequested(appRequestHistory.requestedHistory);\n/*        //to display in popover\n        getCountsOfStatus(\"active\")\n        getCountsOfStatus(\"suspended\")\n        //To getFull count\n        getCountsOfStatus(undefined)*/\n/*        //to display in popover\n        getCountsOfStatus(\"active\")\n        getCountsOfStatus(\"suspended\")\n        //To getFull count\n        getCountsOfStatus(undefined)*/\n       /* Loader.offFor(scopeName + 'initHistory')\n        $scope.$apply();*/\n        return API.cui.getPersonApplicationsRequestHistoryCount(opts) \n     })\n     .then(res => {\n        appRequestHistory.count=res\n        Loader.offFor(scopeName + 'initHistory')\n        $scope.$apply();\n     })\n     .fail(err =>{\n        APIError.onFor(scopeName + 'initHistory')\n        console.log(err)\n     })\n     .always( ()=>{\n        Loader.offFor(scopeName + 'initHistory')\n        $scope.$digest()\n     })\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\n    \n})\r\nangular.module('user')\n.controller('userHistoryCtrl', function(Loader, User, UserHistory, $scope) {\n\n    const userHistory = this\n    const scopeName = 'userHistory.'\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\n\n    /* -------------------------------------------- HELPER FUNCTIONS END ----------------------------------------------- */\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n    UserHistory.injectUI(userHistory, $scope, User.user.id)\n    userHistory.user=User.user;  //give user info to userhistory\n    userHistory.lastLogin=User.user.lastLoginDate\n    userHistory.userName=User.user.name;\n    Loader.onFor(scopeName + 'initHistory')\n    UserHistory.initUserHistory(User.user.id)\n    .then(res => {\n        angular.merge(userHistory, res)\n        Loader.offFor(scopeName + 'initHistory')\n    })\n\n    /* -------------------------------------------- ON LOAD END --------------------------------------------- */\n    \n})\r\nangular.module('user')\n.controller('userProfileCtrl', function(Loader, User, UserProfile, $scope) {\n\n    const userProfile = this\n    const scopeName = 'userProfile.'\n    //$cuiIconProvider.iconSet('cui','node_modules/@covisint/cui-icons/dist/icons/icons-out.svg','0 0 48 48')\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\n\n    //Error handler for email inline Edit tag\n    //Commenting out Inline Editing changes as they might not needed\n    // userProfile.email=function(value){\n    //     let EMAIL_REGXP=/^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/i\n    //     if (!angular.isDefined(value)) {\n    //         userProfile.emailError={};\n    //     }else{\n    //         userProfile.emailError={\n    //             required: value===\"\" || !value,\n    //             email:!EMAIL_REGXP.test(value)\n    //         }\n    //     }\n    //     userProfile.noSaveEmail= value===\"\" || !value || !EMAIL_REGXP.test(value)\n    // }\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    userProfile.maskAnswers=true;\n    userProfile.inputType = 'password';\n    userProfile.updateUIMasking=function(){\n         if(userProfile.maskAnswers){\n            userProfile.inputType='password';\n        }\n        else{\n            userProfile.inputType='text';\n        }\n    }\n    \n    UserProfile.injectUI(userProfile, $scope, User.user.id)\n\n    Loader.onFor(scopeName + 'initProfile')\n\n    UserProfile.initUserProfile(User.user.id, User.user.organization.id)\n    .then(res => {\n        angular.merge(userProfile, res)\n        Loader.offFor(scopeName + 'initProfile')\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n})\n\r\nangular.module('user')\n.controller('userRolesCtrl', function(Loader, User, UserProfile, $scope, API, APIError, $timeout, $state) {\n    'use strict';\n\n    const userRoles = this\n    const scopeName = 'userRoles.'\n    userRoles.user=User.user\n    userRoles.grantedHistoryError=false\n    userRoles.getRolesDetailsError=false\n    userRoles.appCheckbox={}\n\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    var handleError = function handleError(err) {\n        userRoles.loading = false;\n        $scope.$digest();\n        console.log('Error', err);\n    };\n\n    \n\n    let init = function init(){\n        userRoles.success=false\n        Loader.onFor(scopeName + 'initHistory')\n        API.cui.getPersonRolesOnly({personId:User.user.id})\n        .then(res =>{\n            userRoles.rolesDetails=res;\n            initiGrantable();\n        })\n        .fail(err =>{\n            Loader.offFor(scopeName + 'initHistory')\n            APIError.onFor(scopeName + 'initHistory')\n            userRoles.getRolesDetailsError=true\n            initiGrantable();\n        })\n    };\n\n    let initiGrantable = function initiGrantable(){\n        API.cui.getPersonRolesGrantable({personId:User.user.id})\n            .then(res =>{\n                userRoles.rolesGrantable=res\n                Loader.offFor(scopeName + 'initHistory')\n                $scope.$digest()\n            })\n            .fail(err =>{\n                Loader.offFor(scopeName + 'initHistory')\n                APIError.onFor(scopeName + 'initHistory')\n                userRoles.grantedHistoryError=true\n                $scope.$digest()\n            })\n    };\n\n    init();\n    \n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n    userRoles.assignRoles = () =>{\n       let roles =[]\n       angular.forEach(userRoles.appCheckbox,function(dsd,appId){\n       /*Object.keys(userRoles.appCheckbox).forEach(function(appId) {*/\n           if(dsd){\n                let test={\n                \"id\":appId\n               }\n               roles.push(test)\n           }\n        });\n        let rolesSubmitData={\n        \"userId\": User.user.id,\n        \"roles\": roles\n        }\n        console.log(rolesSubmitData)\n        \n       Loader.onFor(scopeName + 'initHistory')\n        API.cui.assignPersonRoles({data:rolesSubmitData})\n        .then(res =>{\n            console.log(res)\n            Loader.offFor(scopeName + 'initHistory')\n            $scope.$digest()\n            userRoles.success=true\n             $timeout(() => {\n                init();\n            }, 3000);\n            \n        })\n        .fail(err =>{\n            Loader.offFor(scopeName + 'initHistory')\n            APIError.onFor(scopeName + 'initHistory')\n            userRoles.rolessubmitError=true\n            $scope.$digest()\n        })\n    }\n/*    userRoles.checkrequest = (roleId) =>{\n        if (!userRoles.selectedCheckbox[roleId]) {\n            userRoles.selectedCheckbox[roleId] = roleId\n        } else {\n            delete userRoles.selectedCheckbox[roleId]\n        }\n        if(Object.keys(userRoles.selectedCheckbox).length<0){\n            \n        }else{\n            userRoles.appCheckboxValid=true\n        }\n    }*/\n     $scope.$watch(\"userRoles.appCheckbox\", function(n) {\n       let count=0\n       angular.forEach(userRoles.appCheckbox,function(dsd,key){\n        console.log(key)\n        if(dsd)\n            count+=1\n       })\n       if(count>0){\n        userRoles.appCheckboxValid=true\n       }else{\n        userRoles.appCheckboxValid=false\n       }\n    }, true);\n    // ON CLICK END ----------------------------------------------------------------------------------\n});\n\n\r\nangular.module('registration',[])\n.config(['$stateProvider', function($stateProvider) {\n\n\tconst templateBase = 'app/modules/registration/';\n\n    const returnCtrlAs = function(name, asPrefix) {\n        return name + 'Ctrl as ' + (asPrefix? asPrefix : '') + (asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name);\n    };\n\n    $stateProvider\n\t.state('registration', {\n\t\turl: '/register',\n        template: '<div ui-view></div>'\n    })\n    .state('registration.walkup', {\n        url: '/walkup',\n        templateUrl:templateBase + 'userWalkup/userWalkup.html',\n        controller: returnCtrlAs('userWalkup'),\n        menu: {\n            desktop: false,\n            mobile: false\n        }\n    })\n    .state('registration.invitation', {\n        url: '/invitation?inviteId&pin',\n        templateUrl:templateBase + 'userInvited/userInvited.html',\n        controller: returnCtrlAs('userInvited'),\n        menu: {\n            desktop: false,\n            mobile: false\n        }\n    });\n\n}]);\n\r\nangular.module('registration')\n.controller('userInvitedCtrl', function(APIError, localStorageService, Registration, $scope, $state,$q,LocaleService, $window,Base,$stateParams,$pagination,$filter) {\n\n    const userInvited = this\n    let encodedString = btoa($stateParams.inviteId+':'+$stateParams.pin)\n    userInvited.applications = {}\n    userInvited.userLogin = {}\n    userInvited.applications.numberOfSelected = 0\n    userInvited.submitError = false\n    userInvited.languages=[];\n    userInvited.showOrgInfo = false\n    userInvited.pageSize = userInvited.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\n    // need to initialize to avoid undefined error when preselecting apps based on invitation data\n    userInvited.applications.selected={}\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    //for detectig browser time\n    var d = new Date();\n    var tz = d.toTimeString();\n\n    //for detectig browser language\n    var lang = $window.navigator.language || $window.navigator.userLanguage;\n\n    if (lang.indexOf('en-')>=0) { userInvited.browserPreference='en'; }\n    else if (lang.indexOf('zh')>=0) {userInvited.browserPreference='zh'; }\n    else if (lang.indexOf('pl')>=0) { userInvited.browserPreference='pl'; }\n    else if (lang.indexOf('pt')>=0) { userInvited.browserPreference='pt'; }\n    else if (lang.indexOf('tr')>=0) { userInvited.browserPreference='tr'; }\n    else if (lang.indexOf('fr')>=0) { userInvited.browserPreference='fr'; }\n    else if (lang.indexOf('ja')>=0) { userInvited.browserPreference='ja'; }\n    else if (lang.indexOf('es')>=0) { userInvited.browserPreference='es'; }\n    else if (lang.indexOf('de')>=0) { userInvited.browserPreference='de'; }\n    else if (lang.indexOf('ru')>=0) { userInvited.browserPreference='ru'; }\n    else if (lang.indexOf('it')>=0) { userInvited.browserPreference='it'; }\n    else { \n        console.log(lang+ \"not supported\")\n        userInvited.browserPreference='en'; \n    }\n    //LocaleService.setLocaleByDisplayName(appConfig.languages[userInvited.browserPreference])\n    userInvited.initializing = true\n\n    if (!localStorageService.get('userInvited.user')) {\n        // If registration is not saved in localstorage we need to initialize \n        // these arrays so ng-model treats them as arrays rather than objects \n        userInvited.user = { addresses: [] }\n        userInvited.user.addresses[0] = { streets: [] }\n        userInvited.user.phones = []\n    } \n    else {\n        userInvited.user = localStorageService.get('userInvited.user');\n        \n    }\n\n    Object.keys(Base.languages).forEach(function(id,index){\n        userInvited.languages[index]={\n            id:id\n        }\n    })\n    Object.values(Base.languages).forEach(function(language,index){\n        userInvited.languages[index].name=language;\n    })\n    userInvited.user.language=_.find(userInvited.languages,{id:userInvited.browserPreference})\n    Registration.initInvitedRegistration(encodedString)\n    .then(res => {\n        const questions = res.securityQuestions\n\n        // Split questions to use between 2 dropdowns\n        questions.splice(0, 1)\n        const numberOfQuestionsFloor = Math.floor(questions.length / 2)\n\n        userInvited.userLogin.challengeQuestions1 = questions.slice(0, numberOfQuestionsFloor)\n        userInvited.userLogin.challengeQuestions2 = questions.slice(numberOfQuestionsFloor)\n\n        // Preload questions into input\n        userInvited.userLogin.question1 = userInvited.userLogin.challengeQuestions1[0]\n        userInvited.userLogin.question2 = userInvited.userLogin.challengeQuestions2[0]\n\n        // Populate organization Data\n        userInvited.organization = res.organization\n        userInvited.invitationData=res.invitationData\n\n        //Check restrict Email flag\n        userInvited.user.email=\"\"\n        if (userInvited.invitationData.restrictEmail) {\n            userInvited.user.email=userInvited.invitationData.email\n            userInvited.emailRe=userInvited.user.email\n        }\n        userInvited.initializing = false\n    })\n    .catch(error => {\n        console.error(error)\n        if (error.responseJSON && error.responseJSON.apiMessage.indexOf(encodedString)>0) {\n                userInvited.initializing=false\n                APIError.onFor('RegistrationFactory.inValidInvite')\n        }else{\n            $state.go('misc.loadError')\n        }\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n\n    userInvited.applications.updateNumberOfSelected = (checkboxValue) => {\n        // Update the number of selected apps everytime on of the boxes is checked/unchecked\n        if (checkboxValue !== null) {\n            userInvited.applications.numberOfSelected += 1;\n        } else {\n            userInvited.applications.numberOfSelected -= 1;\n        }\n        userInvited.applications.process()\n    }\n\n    userInvited.applications.updateSelected = (application, checkboxValue, index) => {\n        if (checkboxValue === true) {\n            userInvited.applications.selected[index]=application.id+','+application.packageId+','+application.name+','+application.showTac\n            userInvited.applications.numberOfSelected += 1;\n        } else {\n            delete userInvited.applications.selected[index]          \n            userInvited.applications.numberOfSelected -= 1;\n        }\n    }\n\n    userInvited.getAppicationTaC = () => {\n        angular.forEach(userInvited.applications.processedSelected, app =>{\n            //need to change later to ===\n            if (app.showTac=='true' && app.tac===undefined) {\n                Registration.getTac(app.packageId)\n                .then(res =>{\n                    app.tac=res;\n                })\n                .catch(err=> {\n                    console.log(err);\n                })\n            };\n        })\n    }\n\n    //Check TAC flag for selected applications\n    userInvited.checkTacFlag = (selectedApplications) => {\n        let TacCount=0;\n        angular.forEach(selectedApplications,app =>{\n            //need to change later to ===\n            if (app.showTac=='true') {\n                TacCount++;\n            };\n        })\n        return TacCount\n    }\n\n    userInvited.showTac= (index) => {\n        if (userInvited.applications.processedSelected[index].tac) {\n            userInvited.tacContent=userInvited.applications.processedSelected[index].tac.tacText\n            userInvited.applications.step=3\n        }\n    } \n\n    userInvited.applications.process = () => {\n        // Process the selected apps when you click next after selecting the apps you need\n        // returns number of apps selected\n        let oldSelected\n        let index=0;\n        if (userInvited.applications.processedSelected) {\n            oldSelected = userInvited.applications.processedSelected\n        }\n\n        // Fixes issue where adding and removing selected apps would leave objects with null values\n        angular.forEach(userInvited.applications.selected, (app, i) => {\n            if (app === null) delete userInvited.applications.selected[i]\n        })\n\n        userInvited.applications.processedSelected = []\n\n        angular.forEach(userInvited.applications.selected, function(app, i) {\n            if (app !== null) {\n                userInvited.applications.processedSelected.push({\n                    id: app.split(',')[0],\n                    packageId: app.split(',')[1],\n                    name: app.split(',')[2],\n                    // this fixes an issue where removing an app from the selected list that the user \n                    // had accepted the terms for would carry over that acceptance to the next app on the list\n                    acceptedTos: ((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].acceptedTos : false),\n                    showTac:app.split(',')[3],\n                    tac:((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].tac :undefined)\n                })\n            }\n            index++;\n        })\n        return userInvited.checkTacFlag(userInvited.applications.processedSelected)\n        \n    }\n\n    userInvited.submit = () => {\n        userInvited.submitting = true\n        userInvited.submitError = false\n\n        const registrationData = {\n            profile: userInvited.user,\n            organization: userInvited.organization,\n            login: userInvited.userLogin,\n            applications: userInvited.applications,\n            userCountry: userInvited.userCountry,\n            requestReason:userInvited.reason\n        }\n\n        Registration.invitedSubmit(registrationData,encodedString,$stateParams.inviteId)\n        .then(() => {\n            userInvited.success = true\n            userInvited.submitting = false\n            $state.go('misc.success')\n        })\n        .catch(error => {\n            userInvited.submitError = true\n            userInvited.submitting = false\n            if (error.responseJSON) {\n                userInvited.errorMessage = error.responseJSON.apiMessage\n            }\n            else {\n                userInvited.errorMessage = 'Error submitting registration request'\n            }\n        })\n    }\n\n    userInvited.selectOrganization = () => {\n        userInvited.applications.numberOfSelected = 0 // Restart applications count\n        userInvited.applications.processedSelected = undefined // Restart applications selected\n\n        Registration.selectOrganization(userInvited.organization, userInvited.pageSize)\n        .then(res => {\n            const grants = res.grants\n            userInvited.appCount=res.appCount\n            if (!grants.length) userInvited.applications.list = undefined\n            else {\n                userInvited.applications.list = grants\n                //Preselect the applications selected by admin\n                if (userInvited.invitationData.servicePackage) {\n                    let flagObject=userInvited.preSelectApps(userInvited.applications.list,false,false)\n                    // Check whether we found main apps and sub apps in the current pagination\n                    if(flagObject.appsFoundFlag&&flagObject.subappsFoundFlag){\n                        userInvited.applications.process()\n                    }\n                    // application or subapplication was not retrieved in current set of pagination\n                    // need to retrieve all apps and pre selects them\n                    else{\n                        userInvited.getAllOrgApps(flagObject)\n                        .then(() =>{\n                            userInvited.applications.process()\n                        })\n                    }\n                }\n            }\n            // userInvited.reRenderPaginate && userInvited.reRenderPaginate()\n            userInvited.passwordRules = res.passwordRules\n        })\n        .fail((error) => {\n            console.error('Error getting organization information', error)\n            APIError.onFor('userInvited.orgInfo', error)\n        })\n        .always(() => {\n            $scope.$digest()\n        })\n    }\n\n    //Updates the selected apps and count and set the found flags\n    userInvited.selectAndUpdateFlags = (application, flags) => {\n        userInvited.applications.selected[application.id]=application.id+','+application.servicePackage.id+','+$filter('cuiI18n')(application.name)+','+application.servicePackage.personTacEnabled\n        flags[application.id]=true\n        if (application.bundledApps&&Object.keys(flags).length===1) {\n            application.bundledApps.forEach(app=>{\n                flags[app.id]=false\n            })\n        }\n        return flags;\n    }\n    \n    userInvited.preSelectApps= (appList,appsFoundFlag,subappsFoundFlag) => {\n        let bundledAppFlags={}\n        let subappFlags={}\n        appList.forEach(application => {\n            if(appsFoundFlag!==true&&userInvited.invitationData.servicePackage.id===application.servicePackage.id){\n                bundledAppFlags=userInvited.selectAndUpdateFlags(application,bundledAppFlags)\n            }\n            if(subappsFoundFlag!==true&&userInvited.invitationData.subPackage){\n                // If subpackages\n                if (userInvited.invitationData.subPackage.id.indexOf(',')>0) {\n                    // If multiple subpackages Then subPackage.id will be string like \"id1,id2,...idn\"\n                    let subPackages=userInvited.invitationData.subPackage.id.split(',')\n                    subPackages.forEach(subPackage=>{\n                        subappFlags[subPackage]=subappFlags[subPackage]||{}\n                        if (application.servicePackage.id.indexOf(subPackage)>0) {\n                            subappFlags[subPackage]=userInvited.selectAndUpdateFlags(application,subappFlags[subPackage])\n                        }\n                    })                    \n                }\n                else{\n                    // Single Subpackage\n                    if (application.servicePackage.id.indexOf(userInvited.invitationData.subPackage.id)>0) {\n                        subappFlags[userInvited.invitationData.subPackage.id]={}\n                        subappFlags[userInvited.invitationData.subPackage.id]=userInvited.selectAndUpdateFlags(application,subappFlags[userInvited.invitationData.subPackage.id])\n                    }\n                }\n            }\n        })\n        //Check whether we found all the main apps,\n        let count=0\n        let iteration=0\n        angular.forEach(bundledAppFlags,function(flag){\n            iteration++\n            if (flag===false) {\n                count++\n            }\n            if (iteration===Object.keys(bundledAppFlags).length) {\n                if (count===0) {\n                    appsFoundFlag=true\n                }\n            }\n        })\n        //Check wether we found all the subapps,\n        count=0\n        iteration=0\n        let iterationOut=0\n        let countOut=0\n        angular.forEach(subappFlags,function(subpackage){\n            iterationOut++\n            if (Object.keys(subpackage).length!==0) {\n                angular.forEach(subpackage,function(flag){\n                    iteration++\n                    if (flag===false) {\n                        count++\n                    }\n                    if (iteration===Object.keys(subpackage).length) {\n                        if (count===0) {\n                            subappsFoundFlag=true\n                        }\n                    }\n                })\n            }\n            else{\n                countOut++\n            }\n            if (iterationOut===Object.keys(subappFlags).length) {\n                if (countOut===0) {\n                    subappsFoundFlag=true\n                }\n                else{\n                    subappsFoundFlag=false\n                }\n\n            }\n        })\n        userInvited.applications.numberOfSelected=Object.keys(userInvited.applications.selected).length\n        return {\n            appsFoundFlag:appsFoundFlag,\n            subappsFoundFlag:subappsFoundFlag\n        }\n    }\n\n    userInvited.getAllOrgApps=(flagObject) => {\n        let deferred=$q.defer()\n        let tempAllApps=[]\n        let tempAppsCount=userInvited.appCount\n        let page=0\n        let apiPromises=[]\n        do{\n            page++\n            apiPromises.push(Registration.getOrgAppsByPage(page,200,userInvited.organization.id))\n            tempAppsCount=tempAppsCount-200\n        }while(tempAppsCount>200)\n        $q.all(apiPromises)\n        .then(res=>{\n            res.forEach(appList=>{\n                userInvited.preSelectApps(appList,flagObject.appsFoundFlag,flagObject.subappsFoundFlag)\n            })\n            deferred.resolve()\n        })\n        return deferred.promise\n    }\n\n    userInvited.pageChange = (newpage) => {\n        userInvited.updatingApps = true\n        Registration.getOrgAppsByPage(newpage,userInvited.pageSize,userInvited.organization.id)\n        .then((res) => {\n            userInvited.page=newpage\n            if (!res.length) userInvited.applications.list = undefined\n            else {\n                userInvited.applications.list = res\n                userInvited.updatingApps = false\n            }\n        })\n    }\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n    /* -------------------------------------------- WATCHERS START -------------------------------------------- */\n\n    $scope.$watch('userInvited.user', (a) => {\n        if (a && Object.keys(a).length !== 0) {\n            localStorageService.set('userInvited.user', a);\n        }\n    }, true)\n\n    userInvited.checkDuplicateEmail = (value) => {\n        if (value &&value!==\"\") {\n            $q.all([Registration.isEmailTaken(value).promise])\n            .then(res => {\n                userInvited.isEmailTaken=res[0]\n            })\n        }\n        else{\n            userInvited.isEmailTaken=true;\n        }        \n    }\n    \n    userInvited.checkDuplicateEmail(userInvited.user.email)\n    userInvited.customErrors = {\n        userName: {\n            usernameTaken: Registration.isUsernameTaken\n        },\n        email: {\n            email: function(){\n                var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\n                if (userInvited.user.email) {\n                    return EMAIL_REGEXP.test(userInvited.user.email)\n                }else{\n                    return true;\n                }\n            }\n        },\n        answersMatch: {\n            answersMatch:function(){\n                if (userInvited.userLogin && userInvited.userLogin.challengeAnswer2) {\n                    return userInvited.userLogin.challengeAnswer2!==userInvited.userLogin.challengeAnswer1;\n                }else{\n                    return true\n                }\n            }\n        }\n    }\n\n    //Error handlers for Inline Edits in review page\n    userInvited.inlineEdit = {\n        firstName:function(value){\n            if (!angular.isDefined(value)) {\n                userInvited.inlineEdit.firstNameError={}\n            }\n            else{\n                userInvited.inlineEdit.firstNameError={\n                    required: value===\"\" || !value\n                }   \n            }\n            userInvited.inlineEdit.noSaveFirstName=value===\"\" || !value\n        },\n        lastName:function(value){\n            if (!angular.isDefined(value)) {\n                userInvited.inlineEdit.lastNameError={}\n            }\n            else{\n                userInvited.inlineEdit.lastNameError={\n                    required: value===\"\" || !value\n                }   \n            }\n            userInvited.inlineEdit.noSaveLastName=value===\"\" || !value\n        },\n        email:function(value){\n            var EMAIL_REGXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i\n            if (!angular.isDefined(value)) {\n                userInvited.inlineEdit.emailError={}\n            }\n            else{\n                userInvited.inlineEdit.emailError={\n                    required: value===\"\" || !value,\n                    email:!EMAIL_REGXP.test(value)\n                }\n                //emailTaken:\n                if (!userInvited.inlineEdit.emailError.required && !userInvited.inlineEdit.emailError.email) {\n                    userInvited.checkDuplicateEmail(value)\n                }\n                  \n            }\n            userInvited.inlineEdit.noSaveEmail=value===\"\" || !value || !EMAIL_REGXP.test(value)\n        },\n        //For autocomplete need to handle differently\n        country:function(value){\n            console.log(value)\n            if (!angular.isDefined(value)) {\n                userInvited.inlineEdit.countryError={\n                    required:true\n                }\n            }else{\n                userInvited.inlineEdit.countryError={\n                    required:false\n                }\n            }\n            userInvited.inlineEdit.noSaveCountry=value===undefined \n        },\n        address1:function(value){\n            if (!angular.isDefined(value)) {\n                userInvited.inlineEdit.address1Error={}\n            }\n            else{\n                userInvited.inlineEdit.address1Error={\n                    required: value===\"\" || !value\n                }   \n            }\n            userInvited.inlineEdit.noSaveAddress1=value===\"\" || !value\n        },\n        telephone:function(value){\n            if (!angular.isDefined(value)) {\n                userInvited.inlineEdit.telephoneError={}\n            }\n            else{\n                userInvited.inlineEdit.telephoneError={\n                    required: value===\"\" || !value\n                }   \n            }\n            userInvited.inlineEdit.noSaveTelephone=value===\"\" || !value\n        },\n        userId:function(value){\n            if (!angular.isDefined(value)) {\n                userInvited.inlineEdit.userIdError={}\n            }\n            else{\n                userInvited.inlineEdit.userIdError={\n                    required: value===\"\" || !value,\n                } \n                //usernameTaken: \n                if (!userInvited.inlineEdit.userIdError.required) {\n                    $q.all([Registration.isUsernameTaken(value).promise])\n                    .then(res => {\n                        userInvited.inlineEdit.userIdError.usernameTaken=!res[0]\n                        userInvited.inlineEdit.noSaveUserId=value===\"\" || !value ||userInvited.inlineEdit.userIdError.usernameTaken\n                    })\n                }\n                 \n            }\n             userInvited.inlineEdit.noSaveUserId=value===\"\" || !value\n        },\n        challengeAnswer1:function(value){\n            if (!angular.isDefined(value)) {\n                userInvited.inlineEdit.challengeAnswer1Error={}\n            }\n            else{\n                userInvited.inlineEdit.challengeAnswer1Error={\n                    required: value===\"\" || !value,\n                    answersMatch:value===userInvited.userLogin.challengeAnswer2\n                }   \n            }\n            userInvited.inlineEdit.noSaveChallengeAnswer1=value===\"\" || !value||value===userInvited.userLogin.challengeAnswer2\n        },\n        challengeAnswer2:function(value){\n            if (!angular.isDefined(value)) {\n                userInvited.inlineEdit.challengeAnswer2Error={}\n            }\n            else{\n                userInvited.inlineEdit.challengeAnswer2Error={\n                    required: value===\"\" || !value,\n                    answersMatch:value===userInvited.userLogin.challengeAnswer1\n                }   \n            }\n            userInvited.inlineEdit.noSaveChallengeAnswer2=value===\"\" || !value || value===userInvited.userLogin.challengeAnswer1\n        },\n        //on save functions needed to show error when pressed enter\n        updateFirstNameError:function(){\n            userInvited.inlineEdit.firstName(userInvited.user.name.given)\n        },\n        updateLastNameError:function(){\n            userInvited.inlineEdit.lastName(userInvited.user.name.surname)\n        },\n        updateEmailError: function() {\n            userInvited.emailRe=userInvited.user.email;\n            userInvited.inlineEdit.email(userInvited.user.email)\n        },\n        updateCountryError: function() {\n            if (userInvited.userCountry) {\n                userInvited.inlineEdit.countryError={\n                    required:false\n                }\n            }\n        },\n        updateAddress1Error:function(){\n            userInvited.inlineEdit.address1(userInvited.user.addresses[0].streets[0])\n        },\n        updateTelephoneError:function(){\n            userInvited.inlineEdit.telephone(userInvited.user.phones[0].number)\n        },\n        updateUserIdError:function(){\n            userInvited.inlineEdit.userId(userInvited.userLogin.username)\n        },\n        updateChallengeAnswer1Error:function(){\n            userInvited.inlineEdit.challengeAnswer1(userInvited.userLogin.challengeAnswer1)\n        },\n        updateChallengeAnswer2Error:function(){\n            userInvited.inlineEdit.challengeAnswer2(userInvited.userLogin.challengeAnswer2)\n        },\n\n    }\n\n    /* --------------------------------------------- WATCHERS END --------------------------------------------- */\n\n})\n\r\nangular.module('registration')\n.controller('userWalkupCtrl', function(APIError, localStorageService, Registration, $scope, $state,$q,LocaleService, $window,Base,$pagination,$filter) {\n\n    const userWalkup = this\n\n    userWalkup.applications = {}\n    userWalkup.userLogin = {}\n    userWalkup.applications.numberOfSelected = 0\n    userWalkup.submitError = false\n    userWalkup.languages=[];\n    userWalkup.orgPaginationSize = userWalkup.orgPaginationSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\n    userWalkup.appPaginationSize = userWalkup.appPaginationSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    //for detectig browser time\n    var d = new Date();\n    var tz = d.toTimeString();\n\n    //for detectig browser language\n    var lang = $window.navigator.language || $window.navigator.userLanguage;\n\n    if (lang.indexOf('en-')>=0) { userWalkup.browserPreference='en'; }\n    else if (lang.indexOf('zh')>=0) {userWalkup.browserPreference='zh'; }\n    else if (lang.indexOf('pl')>=0) { userWalkup.browserPreference='pl'; }\n    else if (lang.indexOf('pt')>=0) { userWalkup.browserPreference='pt'; }\n    else if (lang.indexOf('tr')>=0) { userWalkup.browserPreference='tr'; }\n    else if (lang.indexOf('fr')>=0) { userWalkup.browserPreference='fr'; }\n    else if (lang.indexOf('ja')>=0) { userWalkup.browserPreference='ja'; }\n    else if (lang.indexOf('es')>=0) { userWalkup.browserPreference='es'; }\n    else if (lang.indexOf('de')>=0) { userWalkup.browserPreference='de'; }\n    else if (lang.indexOf('ru')>=0) { userWalkup.browserPreference='ru'; }\n    else if (lang.indexOf('it')>=0) { userWalkup.browserPreference='it'; }\n    else { \n        console.log(lang+ \"not supported\")\n        userWalkup.browserPreference='en'; \n    }\n    //LocaleService.setLocaleByDisplayName(appConfig.languages[userWalkup.browserPreference])\n    userWalkup.initializing = true\n\n    if (!localStorageService.get('userWalkup.user')) {\n        // If registration is not saved in localstorage we need to initialize \n        // these arrays so ng-model treats them as arrays rather than objects \n        userWalkup.user = { addresses: [] }\n        userWalkup.user.addresses[0] = { streets: [] }\n        userWalkup.user.phones = []\n    } \n    else {\n        userWalkup.user = localStorageService.get('userWalkup.user');\n        \n    }\n\n    Object.keys(Base.languages).forEach(function(id,index){\n        userWalkup.languages[index]={\n            id:id\n        }\n    })\n    Object.values(Base.languages).forEach(function(language,index){\n        userWalkup.languages[index].name=language;\n    })\n    userWalkup.user.language=_.find(userWalkup.languages,{id:userWalkup.browserPreference})\n    Registration.initWalkupRegistration(userWalkup.orgPaginationSize)\n    .then(res => {\n        const questions = res.securityQuestions\n\n        // Split questions to use between 2 dropdowns\n        questions.splice(0, 1)\n        const numberOfQuestionsFloor = Math.floor(questions.length / 2)\n\n        userWalkup.userLogin.challengeQuestions1 = questions.slice(0, numberOfQuestionsFloor)\n        userWalkup.userLogin.challengeQuestions2 = questions.slice(numberOfQuestionsFloor)\n\n        // Preload questions into input\n        userWalkup.userLogin.question1 = userWalkup.userLogin.challengeQuestions1[0]\n        userWalkup.userLogin.question2 = userWalkup.userLogin.challengeQuestions2[0]\n\n        // Populate organization list\n        userWalkup.organizationList = res.organizations\n        userWalkup.organizationCount = res.organizationCount\n        userWalkup.orgReRenderPaginate && userWalkup.orgReRenderPaginate()\n\n        userWalkup.initializing = false\n    })\n    .catch(error => {\n        $state.go('misc.loadError')\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n    userWalkup.applications.checkOrUncheckBundledApps = (checkboxValue,application) => {\n        if (application.bundledApps) {\n            application.bundledApps.forEach(bundledApp => {\n                if (checkboxValue !== null) {\n                    bundledApp=_.find(userWalkup.applications.list,{id:bundledApp.id})\n                    userWalkup.applications.selected[bundledApp.id]=bundledApp.id+','+bundledApp.servicePackage.id+','+$filter('cuiI18n')(bundledApp.name)+','+application.servicePackage.personTacEnabled\n                    userWalkup.applications.numberOfSelected += 1;\n\n                } else {\n                    userWalkup.applications.selected[bundledApp.id]=null\n                    userWalkup.applications.numberOfSelected -= 1;\n                } \n            })\n        }\n\n    }\n\n    userWalkup.applications.updateNumberOfSelected = (checkboxValue,application) => {\n        // Update the number of selected apps everytime on of the boxes is checked/unchecked\n        if (checkboxValue !== null) {\n            userWalkup.applications.numberOfSelected += 1;\n        } else {\n            userWalkup.applications.numberOfSelected -= 1;\n        }\n        userWalkup.applications.checkOrUncheckBundledApps(checkboxValue,application)\n        userWalkup.applications.process()\n    }\n\n    userWalkup.applications.updateSelected = (application, checkboxValue, index) => {\n        let bundledApps=_.filter(userWalkup.applications.processedSelected,{packageId:application.packageId})\n        bundledApps.forEach(bundledApp => {\n            if (checkboxValue !== null) {\n                userWalkup.applications.selected[bundledApp.id]=bundledApp.id+','+bundledApp.packageId+','+bundledApp.name+','+bundledApp.showTac\n                userWalkup.applications.numberOfSelected += 1;\n            } else {\n                delete userWalkup.applications.selected[bundledApp.id]          \n                userWalkup.applications.numberOfSelected -= 1;\n            }\n        })\n    }\n\n    userWalkup.getAppicationTaC = () => {\n        angular.forEach(userWalkup.applications.processedSelected, app =>{\n            //need to change later to ===\n            if (app.showTac=='true') {\n                Registration.getTac(app.packageId)\n                .then(res =>{\n                    app.tac=res;\n                })\n                .catch(err=> {\n                    console.log(err);\n                })\n            };\n        })\n    }\n\n    //Check TAC flag for selected applications\n    userWalkup.checkTacFlag = (selectedApplications) => {\n        let TacCount=0;\n        angular.forEach(selectedApplications,app =>{\n            //need to change later to ===\n            if (app.showTac=='true') {\n                TacCount++;\n            };\n        })\n        return TacCount\n    }\n\n    userWalkup.showTac= (index) => {\n        if (userWalkup.applications.processedSelected[index].tac) {\n            userWalkup.tacContent=userWalkup.applications.processedSelected[index].tac.tacText\n            userWalkup.applications.step=3\n        }\n    } \n\n    userWalkup.applications.process = () => {\n        // Process the selected apps when you click next after selecting the apps you need\n        // returns number of apps selected\n        let oldSelected\n        let index=0;\n        if (userWalkup.applications.processedSelected) {\n            oldSelected = userWalkup.applications.processedSelected\n        }\n\n        // Fixes issue where adding and removing selected apps would leave objects with null values\n        angular.forEach(userWalkup.applications.selected, (app, i) => {\n            if (app === null) delete userWalkup.applications.selected[i]\n        })\n\n        userWalkup.applications.processedSelected = []\n\n        angular.forEach(userWalkup.applications.selected, function(app, i) {\n            if (app !== null) {\n                userWalkup.applications.processedSelected.push({\n                    id: app.split(',')[0],\n                    packageId:app.split(',')[1],\n                    name: app.split(',')[2],\n                    // this fixes an issue where removing an app from the selected list that the user \n                    // had accepted the terms for would carry over that acceptance to the next app on the list\n                    acceptedTos: ((oldSelected && oldSelected[index]&&oldSelected[index].id==i)? oldSelected[index].acceptedTos : false),\n                    showTac:app.split(',')[3]\n                })\n            }\n            index++;\n        })\n        return userWalkup.checkTacFlag(userWalkup.applications.processedSelected)\n        \n    }\n\n    userWalkup.submit = () => {\n        userWalkup.submitting = true\n        userWalkup.submitError = false\n\n        const registrationData = {\n            profile: userWalkup.user,\n            organization: userWalkup.organization,\n            login: userWalkup.userLogin,\n            applications: userWalkup.applications,\n            userCountry: userWalkup.userCountry,\n            requestReason:userWalkup.reason\n        }\n\n        Registration.walkupSubmit(registrationData)\n        .then(() => {\n            userWalkup.success = true\n            userWalkup.submitting = false\n            $state.go('misc.success')\n        })\n        .catch(error => {\n            userWalkup.submitError = true\n            userWalkup.submitting = false\n            if (error.responseJSON) {\n                userWalkup.errorMessage = error.responseJSON.apiMessage\n            }\n            else {\n                userWalkup.errorMessage = 'Error submitting registration request'\n            }\n        })\n    }\n\n    userWalkup.selectOrganization = (organization) => {\n        userWalkup.organization = organization\n        userWalkup.applications.numberOfSelected = 0 // Restart applications count\n        userWalkup.applications.processedSelected = undefined // Restart applications selected\n\n        Registration.selectOrganization(organization,userWalkup.appPaginationSize)\n        .then(res => {\n            const grants = res.grants\n            userWalkup.appCount=res.appCount\n            userWalkup.appReRenderPaginate && userWalkup.appReRenderPaginate()\n            if (!grants.length) userWalkup.applications.list = undefined\n            else {\n                userWalkup.applications.list = grants\n            }\n\n            userWalkup.passwordRules = res.passwordRules\n        })\n        .fail((error) => {\n            console.error('Error getting organization information', error)\n            APIError.onFor('userWalkup.orgInfo', error)\n        })\n        .always(() => {\n            $scope.$digest()\n        })\n    }\n\n    userWalkup.orgPaginationPageHandler = (newPage) => {\n        userWalkup.updatingOrgs = true\n        Registration.getOrgsByPageAndName(newPage,userWalkup.orgPaginationSize)\n        .then((res) => {\n            userWalkup.orgPaginationCurrentPage=newPage\n            userWalkup.organizationList = res\n            userWalkup.updatingOrgs = false\n            $scope.$digest()\n        })\n        .fail((err) => {\n            console.error(\"There was an error in fetching organization list for page \"+newPage +err)\n            userWalkup.updatingOrgs = false\n            $scope.$digest()\n        })\n    }\n\n    userWalkup.appPaginationPageHandler = (newPage) => {\n        userWalkup.updatingApps = true\n        Registration.getOrgAppsByPage(newPage,userWalkup.appPaginationSize,userWalkup.organization.id)\n        .then((res) => {\n            userWalkup.appPaginationCurrentPage=newPage\n            if (!res.length) {\n                userWalkup.updatingApps=false\n                userWalkup.applications.list = undefined\n            }\n            else {\n                userWalkup.applications.list = res\n                userWalkup.updatingApps = false\n            }\n            $scope.$digest()\n        })\n        .fail((err) =>{\n            userWalkup.updatingApps =false\n            $scope.$digest()\n            console.error(\"There was an error in fetching app list for page \"+newPage +err)\n        })\n    }\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n    /* -------------------------------------------- WATCHERS START -------------------------------------------- */\n\n    $scope.$watch('userWalkup.user', (a) => {\n        if (a && Object.keys(a).length !== 0) {\n            localStorageService.set('userWalkup.user', a);\n        }\n    }, true)\n\n    $scope.$watch('userWalkup.orgFilterByname', (a) => {\n        if (a!==undefined) {\n            userWalkup.updatingOrgs=true\n            Registration.getOrgsByPageAndName(1,userWalkup.orgPaginationSize,a)\n            .then((res)=> {\n                userWalkup.organizationList = res\n                userWalkup.updatingOrgs=false\n                $scope.$digest()\n            })\n            .fail((err) => {\n                userWalkup.updatingOrgs=false\n                $scope.$digest()\n                 console.error(\"There was an error in filtering orgs by name \"+err)\n            })  \n        }\n              \n    })\n\n    userWalkup.checkDuplicateEmail = (value) => {\n        if (value &&value!==\"\") {\n            $q.all([Registration.isEmailTaken(value).promise])\n            .then(res => {\n                userWalkup.isEmailTaken=res[0]\n            })\n        }\n        else{\n            userWalkup.isEmailTaken=true;\n        }        \n    }\n    \n    userWalkup.checkDuplicateEmail(userWalkup.user.email)\n    userWalkup.customErrors = {\n        userName: {\n            usernameTaken: Registration.isUsernameTaken\n        },\n        email: {\n            email: function(){\n                var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\n                if (userWalkup.user.email) {\n                    return EMAIL_REGEXP.test(userWalkup.user.email)\n                }else{\n                    return true;\n                }\n            }\n        },\n        answersMatch: {\n            answersMatch:function(){\n                if (userWalkup.userLogin && userWalkup.userLogin.challengeAnswer2) {\n                    return userWalkup.userLogin.challengeAnswer2!==userWalkup.userLogin.challengeAnswer1;\n                }else{\n                    return true\n                }\n            }\n        }\n    }\n\n    //Error handlers for Inline Edits in review page\n    userWalkup.inlineEdit = {\n        firstName:function(value){\n            if (!angular.isDefined(value)) {\n                userWalkup.inlineEdit.firstNameError={}\n            }\n            else{\n                userWalkup.inlineEdit.firstNameError={\n                    required: value===\"\" || !value\n                }   \n            }\n            userWalkup.inlineEdit.noSaveFirstName=value===\"\" || !value\n        },\n        lastName:function(value){\n            if (!angular.isDefined(value)) {\n                userWalkup.inlineEdit.lastNameError={}\n            }\n            else{\n                userWalkup.inlineEdit.lastNameError={\n                    required: value===\"\" || !value\n                }   \n            }\n            userWalkup.inlineEdit.noSaveLastName=value===\"\" || !value\n        },\n        email:function(value){\n            var EMAIL_REGXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i\n            if (!angular.isDefined(value)) {\n                userWalkup.inlineEdit.emailError={}\n            }\n            else{\n                userWalkup.inlineEdit.emailError={\n                    required: value===\"\" || !value,\n                    email:!EMAIL_REGXP.test(value)\n                }\n                //emailTaken:\n                if (!userWalkup.inlineEdit.emailError.required && !userWalkup.inlineEdit.emailError.email) {\n                    userWalkup.checkDuplicateEmail(value)\n                }\n                  \n            }\n            userWalkup.inlineEdit.noSaveEmail=value===\"\" || !value || !EMAIL_REGXP.test(value)\n        },\n        //For autocomplete need to handle differently\n        country:function(value){\n            console.log(value)\n            if (!angular.isDefined(value)) {\n                userWalkup.inlineEdit.countryError={\n                    required:true\n                }\n            }else{\n                userWalkup.inlineEdit.countryError={\n                    required:false\n                }\n            }\n            userWalkup.inlineEdit.noSaveCountry=value===undefined \n        },\n        address1:function(value){\n            if (!angular.isDefined(value)) {\n                userWalkup.inlineEdit.address1Error={}\n            }\n            else{\n                userWalkup.inlineEdit.address1Error={\n                    required: value===\"\" || !value\n                }   \n            }\n            userWalkup.inlineEdit.noSaveAddress1=value===\"\" || !value\n        },\n        telephone:function(value){\n            if (!angular.isDefined(value)) {\n                userWalkup.inlineEdit.telephoneError={}\n            }\n            else{\n                userWalkup.inlineEdit.telephoneError={\n                    required: value===\"\" || !value\n                }   \n            }\n            userWalkup.inlineEdit.noSaveTelephone=value===\"\" || !value\n        },\n        userId:function(value){\n            if (!angular.isDefined(value)) {\n                userWalkup.inlineEdit.userIdError={}\n            }\n            else{\n                userWalkup.inlineEdit.userIdError={\n                    required: value===\"\" || !value,\n                } \n                //usernameTaken: \n                if (!userWalkup.inlineEdit.userIdError.required) {\n                    $q.all([Registration.isUsernameTaken(value).promise])\n                    .then(res => {\n                        userWalkup.inlineEdit.userIdError.usernameTaken=!res[0]\n                        userWalkup.inlineEdit.noSaveUserId=value===\"\" || !value ||userWalkup.inlineEdit.userIdError.usernameTaken\n                    })\n                }\n                 \n            }\n             userWalkup.inlineEdit.noSaveUserId=value===\"\" || !value\n        },\n        challengeAnswer1:function(value){\n            if (!angular.isDefined(value)) {\n                userWalkup.inlineEdit.challengeAnswer1Error={}\n            }\n            else{\n                userWalkup.inlineEdit.challengeAnswer1Error={\n                    required: value===\"\" || !value,\n                    answersMatch:value===userWalkup.userLogin.challengeAnswer2\n                }   \n            }\n            userWalkup.inlineEdit.noSaveChallengeAnswer1=value===\"\" || !value||value===userWalkup.userLogin.challengeAnswer2\n        },\n        challengeAnswer2:function(value){\n            if (!angular.isDefined(value)) {\n                userWalkup.inlineEdit.challengeAnswer2Error={}\n            }\n            else{\n                userWalkup.inlineEdit.challengeAnswer2Error={\n                    required: value===\"\" || !value,\n                    answersMatch:value===userWalkup.userLogin.challengeAnswer1\n                }   \n            }\n            userWalkup.inlineEdit.noSaveChallengeAnswer2=value===\"\" || !value || value===userWalkup.userLogin.challengeAnswer1\n        },\n        //on save functions needed to show error when pressed enter\n        updateFirstNameError:function(){\n            userWalkup.inlineEdit.firstName(userWalkup.user.name.given)\n        },\n        updateLastNameError:function(){\n            userWalkup.inlineEdit.lastName(userWalkup.user.name.surname)\n        },\n        updateEmailError: function() {\n            userWalkup.emailRe=userWalkup.user.email;\n            userWalkup.inlineEdit.email(userWalkup.user.email)\n        },\n        updateCountryError: function() {\n            if (userWalkup.userCountry) {\n                userWalkup.inlineEdit.countryError={\n                    required:false\n                }\n            }\n        },\n        updateAddress1Error:function(){\n            userWalkup.inlineEdit.address1(userWalkup.user.addresses[0].streets[0])\n        },\n        updateTelephoneError:function(){\n            userWalkup.inlineEdit.telephone(userWalkup.user.phones[0].number)\n        },\n        updateUserIdError:function(){\n            userWalkup.inlineEdit.userId(userWalkup.userLogin.username)\n        },\n        updateChallengeAnswer1Error:function(){\n            userWalkup.inlineEdit.challengeAnswer1(userWalkup.userLogin.challengeAnswer1)\n        },\n        updateChallengeAnswer2Error:function(){\n            userWalkup.inlineEdit.challengeAnswer2(userWalkup.userLogin.challengeAnswer2)\n        },\n\n    }\n\n    /* --------------------------------------------- WATCHERS END --------------------------------------------- */\n\n})\n\r\nangular.module('organization', [])\n.config(['$stateProvider', ($stateProvider) =>  {\n\n    const templateBase = 'app/modules/organization/';\n\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\n\n    const loginRequired = true;\n\n    $stateProvider\n        .state('organization', {\n            url: '/organization',\n            template: '<div ui-view></div>',\n            access: loginRequired\n        })\n        // Profile --------------------------------------------------\n        .state('organization.profile', {\n            url: '/profile/:orgId?userId',\n            templateUrl: templateBase + 'profile/organization-profile.html',\n            controller: returnCtrlAs('orgProfile'),\n            access: loginRequired\n        })\n        // Directory ------------------------------------------------\n        .state('organization.directory', {\n            abstract:true,\n            template: '<div ui-view></div>'\n        })\n        .state('organization.directory.userList', {\n            url: '/directory/:orgId?page&pageSize&sortBy&status&fullName',\n            templateUrl: templateBase + 'directory/user-list/directory-userList.html',\n            controller: returnCtrlAs('orgDirectory'),\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        .state('organization.directory.userDetails', {\n            url: '/user-details?userId&orgId',\n            views: {\n                '': {\n                    templateUrl: templateBase + 'directory/user-details/directory-userDetails.html',\n                    controller: returnCtrlAs('userDetails')\n                },\n                'profile@organization.directory.userDetails': {\n                    templateUrl: templateBase + 'directory/user-details/sections/profile/userDetails-profile.html',\n                    controller: returnCtrlAs('userDetailsProfile')\n                },\n                'applications@organization.directory.userDetails': {\n                    templateUrl: templateBase + 'directory/user-details/sections/applications/userDetails-applications.html',\n                    controller: returnCtrlAs('userDetailsApps')\n                },\n                'roles@organization.directory.userDetails': {\n                    templateUrl: templateBase + 'directory/user-details/sections/roles/userDetails-roles.html',\n                    controller: returnCtrlAs('userDetailsRoles')\n                },\n                'history@organization.directory.userDetails': {\n                    templateUrl: templateBase + 'directory/user-details/sections/history/userDetails-history.html',\n                    controller: returnCtrlAs('userDetailsHistory')\n                }\n            },\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        .state('organization.directory.userAppDetails', {\n            url: '/user-app-details/:appId?userId&orgId',\n            templateUrl: templateBase + 'directory/user-app-details/directory-userAppDetails.html',\n            controller: returnCtrlAs('userAppDetails'),\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        .state('organization.directory.orgDetails', {\n            url: '/org-details?orgId&page&pageSize',\n            views: {\n                '': {\n                    templateUrl: templateBase + 'directory/org-details/directory-orgDetails.html',\n                    controller: returnCtrlAs('orgDetails')\n                },\n                'profile@organization.directory.orgDetails': {\n                    templateUrl: templateBase + 'directory/org-details/sections/profile/orgDetails-profile.html',\n                    controller: returnCtrlAs('orgDetailsProfile')\n                },\n                'applications@organization.directory.orgDetails': {\n                    templateUrl: templateBase + 'directory/org-details/sections/applications/orgDetails-applications.html',\n                    controller: returnCtrlAs('orgDetailsApps')\n                },\n                'users@organization.directory.orgDetails': {\n                    templateUrl: templateBase + 'directory/org-details/sections/users/orgDetails-users.html',\n                    controller: returnCtrlAs('orgDetailsUsers')\n                },\n                'hierarchy@organization.directory.orgDetails': {\n                    templateUrl: templateBase + 'directory/org-details/sections/hierarchy/orgDetails-hierarchy.html',\n                    controller: returnCtrlAs('orgDetailsHierarchy')\n                }\n            },\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        // Hierarchy ------------------------------------------------\n        .state('organization.hierarchy', {\n            url: '/hierarchy/:orgId',\n            templateUrl: templateBase + 'hierarchy/organization-hierarchy.html',\n            controller: returnCtrlAs('orgHierarchy'),\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        // applications----------------------------------------------\n        .state('organization.applications', {\n            url: '/applications/:orgId?name&page&pageSize&service.category&sortBy&refine',\n            templateUrl: templateBase + 'applications/organization-applications.html',\n            controller: returnCtrlAs('organizationApplications'),\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        .state('organization.applicationDetails', {\n            url: '/applications/:appId/details/:orgId',\n            templateUrl: templateBase + 'applications/applicationDetails/organization-applicationDetails.html',\n            controller: returnCtrlAs('orgApplicationDetails'),\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        .state('organization.newRequest', {\n            url: '/request',\n            templateUrl: templateBase + 'applications/appRequest/newRequest/appRequest-newRequest.html',\n            controller: returnCtrlAs('orgAppRequest'),\n            access: loginRequired\n        })\n        .state('organization.newRequestReview', {\n            url: '/request/review',\n            templateUrl: templateBase + 'applications/appRequest/newRequestReview/appRequest-newRequestReview.html',\n            controller: returnCtrlAs('orgAppRequestReview'),\n            access: loginRequired\n        })\n        .state('organization.search', {\n            url: '/search?name&category&page&pageSize',\n            templateUrl: templateBase + 'applications/search/orgApplications-search.html',\n            controller: returnCtrlAs('orgAppSearch'),\n            access: loginRequired\n        })\n        // Roles ----------------------------------------------------\n        .state('organization.roles', {\n            url: '/roles?orgID',\n            templateUrl: templateBase + 'roles/organization-roles.html',\n            controller: returnCtrlAs('orgRoles'),\n            access:loginRequired\n        })\n        // Requests -------------------------------------------------\n        .state('organization.requests', {\n            url: '/requests',\n            template: '<div ui-view></div>',\n            access: loginRequired\n        })\n        .state('organization.requests.newGrant', {\n            url: '/new-grant?orgId&userId',\n            templateUrl: templateBase + 'requests/newGrant/requests-newGrant.html',\n            controller: returnCtrlAs('newGrant'),\n            access: {\n                permittedLogic:appConfig.grantAppToUserLogic\n            }\n        })\n        .state('organization.requests.newGrantSearch', {\n            url: '/search?type&category&name&orgId&userId&page&pageSize&sortBy',\n            templateUrl: templateBase + 'requests/newGrant/search/search.html',\n            controller: returnCtrlAs('newGrantSearch'),\n            access: {\n                permittedLogic:appConfig.grantAppToUserLogic\n            }\n        })\n        .state('organization.requests.newGrantClaims', {\n            url: '/claims?orgId&userId',\n            templateUrl: templateBase + 'requests/newGrant/claims/claims.html',\n            controller: returnCtrlAs('newGrantClaims'),\n            access: {\n                permittedLogic:appConfig.grantAppToUserLogic\n            }\n        })\n        // Org Grant\n        .state('organization.requests.newOrgGrant', {\n            url: '/new-org-grant?orgId',\n            templateUrl: templateBase + 'requests/newOrgGrant/requests-newGrant.html',\n            controller: returnCtrlAs('newOrgGrant'),\n            access: {\n                permittedLogic:appConfig.grantAppToOrgLogic\n            }\n        })\n        .state('organization.requests.newOrgGrantSearch', {\n            url: '/search-org?type&category&name&orgId&page&pageSize&sortBy',\n            templateUrl: templateBase + 'requests/newOrgGrant/search/search.html',\n            controller: returnCtrlAs('newOrgGrantSearch'),\n            access: {\n                permittedLogic:appConfig.grantAppToOrgLogic\n            }\n        })\n        .state('organization.requests.newOrgGrantClaims', {\n            url: '/claims-org?orgId',\n            templateUrl: templateBase + 'requests/newOrgGrant/claims/claims.html',\n            controller: returnCtrlAs('newOrgGrantClaims'),\n            access: {\n                permittedLogic:appConfig.grantAppToOrgLogic\n            }\n        })\n        .state('organization.requests.pendingRequests', {\n            url: '/pending-requests?userId&orgId',\n            templateUrl: templateBase + 'requests/pendingRequestsReview/requests-pendingRequests.html',\n            controller: returnCtrlAs('pendingRequests'),\n            access: loginRequired\n        })\n        .state('organization.requests.pendingRequestsReview', {\n            url: '/pending-requests/review?userId&orgId',\n            templateUrl: templateBase + 'requests/pendingRequestsReview/requests-pendingRequestsReview.html',\n            controller: returnCtrlAs('pendingRequestsReview'),\n            access: loginRequired\n        })\n        // Approval of Org requests\n        .state('organization.requests.organizationRequest', {\n            url: '/organization-request?orgId&userId',\n            templateUrl: templateBase + 'requests/organizationRequest/requests-organization.html',\n            controller: returnCtrlAs('organizationRequest'),\n            access: {\n                permittedLogic:appConfig.orgAdminLogic\n            }\n        })\n        .state('organization.requests.organizationRequestReview', {\n            url: '/organization-request-review?orgId',\n            templateUrl: templateBase + 'requests/organizationRequest/requests-organizationReview.html',\n            controller: returnCtrlAs('organizationRequestReview'),\n            access: {\n                permittedLogic:appConfig.orgAdminLogic\n            }\n        })\n        .state('organization.requests.organizationAppRequest', {\n            url: '/organization-app-request?orgId&userId',\n            templateUrl: templateBase + 'requests/organizationAppRequests/requests-organization.html',\n            controller: returnCtrlAs('organizationAppRequest'),\n            access: {\n                permittedLogic:appConfig.orgAdminLogic\n            }\n        })\n        .state('organization.requests.organizationAppRequestReview', {\n            url: '/organization-app-request-review?orgId',\n            templateUrl: templateBase + 'requests/organizationAppRequests/requests-organizationReview.html',\n            controller: returnCtrlAs('organizationAppRequestReview'),\n            access: {\n                permittedLogic:appConfig.orgAdminLogic\n            }\n        })\n        .state('organization.requests.personRequest', {\n            url: '/person-request?userId&orgId',\n            templateUrl: templateBase + 'requests/personRequest/requests-person.html',\n            controller: returnCtrlAs('personRequest'),\n            access: loginRequired\n        })\n        .state('organization.requests.personRequestReview', {\n            url: '/person-request-review?userId&orgId',\n            templateUrl: templateBase + 'requests/personRequest/requests-personReview.html',\n            controller: returnCtrlAs('personRequestReview'),\n            access: loginRequired\n        })\n\n        // ADMIN...\n        .state('organization.requests.usersRegistrationRequests', {\n            url:'/userRequests',\n            templateUrl: templateBase + 'requests/usersRequests/usersRegistrationRequests/requests-RegistrationRequests.html',\n            controller: returnCtrlAs('usersRegistrationRequests'),\n            access: appConfig.orgAdminLogic\n        })\n        .state('organization.requests.usersAppRequests', {\n            url:'/applicationRequests',\n            templateUrl: templateBase + 'requests/usersRequests/usersAppRequests/requests-AppRequests.html',\n            controller: returnCtrlAs('usersAppRequests'),\n            access: appConfig.orgAdminLogic\n        })\n        .state('invitation', {\n            url: '/invitation',\n            template: '<div ui-view></div>',\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        .state('invitation.inviteSelect', {\n            url: '/select',\n            templateUrl:templateBase + 'invitation/invitation.html',\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        .state('invitation.inviteUser', {\n            url: '/user',\n            templateUrl:templateBase + 'invitation/user/user.html',\n            controller: returnCtrlAs('user'),\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        .state('invitation.division', {\n            url: '/division',\n            templateUrl:templateBase + 'invitation/division/division.html',\n            controller: returnCtrlAs('division'),\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        .state('invitation.tlo', {\n            url: '/tlo',\n            templateUrl:templateBase + 'invitation/tlo/tlo.html',\n            controller: returnCtrlAs('tlo'),\n            access: {\n                permittedLogic:appConfig.accessByAnyAdmin\n            }\n        })\n        // Org Requests/ADMIN\n        .state('organization.requests.orgRegistrationRequests', {\n            url:'/orgRequests?page&pageSize&organizationName',\n            templateUrl: templateBase + 'requests/orgRequests/orgRegistrationRequests/requests-RegistrationRequests.html',\n            controller: returnCtrlAs('orgRegistrationRequests'),\n            access: {\n                permittedLogic:appConfig.orgAdminLogic\n            }\n        })\n        .state('organization.requests.orgAppRequests', {\n            url:'/orgApplicationRequests?pageSize&page',\n            templateUrl: templateBase + 'requests/orgRequests/orgAppRequests/requests-AppRequests.html',\n            controller: returnCtrlAs('orgAppRequests'),\n            access: {\n                permittedLogic:appConfig.orgAdminLogic\n            }\n        });\n}]);\n\r\nangular.module('organization')\n.controller('orgAppRequestCtrl', function(API,DataStorage,Loader,User,$scope,$state,$stateParams) {\n\n    const orgAppRequest = this;\n    const orgAppsBeingRequested = DataStorage.getType('orgAppsBeingRequested');\n    const loaderName = 'orgAppRequest.loading';\n    orgAppRequest.stateParamsOrgId=User.user.organization.id;\n\n    orgAppRequest.orgAppsBeingRequested = [];\n    orgAppRequest.numberOfOrgRequests = 0;\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    Loader.onFor(loaderName);\n\n    if (orgAppsBeingRequested) {\n        orgAppRequest.numberOfOrgRequests = Object.keys(orgAppsBeingRequested).length;\n    }\n    \n    API.cui.getOrgAppCategories({organizationId:orgAppRequest.stateParamsOrgId})\n    .then((res)=>{\n        orgAppRequest.categories = res;\n        Loader.offFor(loaderName);\n        $scope.$digest();\n    })\n    .fail((err)=>{\n         Loader.offFor(loaderName);\n    });\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n\n    orgAppRequest.searchCallback = function(searchWord) {\n        $state.go('organization.search', {name: searchWord});\n    };\n\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n});\n\r\nangular.module('organization')\n.controller('orgAppRequestReviewCtrl', function(API,APIError,BuildPackageRequests,DataStorage,Loader,User,$q,$state,$timeout,AppRequests,$stateParams) {\n\n    const orgAppRequestReview = this\n    const loaderName = 'orgAppRequestReview.'\n    orgAppRequestReview.stateParamsOrgId=$stateParams.orgId;\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    Loader.onFor(loaderName + 'loading')\n    /*orgAppRequestReview.appsRequests = DataStorage.getType('orgAppsBeingRequested', User.user.id)*/\n    Loader.offFor(loaderName + 'loading')\n\n     if(Object.keys(AppRequests.get()).length===0 && DataStorage.getType('orgAppsBeingRequested', User.user.id)) {\n        AppRequests.set(DataStorage.getType('orgAppsBeingRequested', User.user.id));\n    }\n\n\n    const appRequests=AppRequests.get(),\n        appsBeingRequested=Object.keys(appRequests);\n\n    if (appsBeingRequested.length===0) {\n        $state.go('organization.search',{orgId:orgAppRequestReview.stateParamsOrgId});\n    }\n\n    orgAppRequestReview.appRequests=[];\n\n    for(let i=0; i < appsBeingRequested.length; i += 2){\n        const applicationGroup = [];\n        applicationGroup.push(appRequests[appsBeingRequested[i]]);\n        if (appRequests[appsBeingRequested[i+1]]) {\n            applicationGroup.push(appRequests[appsBeingRequested[i+1]]);\n        }\n        //get Terms And Conditions for requested packages\n        applicationGroup.forEach(app=>{\n            if (app.servicePackage.organizationTacEnabled) {\n                API.cui.getOrgTacOfPackage({packageId:app.servicePackage.id})\n                .then(res=>{\n                    app.tac=res;\n                })\n                .fail(err=>{\n                    console.log(\"There was an error fetching Tac\")\n                    console.log(err)\n                })\n            }\n        })\n        orgAppRequestReview.appRequests.push(applicationGroup);\n    }\n\n    orgAppRequestReview.numberOfRequests=0;\n    appsBeingRequested.forEach(() => {\n        orgAppRequestReview.numberOfRequests += 1;\n    });\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n\n    orgAppRequestReview.removeApplicationRequest = (requestId) => {\n        delete orgAppRequestReview.appRequests[requestId]\n\n        if (Object.keys(orgAppRequestReview.appRequests).length === 0) {\n            DataStorage.deleteType('orgAppsBeingRequested')\n            $state.go('organization.applications',{orgId:orgAppRequestReview.stateParamsOrgId})\n        } \n        else {\n            DataStorage.setType('orgAppsBeingRequested', orgAppRequestReview.appRequests)\n        }\n    }\n\n    orgAppRequestReview.submit = () => {\n        let requestArray = []\n\n        Loader.onFor(loaderName + 'attempting')\n        \n        /*Object.keys(orgAppRequestReview.appRequests).forEach((request) => {\n            requestArray.push(orgAppRequestReview.appRequests[request])\n        })\n*/\n         orgAppRequestReview.appRequests.forEach((appRequestGroup,i) => {\n            appRequestGroup.forEach((appRequest,x) => {\n                 requestArray[i+x] = appRequest;\n            })\n            \n        })\n\n        $q.all(BuildPackageRequests(User.user.organization.id, 'organization', requestArray))\n        .then(() => {\n            Loader.offFor(loaderName + 'attempting')\n            DataStorage.deleteType('orgAppsBeingRequested')\n            AppRequests.clear(); // clears app requests if the request goes through\n            DataStorage.setType('orgAppsBeingRequested',{});\n            orgAppRequestReview.success=true\n            $timeout(() => {\n                 $state.go('organization.applications',{orgId:User.user.organization.id});\n            }, 3000); \n        })\n        .catch(error => {\n            APIError.onFor(loaderName + 'requestError')\n            Loader.offFor(loaderName + 'attempting')\n        })\n    }\n\n    orgAppRequestReview.updateSearch = (nameSearch) => {\n        orgAppRequestReview.search = nameSearch;\n    };\n\n    orgAppRequestReview.showTac= (application)=>{\n        if (application.tac) {\n            orgAppRequestReview.tacContent=application.tac.tacText\n            orgAppRequestReview.step=2\n        }\n    }\n\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n})\n\r\nangular.module('organization')\n.controller('orgApplicationDetailsCtrl', function(API,APIHelpers,APIError,Loader,Sort,User,$q,$scope,$state,$stateParams) {\n\n    const orgApplicationDetails = this;\n    const organizationId = $stateParams.orgId\n    const serviceId = $stateParams.appId;\n    const loaderName = 'orgApplicationDetails.';\n    orgApplicationDetails.stateParamsOrgId=$stateParams.orgId\n\n    orgApplicationDetails.sortFlag = true;\n\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\n\n    const checkIfRequestable = (organizationId, relatedAppsArray) => {\n    \tif (relatedAppsArray) {\n\t    \tAPI.cui.getOrganizationRequestableApps({organizationId: organizationId})\n\t    \t.then((res) => {\n\t    \t\trelatedAppsArray.forEach((app) => {\n\t    \t\t\tlet requestable = _.find(res, (id) => { return app.id = id });\n\t    \t\t\tif (requestable) {\n\t    \t\t\t\tapp.requestable = true;\n\t    \t\t\t}\n\t    \t\t});\n\t    \t})\n            .then(() => {\n                $scope.$digest();\n            });\n    \t}\n    };\n\n    const getGrantArrayData = (grantArray) => {\n        let promises = [];\n\n        Loader.onFor(loaderName + 'loadingPageData');\n\n        grantArray.forEach((grant) => {\n            promises.push(\n                API.cui.getPerson({personId: grant.grantee.id})\n                .then((res) => {\n                    grant.person = res;\n                    return API.cui.getOrganization({organizationId: grant.person.organization.id});\n                })\n                .then((res) => {\n                    grant.organization = res;\n                    return API.cui.getPersonPackageClaims({grantee: grant.person.organization.id, packageId: grant.servicePackage.id});\n                })\n                .then((res) => {\n                    grant.claims = res.packageClaims;\n                })\n            );\n        });\n\n        $q.all(promises)\n        .then((res) => {\n            orgApplicationDetails.grantList = grantArray;\n            Loader.offFor(loaderName + 'loadingPageData');\n        })\n        .catch((error) => {\n            Loader.offFor(loaderName + 'loadingPageData');\n            APIError.onFor(loaderName + 'grants: ', error);\n        });\n    };\n\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    Loader.onFor(loaderName + 'app');\n\n    API.cui.getOrganization({organizationId: organizationId})\n    .then((res) => {\n        orgApplicationDetails.organization = res\n        return API.cui.getOrganizationGrantedApps({organizationId: organizationId, qs: [['service.id', serviceId]]});\n    })\n    .then((res) => {\n    \torgApplicationDetails.application = res[0];\n    \treturn API.cui.getOrganizationRequestableApps({organizationId: organizationId, qs: [['service.id', serviceId]]});\n    })\n    .then((res) => {\n    \torgApplicationDetails.application.bundledApps = res[0].bundledApps;\n    \torgApplicationDetails.application.relatedApps = res[0].relatedApps;\n    \t/*return API.cui.getPackageGrants    ({qs: [\n    \t\t['grantedPackageId', orgApplicationDetails.application.servicePackage.id],\n    \t\t['granteeType', 'person']\n    \t]});*/\n        Loader.offFor(loaderName + 'app');\n        checkIfRequestable(organizationId, orgApplicationDetails.application.relatedApps);\n         $scope.$apply();\n    })\n   /* .then((res) => {\n        Loader.offFor(loaderName + 'app');\n        orgApplicationDetails.unparsedGrantList = res;\n        getGrantArrayData(orgApplicationDetails.unparsedGrantList);*/\n        /*Loader.onFor(loaderName + 'user');*/\n        /*checkIfRequestable(organizationId, orgApplicationDetails.application.relatedApps);*/\n        /*return API.cui.getPersons({qs: [\n            ['organization.id', organizationId]\n        ]});*//*Loader.offFor(loaderName + 'user');*/\n   /* })*/\n    /*.then((res) => {\n        orgApplicationDetails.grantList = res;\n        Loader.offFor(loaderName + 'user');\n        $scope.$apply();\n    })*/\n    .fail((error) => {\n    \tAPIError.onFor(loaderName + 'grants: ', error);\n        Loader.offFor(loaderName + 'user');\n    });\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n\n    orgApplicationDetails.sort = (sortValue) => { \n        Sort.listSort(orgApplicationDetails.userList, sortValue, orgApplicationDetails.sortFlag);\n        orgApplicationDetails.sortFlag =! orgApplicationDetails.sortFlag;\n    };\n\n    orgApplicationDetails.parseGrantUsersByStatus = (status) => {\n        if (status === 'all') {\n            orgApplicationDetails.grantList = orgApplicationDetails.unparsedGrantList;\n        }\n        else {\n            let filteredGrantUsers = _.filter(orgApplicationDetails.unparsedGrantList, function(grant) {\n                return grant.person.status === status;\n            });\n            orgApplicationDetails.grantList = filteredGrantUsers;\n        }\n    };\n\n    orgApplicationDetails.newGrants = () => {\n        $state.go('applications.orgApplications.newGrant', {appId: serviceId});\n    };\n\n    orgApplicationDetails.switchDivision = (organization) => {\n        Loader.onFor(loaderName + 'loadingPageData');\n\n        API.cui.getGrants({qs: [\n            ['grantedPackageId', orgApplicationDetails.application.servicePackage.id],\n            ['granteeType', 'person'],\n            ['organization.id', organization.id]\n        ]})\n        .then((res) => {\n            orgApplicationDetails.unparsedGrantList = res;\n            getGrantArrayData(orgApplicationDetails.unparsedGrantList);\n            Loader.offFor(loaderName + 'loadingPageData');\n        })\n        .fail((error) => {\n            APIError.onFor(loaderName + 'grants: ', error);\n        });\n    };\n\n    orgApplicationDetails.requestRelatedApp = (service) => {\n        let data = {\n            requestor: {\n                id: organizationId,\n                type: 'organization'  \n            } ,\n            'servicePackage': {\n                id: service.packageId\n            }\n        };\n\n        Loader.onFor(loaderName + 'appRequest');\n\n        API.cui.postRequest({data: data})\n        .then(() => {\n            service.requestable = false;\n            Loader.offFor(loaderName + 'appRequest');\n            $scope.$digest();\n        })\n        .fail((error) => {\n            APIError.onFor(loaderName + 'appRequest')\n            console.log(error);\n            $scope.$digest();\n        });\n    };\n\n\n    orgApplicationDetails.mobileTabs = (tab) =>{\n\n        if(tab == 'bundled'){\n            orgApplicationDetails.mobileTabs.bundled   =   true;\n            orgApplicationDetails.mobileTabs.related   =   false;\n        }else if(tab == 'related'){\n            orgApplicationDetails.mobileTabs.bundled   =   false;\n            orgApplicationDetails.mobileTabs.related   =   true;\n        }\n    };\n\n    orgApplicationDetails.suspendApplication = (organization) => {\n        Loader.onFor(loaderName + 'app');\n\n        var suspendObj= {\n                \"grantee\":{\n                  \"id\":orgApplicationDetails.application.owningOrganization.id,\n                  \"type\":\"organization\",\n                  \"realm\":orgApplicationDetails.application.realm\n                },\n                \"servicePackage\":{\n                  \"id\":orgApplicationDetails.application.servicePackage.id,\n                  \"type\":\"servicepackage\",\n                  \"realm\":orgApplicationDetails.application.realm\n                },\n                \"justification\":\"Suspending Organization Application\"\n                };\n\n        API.cui.suspendOrgPkg({data: suspendObj})\n        .then((res) => {\n            orgApplicationDetails.success='true';\n            Loader.offFor(loaderName + 'app');\n            $timeout(() => {\n                $state.go('applications.orgApplications.applicationList');\n            }, 3000);\n        })\n        .fail((error) => {\n            Loader.offFor(loaderName + 'app');\n            orgApplicationDetails.suspendError=true;\n            $scope.$apply();\n            /*APIError.onFor(loaderName + 'grants: ', error);*/\n        });\n    };\n\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n});\r\nangular.module('organization')\n.controller('organizationApplicationsCtrl', function(API,Sort,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\n\n    const organizationApplications = this;\n    organizationApplications.stateParamsOrgId=$stateParams.orgId\n\n    organizationApplications.loading = true;\n    organizationApplications.search = {orgId:organizationApplications.stateParamsOrgId};\n    organizationApplications.search.page = organizationApplications.search.page || 1;\n    organizationApplications.paginationPageSize = organizationApplications.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\n    organizationApplications.search.pageSize = organizationApplications.paginationPageSize;\n\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\n\n    /*const switchBetween = (property, firstValue, secondValue) => { \n        // helper function to switch a property between two values or set to undefined if values not passed;\n        if(!firstValue) organizationApplications.search[property] = undefined;\n        organizationApplications.search[property] === firstValue ? organizationApplications.search[property] = secondValue : organizationApplications.search[property] = firstValue;\n    };*/\n\n    /*const switchBetween = (property, firstValue, secondValue) => { \n        // helper function to switch a property between two values or set to undefined if values not passed;\n        if(!firstValue) {\n            organizationApplications.search[property] = undefined;\n            return\n        }\n        organizationApplications.search[property] = organizationApplications.search[property] === firstValue\n            ? secondValue\n            : firstValue\n    }*/\n\n    const switchBetween = (property, firstValue, secondValue) => {\n        // helper function to switch a property between two values or set to undefined if values not passed\n        if (!firstValue) {\n            organizationApplications.search[property] = undefined\n            return\n        }\n        organizationApplications.search[property] = organizationApplications.search[property] === firstValue\n            ? secondValue\n            : firstValue\n    }\n\n    const getPackageServices = (ArrayOfPackages) => {\n        let services = [];\n\n        ArrayOfPackages.forEach((servicePackage) => {\n            API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\n            .then((res) => {\n                res.forEach((service) => {\n                    services.push(service);\n                });\n            });\n        });\n\n        return services;\n    };\n\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\n\n    // ON LOAD START ------------------------------------------------------------------------------------------\n\n    const onLoad = (previouslyLoaded) => {\n        if (previouslyLoaded) {\n            organizationApplications.loading = false;\n        }\n        else {\n            organizationApplications.search.name = $stateParams.name;\n            organizationApplications.search.category = $stateParams.category;\n            organizationApplications.search.sortBy = $stateParams.sortBy;\n            organizationApplications.search.refine = $stateParams.refine;\n            if($stateParams.page)\n                organizationApplications.search.page = parseInt($stateParams.page);\n            if($stateParams.pageSize)\n                organizationApplications.search.pageSize = parseInt($stateParams.pageSize);\n\n            \n            API.cui.getOrgAppCategories({organizationId:organizationApplications.stateParamsOrgId})\n            .then((res)=>{\n                organizationApplications.categories = res;\n                $scope.$digest();\n            })\n            .fail((err)=>{\n               \n            });\n\n        }\n\n        let queryParams = [['page', String(organizationApplications.search.page)], ['pageSize', String(organizationApplications.search.pageSize)]];\n        const promises = [];\n        const opts = {\n            organizationId: organizationApplications.stateParamsOrgId,\n            qs: queryParams\n        };\n\n        if (organizationApplications.search.name) queryParams.push(['service.name', organizationApplications.search.name]);\n        if (organizationApplications.search.category) queryParams.push(['service.category', organizationApplications.search.category]);\n        // sortBy: +/-service.name, +/-service.creation, +/-grant.instant\n        if (organizationApplications.search.sortBy) queryParams.push(['sortBy', organizationApplications.search.sortBy]);\n\n        switch (organizationApplications.search.refine) {\n            case 'active':\n            case 'suspended':\n                queryParams.push(['grant.status', organizationApplications.search.refine]);\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\n              /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\n                break;\n            case 'pending':\n                /*promises.push(\n                    API.cui.getOrgPendingServicePackages({qs: [['requestor.id', organizationId], ['requestor.type', 'organization']]})\n                    .then((res) => {\n                        return getPackageServices(res);\n                    }),\n                    API.cui.getOrganizationRequestableCount({organizationId: organizationId})\n                );*/\n                queryParams.push(['grant.status', organizationApplications.search.refine]);\n               /* promises.push(API.cui.getOrganizationGrantedApps(opts));*/\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\n                break;\n            case undefined:\n                /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\n                break;\n        }\n\n        $q.all(promises)\n        .then((res) => {\n            organizationApplications.appList = res[0];\n            organizationApplications.count = res[1];\n            /*organizationApplications.count = res[0].length;*/\n            organizationApplications.loading = false;\n            if (organizationApplications.reRenderPaginate) organizationApplications.reRenderPaginate();\n        })\n        .catch(err => {\n            organizationApplications.loadingError=true\n            organizationApplications.loading = false;\n        })\n    };\n    // get Organization to display name\n    API.cui.getOrganization({organizationId:organizationApplications.stateParamsOrgId})\n    .then(res => {\n        organizationApplications.organization=res;\n    })\n    onLoad(false);\n\n    // ON LOAD END --------------------------------------------------------------------------------------------\n\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\n\n    organizationApplications.pageChange = (newpage) => {\n        organizationApplications.updateSearch('page', newpage);\n    };\n\n    organizationApplications.updateSearchByName = () => {\n        organizationApplications.updateSearch('name',organizationApplications.search['name'])\n    }\n\n    organizationApplications.updateSearch = (updateType, updateValue) => {\n        switch (updateType){\n            case 'alphabetic':\n                switchBetween('sortBy', '+service.name', '-service.name');\n                break;\n            case 'date':\n                switchBetween('sortBy', '+grant.instant', '-grant.instant');\n                break;\n            case 'status':\n                organizationApplications.search.page = 1;\n                organizationApplications.search.refine = updateValue;\n                break;\n            case 'category':\n                organizationApplications.search.page = 1;\n                organizationApplications.search.category = $filter('cuiI18n')(updateValue);\n                break;\n            case 'name':\n                organizationApplications.search.page = 1\n                break\n        }\n\n        // Updates URL, doesn't change state\n        $state.transitionTo('organization.applications', organizationApplications.search, {notify: false});\n        onLoad(true);\n    };\n\n    organizationApplications.goToDetails = (application) => {\n        const opts = {\n            appId: application.id,\n            orgId: application.owningOrganization.id\n        };\n        $state.go('organization.applicationDetails', opts);\n    };\n\n    // ON CLICK FUNCTIONS END ---------------------------------------------------------------------------------\n\n});\n\r\nangular.module('organization')\n.controller('orgAppSearchCtrl',function(API,DataStorage,Loader,User,$pagination,$q,$state,$stateParams) {\n\n    const orgAppSearch = this;\n    const loaderName = 'orgAppSearch.loading';\n    orgAppSearch.stateParamsOrgId=User.user.organization.id;\n\n    orgAppSearch.packageRequests = DataStorage.getType('orgAppsBeingRequested', User.user.id) || {};\n    orgAppSearch.appCheckbox = {};\n\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\n\n    const processNumberOfRequestedApps = (pkgRequest) => {\n        if (pkgRequest) orgAppSearch.numberOfRequests++;\n        else orgAppSearch.numberOfRequests--;\n    };\n\n    const updateViewList = (list) => {\n        let deferred= $q.defer()\n        orgAppSearch.viewList=[]\n        let qs=[]\n        let apiPromises = []\n        angular.forEach(list, (app,parentIndex) => {\n            // Child App and Parent app requested by user\n            if(app.servicePackage.parent&&app.relatedApps){\n                let flag=false\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\n                    if (_.find(list,{id:realtedApp.id})) {\n                        flag=true\n                    }\n                    else{\n                        qs.push(['service.id',realtedApp.id])\n                    }\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\n                        apiPromises.push(API.cui.getOrganizationsRequestableApps({organizationId: User.user.organization.id,qs:qs}))\n                        qs=[]\n                    }\n                })\n            }\n            else{\n                orgAppSearch.viewList.push(app)\n            }\n        })\n        $q.all(apiPromises)\n        .then(res => {\n            angular.forEach(res, (app) => {\n                if (orgAppSearch.search.name) {\n                    app[0].expanded=true\n                }\n                orgAppSearch.viewList.push(...app)\n                orgAppSearch.list.push(...app)\n            })\n            deferred.resolve()\n        })\n        .catch(err =>{\n            console.log(\"There was an error loading parent requestable apps\")\n                deferred.reject(err)\n        })\n        return deferred.promise\n    }\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    const onLoad = (previouslyLoaded) => {\n        if (previouslyLoaded) {\n            Loader.onFor(loaderName);\n        }\n        else { \n            Loader.onFor(loaderName);\n            // pre populate fields based on state params on first load\n            let numberOfRequests = 0;\n\n            Object.keys(orgAppSearch.packageRequests).forEach(function(appId) { \n                // Gets the list of package requests saved in memory\n                // This sets the checkboxes back to marked when the user clicks back after being in request review\n                orgAppSearch.appCheckbox[appId] = true;\n                numberOfRequests++;\n            });\n            \n            orgAppSearch.numberOfRequests = numberOfRequests;\n\n            orgAppSearch.search = {};\n            orgAppSearch.search.name = $stateParams.name;\n            orgAppSearch.search.category = $stateParams.category;\n            orgAppSearch.search.page = parseInt($stateParams.page);\n            orgAppSearch.search.pageSize = parseInt($stateParams.pageSize);\n        }\n\n        let query = [];\n\n        if (orgAppSearch.search.name) query.push(['service.name',orgAppSearch.search.name]);\n        if (orgAppSearch.search.category) query.push(['service.category',orgAppSearch.search.category]);\n\n        orgAppSearch.search.pageSize = orgAppSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0] || 25;\n        query.push(['pageSize',String(orgAppSearch.search.pageSize)]);\n\n        orgAppSearch.search.page = orgAppSearch.search.page || 1;\n        query.push(['page',String(orgAppSearch.search.page)]);\n\n        let opts = {\n            organizationId: User.user.organization.id,\n            useCuid:true,\n            qs: query\n        };\n        \n        const promises = [API.cui.getOrganizationsRequestableApps(opts), API.cui.getOrganizationRequestableCount(opts)];\n\n        $q.all(promises)\n        .then((res) => {\n             orgAppSearch.list = res[0];\n             orgAppSearch.count = res[1];\n             updateViewList(res[0])\n             .then(() =>{\n                Loader.offFor(loaderName);\n             })\n             \n        });\n    };\n\n    onLoad(false);\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n\n    orgAppSearch.pageChange = (newpage) => {\n        orgAppSearch.updateSearch('page', newpage);\n    };\n\n    orgAppSearch.updateSearch = function(updateType, updateValue) {\n        if (updateType!=='page') {\n            orgAppSearch.search.page = 1\n        }\n        orgAppSearch.search.orgId=orgAppSearch.stateParamsOrgId\n        // Update current URL without changing the state\n        $state.transitionTo('organization.search', orgAppSearch.search, {notify:false});\n        onLoad(true);\n    };\n\n    orgAppSearch.toggleRequest = function(application) {\n        if (!orgAppSearch.packageRequests[application.id]) orgAppSearch.packageRequests[application.id] = application;\n        else delete orgAppSearch.packageRequests[application.id];\n\n        DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests);\n        processNumberOfRequestedApps(orgAppSearch.packageRequests[application.id]);\n    };\n\n   /* orgAppSearch.saveRequestsAndCheckout = function() {\n        DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests);\n        $state.go('organization.newRequestReview');\n    };*/\n\n    \n    orgAppSearch.saveRequestsAndCheckout = function() {\n        let qs = []\n        //needed to set a flag for related apps to display in review page\n        angular.forEach(orgAppSearch.packageRequests,(request)=>{\n            if (request.relatedApps) {\n                request.relatedAppSelectedCount=0\n                request.relatedApps.forEach(relatedApp=>{\n                    if(_.find(orgAppSearch.packageRequests,{id:relatedApp.id})){\n                        relatedApp.selected=true\n                        request.relatedAppSelectedCount++\n                    }\n                    else{\n                        relatedApp.selected=false\n                    }\n                })\n            }\n            // If Selected Related app full details not available need to fetch it\n            if (!request.servicePackage) {\n                qs.push(['service.id',request.id])\n            }\n        })\n        if (qs.length!==0) {\n            API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs})\n            .then(res => {\n                res.forEach(app =>{\n                    orgAppSearch.packageRequests[app.id] = app\n                })\n                /*AppRequests.set(orgAppSearch.packageRequests);*/\n                DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests)\n                $state.go('organization.newRequestReview');\n            })\n        }\n        else{\n            /*AppRequests.set(orgAppSearch.packageRequests);*/\n            DataStorage.setType('orgAppsBeingRequested', orgAppSearch.packageRequests)\n            $state.go('organization.newRequestReview');\n        }\n    };\n    //Related apps will always appear inside body, So need to select parent if it is selected \n    orgAppSearch.checkRelatedAppsBody= function(relatedApp, parent){\n        if (_.find(orgAppSearch.list,{id:relatedApp.id})) {\n            orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:relatedApp.id}))\n        }\n        else{\n            orgAppSearch.list.push(relatedApp)\n            orgAppSearch.toggleRequest(relatedApp)\n        }           \n        orgAppSearch.checkRelatedAndBundledApps(_.find(orgAppSearch.list,{id:relatedApp.id}),parent)\n    };\n\n//Deselect Child apps If it has any and select parent if checked from parent body \n    orgAppSearch.checkRelatedAndBundledApps=function(application,parent){\n        //if unchecked the checkbox\n        if (!orgAppSearch.packageRequests[application.id]) {\n            //if it is a parent then then deselect childs\n            if (!parent) {\n                application.relatedApps&&application.relatedApps.forEach((relatedApp)=>{\n                    if (orgAppSearch.appCheckbox[relatedApp.id]) {\n                        orgAppSearch.appCheckbox[relatedApp.id]=!orgAppSearch.appCheckbox[relatedApp.id]\n                        orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:relatedApp.id}))\n                    }\n                })\n                orgAppSearch.checkBundledApps(application,false)\n            }      \n        }else{\n            if (parent) {\n                if (!orgAppSearch.appCheckbox[parent.id]) {\n                    orgAppSearch.appCheckbox[parent.id]=true\n                    orgAppSearch.toggleRequest(parent)\n                    orgAppSearch.checkBundledApps(parent,true)\n                }\n            }else\n            orgAppSearch.checkBundledApps(application,true)\n        }\n    }\n\n    orgAppSearch.checkBundledApps= function(application,check){\n        if (application.bundledApps) {\n            application.bundledApps.forEach(bundledApp=>{\n                orgAppSearch.appCheckbox[bundledApp.id]=check\n                if (_.find(orgAppSearch.list,{id:bundledApp.id}))\n                    orgAppSearch.toggleRequest(_.find(orgAppSearch.list,{id:bundledApp.id}))\n            })\n        }\n    }\n\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n});\n\r\nangular.module('organization')\n.controller('orgDetailsCtrl', function(API, Loader, $scope, $stateParams,APIError,APIHelpers,$timeout,$q) {\n\n    const orgDetails = this\n    const scopeName = 'orgDetails.'\n    orgDetails.prevState={\n        params:{\n            orgId:$stateParams.orgId\n        },\n        name:\"organization.directory.userList\"\n    }\n    orgDetails.mobileHandler = 'profile'\n    orgDetails.profileUsersSwitch = 'profile'\n    orgDetails.appsHierarchySwitch = 'apps'\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    Loader.onFor(scopeName + 'orgInfo')\n/*\n    API.cui.getPerson({ personId: $stateParams.userId })\n    .then(res => {\n        orgDetails.user = res\n        CuiMobileNavFactory.setTitle(res.name.given + '.' + res.name.surname)\n    })\n    .fail(error => {\n        console.error('Failed getting user information')\n    })\n    .always(() => {\n        Loader.offFor(scopeName + 'userInfo')\n        $scope.$digest()\n    })*/\n\n\n    const apiPromises = [\n        API.cui.getOrganization({ organizationId: $stateParams.orgId  })\n    ]\n\n    $q.all(apiPromises)\n    .then(([organization]) => {\n        // CuiMobileNavFactory.setTitle(user.name.given + '.' + user.name.surname)\n        orgDetails.organization = Object.assign({}, organization);\n        Loader.offFor(scopeName + 'orgInfo')\n    })\n    .catch(() => {\n        Loader.offFor(scopeName + 'orgInfo')\n        APIError.onFor('orgDetails.org')\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------------- ON CLICK START ---------------------------------------------- */\n\n    /* --------------------------------------------- ON CLICK END ---------------------------------------------- */\n})\n\r\nangular.module('organization')\n.controller('orgDetailsAppsCtrl',function(API,$stateParams,$q,$state,DataStorage,$pagination,Loader,$filter,$scope) {\n    'use strict';\n\n\t\n    const orgDetailsApps = this;\n    const scopeName = 'orgDetailsApps.'\n    orgDetailsApps.stateParamsOrgId=$stateParams.orgId\n\n    Loader.onFor('orgDetailsApps.init')\n    orgDetailsApps.search = {orgId:orgDetailsApps.stateParamsOrgId};\n    orgDetailsApps.search.page = orgDetailsApps.search.page || 1;\n    orgDetailsApps.paginationPageSize = orgDetailsApps.paginationPageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\n    orgDetailsApps.search.pageSize = orgDetailsApps.paginationPageSize;\n\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\n\n    /*const switchBetween = (property, firstValue, secondValue) => { \n        // helper function to switch a property between two values or set to undefined if values not passed;\n        if(!firstValue) orgDetailsApps.search[property] = undefined;\n        orgDetailsApps.search[property] === firstValue ? orgDetailsApps.search[property] = secondValue : orgDetailsApps.search[property] = firstValue;\n    };*/\n\n    /*const switchBetween = (property, firstValue, secondValue) => { \n        // helper function to switch a property between two values or set to undefined if values not passed;\n        if(!firstValue) {\n            orgDetailsApps.search[property] = undefined;\n            return\n        }\n        orgDetailsApps.search[property] = orgDetailsApps.search[property] === firstValue\n            ? secondValue\n            : firstValue\n    }*/\n\n    const switchBetween = (property, firstValue, secondValue) => {\n        // helper function to switch a property between two values or set to undefined if values not passed\n        if (!firstValue) {\n            orgDetailsApps.search[property] = undefined\n            return\n        }\n        orgDetailsApps.search[property] = orgDetailsApps.search[property] === firstValue\n            ? secondValue\n            : firstValue\n    }\n\n    const getPackageServices = (ArrayOfPackages) => {\n        let services = [];\n\n        ArrayOfPackages.forEach((servicePackage) => {\n            API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\n            .then((res) => {\n                res.forEach((service) => {\n                    services.push(service);\n                });\n            });\n        });\n\n        return services;\n    };\n\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\n\n    // ON LOAD START ------------------------------------------------------------------------------------------\n\n    const onLoad = (previouslyLoaded) => {\n        if (previouslyLoaded) {\n            Loader.offFor('orgDetailsApps.init')\n        }\n        else {\n            orgDetailsApps.search.name = $stateParams.name;\n            orgDetailsApps.search.category = $stateParams.category;\n            orgDetailsApps.search.sortBy = $stateParams.sortBy;\n            orgDetailsApps.search.refine = $stateParams.refine;\n            if($stateParams.page)\n                orgDetailsApps.search.page = parseInt($stateParams.page);\n            if($stateParams.pageSize)\n                orgDetailsApps.search.pageSize = parseInt($stateParams.pageSize);\n\n            \n            API.cui.getOrgAppCategories({organizationId:orgDetailsApps.stateParamsOrgId})\n            .then((res)=>{\n                orgDetailsApps.categories = res;\n                $scope.$digest();\n            })\n            .fail((err)=>{\n               \n            });\n\n        }\n\n        let queryParams = [['page', String(orgDetailsApps.search.page)], ['pageSize', String(orgDetailsApps.search.pageSize)]];\n        const promises = [];\n        const opts = {\n            organizationId: orgDetailsApps.stateParamsOrgId,\n            qs: queryParams\n        };\n\n        if (orgDetailsApps.search.name) queryParams.push(['service.name', orgDetailsApps.search.name]);\n        if (orgDetailsApps.search.category) queryParams.push(['service.category', orgDetailsApps.search.category]);\n        // sortBy: +/-service.name, +/-service.creation, +/-grant.instant\n        if (orgDetailsApps.search.sortBy) queryParams.push(['sortBy', orgDetailsApps.search.sortBy]);\n\n        switch (orgDetailsApps.search.refine) {\n            case 'active':\n            case 'suspended':\n                queryParams.push(['grant.status', orgDetailsApps.search.refine]);\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\n              /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\n                break;\n            case 'pending':\n                /*promises.push(\n                    API.cui.getOrgPendingServicePackages({qs: [['requestor.id', organizationId], ['requestor.type', 'organization']]})\n                    .then((res) => {\n                        return getPackageServices(res);\n                    }),\n                    API.cui.getOrganizationRequestableCount({organizationId: organizationId})\n                );*/\n                queryParams.push(['grant.status', orgDetailsApps.search.refine]);\n               /* promises.push(API.cui.getOrganizationGrantedApps(opts));*/\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\n                break;\n            case undefined:\n                /*promises.push(API.cui.getOrganizationGrantedApps(opts));*/\n                promises.push(API.cui.getOrganizationGrantedApps(opts),API.cui.getOrganizationGrantedCount(opts));\n                break;\n        }\n\n        $q.all(promises)\n        .then((res) => {\n            orgDetailsApps.appList = res[0];\n            orgDetailsApps.count = res[1];\n            /*orgDetailsApps.count = res[0].length;*/\n            Loader.offFor('orgDetailsApps.init')\n            if (orgDetailsApps.reRenderPaginate) orgDetailsApps.reRenderPaginate();\n        })\n        .catch(err => {\n            orgDetailsApps.loadingError=true\n            Loader.offFor('orgDetailsApps.init')\n        })\n    };\n    // get Organization to display name\n    API.cui.getOrganization({organizationId:orgDetailsApps.stateParamsOrgId})\n    .then(res => {\n        orgDetailsApps.organization=res;\n    })\n    onLoad(false);\n\n    // ON LOAD END --------------------------------------------------------------------------------------------\n\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\n\n    orgDetailsApps.pageChange = (newpage) => {\n        orgDetailsApps.updateSearch('page', newpage);\n    };\n\n    orgDetailsApps.updateSearchByName = () => {\n        orgDetailsApps.updateSearch('name',orgDetailsApps.search['name'])\n    }\n\n    orgDetailsApps.updateSearch = (updateType, updateValue) => {\n        switch (updateType){\n            case 'alphabetic':\n                switchBetween('sortBy', '+service.name', '-service.name');\n                break;\n            case 'date':\n                switchBetween('sortBy', '+grant.instant', '-grant.instant');\n                break;\n            case 'status':\n                orgDetailsApps.search.page = 1;\n                orgDetailsApps.search.refine = updateValue;\n                break;\n            case 'category':\n                orgDetailsApps.search.page = 1;\n                orgDetailsApps.search.category = $filter('cuiI18n')(updateValue);\n                break;\n            case 'name':\n                orgDetailsApps.search.page = 1\n                break\n        }\n\n        // Updates URL, doesn't change state\n        $state.transitionTo('organization.directory.orgDetails', orgDetailsApps.search, {notify: false});\n        onLoad(true);\n    };\n\n    orgDetailsApps.goToDetails = (application) => {\n        const opts = {\n            appId: application.id,\n            orgId: application.owningOrganization.id\n        };\n        $state.go('organization.applicationDetails', opts);\n    };\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\n});\n\r\nangular.module('organization')\n.controller('orgDetailsHierarchyCtrl',function(API,APIError,Loader,User,$scope,$state,$stateParams) {\n\t'use strict';\n    const orgDetailsHierarchy = this\n    const pageLoader = 'orgDetailsHierarchy.loading'\n    orgDetailsHierarchy.stateParamsOrgId=$stateParams.orgId\n\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\n\n    const addExpandedProperty = (childOrgs,parentOrg) => {\n\n        childOrgs.forEach(org => {\n            // Need to remove org if it is pending\n            if (org.status===\"PENDING\") {\n                parentOrg.children.splice(index,1)\n                return\n            }\n            if (org.children) {\n                org.expanded=false\n                addExpandedProperty(org.children,org)\n            }\n        })\n    }\n\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */    \n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n    Loader.onFor(pageLoader)\n    API.cui.getOrganizationHierarchy({organizationId:orgDetailsHierarchy.stateParamsOrgId })\n    .done(res => {\n        // Put hierarchy response in an array as the hierarchy directive expects an array\n        orgDetailsHierarchy.organizationHierarchy = [res]\n        // add expended property to all the org with children directive needs it to work for \n        // expandable and collapsable function\n        if (orgDetailsHierarchy.organizationHierarchy[0].children) {\n            addExpandedProperty(orgDetailsHierarchy.organizationHierarchy[0].children,orgDetailsHierarchy.organizationHierarchy[0])\n        }\n    })\n    .fail(err => {\n        APIError.onFor(pageLoader, err)\n    })\n    .always(() => {\n        Loader.offFor(pageLoader)\n        $scope.$digest()\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n    /* */\n    orgDetailsHierarchy.goToOrgPrfile = (org) => {\n        $state.go('organization.directory.orgDetails',{orgId:org.id})\n    }\n\n    orgDetailsHierarchy.toggleExpand = (object) => {\n        object.expanded=!object.expanded\n        // let updateOrgChildren= (orgs) => {\n        //     orgs.forEach(org => {\n        //         if (org.id===object.id) {\n        //             org.expanded=object.expanded\n        //             return;\n        //         }\n        //         if (org.children) {\n        //             updateOrgChildren(org.children)\n        //         }\n        //     })\n            \n        //     if (true) {};\n        // }\n        // updateOrgChildren(orgDetailsHierarchy.organizationHierarchy[0].children)\n        $scope.$digest()\n    }\n});\n\r\nangular.module('organization')\n.controller('orgDetailsProfileCtrl', function(Loader, Organization,$stateParams,$q,APIError) {\n\n\tconst orgDetailsProfile = this\n    const scopeName = 'orgDetailsProfile.'\n\n    orgDetailsProfile.stateParamsOrgId=$stateParams.orgId\n    let orgPromise=[]    \n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n    Loader.onFor('orgDetailsProfile.init')\n    orgPromise.push(Organization.getOrganization($stateParams.orgId))\n    $q.all(orgPromise)\n    .then(res => {\n        if (orgPromise.length!==0) {\n            orgDetailsProfile.organization=res[0]\n        }\n            Organization.initOrganizationProfile(orgDetailsProfile.organization.id, orgDetailsProfile.organization.passwordPolicy.id, orgDetailsProfile.organization.authenticationPolicy.id)\n        .then(res => {\n            orgDetailsProfile.securityAdmins = res.admins\n            orgDetailsProfile.passwordPolicy = res.passwordPolicy\n            orgDetailsProfile.authenticationPolicy=res.authenticationPolicy\n            Loader.offFor('orgDetailsProfile.init')\n        })\n        .catch(err => {\n            console.error(\"there was an error fetching additional org details\" +err)\n            Loader.offFor('orgDetailsProfile.init')\n            APIError.onFor('orgDetailsProfile.init')\n        })\n    })\n    .catch(err => {\n        console.error(\"there was an error fetching org details\" +err)\n        Loader.offFor('orgDetailsProfile.init')\n        APIError.onFor('orgDetailsProfile.init')\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n})\n\r\nangular.module('organization')\n.controller('orgDetailsUsersCtrl', function(API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,UserList,$filter,$pagination,$q,$state,$stateParams) {\n    \n    const orgDetailsUsers = this\n    const scopeName = 'orgDetailsUsers.'\n    orgDetailsUsers.stateParamsOrgId=$stateParams.orgId\n    orgDetailsUsers.search = {}\n    orgDetailsUsers.sortBy = {}\n\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\n\n    const switchBetween = (property, firstValue, secondValue) => {\n        orgDetailsUsers.search[property] === firstValue\n            ? orgDetailsUsers.search[property] = secondValue\n            : orgDetailsUsers.search[property] = firstValue\n    }\n\n    const getUserListAppCount = (userList) => {\n        userList.forEach(user => {\n            API.cui.getPersonGrantedAppCount({personId: user.id})\n            .then(res => {\n                user.appCount = res\n            })\n            .fail(error => {\n                user.appCount = '...'\n            })\n        })\n    }\n\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    const initDirectory = (organizationId) => {\n        orgDetailsUsers.search['organization.id'] = organizationId || $stateParams.orgId || User.user.organization.id\n        orgDetailsUsers.search.pageSize = orgDetailsUsers.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\n\n        let apiCalls = [\n            UserList.getUsers({ qs: APIHelpers.getQs(orgDetailsUsers.search) }),\n            UserList.getUserCount({ qs: [['organization.id', orgDetailsUsers.search['organization.id']]] }),\n            API.cui.getOrganization({organizationId: orgDetailsUsers.search['organization.id']})\n        ]\n\n        Loader.onFor(scopeName + 'userList')\n        APIError.offFor(scopeName + 'userList')\n\n        $q.all(apiCalls)\n        .then(([users, userCount, organization]) => {\n            orgDetailsUsers.organization = organization\n            // orgDetailsUsers.organizationList = APIHelpers.flattenOrgHierarchy(orgHierarchy)\n            orgDetailsUsers.userList = users\n            orgDetailsUsers.userCount = userCount\n            orgDetailsUsers.statusData = APIHelpers.getCollectionValuesAndCount(users, 'status', true)\n            CuiMobileNavFactory.setTitle(organization.name)\n            orgDetailsUsers.reRenderPagination && orgDetailsUsers.reRenderPagination()\n            getUserListAppCount(orgDetailsUsers.userList)\n        })\n        .catch(error => {\n            APIError.onFor(scopeName + 'userList')\n        })\n        .finally(() => {\n            Loader.offFor(scopeName + 'userList')\n        })\n    }\n\n    orgDetailsUsers.search = Object.assign({}, $stateParams)\n    initDirectory()\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n\n\n    // headers=\"['cui-name', 'username', 'status']\" \n\n    orgDetailsUsers.sortingCallbacks = {\n      name () {\n          orgDetailsUsers.sortBy.sortBy = 'name'\n          orgDetailsUsers.sort(['name.given', 'name.surname'], orgDetailsUsers.sortBy.sortType)\n      },\n      username () {\n          orgDetailsUsers.sortBy.sortBy = 'username'\n          orgDetailsUsers.sort('username', orgDetailsUsers.sortBy.sortType)\n      },\n      status () {\n          orgDetailsUsers.sortBy.sortBy = 'status'\n          orgDetailsUsers.sort('status', orgDetailsUsers.sortBy.sortType)\n      }\n    }\n\n    orgDetailsUsers.sort = (sortBy, order) => {\n        cui.log('sort', sortBy, order)\n\n      orgDetailsUsers.userList = _.orderBy(orgDetailsUsers.userList, sortBy, order)\n    }\n\n    orgDetailsUsers.updateSearchParams = (page) => {\n        if (page) orgDetailsUsers.search.page = page \n        $state.transitionTo('organization.directory.orgDetails', orgDetailsUsers.search, {notify: false})\n        initDirectory(orgDetailsUsers.search['organization.id'])\n    }\n\n    orgDetailsUsers.updateSearchByName = (name) => {\n        orgDetailsUsers.updateSearchParams()\n    }\n    orgDetailsUsers.actionCallbacks = {\n        sort (sortType) {\n            switch(sortType) {\n            case 'name':\n                switchBetween('sortBy', '+person.name', '-person.name')\n                break\n            case 'username':\n                switchBetween('sortBy', '+person.username', '-person.username')\n                break\n            case 'status':\n                switchBetween('sortBy', '+person.status', '-person.status')\n                break\n            }\n\n            // if (!orgDetailsUsers.search.hasOwnProperty('sortBy')) orgDetailsUsers.search['sortBy'] = '+' + sortType\n            // else if (orgDetailsUsers.search.sortBy.slice(1) !== sortType) orgDetailsUsers.search.sortBy = '+' + sortType\n            // else switchBetween('sortBy', '+' + sortType, '-' + sortType)\n            orgDetailsUsers.updateSearchParams()\n        },\n        refine (refineType) {\n            if (refineType === 'all') delete orgDetailsUsers.search['status']\n            else {\n                if (!orgDetailsUsers.search.hasOwnProperty('status')) orgDetailsUsers.search['status'] = refineType\n                else orgDetailsUsers.search.status = refineType\n            }\n            orgDetailsUsers.updateSearchParams()\n        }\n    }\n\n    orgDetailsUsers.userClick = (clickedUser) => {\n        const stateOpts = {\n            userId: clickedUser.id,\n            orgId: clickedUser.organization.id,\n        }\n        if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\n        else $state.go('organization.directory.userDetails', stateOpts)\n    }\n\n    orgDetailsUsers.getOrgMembers = (organization) => {\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')(organization.name))\n        initDirectory(organization.id)\n    }\n\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n});\n\r\nangular.module('organization')\n.controller('userAppDetailsCtrl', function(API, $scope, $stateParams, $state, $q, APIHelpers, Loader, APIError,DataStorage,$timeout) {\n    let userAppDetails = this\n    userAppDetails.relatedApps=[]\n    userAppDetails.prevState={\n        params:{\n            userId:$stateParams.userId,\n            orgId:$stateParams.orgId\n        },\n        name:\"organization.directory.userDetails\"\n    }\n    userAppDetails.dropDown={\n        claims:false,\n        suspend:false,\n        unsuspend:false,\n        remove:false\n    }\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n    const getClaims = (app) => {\n        let deferred=$q.defer()\n        const packageId = app.servicePackage.id\n\n        Loader.onFor(loaderName + 'claims')\n        API.cui.getPersonPackageClaims({ grantee:$stateParams.userId, packageId })\n        .then(userClaims => {\n            APIError.offFor(loaderName + 'claims')\n            deferred.resolve(userClaims)\n        })\n        .fail(err => {\n            APIError.onFor(loaderName + 'claims')\n            deferred.reject(err)\n        })\n        .always(() => {\n            Loader.offFor(loaderName + 'claims')\n            $scope.$digest()\n        })\n        return deferred.promise\n    }\n\n    // Returns claims that are associated with a package id\n    const getPackageClaims = (packageId) => {\n        let deferred=$q.defer()\n        API.cui.getPackageClaims({qs: [['packageId', packageId]]})\n        .then(packageClaims => {\n            APIError.offFor(loaderName + 'packageClaims')\n            deferred.resolve(packageClaims)\n        })\n        .fail(err => {\n            console.error('Failed getting package claims')\n            APIError.onFor(loaderName + 'packageClaims')\n            deferred.reject(err)\n        })\n        .always(() => {\n            Loader.offFor(loaderName + 'packageClaims')\n            $scope.$digest()\n        })\n        return deferred.promise\n    }\n\n    const getFormattedClaimData = () => {\n        $q.all([getClaims(userAppDetails.app),getPackageClaims(userAppDetails.app.servicePackage.id)])\n        .then(res => {            \n            userAppDetails.userClaims = res[0]\n            userAppDetails.packageClaims=res[1]\n            userAppDetails.claimSelection={}\n            //initialize and preselect claims which are already granted to user\n            userAppDetails.packageClaims.forEach(packageClaim => {\n                userAppDetails.claimSelection[packageClaim.claimId] = {}\n                let grantedClaim=_.find(userAppDetails.userClaims.packageClaims,{claimId:packageClaim.claimId})\n                if (grantedClaim) {\n                    packageClaim.claimValues.forEach(claimValue => {\n                        if (_.find(grantedClaim.claimValues,{claimValueId:claimValue.claimValueId})) {\n                            userAppDetails.claimSelection[packageClaim.claimId][claimValue.claimValueId]=true\n                        }\n                    })\n                }\n            })\n        })\n    }\n\n    const getApp= (updating)=>{\n        if (!updating) {\n            Loader.onFor(loaderName + 'app')\n        }\n        API.cui.getPersonGrantedApps(opts)\n        .then(res => {\n            APIError.offFor(loaderName + 'app')\n            userAppDetails.app = Object.assign({}, res[0])\n            if (!updating) {\n                getFormattedClaimData()\n                getRelatedApps(userAppDetails.app)\n            }\n        })\n        .fail(err => {\n            APIError.onFor(loaderName + 'app')\n        })\n        .done(() => {\n            Loader.offFor(loaderName + 'app')\n            $scope.$digest()\n        })\n    }\n    const getRelatedApps=(app) => {\n        const packageId = app.servicePackage.id\n        let qs\n        if (app.servicePackage.parent) {\n            qs=[['servicePackage.id',app.servicePackage.parent.id]]\n        }else{\n            qs=[['servicePackage.parentPackage.id',app.servicePackage.id]]\n        }\n        Loader.onFor(loaderName + 'relatedApps')\n        let apiPromises=[\n        API.cui.getPersonRequestableApps({personId:API.getUser(),'qs':[['servicePackage.parentPackage.id',packageId]] }),\n        API.cui.getPersonGrantedApps({personId:API.getUser(),'qs':qs })\n        ]\n        $q.all(apiPromises)\n        .then(res=>{\n            APIError.offFor(loaderName + 'relatedApps')\n            userAppDetails.relatedApps=userAppDetails.relatedApps.concat(res[0])\n            userAppDetails.relatedApps=userAppDetails.relatedApps.concat(res[1])\n        })\n        .catch(err => {\n            APIError.onFor(loaderName + 'relatedApps')\n        })\n        .finally(()=>{\n            Loader.offFor(loaderName + 'relatedApps')\n        })\n    }\n\n    const buildData = (type) => {\n        let reason\n        if (type==\"suspend\") {\n            reason=userAppDetails.suspendReason\n        }else{\n            reason=userAppDetails.unsuspendReason\n        }\n        return {\n            grantee:{\n                id:$stateParams.userId,\n                type:'person'\n            },\n            servicePackage:{\n                id:userAppDetails.app.servicePackage.id\n            },\n            justification:reason\n        }\n\n    }\n\n    const buildClaimData = () => {\n\n        const buildPackageClaims = (claimsObject) => {\n            if (Object.keys(claimsObject).length === 0) {\n                return undefined;\n            } // if there's no claims in this claim object\n            let packageClaims = []\n            Object.keys(claimsObject).forEach(claimId => {\n                if (Object.keys(claimsObject[claimId]).length === 0) {\n                    return;\n                } // if no claimValues selected for that claimId\n                let claimValues =[]\n                Object.keys(claimsObject[claimId]).forEach(claimValueId => {\n                    if (claimsObject[claimId][claimValueId]) {//If checked\n                        claimValues.push({claimValueId:claimValueId})\n                    }\n                })\n                // const claimValues = Object.keys(claimsObject[claimId]).reduce((claims, claimValueId) => {\n                //     claims.push({ claimValueId })\n                //     return claims\n                // },[])\n                if (claimValues.length!==0) {\n                    packageClaims.push({\n                        claimId,\n                        claimValues\n                    })\n                }\n            })\n            return packageClaims\n        }\n        return {\n                data: {\n                    grantee: {\n                        id: $stateParams.userId,\n                        type: 'person'\n                    },\n                    servicePackage: {\n                        id: userAppDetails.app.servicePackage.id,\n                        type: 'servicePackage'\n                    },\n                    packageClaims: buildPackageClaims(userAppDetails.claimSelection)\n                }\n            }\n    }\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    const loaderName = 'userAppDetails.'\n\n    const qs = {\n        'service.id': $stateParams.appId\n    }\n\n    const opts = {\n        personId: $stateParams.userId,\n        qs: APIHelpers.getQs(qs)\n    }\n    userAppDetails.app=DataStorage.getType('userAppDetail')\n    if (userAppDetails.app&& userAppDetails.app.id===$stateParams.appId) {        \n        getFormattedClaimData()\n        getRelatedApps(userAppDetails.app)\n        // Update application detail for any new changes during reload\n        // Commenting out as API is not giving full details for service.id query parameter get\n        //it is relying on previous page details which has full details\n         getApp(true)\n    }\n    else{\n        getApp(false)\n    }\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\n\n    userAppDetails.goToDetails = (application) => {\n        $state.go('applications.userAppDetails', {\n            'packageId':application.packageId,\n            'appId':application.id\n        })\n    }\n\n    userAppDetails.toggleDropDown= (type) => {\n        Object.keys(userAppDetails.dropDown).forEach(key => {\n            if (key===type) {\n                userAppDetails.dropDown[key]=!userAppDetails.dropDown[key]\n            }else{\n                userAppDetails.dropDown[key]=false\n            }\n        })\n    }\n    userAppDetails.suspendApp = () => {\n        Loader.onFor(loaderName + 'suspend')\n        APIError.offFor(loaderName + 'suspend')\n        let data=buildData('suspend')\n        API.cui.suspendPersonApp({data:data})\n        .then(res => {\n            userAppDetails.app.grant.status=\"suspended\"\n            userAppDetails.suspendAppSuccess=true\n            Loader.offFor(loaderName + 'suspend')\n            $scope.$digest()\n            $timeout(() => {\n                userAppDetails.dropDown.suspend=false\n                userAppDetails.suspendAppSuccess=false\n            },2000)\n        })\n        .fail(err => {\n            APIError.onFor(loaderName + 'suspend')\n            Loader.offFor(loaderName + 'suspend')\n            $scope.$digest()\n            console.log('There was an error suspending user App', + err)\n        })\n    }\n\n    userAppDetails.unsuspendApp = () => {\n        Loader.onFor(loaderName + 'unsuspend')\n        APIError.offFor(loaderName + 'unsuspend')\n        let data=buildData('unsuspend')\n        API.cui.unsuspendPersonApp({data:data})\n        .then(res => {\n            userAppDetails.app.grant.status=\"active\"\n            userAppDetails.unsuspendAppSuccess=true\n            Loader.offFor(loaderName + 'unsuspend')\n            $scope.$digest()\n            $timeout(() => {\n                userAppDetails.dropDown.unsuspend=false\n                userAppDetails.unsuspendAppSuccess=false\n            },2000)\n        })\n        .fail(err => {\n            APIError.onFor(loaderName + 'unsuspend')\n            Loader.offFor(loaderName + 'unsuspend')\n            $scope.$digest()\n            console.log('There was an error suspending user App', + err)\n        })\n    }\n\n    userAppDetails.removeApp = () => {\n        Loader.onFor(loaderName + 'remove')\n        APIError.offFor(loaderName + 'remove')\n        API.cui.revokePersonApp({personId:$stateParams.userId,packageId:userAppDetails.app.servicePackage.id})\n        .then(res => {\n            // userAppDetails.app.grant.status=\"removeed\"\n            userAppDetails.removeAppSuccess=true\n            Loader.offFor(loaderName + 'remove')\n            $scope.$digest()\n            $timeout(() => {\n                userAppDetails.removeAppSuccess=false\n                $state.go('organization.directory.userDetails',userAppDetails.prevState.params)\n            },2000)\n        })\n        .fail(err => {\n            APIError.onFor(loaderName + 'remove')\n            Loader.offFor(loaderName + 'remove')\n            $scope.$digest()\n            $timeout(() => {\n                APIError.offFor(loaderName + 'remove')\n            },3000)\n            console.log('There was an error removing user App', + err)\n        })\n    }\n\n    userAppDetails.modifyClaims = () => {\n        Loader.onFor(loaderName + 'modifyClaims')\n        APIError.offFor(loaderName + 'modifyClaims')\n        API.cui.grantClaims(buildClaimData())\n        .then(res => {\n            userAppDetails.modifyClaimsSuccess=true\n            Loader.offFor(loaderName + 'modifyClaims')\n            $scope.$digest()\n            $timeout(() => {\n                userAppDetails.dropDown.claims=false\n                userAppDetails.modifyClaimsSuccess=false\n            },2000)\n        })\n        .fail(err => {\n            APIError.onFor(loaderName + 'modifyClaims')\n            Loader.offFor(loaderName + 'modifyClaims')\n            $scope.$digest()\n            console.log('There was an error updating user\\'s app claims', + err)\n        })\n        \n    }\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\n\n})\n\r\nangular.module('organization')\n.controller('userDetailsCtrl', function(API, Loader, $scope, $stateParams,APIError,APIHelpers,$timeout,$q) {\n\n    const userDetails = this\n    const scopeName = 'userDetails.'\n    userDetails.prevState={\n        params:{\n            orgId:$stateParams.orgId\n        },\n        name:\"organization.directory.userList\"\n    }\n    userDetails.stateParamsOrgId=$stateParams.orgId\n    userDetails.mobileHandler = 'profile'\n    userDetails.profileRolesSwitch = 'profile'\n    userDetails.appsHistorySwitch = 'apps'\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    Loader.onFor(scopeName + 'userInfo')\n/*\n    API.cui.getPerson({ personId: $stateParams.userId })\n    .then(res => {\n        userDetails.user = res\n        CuiMobileNavFactory.setTitle(res.name.given + '.' + res.name.surname)\n    })\n    .fail(error => {\n        console.error('Failed getting user information')\n    })\n    .always(() => {\n        Loader.offFor(scopeName + 'userInfo')\n        $scope.$digest()\n    })*/\n\n\n    const apiPromises = [\n        API.cui.getPerson({\n            personId: $stateParams.userId\n        }),\n        API.cui.getOrganization({ organizationId: $stateParams.orgId  }),\n        API.cui.getPersonPassword({\n            personId: $stateParams.userId\n        })\n    ]\n\n    $q.all(apiPromises)\n    .then(([ user, organization ,password]) => {\n        // CuiMobileNavFactory.setTitle(user.name.given + '.' + user.name.surname)\n       userDetails.user = Object.assign({}, user)\n        userDetails.organization = Object.assign({}, organization);\n        userDetails.passwordAccount= Object.assign({}, password)\n        return API.cui.getPasswordPolicy({ policyId: userDetails.organization.passwordPolicy.id })\n    })\n    .then(res => {\n        userDetails.passwordPolicy = res\n\n        res.rules.forEach(rule => {\n            if (rule.type === 'history') {\n                userDetails.numberOfPasswords = rule.numberOfPasswords\n            }\n        })\n        Loader.offFor(scopeName + 'userInfo')\n    })\n    .catch(() => {\n        Loader.offFor(scopeName + 'userInfo')\n        APIError.onFor('userDetails.user')\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------------- ON CLICK START ---------------------------------------------- */\n    userDetails.suspend = (personId) => {\n\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:true\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\n\n        const name = 'userDetails.suspend'\n\n        userDetails.suspend.reset = () => {\n            Loader.offFor(name)\n            APIError.offFor(name)\n            userDetails.user.suspendReason = ''\n            userDetails.suspend.success && delete userDetails.suspend.success\n        }\n\n        userDetails.suspend.reset()\n\n        userDetails.suspend.confirm = () => {\n            Loader.onFor(name)\n            APIError.offFor(name)\n\n            const reason = encodeURIComponent(userDetails.user.suspendReason)\n\n            API.cui.suspendPerson({\n                qs: APIHelpers.getQs({\n                    personId,\n                    reason\n                })\n            })\n            .then(\n                res => {\n                    APIError.offFor(name)\n                    userDetails.suspend.success = true\n                    userDetails.user.status = 'suspended'\n                    $timeout(userDetails.suspend.cancel, 1500)\n                },\n                err => {\n                    APIError.onFor(name)\n                }\n            )\n            .always(() => {\n                Loader.offFor(name)\n                $scope.$digest()\n            })\n        }\n\n        userDetails.suspend.cancel = () => {\n            userDetails.suspend.begun = false\n            userDetails.suspend.reset()\n        }\n    }\n\n    userDetails.unsuspend = (personId) => {\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:true\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\n\n        const name = 'userDetails.unsuspend'\n\n        userDetails.unsuspend.reset = () => {\n            Loader.offFor(name)\n            APIError.offFor(name)\n            userDetails.user.unsuspendReason = ''\n            userDetails.unsuspend.success && delete userDetails.unsuspend.success\n        }\n\n        userDetails.unsuspend.reset()\n\n        userDetails.unsuspend.confirm = () => {\n            Loader.onFor(name)\n            APIError.offFor(name)\n\n            const reason = encodeURIComponent(userDetails.user.unsuspendReason)\n\n            API.cui.unsuspendPerson({\n                qs: APIHelpers.getQs({\n                    personId,\n                    reason\n                })\n            })\n            .then(\n                res => {\n                    APIError.offFor(name)\n                    userDetails.unsuspend.success = true\n                    userDetails.user.status = 'active'\n                    $timeout(userDetails.unsuspend.cancel, 1500)\n                },\n                err => {\n                    APIError.onFor(name)\n                }\n            )\n            .always(() => {\n                Loader.offFor(name)\n                $scope.$digest()\n            })\n        }\n\n        userDetails.unsuspend.cancel = () => {\n            userDetails.unsuspend.begun = false\n            userDetails.unsuspend.reset()\n        }\n    }\n\n    userDetails.resetPassword = () => {\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:false\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:true\n\n            \n            if(userDetails.resetPassword.begun){\n                const name = 'userDetails.unsuspend'\n\n            Loader.onFor(name)\n            APIError.offFor(name)\n            API.cui.resetPersonPassword({\n                qs: [['subject', $stateParams.userId]],\n            })\n            .then(\n                res => {\n                    APIError.offFor(name)\n                    userDetails.resetPasswordValue=res\n                    userDetails.resetPassword.begun = true\n                },\n                err => {\n                    APIError.onFor(name)\n                }\n            )\n            .always(() => {\n                Loader.offFor(name)\n                $scope.$digest()\n            })\n        }\n       \n    }\n\n    userDetails.specifyPassword = () => {\n        errorTimer && $timeout.cancel(errorTimer) // cancel the timer if there's one pending\n        let errorTimer\n\n        const name = 'userDetails.specifyPassword'\n        userDetails.specifyPassword.begun = (userDetails.specifyPassword.begun)? false:true\n        userDetails.suspend.begun = (userDetails.suspend.begun)? false:false\n        userDetails.unsuspend.begun = (userDetails.unsuspend.begun)? false:false\n        userDetails.resetPassword.begun = (userDetails.resetPassword.begun)? false:false\n\n        userDetails.specifyPassword.reset = () => {\n            Loader.offFor(name)\n            APIError.offFor(name)\n            APIError.offFor('userDetails.passwordHistory')\n            userDetails.specifyPassword.success && delete userDetails.specifyPassword.success\n            userDetails.specifyPassword.passwordHistoryError = false\n            userDetails.specifyPassword.newPassword = ''\n            userDetails.specifyPassword.newPasswordConfirm = ''\n        }\n\n        userDetails.specifyPassword.validate = (password, formObject, input) => {\n            const validSwitch = (input, isValidBoolean) => {\n                switch (input) {\n                    case 'newPassword':\n                        userDetails.specifyPassword.validNewPassword = isValidBoolean\n                    case 'newPasswordConfirm':\n                        userDetails.specifyPassword.validNewPasswordRe = isValidBoolean\n                }\n            }\n\n            const validateData = {\n                userId: $stateParams.userId,\n                organizationId: $stateParams.orgId,\n                password: password,\n                operations: ['PASSWORD_SPECIFY']\n            }\n\n            API.cui.validatePassword({data: validateData})\n            .then(res => {\n                let validPasswordHistory = false\n\n                res.forEach(rule => {\n                    if (rule.type === 'HISTORY' && rule.isPassed) {\n                        validPasswordHistory = true\n                        return\n                    }\n                })\n\n                if (validPasswordHistory) {\n                    validSwitch(input, true)\n                    formObject[input].$setValidity(input, true)\n                    $scope.$digest()\n                }\n                else {\n                    validSwitch(input, false)\n                    formObject[input].$setValidity(input, false)\n                    $scope.$digest()\n                }\n            })\n            .fail(err => {\n                validSwitch(input, false)\n                formObject[input].$setValidity(input, false)\n                $scope.$digest()\n            })\n        }\n\n        userDetails.specifyPassword.confirm = () => {\n            APIError.offFor(name)\n            Loader.onFor(name)\n\n          /*  if (!userDetails.specifyPassword.form.$valid) {\n                angular.forEach(userDetails.specifyPassword.form.$error, error => {\n                    angular.forEach(error, errorField => errorField.$setTouched())\n                })\n                APIError.onFor(name)\n                return\n            }*/\n\n            API.cui.getPersonPassword({personId: $stateParams.userId})\n            .then(res => {\n                return API.cui.specifyPersonPassword({\n                    data: {\n                        subject: $stateParams.userId,\n                        password: userDetails.specifyPassword.newPassword\n                    }\n                })\n            })\n            .then(res => {\n                return API.cui.expirePersonPassword({\n                    qs: [['subject', $stateParams.userId]],\n                    data: {\n                        subject: $stateParams.userId,\n                        password: userDetails.specifyPassword.newPassword,\n                        passwordPolicyId: userDetails.passwordPolicy.id,\n                        authenticationPolicyId: userDetails.organization.authenticationPolicy.id\n                    }\n                })\n            })\n            .then(res => {\n                userDetails.specifyPassword.success = true\n                $timeout(userDetails.specifyPassword.cancel, 1500)\n            }, err => {\n                console.log(err)\n                APIError.onFor(name)\n                errorTimer = $timeout(() => APIError.offFor(name), 1500)\n            })\n            .always(() => {\n                Loader.offFor(name)\n                $scope.$digest()\n            })\n        }\n\n        userDetails.specifyPassword.cancel = () => {\n            userDetails.specifyPassword.begun = false\n            userDetails.specifyPassword.reset()\n        }\n    }\n\n    userDetails.unlockUser = () => {\n        Loader.onFor('userDetails.unlockUser')\n        APIError.offFor('userDetails.unlockUser')\n        //Need to call two API's One is unlock Password Account and Update person stutus to active\n        API.cui.unlockPersonPassword({qs:[['subject', $stateParams.userId]]})\n        .then(res => {\n            userDetails.user.stutus='active'\n            API.cui.updatePerson({personId:$stateParams.userId, data:userDetails.user})\n            .then(res => {\n                userDetails.unlockUserSuccess=true\n            })\n            .fail(err => {\n                APIError.onFor('userDetails.unlockUser')\n                $timeout(() => {APIError.offFor('userDetails.unlockUser')},3000)\n            })\n            .always(() => {\n                Loader.offFor('userDetails.unlockUser')\n                $scope.$digest()\n            })\n        })\n        .fail(err => {\n            APIError.onFor('userDetails.unlockUser')\n            $timeout(() => {APIError.offFor('userDetails.unlockUser')},3000)\n        })\n        .always(() => {\n            Loader.offFor('userDetails.unlockUser')\n            $scope.$digest()\n        })\n    }\n\n    /* --------------------------------------------- ON CLICK END ---------------------------------------------- */\n})\n\r\nangular.module('organization')\n.controller('userDetailsAppsCtrl',function(API,$stateParams,$q,$state,DataStorage) {\n    'use strict';\n\n\tconst userDetailsApps = this,\n        userId = $stateParams.userId,\n        organizationId = $stateParams.orgId;\n\n    let apiPromises = [];\n\n    userDetailsApps.loading = true;\n    userDetailsApps.appList = [];\n\n    const getPackageServices = (servicePackage) => {\n        return API.cui.getPackageServices({packageId: servicePackage.servicePackage.id})\n        .then((res) => {\n            res.forEach((pendingService) => {\n                pendingService.grant = { \n                    status: 'pending'\n                };\n                pendingService.servicePackage=servicePackage\n                userDetailsApps.appList.push(pendingService);\n            });\n        });\n    };\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    apiPromises.push(\n        // Get user's granted applications\n        API.cui.getPersonGrantedApps({personId: userId})\n        .then((res) => {\n            res.forEach((grantedApp) => {\n                userDetailsApps.appList.push(grantedApp);\n            });\n        })\n    );\n\n    apiPromises.push(\n        // Get user's pending service packages\n        API.cui.getPersonPendingServicePackages({qs: [['requestor.id', userId],['requestor.type', 'person']]})\n        .then((res) => {\n            let pendingServicePromises = [];\n\n            res.forEach((servicePackage) => {\n                // For each packages get its services\n                pendingServicePromises.push(getPackageServices(servicePackage));\n            });\n\n            $q.all(pendingServicePromises)\n            .then(() => {\n                userDetailsApps.loading = false;\n            })\n            .catch((error) => {\n                userDetailsApps.loading = false;\n                console.log(error);\n            });\n        })\n    );\n\n    apiPromises.push(\n        // Get categories of applications\n        API.cui.getCategories()\n        .then((res) => {\n            userDetailsApps.appCategories = res;\n        })\n    );\n\n    apiPromises.push(\n        // Get user's granted applications count\n        API.cui.getPersonGrantedAppCount({personId: userId})\n        .then((res) => {\n            userDetailsApps.appCount = res;\n        })\n    );\n\n    $q.all(apiPromises)\n    .catch((error) => {\n        userDetailsApps.loading = false;\n        console.log(error);\n    });\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\n\n    userDetailsApps.goToDetails = (application) => {\n        DataStorage.setType('userAppDetail',application)\n        if (application.grant.status==='pending') {\n            $state.go('organization.requests.pendingRequests', {\n                    'userId': userId, \n                    'orgId': organizationId,\n                    'packageId': application.servicePackage.servicePackage.id\n                })\n        }\n        else\n        $state.go('organization.directory.userAppDetails',{appId:application.id,orgId:organizationId,userId:userId})\n    }\n\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\n});\n\r\nangular.module('organization')\n.controller('userDetailsHistoryCtrl',function(API,$stateParams,$q) {\n\t'use strict';\n\n\tconst userDetailsHistory = this,\n        userId = $stateParams.userId,\n        organizationId = $stateParams.orgId;\n\n    let apiPromises = [];\n\n    userDetailsHistory.loading = true;\n    userDetailsHistory.sortClicked = false;\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n\tapiPromises.push(\n\t\tAPI.cui.getPersonStatusHistory({qs: [['userId', String(userId)]]})\n    \t.then((res) => {\n    \t\tuserDetailsHistory.personStatusHistory = res;\n    \t})\n    );\n\n    $q.all(apiPromises)\n    .then((res) => {\n    \tuserDetailsHistory.loading = false;\n    })\n    .catch((error) => {\n    \tuserDetailsHistory.loading = false;\n    \tconsole.log(error);\n    });\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n});\n\r\nangular.module('organization')\n.controller('userDetailsProfileCtrl', function(Loader, UserProfile, $scope, $stateParams) {\n\n\tconst userDetailsProfile = this\n    const scopeName = 'userDetailsProfile.'\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    UserProfile.injectUI(userDetailsProfile, $scope, $stateParams.userId)\n\n    Loader.onFor(scopeName + 'initProfile')\n\n    UserProfile.initUserProfile($stateParams.userId, $stateParams.orgId)\n    .then(res => {\n        angular.merge(userDetailsProfile, res)\n        Loader.offFor(scopeName + 'initProfile')\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n})\n\r\nangular.module('organization')\n.controller('userDetailsRolesCtrl',function(API,$stateParams,$q,$scope,APIError,$timeout) {\n\t'use strict';\n\n\tconst userDetailsRoles = this,\n        userId = $stateParams.userId,\n        organizationId = $stateParams.orgId;\n\n    let apiPromises = [];\n\n    userDetailsRoles.loading = true;\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    let init = function init(){\n\n    apiPromises.push(\n\t    API.cui.getPersonRoles({personId: userId})\n\t    .then((res) => {\n\t    \tuserDetailsRoles.assignedRoles = res;\n            API.cui.getPersonRolesGrantable({personId:userId})\n            .then(res =>{\n                userDetailsRoles.rolesGrantable=res;\n            })\n            .fail(err =>{\n                userDetailsRoles.grantedHistoryError=true;\n            })\n\t    })\n    );\n\n    apiPromises.push(\n        API.cui.getPersonRolesGrantable({personId:userId})\n        .then(res =>{\n            userDetailsRoles.rolesGrantable=res;\n        })\n        .fail(err =>{\n            userDetailsRoles.grantedHistoryError=true;\n        })\n    );\n\n    $q.all(apiPromises)\n    .then((res) => {\n    \tuserDetailsRoles.loading = false;\n        userDetailsRoles.success=false\n    })\n    .catch((error) => {\n\t\tuserDetailsRoles.loading = false;\n        userDetailsRoles.grantedHistoryError=true;\n        userDetailsRoles.success=false\n\t\tconsole.log(error);\n    });\n}\n\n     init();\n\n    userDetailsRoles.assignRoles = () =>{\n       let roles =[]\n       angular.forEach(userDetailsRoles.appCheckbox,function(dsd,appId){\n       /*Object.keys(userRoles.appCheckbox).forEach(function(appId) {*/\n           if(dsd){\n                let test={\n                \"id\":appId\n               }\n               roles.push(test)\n           }\n        });\n        let rolesSubmitData={\n        \"userId\": userId,\n        \"roles\": roles\n        }\n        console.log(rolesSubmitData)\n        \n       userDetailsRoles.loading = true\n        API.cui.assignPersonRoles({data:rolesSubmitData})\n        .then(res =>{\n            console.log(res)\n            $scope.$digest()\n            userDetailsRoles.success=true\n             $timeout(() => {\n                userDetailsRoles.loading = false\n\n                init();\n            }, 3000);\n            \n        })\n        .fail(err =>{\n            userDetailsRoles.loading=false\n            userDetailsRoles.rolessubmitError=true\n            $scope.$digest()\n        })\n    }\n\n     $scope.$watch(\"userDetailsRoles.appCheckbox\", function(n) {\n       let count=0\n       angular.forEach(userDetailsRoles.appCheckbox,function(dsd,key){\n        console.log(key)\n        if(dsd)\n            count+=1\n       })\n       if(count>0){\n        userDetailsRoles.appCheckboxValid=true\n       }else{\n        userDetailsRoles.appCheckboxValid=false\n       }\n    }, true);\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n});\n\r\nangular.module('organization')\n.controller('orgDirectoryCtrl', function(API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,UserList,$filter,$pagination,$q,$state,$stateParams) {\n    \n    const orgDirectory = this\n    const scopeName = 'orgDirectory.'\n    orgDirectory.stateParamsOrgId=$stateParams.orgId\n    orgDirectory.search = {}\n    orgDirectory.sortBy = {}\n\n    /* ---------------------------------------- HELPER FUNCTIONS START ---------------------------------------- */\n\n    const switchBetween = (property, firstValue, secondValue) => {\n        orgDirectory.search[property] === firstValue\n            ? orgDirectory.search[property] = secondValue\n            : orgDirectory.search[property] = firstValue\n    }\n\n    const getUserListAppCount = (userList) => {\n        userList.forEach(user => {\n            API.cui.getPersonGrantedAppCount({personId: user.id})\n            .then(res => {\n                user.appCount = res\n            })\n            .fail(error => {\n                user.appCount = '...'\n            })\n        })\n    }\n\n    /* ----------------------------------------- HELPER FUNCTIONS END ----------------------------------------- */\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    const initDirectory = (organizationId) => {\n        orgDirectory.search['organization.id'] = organizationId || $stateParams.orgId || User.user.organization.id\n        orgDirectory.search.pageSize = orgDirectory.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\n\n        let apiCalls = [\n            UserList.getUsers({ qs: APIHelpers.getQs(orgDirectory.search) }),\n            UserList.getUserCount({ qs: [['organization.id', orgDirectory.search['organization.id']]] }),\n            API.cui.getOrganization({organizationId: orgDirectory.search['organization.id']})\n        ]\n\n        Loader.onFor(scopeName + 'userList')\n        APIError.offFor(scopeName + 'userList')\n\n        $q.all(apiCalls)\n        .then(([users, userCount, organization]) => {\n            orgDirectory.organization = organization\n            // orgDirectory.organizationList = APIHelpers.flattenOrgHierarchy(orgHierarchy)\n            orgDirectory.userList = users\n            orgDirectory.userCount = userCount\n            orgDirectory.statusData = APIHelpers.getCollectionValuesAndCount(users, 'status', true)\n            CuiMobileNavFactory.setTitle(organization.name)\n            orgDirectory.reRenderPagination && orgDirectory.reRenderPagination()\n            getUserListAppCount(orgDirectory.userList)\n        })\n        .catch(error => {\n            APIError.onFor(scopeName + 'userList')\n        })\n        .finally(() => {\n            Loader.offFor(scopeName + 'userList')\n        })\n    }\n\n    orgDirectory.search = Object.assign({}, $stateParams)\n    initDirectory()\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n\n\n    // headers=\"['cui-name', 'username', 'status']\" \n\n    orgDirectory.sortingCallbacks = {\n      name () {\n          orgDirectory.sortBy.sortBy = 'name'\n          orgDirectory.sort(['name.given', 'name.surname'], orgDirectory.sortBy.sortType)\n      },\n      username () {\n          orgDirectory.sortBy.sortBy = 'username'\n          orgDirectory.sort('username', orgDirectory.sortBy.sortType)\n      },\n      status () {\n          orgDirectory.sortBy.sortBy = 'status'\n          orgDirectory.sort('status', orgDirectory.sortBy.sortType)\n      }\n    }\n\n    orgDirectory.sort = (sortBy, order) => {\n        cui.log('sort', sortBy, order)\n\n      orgDirectory.userList = _.orderBy(orgDirectory.userList, sortBy, order)\n    }\n\n    orgDirectory.updateSearchParams = (page) => {\n        if (page) orgDirectory.search.page = page \n        $state.transitionTo('organization.directory.userList', orgDirectory.search, {notify: false})\n        initDirectory(orgDirectory.search['organization.id'])\n    }\n\n    orgDirectory.updateSearchByName = (name) => {\n        orgDirectory.updateSearchParams()\n    }\n    orgDirectory.actionCallbacks = {\n        sort (sortType) {\n            switch(sortType) {\n            case 'name':\n                switchBetween('sortBy', '+name.given', '-name.given')\n                break\n            case 'username':\n                switchBetween('sortBy', '+person.username', '-person.username')\n                break\n            case 'status':\n                switchBetween('sortBy', '+person.status', '-person.status')\n                break\n            }\n\n            // if (!orgDirectory.search.hasOwnProperty('sortBy')) orgDirectory.search['sortBy'] = '+' + sortType\n            // else if (orgDirectory.search.sortBy.slice(1) !== sortType) orgDirectory.search.sortBy = '+' + sortType\n            // else switchBetween('sortBy', '+' + sortType, '-' + sortType)\n            orgDirectory.updateSearchParams()\n        },\n        refine (refineType) {\n            if (refineType === 'all') delete orgDirectory.search['status']\n            else {\n                if (!orgDirectory.search.hasOwnProperty('status')) orgDirectory.search['status'] = refineType\n                else orgDirectory.search.status = refineType\n            }\n            orgDirectory.updateSearchParams()\n        }\n    }\n\n    orgDirectory.userClick = (clickedUser) => {\n        const stateOpts = {\n            userId: clickedUser.id,\n            orgId: clickedUser.organization.id,\n        }\n        if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\n        else $state.go('organization.directory.userDetails', stateOpts)\n    }\n\n    orgDirectory.getOrgMembers = (organization) => {\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')(organization.name))\n        initDirectory(organization.id)\n    }\n\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n})\n\r\nangular.module('organization')\n.controller('orgHierarchyCtrl', function(API,APIError,DataStorage,Loader,User,$scope,$state,$stateParams) {\n\n    const orgHierarchy = this\n    const pageLoader = 'orgHierarchy.loading'\n    orgHierarchy.stateParamsOrgId=$stateParams.orgId\n    orgHierarchy.expanded=false\n\n    /* -------------------------------------------- HELPER FUNCTIONS START --------------------------------------------- */\n\n    const addExpandedProperty = (childOrgs, parentOrg) => {\n        childOrgs.forEach((org ,index) => {\n            // Need to remove org if it is pending\n            if (org.status===\"PENDING\") {\n                parentOrg.children.splice(index,1)\n                return\n            }\n            if (org.children) {\n                org.expanded=false\n                addExpandedProperty(org.children,org)\n            }\n        })\n    }\n\n    /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */    \n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n    \n    const storedData = DataStorage.getType('orgHierarchy')\n\n    if (storedData) {\n        orgHierarchy.organizationHierarchy = storedData\n        // add expended property to all the org with children directive needs it to work for \n        // expandable and collapsable function\n        if (orgHierarchy.organizationHierarchy[0].children) {\n            addExpandedProperty(orgHierarchy.organizationHierarchy[0].children, orgHierarchy.organizationHierarchy[0])\n        }\n    }\n\n    if (!storedData) Loader.onFor(pageLoader)\n    // Loader.onFor(pageLoader)\n    API.cui.getOrganizationHierarchy({organizationId:orgHierarchy.stateParamsOrgId })\n    .done(res => {\n        // Put hierarchy response in an array as the hierarchy directive expects an array\n        orgHierarchy.organizationHierarchy = [res]\n        DataStorage.setType('orgHierarchy', orgHierarchy.organizationHierarchy)\n        // add expended property to all the org with children directive needs it to work for \n        // expandable and collapsable function\n        if (orgHierarchy.organizationHierarchy[0].children) {\n            addExpandedProperty(orgHierarchy.organizationHierarchy[0].children, orgHierarchy.organizationHierarchy[0])\n        }\n    })\n    .fail(err => {\n        APIError.onFor(pageLoader, err)\n    })\n    .always(() => {\n        Loader.offFor(pageLoader)\n        $scope.$digest()\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n    /* */\n    orgHierarchy.goToOrgPrfile = (org) => {\n        $state.go('organization.directory.orgDetails',{orgId:org.id})\n    }\n\n    orgHierarchy.toggleExpand = (object) => {\n        object.expanded=!object.expanded\n        let updateOrgChildren= (orgs) => {\n            orgs.forEach(org => {\n                if (org.id===object.id) {\n                    org.expanded=object.expanded\n                    return;\n                }\n                if (org.children) {\n                    updateOrgChildren(org.children)\n                }\n            })\n            \n            if (true) {};\n        }\n        updateOrgChildren(orgHierarchy.organizationHierarchy[0].children)\n        $scope.$digest()\n    }\n\n    orgHierarchy.toggleAll = (toggleFlag) => {\n        orgHierarchy.expanded=!orgHierarchy.expanded\n        let updateFlag= (orgs) => {\n            orgs.forEach(org => {\n                if (org.children) {\n                    org.expanded=!toggleFlag\n                    updateFlag(org.children)\n                }\n            })\n        }\n        updateFlag(orgHierarchy.organizationHierarchy[0].children)\n    }\n    /* */\n})\n\r\nangular.module('organization')\n.controller('divisionCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout,DataStorage) {\n\n    const division = this\n    division.sendInvitationError=''\n    const promises=[]\n    division.userSelectedOrg={}\n    division.userSelectedOrg.originalObject={}\n    division.userSelectedOrg.originalObject.name=User.user.organization.name\n    division.userSelectedOrg.originalObject.id=User.user.organization.id\n    division.stateParamsOrgId=User.user.organization.id\n    //division.emailSubject='Register as an adminstrator within '\n\n    const storedData = DataStorage.getType('orgHierarchy',User.user.id)\n\n    if (storedData) {\n        division.organizationHierarchyRoot = storedData\n        division.organizationHierarchy = storedData[0].children\n        const organizationList=[]\n        angular.forEach(division.organizationHierarchy,function(value){\n          let array={\n            \"id\":value.id,\n            \"name\":value.name[0].text\n          }\n          organizationList.push(array)\n        })\n        division.organizationList=organizationList\n    }else{\n      division.loader=true\n      API.cui.getOrganizationHierarchy({organizationId:User.user.organization.id })\n      .done(res => {\n          DataStorage.setType('orgHierarchy', [res],User.user.id)\n          const organizationList=[]\n          // Put hierarchy response in an array as the hierarchy directive expects an array\n          const storedDatas = DataStorage.getType('orgHierarchy',User.user.id)\n          division.organizationHierarchyRoot = storedDatas\n          division.organizationHierarchy = storedDatas[0].children\n          \n          angular.forEach(division.organizationHierarchy,function(value){\n            let array={\n              \"id\":value.id,\n              \"name\":value.name[0].text\n            }\n           \n            organizationList.push(array)\n          })\n          division.organizationList=organizationList\n          console.log(division.organizationList)\n         \n      })\n      .fail(err => {\n          APIError.onFor(pageLoader, err)\n      })\n      .always(() => {\n          division.loader=false\n          $scope.$digest()\n      })\n  }\n\n\n    division.sendInvitation = () => {\n           const promises=[]\n      const validEmails=[]\n      division.emailAddressError=false\n      division.sendInvitationError=false\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\n      division.emailArray=new Array()\n      division.emailArray=division.emailAddress.split(',')      \n      angular.forEach(division.emailArray,function(email){\n        if(EMAIL_REGEXP.test(email)){\n            validEmails.push(email)\n          }\n      })\n      if(validEmails.length===division.emailArray.length){\n        division.loader=true\n        angular.forEach(division.emailArray,function(email){\n          let opts = {\n            \"email\":email,\n            \"invitor\":{\n              \"id\":User.user.id,\n              \"type\":\"person\"\n              },\n            \"targetOrganization\":{\n              \"id\":division.userSelectedOrg.originalObject.id,\n              \"type\":\"organization\"\n              }\n          }\n          promises.push(API.cui.createOrgDivisionInvitation({data:opts})) \n        })\n        \n        $q.all(promises)\n        .then((res) => {\n          division.loader=false\n          division.success=true\n           division.sendInvitationError=false;\n           $timeout(() => {\n                 $state.go('invitation.inviteSelect');\n            }, 3000); \n        })\n        .catch(error => {\n             division.loader=false\n             division.sendInvitationError=true\n        });\n      }else{\n         division.emailAddressError=true\n      }\n    }\n    division.goToOrgPrfile = (org) => {\n        division.userSelectedOrg.originalObject={}\n        division.userSelectedOrg.originalObject.name=org.name[0].text\n        division.userSelectedOrg.originalObject.id=org.id\n        division.selectOrgFromList=false\n        $scope.$digest()\n    }\n     division.goToOrg = () => {\n        \n    }\n})\n\r\nangular.module('organization')\n.controller('tloCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout) {\n\n    const tlo = this\n    tlo.sendInvitationError=''\n    const promises=[]\n    tlo.organization={}\n    tlo.organization.name=User.user.organization.name\n    tlo.stateParamsOrgId=User.user.organization.id\n    //tlo.emailSubject='Register as a new organization'\n\n    tlo.sendInvitation = () => {\n      const promises=[]\n      const validEmails=[]\n      tlo.emailAddressError=false\n      tlo.sendInvitationError=false\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\n      tlo.emailArray=new Array()\n      tlo.emailArray=tlo.emailAddress.split(',')      \n      angular.forEach(tlo.emailArray,function(email){\n        if(EMAIL_REGEXP.test(email)){\n            validEmails.push(email)\n          }\n      })\n      if(validEmails.length===tlo.emailArray.length){\n        tlo.loader=true\n        angular.forEach(tlo.emailArray,function(email){\n          let opts = {\n            \"email\":email,\n            \"invitor\":{\n              \"id\":User.user.id,\n              \"type\":\"person\"\n              },\n            \"targetOrganization\":{\n              \"id\":User.user.organization.id,\n              \"type\":\"organization\"\n              }\n          }\n          promises.push(API.cui.createOrgCompanyInvitation({data:opts})) \n        })\n        \n        $q.all(promises)\n        .then((res) => {\n          tlo.loader=false\n          tlo.success=true\n           tlo.sendInvitationError=false;\n           $timeout(() => {\n                 $state.go('invitation.inviteSelect');\n            }, 3000); \n        })\n        .catch(error => {\n             tlo.loader=false\n             tlo.sendInvitationError=true\n        });\n      }else{\n         tlo.emailAddressError=true\n      }\n    }\n})\n\r\nangular.module('organization')\n.controller('userCtrl', function(APIError, API, $scope, $state,$q,Base,$stateParams,User,$timeout,DataStorage) {\n\n    const user = this\n    user.sendInvitationError=''\n    const promises=[]\n    user.userSelectedOrg={}\n    user.userSelectedOrg.originalObject={}\n    user.userSelectedOrg.originalObject.name=User.user.organization.name\n    user.userSelectedOrg.originalObject.id=User.user.organization.id\n    user.stateParamsOrgId=User.user.organization.id\n    //user.emailSubject='Register as a user to join '\n    user.selectOrgFromList=false\n\n    const storedData = DataStorage.getType('orgHierarchy',User.user.id)\n\n    if (storedData) {\n        user.organizationHierarchyRoot = storedData\n        user.organizationHierarchy = storedData[0].children\n        const organizationList=[]\n        angular.forEach(user.organizationHierarchy,function(value){\n          let array={\n            \"id\":value.id,\n            \"name\":value.name[0].text\n          }\n          organizationList.push(array)\n        })\n        user.organizationList=organizationList\n    }else{\n      user.loader=true\n      API.cui.getOrganizationHierarchy({organizationId:User.user.organization.id })\n        .done(res => {\n            DataStorage.setType('orgHierarchy', [res],User.user.id)\n            const organizationList=[]\n            const storedDatas = DataStorage.getType('orgHierarchy',User.user.id)\n            // Put hierarchy response in an array as the hierarchy directive expects an array\n            user.organizationHierarchyRoot = storedDatas\n            user.organizationHierarchy = storedDatas[0].children\n            \n            angular.forEach(user.organizationHierarchy,function(value){\n              let array={\n                \"id\":value.id,\n                \"name\":value.name[0].text\n              }\n             \n              organizationList.push(array)\n            })\n            user.organizationList=organizationList\n        })\n        .fail(err => {\n            APIError.onFor(pageLoader, err)\n        })\n        .always(() => {\n            user.loader=false\n            $scope.$digest()\n        })\n    }\n\n   \n    user.customErrors = {\n      email: {\n          email: function(){\n              var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\n              if (user.email) {\n                  return EMAIL_REGEXP.test(user.email)\n              }else{\n                  return true;\n              }\n          }\n      }\n    }\n\n    user.sendInvitation = () => {\n      const promises=[]\n      const validEmails=[]\n      user.emailAddressError=false\n      user.sendInvitationError=false\n      var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\n      user.emailArray=new Array()\n      user.emailArray=user.emailAddress.split(',')      \n      angular.forEach(user.emailArray,function(email){\n        if(EMAIL_REGEXP.test(email)){\n            validEmails.push(email)\n          }\n      })\n      if(validEmails.length===user.emailArray.length){\n        user.loader=true\n        angular.forEach(user.emailArray,function(email){\n          let opts = {\n            \"email\":email,\n            \"invitor\":{\n              \"id\":User.user.id,\n              \"type\":\"person\"\n              },\n            \"targetOrganization\":{\n              \"id\":user.userSelectedOrg.originalObject.id,\n              \"type\":\"organization\"\n              }\n          }\n          promises.push(API.cui.createPersonInvitation({data:opts})) \n        })\n        \n        $q.all(promises)\n        .then((res) => {\n          user.loader=false\n          user.success=true\n           user.sendInvitationError=false;\n           $timeout(() => {\n                 $state.go('invitation.inviteSelect');\n            }, 3000); \n        })\n        .catch(error => {\n             user.loader=false\n             user.sendInvitationError=true\n        });\n      }else{\n         user.emailAddressError=true\n      }\n      \n    }\n\n    user.goToOrgPrfile = (org) => {\n        user.userSelectedOrg.originalObject={}\n        user.userSelectedOrg.originalObject.name=org.name[0].text\n        user.userSelectedOrg.originalObject.id=org.id\n        user.selectOrgFromList=false\n        $scope.$digest()\n    }\n\n})\n\r\nangular.module('organization')\n.controller('orgProfileCtrl', function(DataStorage, Loader, Organization, User,$stateParams,$q,APIError) {\n\n    const orgProfile = this\n    const storedData = DataStorage.getType('orgProfile')\n    orgProfile.stateParamsOrgId=$stateParams.orgId\n    let orgPromise=[]\n    if (User.user.organization.id===$stateParams.orgId) {\n        orgProfile.organization = User.user.organization\n    }\n    else{\n        // Organization is different than user's org, need to get fresh\n        Loader.onFor('orgProfile.init')\n        orgPromise.push(Organization.getOrganization($stateParams.orgId))\n    }\n    \n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    if (storedData !== undefined) {\n        orgProfile.securityAdmins = storedData.admins\n        orgProfile.passwordPolicy = storedData.passwordPolicy\n        orgProfile.authenticationPolicy=storedData.authenticationPolicy\n    }\n    else Loader.onFor('orgProfile.init')\n    $q.all(orgPromise)\n    .then(res => {\n        if (orgPromise.length!==0) {\n            orgProfile.organization=res[0]\n        }\n            Organization.initOrganizationProfile(orgProfile.organization.id, orgProfile.organization.passwordPolicy.id, orgProfile.organization.authenticationPolicy.id)\n        .then(res => {\n            orgProfile.securityAdmins = res.admins\n            orgProfile.passwordPolicy = res.passwordPolicy\n            orgProfile.authenticationPolicy=res.authenticationPolicy\n            DataStorage.setType('orgProfile', res)\n            Loader.offFor('orgProfile.init')\n        })\n        .catch(err => {\n            console.error(\"there was an error fetching additional org details\" +err)\n            Loader.offFor('orgProfile.init')\n            APIError.onFor('orgProfile.init')\n        })\n    })\n    .catch(err => {\n        console.error(\"there was an error fetching org details\" +err)\n        Loader.offFor('orgProfile.init')\n        APIError.onFor('orgProfile.init')\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n})\n\r\nangular.module('organization')\n.factory('NewGrant', (DataStorage, API, $stateParams) => {\n    let newGrant = {}\n    let newGrantsInStorage\n    /*\n        This Factory provides common platform to share common logic between granting an app to \n        User and Organization\n    */\n    // Not handling package requests as not needed\n    newGrant.updateStorage = (type,id,application) => {\n        let storageType\n        if(type===\"person\") storageType='newGrant'\n        else storageType='newOrgGrant'\n        DataStorage.setType(storageType, {\n            id: id,\n            type: type,\n            applications: application\n        })\n        // console.log(DataStorage.getType('newGrant'))\n    }\n\n    newGrant.pullFromStorage = (scope,resourceId,type) => {\n        // const newGrantsInStorage = DataStorage.getDataThatMatches('newGrant', { userId: $stateParams.userID })\n        if (type===\"person\") {\n            newGrantsInStorage = DataStorage.getType('newGrant')\n        }\n        else{\n            newGrantsInStorage = DataStorage.getType('newOrgGrant')\n        }      \n        if (newGrantsInStorage&&newGrantsInStorage.id==resourceId) {\n            scope.appsBeingRequested = Object.assign({}, newGrantsInStorage.applications)\n            scope.packagesBeingRequested = Object.assign({}, newGrantsInStorage.packages)\n        }\n        else {\n            scope.packagesBeingRequested = {}\n            scope.appsBeingRequested = {}\n        }\n\n        scope.numberOfRequests = Object.keys(scope.appsBeingRequested).length + Object.keys(scope.packagesBeingRequested).length\n\n        scope.applicationCheckbox = Object.keys(scope.appsBeingRequested).reduce((applications, appId) => {\n            applications[appId] = true\n            return applications\n        },{})\n\n        scope.packageCheckbox = Object.keys(scope.packagesBeingRequested).reduce((packages, appId) => {\n            packages[appId] = true\n            return packages\n        },{})\n\n        scope.requests = {\n            application: scope.appsBeingRequested,\n            package: scope.packagesBeingRequested\n        }\n    }\n\n    newGrant.claimGrants = (id, type,packageRequestObject) => {\n        let claimGrants = []\n\n        const buildPackageClaims = (claimsObject) => {\n            if (Object.keys(claimsObject).length === 0) {\n                return undefined;\n            } // if there's no claims in this claim object\n            let packageClaims = []\n            Object.keys(claimsObject).forEach(claimId => {\n                if (Object.keys(claimsObject[claimId]).length === 0) {\n                    return;\n                } // if no claimValues selected for that claimId\n                const claimValues = Object.keys(claimsObject[claimId]).reduce((claims, claimValueId) => {\n                    claims.push({ claimValueId })\n                    return claims\n                },[])\n\n                packageClaims.push({\n                    claimId,\n                    claimValues\n                })\n            })\n            return packageClaims\n        }\n\n        Object.keys(packageRequestObject).forEach(pkgId => {\n            claimGrants.push({\n                data: {\n                    grantee: {\n                        id: id,\n                        type: type\n                    },\n                    servicePackage: {\n                        id: pkgId,\n                        type: 'servicePackage'\n                    },\n                    packageClaims: buildPackageClaims(packageRequestObject[pkgId].claims)\n                }\n            })\n        })\n\n       return claimGrants\n    }\n\n    newGrant.packageGrants = (id, type, packageRequestObject) => {\n        let packageGrants = []\n        let index=0\n        Object.keys(packageRequestObject).forEach(pkgId => {            \n            packageGrants.push({\n                packageId: pkgId,\n                data: {\n                    version:'123',\n                    status: 'active',\n                    grantee: {\n                        id: id,\n                        type: type\n                    },\n                    servicePackage: {\n                        id: pkgId,\n                        type: 'servicePackage'\n                    },\n                    reason:packageRequestObject[pkgId].reason\n                }\n            })\n            if (type==='person') {\n                packageGrants[index].personId=id\n            }\n            else{\n                packageGrants[index].organizationId=id\n            }\n            index++\n        })\n\n        return packageGrants\n    }\n\n    return newGrant\n})\r\nangular.module('organization')\n.controller('newGrantClaimsCtrl', function(API,APIHelpers,DataStorage,Loader,NewGrant,$stateParams,$q,$scope,$state,$timeout) {\n    \n    const newGrantClaims = this\n    const loaderType = 'newGrantClaims.'\n    newGrantClaims.prevState={\n        params:{\n            userId:$stateParams.userId,\n            orgId:$stateParams.orgId\n        },\n        name:\"organization.directory.userDetails\"\n    }\n    newGrantClaims.packageRequests = {}\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    NewGrant.pullFromStorage(newGrantClaims,$stateParams.userId,'person');\n    if (newGrantClaims.numberOfRequests===0) {\n        $state.go('organization.requests.newGrantSearch',{userId:$stateParams.userId})\n    }\n    //For PopUp\n    newGrantClaims.appsBeingRequestedforPopup=angular.copy(newGrantClaims.appsBeingRequested)\n    //Keep only one app among all bundled apps\n    angular.forEach(newGrantClaims.appsBeingRequested , (request) =>{\n        if (request.bundledApps) {\n            request.bundledApps.forEach(bundledApp => {\n                if (newGrantClaims.appsBeingRequested[bundledApp.id]) {\n                    delete newGrantClaims.appsBeingRequested[bundledApp.id]\n                }                    \n            })\n        }\n    })\n    // get the claims for each app being requested\n    Object.keys(newGrantClaims.appsBeingRequested).forEach((appId, i) => {\n        const app = newGrantClaims.appsBeingRequested[appId]\n\n        if (!newGrantClaims.packageRequests[app.servicePackage.id]) {\n            newGrantClaims.packageRequests[app.servicePackage.id] = {\n                claims: {},\n                administratorRights: false\n            }\n        }\n\n        Loader.onFor(loaderType + 'claims' + i)\n\n        const opts = {\n            qs: APIHelpers.getQs({\n                packageId: newGrantClaims.appsBeingRequested[appId].servicePackage.id\n            })\n        }\n\n        API.cui.getPackageClaims(opts)\n        .then(res => {\n            newGrantClaims['claims' + i] = Object.assign({}, res)\n            res.forEach(claim => {\n                newGrantClaims.packageRequests[app.servicePackage.id].claims[claim.claimId] = {}\n            })\n            Loader.offFor(loaderType + 'claims' + i)\n            $scope.$digest()\n        })\n        .fail(err => { \n            // claims endpoint throws an error when the package has no claims\n            newGrantClaims['claims' + i] = []\n            Loader.offFor(loaderType + 'claims' + i)\n            $scope.$digest()\n        })\n    })\n\n    Loader.onFor(loaderType + 'user')\n    API.cui.getPerson({ personId: $stateParams.userId })\n    .then(res => {\n        newGrantClaims.user = Object.assign({}, res)\n        Loader.offFor(loaderType + 'user')\n        $scope.$digest()\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n\n    newGrantClaims.submit = () => {\n        Loader.onFor(loaderType + 'submit')\n        let claimsPromises=[]\n        // Grant Packages\n        $q.all(NewGrant.packageGrants($stateParams.userId ,'person', newGrantClaims.packageRequests).map(opts => API.cui.grantPersonPackage(opts)))\n        .then(res => {\n            // grant claims\n            let claimsData=NewGrant.claimGrants($stateParams.userId ,'person', newGrantClaims.packageRequests)\n            claimsData.forEach(claimData => {\n                if(claimData.data.packageClaims&&claimData.data.packageClaims.length!==0){\n                    claimsPromises.push(API.cui.grantClaims(claimData))\n                }\n            })\n            return $q.all(claimsPromises)\n        })\n        .then(res => {\n            Loader.offFor(loaderType + 'submit')\n            newGrantClaims.success = true\n            DataStorage.setType('newGrant',{})\n            $timeout(() => {\n                $state.go('organization.directory.userList',{userId:$stateParams.userId,orgId:$stateParams.orgId})\n            }, 3000);\n        })\n        .catch(err => {\n            Loader.offFor(loaderType + 'submit')\n            newGrantClaims.error = true\n        })\n    }\n\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n})\n\r\nangular.module('organization')\n.controller('newGrantCtrl', function(API, $stateParams, $scope, $state, $filter, Loader, DataStorage,NewGrant) {\n\n    const newGrant = this\n    newGrant.prevState={\n        params:{\n            userId:$stateParams.userId,\n            orgId:$stateParams.orgId\n        },\n        name:\"organization.directory.userDetails\"\n    }\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n    newGrant.searchType = 'applications'\n\n    /****\n        grants in DataStorage are under the type 'newGrant' and look like\n\n        [\n            {\n                userId:<user for which the grant is being made>,\n                applications:<array of applications being granted>,\n                packages:<array of packages being granted>\n            }\n        ]\n    ****/\n    NewGrant.pullFromStorage(newGrant,$stateParams.userId,'person');\n    Loader.onFor('newGrant.user')\n    API.cui.getPerson({ personId:$stateParams.userId })\n    .then(res => {\n        newGrant.user = Object.assign({}, res)\n        Loader.offFor('newGrant.user')\n        $scope.$digest()\n    })\n\n    Loader.onFor('newGrant.categories')\n    API.cui.getCategories()\n    .then(res => {\n        newGrant.categories = res.slice()\n        Loader.offFor('newGrant.categories')\n        $scope.$digest()\n    })\n    .fail(err => {\n        Loader.offFor('newGrant.categories')\n        newGrant.categoryError=true\n        $scope.$digest()\n    })\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    newGrant.searchCallback = (opts) => {\n        if (!opts) {\n            $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId});\n        } else if (typeof opts ==='string') {\n            $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId, name: opts});\n        } else {\n            const optsParser = {\n                category: (unparsedCategory) => {\n                    const category = $filter('cuiI18n')(unparsedCategory)\n                    $state.go('organization.requests.newGrantSearch',{type:newGrant.searchType, userId: $stateParams.userId, orgId: $stateParams.orgId, category})\n                }\n            }\n            optsParser[opts.type](opts.value)\n        }\n    }\n\n    newGrant.goToClaimSelection = () => {\n        $state.go('organization.requests.newGrantClaims', { userId: $stateParams.userId, orgId: $stateParams.orgId })\n    }\n    // ON CLICK END ----------------------------------------------------------------------------------\n\n});\n\r\nangular.module('organization')\n.controller('newGrantSearchCtrl', function ($scope, $state, $stateParams, API, DataStorage, Loader, $pagination, APIHelpers, NewGrant, $q) {\n    const newGrantSearch = this;\n    newGrantSearch.prevState={\n        params:{\n            userId:$stateParams.userId,\n            orgId:$stateParams.orgId\n        },\n        name:\"organization.directory.userDetails\"\n    }\n    \n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    /****\n        grants in DataStorage are under the type 'newGrant' and look like\n\n        [\n            {\n                userId:<user for which the grant is being made>,\n                applications:<object of applications being granted>,\n                packages:<object of packages being granted>\n            }\n        ]\n    ****/\n\n    NewGrant.pullFromStorage(newGrantSearch,$stateParams.userId,'person');\n\n    Loader.onFor('newGrantSearch.user');\n    API.cui.getPerson({ personId: $stateParams.userId })\n    .then(res => {\n        newGrantSearch.user = Object.assign({}, res);\n        Loader.offFor('newGrantSearch.user');\n        $scope.$digest();\n    })\n    .fail(err =>{\n        console.error(\"There was an error in fetching user details\" + err)\n        Loader.offFor('newGrantSearch.user');\n        $scope.$digest();\n    })\n\n    const searchUpdate = ({ previouslyLoaded }) => {\n        Loader.onFor('newGrantSearch.apps');\n        if (!previouslyLoaded) {\n          newGrantSearch.search = Object.assign({}, $stateParams);\n        }\n\n        const type = newGrantSearch.search.type || 'applications';\n\n        const queryParams = {\n            'service.name': newGrantSearch.search.name,\n            'service.category': newGrantSearch.search.category,\n            page: newGrantSearch.search.page || 1,\n            pageSize: newGrantSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0],\n            sortBy: newGrantSearch.search.sortBy\n        };\n\n        const queryArray = APIHelpers.getQs(queryParams);\n\n        const queryOptions = {\n            personId: $stateParams.userId,\n            qs: queryArray\n        };\n\n        if (type === 'applications') {\n          // TODO: REPLACE WITH REAL COUNT\n          $q.all([API.cui.getPersonGrantableCount(queryOptions), API.cui.getPersonGrantableApps(queryOptions)])\n          .then(res => {\n              newGrantSearch.applicationList = res[1].slice();\n              newGrantSearch.count = res[0];\n              if(newGrantSearch.reRenderPaginate) {\n                newGrantSearch.reRenderPaginate();\n              }\n              Loader.offFor('newGrantSearch.apps')\n          })\n          .catch(err => {\n            console.error('There was an error fetching grantable apps or/and its count' + err)\n            Loader.offFor('newGrantSearch.apps')\n            newGrantSearch.grantableAppsError=true\n          })\n        }\n    };\n\n    searchUpdate({\n        previouslyLoaded: false\n    });\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    newGrantSearch.toggleRequest = ({ type, payload }) => {\n        if (payload) {\n            const storedRequests = newGrantSearch.requests[type]\n            storedRequests[payload.id] ? delete storedRequests[payload.id] : storedRequests[payload.id] = payload\n            if (storedRequests[payload.id]) {\n                newGrantSearch[type + 'Checkbox'][payload.id] = true;\n            } else if (newGrantSearch[type + 'Checkbox'][payload.id]) {\n                delete newGrantSearch[type + 'Checkbox'][payload.id];\n            }\n            newGrantSearch.numberOfRequests = Object.keys(newGrantSearch.applicationCheckbox).length + Object.keys(newGrantSearch.packageCheckbox).length\n            NewGrant.updateStorage('person',$stateParams.userId, newGrantSearch.requests.application)\n        }\n    }\n\n    newGrantSearch.updateSearch = () => {\n        const stateParams = Object.assign({}, newGrantSearch.search)\n        $state.transitionTo('organization.requests.newGrantSearch', stateParams, {notify:false})\n        searchUpdate({\n            previouslyLoaded: true\n        })\n    }\n\n    newGrantSearch.goToClaimSelection = () => {\n        $state.go('organization.requests.newGrantClaims', { userId: $stateParams.userId, orgId: $stateParams.orgId })\n    }\n\n    //select parent if it is a child, deselect child if it is a parent\n    newGrantSearch.checkRelatedAppsBody= function(relatedApp){\n        newGrantSearch.toggleRequest(_.find(newGrantSearch.list,{id:relatedApp.id}))   \n        newGrantSearch.checkRelatedAndBundledApps(_.find(newGrantSearch.list,{id:relatedApp.id}))\n    };\n\n    //deselect child if it is a parent, select parent if it is a child \n    newGrantSearch.checkRelatedAndBundledApps=function(type,application){\n        const storedRequests = newGrantSearch.requests[type]\n        //if unchecked the checkbox\n        if (!storedRequests[application.id]) {\n            //if it is a parent then then deselect childs\n            if (!application.servicePackage.parent) {\n                application.relatedApps && application.relatedApps.forEach((relatedApp)=>{\n                    // if (newGrantSearch[type + 'Checkbox'][relatedApp.id]) {\n                        // newGrantSearch[type + 'Checkbox'][relatedApp.id]=!newGrantSearch[type + 'Checkbox'][relatedApp.id]\n                        newGrantSearch.toggleRequest({type:'application', payload:_.find(newGrantSearch.applicationList,{id:relatedApp.id})})\n                    // }\n                })\n            }\n            newGrantSearch.checkBundledApps(application,false)           \n        }else{\n            if (application.servicePackage.parent) {\n                //Need to select the other parent(if it has any) If user clicks on expandabel title\n                newGrantSearch.applicationList.forEach(app=> {\n                    //if it is a parent and parent of selected app\n                    if (!app.servicePackage.parent&&app.servicePackage.id===application.servicePackage.parent.id&&!newGrantSearch['applicationCheckbox'][app.id]) {\n                       newGrantSearch['applicationCheckbox'][app.id]=!newGrantSearch['applicationCheckbox'][app.id]\n                       newGrantSearch.toggleRequest({type:'application', payload:app})\n                    }\n                })\n            }\n            newGrantSearch.checkBundledApps(application,true)\n        }\n    }\n\n    newGrantSearch.checkBundledApps= function(application,check){\n        if (application.bundledApps) {\n            application.bundledApps.forEach(bundledApp=>{\n                // newGrantSearch['applicationCheckbox'][bundledApp.id]=check\n                newGrantSearch.toggleRequest({type:'application', payload:_.find(newGrantSearch.applicationList,{id:bundledApp.id})})\n            })\n        }\n    }\n    // ON CLICK END ----------------------------------------------------------------------------------\n})\n\r\nangular.module('organization')\n.controller('newOrgGrantClaimsCtrl', function(API,APIHelpers,DataStorage,Loader,NewGrant,$stateParams,$q,$scope,$state,$timeout) {\n    \n    const newOrgGrantClaims = this\n    const loaderType = 'newOrgGrantClaims.'\n    newOrgGrantClaims.prevState={\n        params:{\n            orgId:$stateParams.orgId\n        }\n    }\n    if (API.user.organization.id===$stateParams.orgId) {\n        newOrgGrantClaims.prevState.name=\"organization.applications\"\n    }\n    else{\n        newOrgGrantClaims.prevState.name=\"organization.directory.orgDetails\"\n    }\n    newOrgGrantClaims.packageRequests = {}\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n    NewGrant.pullFromStorage(newOrgGrantClaims,$stateParams.orgId,'organization');\n    if (newOrgGrantClaims.numberOfRequests===0) {\n        $state.go('organization.requests.newOrgGrantSearch',{orgId:$stateParams.orgId})\n    }\n        //For PopUp\n    newOrgGrantClaims.appsBeingRequestedforPopup=angular.copy(newOrgGrantClaims.appsBeingRequested)\n    //Keep only one app among all bundled apps\n    angular.forEach(newOrgGrantClaims.appsBeingRequested , (request) =>{\n        if (request.bundledApps) {\n            request.bundledApps.forEach(bundledApp => {\n                if (newOrgGrantClaims.appsBeingRequested[bundledApp.id]) {\n                    delete newOrgGrantClaims.appsBeingRequested[bundledApp.id]\n                }                    \n            })\n        }\n    })\n    // get the claims for each app being requested\n    Object.keys(newOrgGrantClaims.appsBeingRequested).forEach((appId, i) => {\n        const app = newOrgGrantClaims.appsBeingRequested[appId]\n\n        if (!newOrgGrantClaims.packageRequests[app.servicePackage.id]) {\n            newOrgGrantClaims.packageRequests[app.servicePackage.id] = {\n                claims: {},\n                administratorRights: false\n            }\n        }\n\n        Loader.onFor(loaderType + 'claims' + i)\n\n        // const opts = {\n        //     qs: APIHelpers.getQs({\n        //         packageId: newOrgGrantClaims.appsBeingRequested[appId].servicePackage.id\n        //     })\n        // }\n\n        // API.cui.getPackageClaims(opts)\n        // .then(res => {\n        //     newOrgGrantClaims['claims' + i] = Object.assign({}, res)\n        //     res.forEach(claim => {\n        //         newOrgGrantClaims.packageRequests[app.servicePackage.id].claims[claim.claimId] = {}\n        //     })\n        //     Loader.offFor(loaderType + 'claims' + i)\n        //     $scope.$digest()\n        // })\n        // .fail(err => { \n        //     // claims endpoint throws an error when the package has no claims\n        //     newOrgGrantClaims['claims' + i] = []\n        //     Loader.offFor(loaderType + 'claims' + i)\n        //     $scope.$digest()\n        // })\n    })\n\n    Loader.onFor(loaderType + 'org')\n    API.cui.getOrganization({ organizationId: $stateParams.orgId })\n    .then(res => {\n        newOrgGrantClaims.org = Object.assign({}, res)\n        Loader.offFor(loaderType + 'org')\n        $scope.$digest()\n    })\n\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n\n    newOrgGrantClaims.submit = () => {\n        Loader.onFor(loaderType + 'submit')\n        newOrgGrantClaims.success = false;\n        let claimsPromises=[]\n        // Grant Packages\n        $q.all(NewGrant.packageGrants($stateParams.orgId ,'organization', newOrgGrantClaims.packageRequests).map(opts => API.cui.grantOrganizationPackage(opts)))\n        // .then(res => {\n        //     // grant claims\n        //     let claimsData=NewGrant.claimGrants($stateParams.orgId ,'organization', newOrgGrantClaims.packageRequests)\n        //     claimsData.forEach(claimData => {\n        //         if(claimData.data.packageClaims&&claimData.data.packageClaims.length!==0){\n        //             claimsPromises.push(API.cui.grantClaims(claimData))\n        //         }\n        //     })\n        //     return $q.all(claimsPromises)\n        // })\n        .then(res => {\n            Loader.offFor(loaderType + 'submit')\n            newOrgGrantClaims.success = true\n            DataStorage.setType('newOrgGrant',{})\n            $timeout(() => {\n                $state.go('organization.applications',{orgId:$stateParams.orgId});\n            }, 3000);\n        })\n        .catch(err => {\n            Loader.offFor(loaderType + 'submit')\n            newOrgGrantClaims.error = true\n        })\n    }\n\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n})\n\r\nangular.module('organization')\n.controller('newOrgGrantCtrl', function(API, $stateParams, $scope, $state, $filter, Loader, DataStorage,NewGrant) {\n\n    const newOrgGrant = this\n    newOrgGrant.prevState={\n        params:{\n            orgId:$stateParams.orgId\n        }\n    }\n    if (API.user.organization.id===$stateParams.orgId) {\n        newOrgGrant.prevState.name=\"organization.applications\"\n    }\n    else{\n        newOrgGrant.prevState.name=\"organization.directory.orgDetails\"\n    }\n    \n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    newOrgGrant.searchType = 'applications'\n\n    /****\n        grants in DataStorage are under the type 'newGrant' and look like\n\n        [\n            {\n                id:<user/org for which the grant is being made>,\n                applications:<array of applications being granted>,\n                packages:<array of packages being granted>\n                type:person or organiztion\n            }\n        ]\n    ****/\n    NewGrant.pullFromStorage(newOrgGrant,$stateParams.orgId,'organization');\n    Loader.onFor('newOrgGrant.org')\n    API.cui.getOrganization({ organizationId:$stateParams.orgId })\n    .then(res => {\n        newOrgGrant.org = Object.assign({}, res)\n        Loader.offFor('newOrgGrant.org')\n        $scope.$digest()\n    })\n\n    Loader.onFor('newOrgGrant.categories')\n    API.cui.getCategories()\n    .then(res => {\n        newOrgGrant.categories = res.slice()\n        Loader.offFor('newOrgGrant.categories')\n        $scope.$digest()\n    })\n    .fail(err => {\n        Loader.offFor('newOrgGrant.categories')\n        newOrgGrant.categoryError=true\n        $scope.$digest()\n    })\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    newOrgGrant.searchCallback = (opts) => {\n        if (!opts) {\n            $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId});\n        } else if (typeof opts ==='string') {\n            $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId, name: opts});\n        } else {\n            const optsParser = {\n                category: (unparsedCategory) => {\n                    const category = $filter('cuiI18n')(unparsedCategory)\n                    $state.go('organization.requests.newOrgGrantSearch',{type:newOrgGrant.searchType, orgId: $stateParams.orgId, category})\n                }\n            }\n            optsParser[opts.type](opts.value)\n        }\n    }\n\n    newOrgGrant.goToClaimSelection = () => {\n        $state.go('organization.requests.newOrgGrantClaims', { orgId: $stateParams.orgId })\n    }\n    // ON CLICK END ----------------------------------------------------------------------------------\n\n});\n\r\nangular.module('organization')\n.controller('newOrgGrantSearchCtrl', function ($scope, $state, $stateParams, API, DataStorage, Loader, $pagination, APIHelpers, NewGrant, $q, APIError) {\n    const newOrgGrantSearch = this;\n    newOrgGrantSearch.prevState={\n        params:{\n            orgId:$stateParams.orgId\n        }\n    }\n\n    if (API.user.organization.id===$stateParams.orgId) {\n        newOrgGrantSearch.prevState.name=\"organization.applications\"\n    }\n    else{\n        newOrgGrantSearch.prevState.name=\"organization.directory.orgDetails\"\n    }\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    // const updateStorage = () => {\n    //     DataStorage.setType('newOrgGrant', {\n    //         id: $stateParams.orgId,\n    //         type:'organization',\n    //         applications: newOrgGrantSearch.requests.application,\n    //         packages: newOrgGrantSearch.requests.package\n    //     })\n    //     console.log(DataStorage.getType('newOrgGrant'))\n    // };\n\n    const updateViewList = (list) => {\n        let deferred= $q.defer()\n        newOrgGrantSearch.viewList=[]\n        let qs=[]\n        let apiPromises = []\n        angular.forEach(list, (app,parentIndex) => {\n            // Child App and Parent app requested by user\n            if(app.servicePackage.parent&&app.relatedApps){\n                let flag=false\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\n                    if (_.find(list,{id:realtedApp.id})) {\n                        flag=true\n                    }\n                    else{\n                        qs.push(['service.id',realtedApp.id])\n                    }\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\n                        apiPromises.push(API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs}))\n                        qs=[]\n                    }\n                })\n            }\n            else{\n                newOrgGrantSearch.viewList.push(app)\n            }\n        })\n        $q.all(apiPromises)\n        .then(res => {\n            angular.forEach(res, (app) => {\n                if (newOrgGrantSearch.search.name) {\n                    app[0].expanded=true\n                }\n                newOrgGrantSearch.viewList.push(...app)\n                newOrgGrantSearch.list.push(...app)\n            })\n            deferred.resolve()\n        })\n        .catch(err =>{\n            console.log(\"There was an error loading parent requestable apps\")\n                deferred.reject(err)\n        })\n        return deferred.promise\n    }    \n\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    /****\n        grants in DataStorage are under the type 'newGrant' and look like\n\n        [\n            {\n                id:<user/org for which the grant is being made>,\n                applications:<object of applications being granted>,\n                packages:<object of packages being granted>\n                type:<person or org>\n            }\n        ]\n    ****/\n\n    NewGrant.pullFromStorage(newOrgGrantSearch,$stateParams.orgId,'organization');\n\n    Loader.onFor('newOrgGrantSearch.org');\n    API.cui.getOrganization({ organizationId: $stateParams.orgId })\n    .then(res => {\n        newOrgGrantSearch.org = Object.assign({}, res);\n        Loader.offFor('newOrgGrantSearch.org');\n        $scope.$digest();\n    })\n    .fail(err => {\n        console.error('There was an error retreiving organization details '+err)\n        Loader.offFor('newOrgGrantSearch.org');\n        $scope.$digest();\n    })\n\n    const searchUpdate = ({ previouslyLoaded }) => {\n        Loader.onFor('newOrgGrantSearch.apps');\n        if (!previouslyLoaded) {\n          newOrgGrantSearch.search = Object.assign({}, $stateParams);\n        }\n\n        const type = newOrgGrantSearch.search.type || 'applications';\n\n        const queryParams = {\n            'service.name': newOrgGrantSearch.search.name,\n            'service.category': newOrgGrantSearch.search.category,\n            page: newOrgGrantSearch.search.page || 1,\n            pageSize: newOrgGrantSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0],\n            sortBy: newOrgGrantSearch.search.sortBy\n        };\n\n        const queryArray = APIHelpers.getQs(queryParams);\n\n        const queryOptions = {\n            organizationId: $stateParams.orgId,\n            qs: queryArray\n        };\n\n        if (type === 'applications') {\n          // TODO: REPLACE WITH REAL COUNT\n          $q.all([API.cui.getOrganizationGrantableCount(queryOptions), API.cui.getOrganizationGrantableApps(queryOptions)])\n          .then(res => {\n              newOrgGrantSearch.applicationList = res[1].slice();\n              newOrgGrantSearch.count = res[0];\n              if(newOrgGrantSearch.reRenderPaginate) {\n                newOrgGrantSearch.reRenderPaginate();\n              }\n              updateViewList(res[1])\n             .then(() =>{\n                Loader.offFor('newOrgGrantSearch.apps');\n             })\n          })\n          .catch(err =>{\n            console.error(\"There was an error in retreiving grantable apps. \"+err)\n            APIError.onFor('newOrgGrantSearch.apps')\n            Loader.offFor('newOrgGrantSearch.apps');\n          })\n        }\n    };\n\n    searchUpdate({\n        previouslyLoaded: false\n    });\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    newOrgGrantSearch.toggleRequest = ({ type, payload }) => {\n        if (payload) {\n            const storedRequests = newOrgGrantSearch.requests[type]\n            storedRequests[payload.id] ? delete storedRequests[payload.id] : storedRequests[payload.id] = payload\n            if (storedRequests[payload.id]) {\n                newOrgGrantSearch[type + 'Checkbox'][payload.id] = true;\n            } else if (newOrgGrantSearch[type + 'Checkbox'][payload.id]) {\n                delete newOrgGrantSearch[type + 'Checkbox'][payload.id];\n            }\n            newOrgGrantSearch.numberOfRequests = Object.keys(newOrgGrantSearch.applicationCheckbox).length + Object.keys(newOrgGrantSearch.packageCheckbox).length\n\n            NewGrant.updateStorage('organization',$stateParams.orgId, newOrgGrantSearch.requests.application)\n        }\n    }\n\n    newOrgGrantSearch.updateSearch = () => {\n        const stateParams = Object.assign({}, newOrgGrantSearch.search)\n        $state.transitionTo('organization.requests.newOrgGrantSearch', stateParams, {notify:false})\n        searchUpdate({\n            previouslyLoaded: true\n        })\n    }\n\n    newOrgGrantSearch.goToClaimSelection = () => {\n        $state.go('organization.requests.newOrgGrantClaims', { orgId: $stateParams.orgId })\n    }\n\n        //select parent if it is a child, deselect child if it is a parent\n    newOrgGrantSearch.checkRelatedAppsBody= function(relatedApp){\n        newOrgGrantSearch.toggleRequest(_.find(newOrgGrantSearch.list,{id:relatedApp.id}))   \n        newOrgGrantSearch.checkRelatedAndBundledApps(_.find(newOrgGrantSearch.list,{id:relatedApp.id}))\n    };\n\n    //deselect child if it is a parent, select parent if it is a child \n    newOrgGrantSearch.checkRelatedAndBundledApps=function(type,application){\n        const storedRequests = newOrgGrantSearch.requests[type]\n        //if unchecked the checkbox\n        if (!storedRequests[application.id]) {\n            //if it is a parent then then deselect childs\n            if (!application.servicePackage.parent) {\n                application.relatedApps && application.relatedApps.forEach((relatedApp)=>{\n                    // if (newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]) {\n                        // newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]=!newOrgGrantSearch[type + 'Checkbox'][relatedApp.id]\n                        newOrgGrantSearch.toggleRequest({type:'application', payload:_.find(newOrgGrantSearch.applicationList,{id:relatedApp.id})})\n                    // }\n                })\n            }\n            newOrgGrantSearch.checkBundledApps(application,false)           \n        }else{\n            if (application.servicePackage.parent) {\n                //Need to select the other parent(if it has any) If user clicks on expandabel title\n                newOrgGrantSearch.applicationList.forEach(app=> {\n                    //if it is a parent and parent of selected app\n                    if (!app.servicePackage.parent&&app.servicePackage.id===application.servicePackage.parent.id&&!newOrgGrantSearch['applicationCheckbox'][app.id]) {\n                       newOrgGrantSearch['applicationCheckbox'][app.id]=!newOrgGrantSearch['applicationCheckbox'][app.id]\n                       newOrgGrantSearch.toggleRequest({type:'application', payload:app})\n                    }\n                })\n            }\n            newOrgGrantSearch.checkBundledApps(application,true)\n        }\n    }\n\n    newOrgGrantSearch.checkBundledApps= function(application,check){\n        if (application.bundledApps) {\n            application.bundledApps.forEach(bundledApp=>{\n                // newOrgGrantSearch['applicationCheckbox'][bundledApp.id]=check\n                newOrgGrantSearch.toggleRequest({type:'application', payload:_.find(newOrgGrantSearch.applicationList,{id:bundledApp.id})})\n            })\n        }\n    }\n    // ON CLICK END ----------------------------------------------------------------------------------\n})\n\r\nangular.module('organization')\n.controller('orgAppRequestsCtrl', \n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,DataStorage) {\n\n    const scopeName = 'orgAppRequests.'\n\tconst orgAppRequests = this\n    orgAppRequests.search = {}\n\torgAppRequests.sortBy = {}\n\n\torgAppRequests.search=Object.assign({},$stateParams)\n\tif(!orgAppRequests.search.page)\n\t\torgAppRequests.search.page=1\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n\t\tvar foundOrgs = [];\n\t\tvar foundPersons = [];\n\t\tvar foundPackages = [];\n\n\n  \tvar init = function() {\n  \t\tcui.log('init');\n\n      orgAppRequests.search['isApprovable'] = true;\n      orgAppRequests.search.pageSize = orgAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\n\t\t\tvar qsArray = APIHelpers.getQs(orgAppRequests.search);\n\n\t    orgAppRequests.data = []\n      Loader.onFor(scopeName + 'data')\n      APIError.offFor(scopeName + 'data')\n\n\n\t\t\tvar getOrg = function(orgId) {\n\t\t\t\treturn $.Deferred(function (dfr) {\n\t\t\t\t\tif (orgId.length) {\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\n\t\t\t\t\t\tif (cached) {\n\t\t\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\n\t\t\t\t\t\t\t\tdfr.resolve(org);\n\t\t\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\n\t\t\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar getPerson = function(personId) {\n\t\t\t\treturn $.Deferred(function (dfr) {\n\t\t\t\t\tif (personId.length) {\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\n\t\t\t\t\t\tif (cached) {\n\t\t\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\n\t\t\t\t\t\t\t\tdfr.resolve(person);\n\t\t\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\n\t\t\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar getPackage = function(packageId) {\n\t\t\t\treturn $.Deferred(function (dfr) {\n\t\t\t\t\tif (packageId.length) {\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\n\t\t\t\t\t\tif (cached) {\n\t\t\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\n\t\t\t\t\t\t\t\tdfr.resolve(p);\n\t\t\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\n\t\t\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar done = function(context) {\n  \t\t\t$timeout(function() {\n\t        Loader.offFor(scopeName + 'data')\n\t        cui.log('done', context);\n\t        cui.log('data', orgAppRequests.data);\n\n\t        orgAppRequests.reRenderPagination && orgAppRequests.reRenderPagination()\n  \t\t\t});\n\t\t\t};\n\n\t\t\t/*qsArray.push(['requestor.type','organization'])getPackageRequests*/\n\t\t\tqsArray.push(['requestor.id',User.user.organization.id])\n\t\t\tAPI.cui.retriveOrgPendingApps({ qs: ['requestor.id',User.user.organization.id] }).then(function(res) {\n\t\t\t\tvar calls = [];\n\n\t\t\t\t_.each(res, function(pkgReq) {\n\t\t\t\t\t\n\t\t\t\t\t// NB create an obj and bind it to scope...\n\t\t\t\t\tvar data = pkgReq\n        \torgAppRequests.data.push(data);\n\n        \t// ..then cache the calls, which populate obj asynchronously...\n\t        calls.push(\n\t        \tgetPerson(pkgReq.creator).then(function(person) {\n\t        \t\tdata.personData = person || {};\n\t        \t\tvar pkgId = (pkgReq && pkgReq.servicePackage) ? pkgReq.servicePackage.id : '';\n\t          \treturn getPackage(pkgId);\n\t\t\t\t\t\t}).then(function(pkg) {\n\t        \t\tdata.packageData = pkg;\n\t        \t\tvar orgId = pkgReq.requestor.id;\n\t\t\t\t\t\t\treturn getOrg(orgId);\n\t\t\t\t\t\t}).then(function(org) {\n\t\t\t\t\t\t\tif (! data.personData.organization) {\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\n\t      \t\t}).fail(function() {\n\t      \t\t\t// mute the failures so as not to derail the entire list\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\n\t      \t\t})\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\treturn $.Deferred().resolve(calls);\n\t\t\t}).then(function(calls) {\n\t\t\t\t// do the cached calls\n\t\t\t\treturn $.when.apply($, calls);\n\t\t\t}).then(function() {\n\t\t\t\t// do the count (used for pagination)\n\t\t\t\treturn API.cui.getPackageRequestsCount();\n\t\t\t}).then(function(count) {\n\t\t\t\t// apply the count\n\t\t\t\torgAppRequests.userCount = count;\n\t\t\t\tAPI.user.orgAppRequestsCount=count\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\n\t\t\t}).fail(function(error) {\n        APIError.onFor(scopeName + 'data')\n      }).always(function() {\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('App Requests'))\n      \tdone('finally');\n      });\n    };\n\n    init();\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n    orgAppRequests.sortingCallbacks = {\n      administrator () {\n          orgAppRequests.sortBy.sortBy = 'administrator'\n          orgAppRequests.sort(['personData.name.given', 'personData.name.surname'], orgAppRequests.sortBy.sortType)\n      },\n      submitted () {\n          orgAppRequests.sortBy.sortBy = 'submitted'\n          orgAppRequests.sort('personData.creation', orgAppRequests.sortBy.sortType)\n      },\n      request () {\n          orgAppRequests.sortBy.sortBy = 'request'\n          orgAppRequests.sort('packageData.name', orgAppRequests.sortBy.sortType)\n      },\n      organization () {\n          orgAppRequests.sortBy.sortBy = 'organization'\n          orgAppRequests.sort('personData.organization.name', orgAppRequests.sortBy.sortType)\n      }\n    }\n\n    orgAppRequests.sort = (sortBy, order) => {\n    \tcui.log('sort', sortBy, order)\n      orgAppRequests.data = _.orderBy(orgAppRequests.data, sortBy, order)\n    }\n\n\t\torgAppRequests.goToDetails = function(request) {\n\t\t\tif (request.personData && request.personData.id && \n\t\t\t\trequest.personData.organization && request.personData.organization.id &&\n\t\t\t\trequest.packageData && request.packageData.id) {\n\t\t\t\tDataStorage.setType('organizationAppRequest',request)\n\t\t\t\t$state.go('organization.requests.organizationAppRequest', {\n\t\t\t\t \t'userId': request.personData.id, \n\t\t\t\t\t'orgId': request.personData.organization.id,\n\t\t\t\t\t'packageId': request.packageData.id\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tcui.log('orgAppRequests goToDetails missing keys', request);\n\t\t\t}\n\t\t}\n\n    orgAppRequests.updateSearchParams = (page) => {\n        if (page) orgAppRequests.search.page = page\n        $state.transitionTo('organization.requests.orgAppRequests', orgAppRequests.search, {notify: false})\n        init()\n    }\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n\t});\n\r\nangular.module('organization')\n.controller('orgRegistrationRequestsCtrl', \n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,DataStorage) {\n\n    const scopeName = 'orgRegistrationRequests.'\n\tconst orgRegistrationRequests = this\n    orgRegistrationRequests.search = {}\n\torgRegistrationRequests.sortBy = {}\n\n\torgRegistrationRequests.search=Object.assign({},$stateParams)\n\tif(!orgRegistrationRequests.search.page)\n\t\torgRegistrationRequests.search.page=1\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\tvar foundOrgs = [];\n\tvar foundPersons = [];\n\tvar foundPackages = [];\n\n\n  \tvar init = function() {\n  \t\tcui.log('init');\n\n    orgRegistrationRequests.search.pageSize = orgRegistrationRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\n\tvar qsArray = APIHelpers.getQs(orgRegistrationRequests.search);\n\t\t\t//cui.log('qsArray', qsArray);\n\n\torgRegistrationRequests.data = []\n    Loader.onFor(scopeName + 'data')\n    APIError.offFor(scopeName + 'data')\n\n\tvar getOrg = function(orgId) {\n\t\treturn $.Deferred(function (dfr) {\n\t\t\tif (orgId.length) {\n\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\n\t\t\t\tif (cached) {\n\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t} else {\n\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\n\t\t\t\t\t\tfoundOrgs.push(org);\n\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\n\t\t\t\t\t\tdfr.resolve(org);\n\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdfr.resolve({});\n\t\t\t}\n\t\t});\n\t};\n\n\tvar getPerson = function(personId) {\n\t\treturn $.Deferred(function (dfr) {\n\t\t\tif (personId&&personId.length) {\n\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\n\t\t\t\tif (cached) {\n\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t} else {\n\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\n\t\t\t\t\t\tfoundPersons.push(person);\n\t\t\t\t\t\tdfr.resolve(person);\n\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\tcui.log('getPerson error', personId, err);\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdfr.resolve({});\n\t\t\t}\n\t\t});\n\t};\n\n\tvar getPackage = function(packageId) {\n\t\treturn $.Deferred(function (dfr) {\n\t\t\tif (packageId.length) {\n\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\n\t\t\t\tif (cached) {\n\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t} else {\n\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\n\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\n\t\t\t\t\t\tfoundPackages.push(p);\n\t\t\t\t\t\tdfr.resolve(p);\n\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdfr.resolve({});\n\t\t\t}\n\t\t});\n\t};\n\n\tvar done = function(context) {\n\t\t$timeout(function() {\n    Loader.offFor(scopeName + 'data')\n    cui.log('done', context);\n\t\t\tcui.log('data', orgRegistrationRequests.data);\n\n    orgRegistrationRequests.reRenderPagination && orgRegistrationRequests.reRenderPagination()\n\t\t});\n\t};\n\n\tvar start = window.performance.now();\n\tvar end;\n\tAPI.cui.getOrgRegistrationRequests({ qs: qsArray })\n\t.then(function(res) {\n\t\tvar calls = [];\n\t\t_.each(res, function(regReq) {\n\t\t\t//Needed as some requests will not contain security admin details\n\t\t\t//And they need to be removed\n\t\t\tif (regReq.registrant) {\n\t\t\t\t// NB create an obj and bind it to scope...\n\t\t\t\tvar data = regReq\n\t        \torgRegistrationRequests.data.push(data);\n\n\t        \t// ..then cache the calls, which populate obj asynchronously...\n\t\t        calls.push(\n\t\t\t        getPerson(regReq.registrant&&regReq.registrant.id)\n\t\t\t        .then(function(person) {\n\t\t\t        \tdata.personData = person || {};\n\t\t\t        \tvar pkgId = (! _.isEmpty(regReq.packages)) ? regReq.packages[0].id : '';\n\t\t\t            return getPackage(pkgId);\n\t\t\t\t\t})\n\t\t\t        .then(function(pkg) {\n\t\t\t        \tdata.packageData = pkg;\n\t\t\t        \tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\n\t\t\t\t\t\treturn getOrg(orgId);\n\t\t\t\t\t})\n\t\t\t        .then(function(org) {\n\t\t\t\t\t\tif (! data.personData.organization) {\n\t\t\t\t\t\t\tdata.personData.organization = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\n\t\t\t\t\t\treturn $.Deferred().resolve();\n\t\t      \t\t})\n\t\t      \t\t.fail(function() {\n\t\t      \t\t\t// mute the failures so as not to derail the entire list\n\t\t\t\t\t\t\t\treturn $.Deferred().resolve();\n\t\t      \t\t})\n\t\t\t    );\n\t\t\t}\n\t\t});\n\t\treturn $.Deferred().resolve(calls);\n\t})\n\t.then(function(calls) {\n\t\t// do the cached calls\n\t\treturn $.when.apply($, calls);\n\t})\n\t.then(function() {\n\t\t// do the count (used for pagination)\n\t\treturn API.cui.getOrgRegistrationRequestsCount();\n\t})\n\t.then(function(count) {\n\t\t// apply the count\n\t\torgRegistrationRequests.userCount = count;\n\t\tAPI.user.orgRegistrationRequestsCount=count\n\t\treturn $.Deferred().resolve();\t\t\t\t\n\t})\n\t.fail(function(error) {\n        APIError.onFor(scopeName + 'data')\n    })\n\t.always(function() {\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('Registration Requests'))\n      \tdone('finally');\n\t\tvar end = window.performance.now();\n\t\tvar time = end - start;\n\t\tcui.log('time', time);\n\t\t});\n    };\n\n    init();\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n    orgRegistrationRequests.sortingCallbacks = {\n      administrator () {\n          orgRegistrationRequests.sortBy.sortBy = 'administrator'\n          orgRegistrationRequests.sort(['personData.name.given', 'personData.name.surname'], orgRegistrationRequests.sortBy.sortType)\n      },\n      submitted () {\n          orgRegistrationRequests.sortBy.sortBy = 'submitted'\n          orgRegistrationRequests.sort('personData.creation', orgRegistrationRequests.sortBy.sortType)\n      },\n      request () {\n          orgRegistrationRequests.sortBy.sortBy = 'request'\n          orgRegistrationRequests.sort('packageData.name', orgRegistrationRequests.sortBy.sortType)\n      },\n      organization () {\n          orgRegistrationRequests.sortBy.sortBy = 'organization'\n          orgRegistrationRequests.sort('personData.organization.name', orgRegistrationRequests.sortBy.sortType)\n      }\n    }\n\n    orgRegistrationRequests.sort = (sortBy, order) => {\n    \tcui.log('sort', sortBy, order)\n      orgRegistrationRequests.data = _.orderBy(orgRegistrationRequests.data, sortBy, order)\n    }\n\n\n\t\torgRegistrationRequests.goToDetails = function(request) {\n\t\t\tif (request.personData && request.personData.id && \n\t\t\t\trequest.personData.organization && request.personData.organization.id) {\n\t\t\t\tDataStorage.setType('organizationRegRequest',request)\n\t\t\t\t$state.go('organization.requests.organizationRequest', {\n\t\t\t\t \t'userId': request.personData.id, \n\t\t\t\t\t'orgId': request.personData.organization.id \n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tcui.log('orgRegistrationRequests goToDetails missing keys', request);\n\t\t\t}\n\t\t}\n\n    orgRegistrationRequests.updateSearch = (updateType, updateValue) => {\n    \t//cui.log('updateSearchParams', page);\n    \tswitch(updateType){\n    \t\tcase 'organizationName':\n    \t\t\torgRegistrationRequests.search.page=1\n    \t\t\torgRegistrationRequests.search.organizationName=updateValue\n    \t\t\tbreak\n    \t}\n        // WHY transition to this same route? if setting notify:false? what is the purpose? just to add an item to history?\n        $state.transitionTo('organization.requests.orgRegistrationRequests', orgRegistrationRequests.search, {notify: false})\n        init()\n    }\n\n    orgRegistrationRequests.pageChange = (newpage) => {\n        orgRegistrationRequests.updateSearch('page', newpage)\n    }\n\n    orgRegistrationRequests.searchCallback= (searchWord) => {\n        orgRegistrationRequests.updateSearch('organizationName',searchWord)\n    }\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n\t});\n\r\nangular.module('organization')\n.controller('organizationAppRequestCtrl', function(APIError, DataStorage, Loader, $state, $stateParams, $timeout,API,$scope,$q, ServicePackage ) {\n    'use strict'\n\n    const organizationAppRequest = this\n    const userId = $stateParams.userId\n    const organizationId = $stateParams.orgId\n\n    // HELPER FUNCTIONS START------------------------------------------------------\n    let getAllDetails= () => {\n        let promises=[]\n        API.cui.getOrganization({organizationId:organizationId})\n        .then(res =>{\n            organizationAppRequest.request.personData.organization=res\n            $scope.$digest()\n        })\n        if (organizationAppRequest.request.packageData) {\n            ServicePackage.getPackageDetails(organizationAppRequest.request.packageData.id)\n            .then(packageData => {\n                organizationAppRequest.request.packageData=angular.merge(organizationAppRequest.request.packageData,packageData)\n            })\n            .catch(err => {\n                APIError.onFor('organizationAppRequest.packageServices')\n                console.log('There was an error in fetching following package service details' +err)\n            })\n            .finally(() => {\n                Loader.offFor('organizationAppRequest.init')\n            })\n        }\n        else{\n            Loader.offFor('organizationAppRequest.init')\n        }\n    }\n    // HELPER FUNCTIONS END------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    Loader.onFor('organizationAppRequest.init')\n    organizationAppRequest.request=DataStorage.getType('organizationAppRequest')\n    console.log(organizationAppRequest.request)\n    if (!organizationAppRequest.request) {\n        APIError.onFor('organizationAppRequest.noRequest')\n        Loader.offFor('organizationAppRequest.init')\n        $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\n    }\n    else if (organizationAppRequest.request.personData.id!==userId || organizationAppRequest.request.personData.organization.id!==organizationId) {\n        APIError.onFor('organizationAppRequest.noRequest')\n        Loader.offFor('organizationAppRequest.init')\n        $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\n    }\n    else{\n        getAllDetails()\n    }\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    organizationAppRequest.reviewApprovals = () => {\n        DataStorage.setType('organizationRegRequest', organizationAppRequest.request)\n        $state.go('organization.requests.organizationAppRequestReview', { userId: userId, orgId: organizationId })\n    }\n\n    // ON CLICK END ----------------------------------------------------------------------------------\n})\n\r\nangular.module('organization')\n.controller('organizationAppRequestReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout,APIError,API,$scope) {\n    'use strict'\n\n    const organizationAppRequestReview = this\n    const orgId = $stateParams.orgId\n\n    organizationAppRequestReview.success = false\n\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    const handleSuccess = (res) => {\n        Loader.offFor('organizationAppRequestReview.submitting')\n        organizationAppRequestReview.success = true\n        DataStorage.setType('organizationAppRequest',{})\n        $scope.$digest()\n            $timeout(() => {\n                $state.go('organization.requests.orgAppRequests')\n        }, 3000)  \n    }\n\n    const handleError = (err) => {\n        console.log(`There was an error in approving org app request ${err.responseJSON}`)\n        if (err&&err.responseJSON.apiMessage==='The service request does not exist') {\n            organizationAppRequestReview.errorMessage='request-approve-or-rejected'\n        }else{\n            organizationAppRequestReview.errorMessage=undefined\n        }\n        Loader.offFor('organizationAppRequestReview.submitting')\n        organizationAppRequestReview.error = true\n        $scope.$digest()\n    }\n\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    Loader.onFor('organizationAppRequestReview.init')\n\n    const requestData = DataStorage.getType('organizationAppRequest')\n    if (!requestData) {\n        APIError.onFor('organizationAppRequestReview.noRequest')\n        // $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\n    }\n    else if (requestData.personData.organization.id!==orgId) {\n        APIError.onFor('organizationAppRequestReview.noRequest')\n        // $timeout(() => $state.go('organization.requests.orgAppRequests'), 5000)\n    }\n    else{\n        Loader.offFor('organizationAppRequestReview.init')\n    }\n    organizationAppRequestReview.packageData = requestData.packageData\n    organizationAppRequestReview.personData = requestData.personData\n    organizationAppRequestReview.organization = requestData.organization\n    organizationAppRequestReview.request = requestData.request\n    organizationAppRequestReview.justification=requestData.justification\n    organizationAppRequestReview.id=requestData.id\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    organizationAppRequestReview.submit = () => {\n        Loader.onFor('organizationAppRequestReview.submitting')\n        organizationAppRequestReview.packageData.id=organizationAppRequestReview.id\n        ServicePackage.handlePackageApproval(organizationAppRequestReview.packageData)\n        .then(handleSuccess)\n        .fail(handleError)\n        // if (organizationAppRequestReview.packageData.approval === 'approved'){\n        //     API.cui.denyOrgRegistrationRequest({qs:[['requestId',requestData.id],['reason',organizationAppRequestReview.request.rejectReason]]})\n        //     .then(handleSuccess)\n        //     .fail(handleError)\n        // }\n        // //all approval then call registration endpoint directly\n        // else (organizationAppRequestReview.deniedCount===0) {\n        //     API.cui.approveOrgRegistrationRequest({qs:[['requestId',requestData.id]]})\n        //     .then(handleSuccess)\n        //     .fail(handleError)\n        // }\n        // else {\n        //     API.cui.approvePersonRegistration({qs: [['requestId',requestData.registrant.requestId]]})\n        //     let packageRequestCalls = []\n\n        //     organizationAppRequestReview.packages.forEach(packageRequest => {\n        //         packageRequest.id=packageRequest.requestId\n        //         packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\n        //     })\n\n        //     $q.all(packageRequestCalls)\n        //     .then( res =>{\n        //         Loader.offFor('organizationAppRequestReview.submitting')\n        //         organizationAppRequestReview.success = true\n        //             $timeout(() => {\n        //                 $state.go('organization.requests.orgRegistrationRequests')\n        //         }, 3000) \n        //     })\n        //     // .catch(handleError)\n        // }\n    }\n\n    // ON CLICK END ----------------------------------------------------------------------------------\n\n})\n\r\nangular.module('organization')\n.controller('organizationRequestCtrl', function(APIError, DataStorage, Loader, $state, $stateParams, $timeout,API,$scope,$q, ServicePackage ) {\n    'use strict'\n\n    const organizationRequest = this\n    const userId = $stateParams.userId\n    const organizationId = $stateParams.orgId\n\n    // HELPER FUNCTIONS START------------------------------------------------------\n    let getAllDetails= () => {\n        let promises=[]\n        API.cui.getOrganization({organizationId:organizationId})\n        .then(res =>{\n            organizationRequest.request.personData.organization=res\n            $scope.$digest()\n        })\n        if (organizationRequest.request.packages&&organizationRequest.request.packages.length!==0) {\n            organizationRequest.request.packages.forEach((requestedPackage ,index)=>{\n                ServicePackage.getPackageDetails(requestedPackage.id)\n                .then(packageData => {\n                    requestedPackage=angular.merge(requestedPackage,packageData)\n                })\n                .catch(err => {\n                    APIError.onFor('organizationRequest.packageServices')\n                    console.log('There was an error in fetching following package service details' +err)\n                    Loader.offFor('organizationRequest.init')\n                })\n                .finally(() => {\n                        if (index===organizationRequest.request.packages.length-1) {\n                        Loader.offFor('organizationRequest.init')\n                    }\n                })\n            })\n            // $q.all(promises)\n            // .then(res => {\n            //     organizationRequest.packageData =res\n                \n            // })\n            // .catch(err => {\n            //     APIError.onFor('organizationRequest.packageServices')\n            //     console.log('There was an error in fetching one or more package service details' +err)\n            //     Loader.offFor('organizationRequest.init')\n            // })\n        }\n        else{\n            Loader.offFor('organizationRequest.init')\n        }\n    }\n    // HELPER FUNCTIONS END------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    Loader.onFor('organizationRequest.init')\n    organizationRequest.request=DataStorage.getType('organizationRegRequest')\n    console.log(organizationRequest.request)\n    if (!organizationRequest.request) {\n        APIError.onFor('organizationRequest.noRequest')\n        Loader.offFor('organizationRequest.init')\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\n    }\n    else if (organizationRequest.request.personData.id!==userId || organizationRequest.request.personData.organization.id!==organizationId) {\n        APIError.onFor('organizationRequest.noRequest')\n        Loader.offFor('organizationRequest.init')\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\n    }\n    else{\n        getAllDetails()\n    }\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    organizationRequest.reviewApprovals = () => {\n        DataStorage.setType('organizationRegRequest', organizationRequest.request)\n        $state.go('organization.requests.organizationRequestReview', { userId: userId, orgId: organizationId })\n    }\n\n    // ON CLICK END ----------------------------------------------------------------------------------\n})\n\r\nangular.module('organization')\n.controller('organizationRequestReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout,APIError,API,$scope) {\n    'use strict'\n\n    const organizationRequestReview = this\n    const orgId = $stateParams.orgId\n\n    organizationRequestReview.success = false\n    organizationRequestReview.approvedCount = 0\n    organizationRequestReview.deniedCount = 0\n\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    const getApprovalCounts = (requests) => {\n        requests.forEach(request => {\n            switch (request.approval) {\n                case 'approved':\n                    organizationRequestReview.approvedCount += 1\n                    break\n                case 'denied':\n                    organizationRequestReview.deniedCount += 1\n                    break\n            }\n        })\n    }\n\n    const handleSuccess = (res) => {\n        Loader.offFor('organizationRequestReview.submitting')\n            organizationRequestReview.success = true\n            $scope.$digest()\n            $timeout(() => {\n                $state.go('organization.requests.orgRegistrationRequests')\n        }, 3000)  \n    }\n\n    const handleError = (err) => {\n        console.log(`There was an error in approving org registration ${err}`)\n        Loader.offFor('organizationRequestReview.submitting')\n        organizationRequestReview.error = true\n        $scope.$digest()\n    }\n\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    Loader.onFor('organizationRequestReview.init')\n\n    const requestData = DataStorage.getType('organizationRegRequest')\n    if (!requestData) {\n        APIError.onFor('organizationRequestReview.noRequest')\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\n    }\n    else if (requestData.personData.organization.id!==orgId) {\n        APIError.onFor('organizationRequestReview.noRequest')\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\n    }\n    else if (requestData.personData.status!==\"pending\") {\n        APIError.onFor('organizationRequestReview.active')\n        $timeout(() => $state.go('organization.requests.orgRegistrationRequests'), 5000)\n    }\n    else{\n        Loader.offFor('organizationRequestReview.init')\n    }\n    organizationRequestReview.packages = requestData.packages\n    organizationRequestReview.personData = requestData.personData\n    organizationRequestReview.organization = requestData.organization\n    organizationRequestReview.request = requestData.request\n    organizationRequestReview.justification=requestData.justification\n    organizationRequestReview.id=requestData.id\n    if (organizationRequestReview.packages&&organizationRequestReview.packages.length > 0) {\n    \tgetApprovalCounts(organizationRequestReview.packages)\n    }\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    organizationRequestReview.submit = () => {\n        Loader.onFor('organizationRequestReview.submitting')\n\n        if (organizationRequestReview.request.approval === 'denied'){\n            API.cui.denyOrgRegistrationRequest({qs:[['requestId',requestData.id],['reason',organizationRequestReview.request.rejectReason]]})\n            .then(handleSuccess)\n            .fail(handleError)\n        }\n        //all approval then call registration endpoint directly\n        else if (organizationRequestReview.deniedCount===0) {\n            API.cui.approveOrgRegistrationRequest({qs:[['requestId',requestData.id]]})\n            .then(handleSuccess)\n            .fail(handleError)\n        }\n        else {\n            API.cui.approveOrganizationRequests({qs: [['requestId',requestData.registrant.requestId]]})\n            .then(res =>{\n                let packageRequestCalls = []\n\n                organizationRequestReview.packages.forEach(packageRequest => {\n                    packageRequest.id=packageRequest.requestId\n                    packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\n                })\n\n                $q.all(packageRequestCalls)\n                .then( res =>{\n                    Loader.offFor('organizationRequestReview.submitting')\n                    organizationRequestReview.success = true\n                        $timeout(() => {\n                            $state.go('organization.requests.orgRegistrationRequests')\n                    }, 3000) \n                })\n                .catch(err => {\n                    console.log(\"Org approval success but One or more package approval/denied failed\" +err)\n                    organizationRequestReview.error = true\n                })\n            })            \n            .fail(handleError)\n        }\n    }\n\n    // ON CLICK END ----------------------------------------------------------------------------------\n\n})\n\r\nangular.module('organization')\n.controller('pendingRequestsCtrl', function(API, DataStorage, Loader, ServicePackage, $q, $state, $stateParams,$timeout) {\n    'use strict'\n\n    const pendingRequests = this\n    const userId = $stateParams.userId\n    const orgId = $stateParams.orgId\n\n    pendingRequests.success = false\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    const getApprovalCounts = (requests) => {\n    pendingRequests.approvedCount = 0\n    pendingRequests.deniedCount = 0\n        requests.forEach(request => {\n            switch (request.approval) {\n                case 'approved':\n                    pendingRequests.approvedCount += 1\n                    break\n                case 'denied':\n                    pendingRequests.deniedCount += 1\n                    break\n            }\n        })\n    }\n\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    Loader.onFor('pendingRequests.init')\n\n    $q.all([\n        API.cui.getPerson({personId: userId}),\n        ServicePackage.getAllUserPendingPackageData(userId)\n    ])\n    .then(res => {\n        pendingRequests.user = res[0]\n        pendingRequests.packages = res[1]\n        Loader.offFor('pendingRequests.init')\n    })\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    pendingRequests.reviewApprovals = () => {\n        const storageData = {\n            user: pendingRequests.user,\n            packages: pendingRequests.packages   \n        }\n        \n        DataStorage.setType('appRequests', storageData)\n        $state.go('organization.requests.pendingRequestsReview', { userId: userId, orgId: orgId })\n    }\n\n    pendingRequests.submit = () => {\n        let submitCalls = []\n        getApprovalCounts(pendingRequests.packages)\n        if (pendingRequests.deniedCount===0) {\n            pendingRequests.submitting=true\n            pendingRequests.packages.forEach(packageRequest => {\n                submitCalls.push(ServicePackage.handlePackageApproval(packageRequest))\n            })\n\n            $q.all(submitCalls)\n            .then(() => {\n                pendingRequests.success = true\n                pendingRequests.submitting=false\n                $timeout(() => {\n                    $state.go('organization.requests.usersAppRequests')\n                }, 3000)\n            })\n            .catch(err => {\n                pendingRequests.submitting=false\n                console.log(\"There was an error in approving application requests\" + err);\n                pendingRequests.error=true\n            })\n        }\n        else{\n            pendingRequests.reviewApprovals()\n        }\n    }\n\n    // ON CLICK END ----------------------------------------------------------------------------------\n\n})\n\r\nangular.module('organization')\n.controller('pendingRequestsReviewCtrl', function(DataStorage, Loader, ServicePackage, $q, $state, $stateParams, $timeout) {\n    'use strict'\n\n    const pendingRequestsReview = this\n    const userId = $stateParams.userId\n    const orgId = $stateParams.orgId\n\n    pendingRequestsReview.success = false\n    pendingRequestsReview.approvedCount = 0\n    pendingRequestsReview.deniedCount = 0\n\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    const getApprovalCounts = (requests) => {\n        requests.forEach(request => {\n            switch (request.approval) {\n                case 'approved':\n                    pendingRequestsReview.approvedCount += 1\n                    break\n                case 'denied':\n                    pendingRequestsReview.deniedCount += 1\n                    break\n            }\n        })\n    }\n\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    Loader.onFor('pendingRequestsReview.init')\n\n    const requestData = DataStorage.getType('appRequests')\n\n    pendingRequestsReview.pendingRequests = requestData.packages\n    pendingRequestsReview.user = requestData.user\n\n    if (pendingRequestsReview.pendingRequests.length > 0) {\n        getApprovalCounts(pendingRequestsReview.pendingRequests)\n    }\n\n    Loader.offFor('pendingRequestsReview.init')\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    pendingRequestsReview.submit = () => {\n        let submitCalls = []\n        pendingRequestsReview.submitting=true\n        pendingRequestsReview.pendingRequests.forEach(packageRequest => {\n            submitCalls.push(ServicePackage.handlePackageApproval(packageRequest))\n        })\n\n        $q.all(submitCalls)\n        .then(() => {\n            pendingRequestsReview.success = true\n            pendingRequestsReview.submitting=false\n            $timeout(() => {\n                $state.go('organization.requests.usersAppRequests',)\n            }, 3000)\n        })\n        .catch(err => {\n            console.log(\"There was an error in approving user application requests\" + err)\n            pendingRequestsReview.submitting=false\n            pendingRequestsReview.error=true\n        })\n    }\n\n    pendingRequestsReview.goBack = () => {\n        $state.go('organization.requests.pendingRequests', { userId: userId, orgId: orgId })\n    }\n\n    // ON CLICK END ----------------------------------------------------------------------------------\n\n})\n\r\nangular.module('organization')\n.controller('personRequestCtrl', function(APIError, DataStorage, Loader, PersonRequest, ServicePackage, $state, $stateParams, $timeout,API,$scope) {\n    'use strict'\n\n    const personRequest = this\n    const userId = $stateParams.userId\n    const organizationId = $stateParams.orgId\n    // Needed when there is no packages\n    personRequest.approvedCount = 0\n    personRequest.deniedCount = 0\n\n    personRequest.success = false\n\n\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    const getApprovalCounts = (requests) => {\n        personRequest.approvedCount = 0\n        personRequest.deniedCount = 0\n        requests.forEach(request => {\n            switch (request.approval) {\n                case 'approved':\n                    personRequest.approvedCount += 1\n                    break\n                case 'denied':\n                    personRequest.deniedCount += 1\n                    break\n            }\n        })\n    }\n\n    const handleSuccess = (res) => {\n        Loader.offFor('personRequest.submitting')\n        personRequest.success = true\n        DataStorage.deleteType('userPersonRequest')\n        API.user.userRegistrationRequestsCount=API.user.userRegistrationRequestsCount-1\n        $scope.$digest()\n        $timeout(() => {\n            $state.go('organization.requests.usersRegistrationRequests')\n        }, 3000)  \n    }\n\n    const handleError = (err) => {\n        console.log(`There was an error in approving user registration ${err}`)\n        Loader.offFor('personRequest.submitting')\n        personRequest.error = true\n        $scope.$digest()\n    }\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    let getPackageDetails = () => {\n        if (personRequest.request.request.packages) {\n            ServicePackage.getAllUserPendingPackageData(userId)\n            .then(res => {\n                personRequest.request.completePackageData = res\n            })\n            .catch(err => {\n                APIError.onFor('personRequest.noRequest')\n                $timeout(() => $state.go('organization.requests.usersRegistrationRequests'), 5000)\n            })\n        }\n        else{\n            personRequest.request.completePackageData =[]\n        }\n    }\n\n    // Check LocalStorage if data is already obtained in previous page\n    let storageData=DataStorage.getType('userPersonRequest')\n    if (storageData&&userId===storageData.request.registrant.id) {\n        personRequest.request=storageData;\n        getPackageDetails()\n    }\n    else{\n        Loader.onFor('personRequest.init')\n        PersonRequest.getPersonRegistrationRequestData(userId, organizationId)\n        .then(res => {\n            if (!res.request) {\n                APIError.onFor('personRequest.noRequest')\n                $timeout(() => $state.go('organization.requests.usersRegistrationRequests'), 5000)\n            }\n            else {\n                personRequest.request = res\n                getPackageDetails()    \n                Loader.offFor('personRequest.init')\n            }\n        })\n    }\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    personRequest.reviewApprovals = () => {\n        DataStorage.setType('userPersonRequest', personRequest.request )\n        $state.go('organization.requests.personRequestReview', { userId: userId, orgId: organizationId })\n    }\n\n    personRequest.submit = () => {\n        Loader.onFor('personRequest.submitting')\n        if (personRequest.packages&&personRequest.packages.length > 0) {\n            getApprovalCounts(personRequest.packages)\n        }\n        if (personRequest.request.request.approval==='denied') {\n            //To enter denied Reason\n            personRequest.reviewApprovals()\n            // API.cui.denyPersonRegistrationRequest({qs:[['requestId',personRequest.request.request.id],['reason',personRequestReview.request.rejectReason|\"\"]]})\n            // .then(handleSuccess)\n            // .fail(handleError)\n        }\n        else if (personRequest.deniedCount===0) {\n            API.cui.approvePersonRegistrationRequest({qs:[['requestId',personRequest.request.request.id]]})\n            .then(handleSuccess)\n            .fail(handleError)\n        }\n        else{\n            //To enter denied Reason\n            personRequest.reviewApprovals()\n            // API.cui.approvePersonRequest({qs:[['requestId',personRequest.request.request.registrant.requestId||personRequestReview.request.id]]})\n            // .then(res => {\n            //     let packageRequestCalls = []\n\n            //     personRequest.packages.forEach(packageRequest => {\n            //         packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\n            //     })\n\n            //     $q.all(packageRequestCalls)\n            //     .then(() => {\n            //         Loader.offFor('personRequest.submitting')\n            //         personRequest.success = true\n            //         $timeout(() => {\n            //             $state.go('organization.requests.usersRegistrationRequests')\n            //         }, 3000)  \n            //     })\n            //     .catch(err => {\n            //         console.log(\"User approval successful but there was an error approving/denying package requests\" +err)\n            //         personRequest.error = true\n            //         personRequest.errorMessage=\"app-approval-error\"\n            //     })\n            // })\n            // .fail(handleError)\n        }        \n    }\n    // ON CLICK END ----------------------------------------------------------------------------------\n})\n\r\nangular.module('organization')\n.controller('personRequestReviewCtrl', function(DataStorage, Loader, PersonRequest, ServicePackage, $q, $state, $stateParams, $timeout,API,$scope) {\n    'use strict'\n\n    const personRequestReview = this\n    const userId = $stateParams.userId\n    const orgId = $stateParams.orgId\n\n    personRequestReview.success = false\n    personRequestReview.approvedCount = 0\n    personRequestReview.deniedCount = 0\n\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    const getApprovalCounts = (requests) => {\n        requests.forEach(request => {\n            switch (request.approval) {\n                case 'approved':\n                    personRequestReview.approvedCount += 1\n                    break\n                case 'denied':\n                    personRequestReview.deniedCount += 1\n                    break\n            }\n        })\n    }\n\n    const handleSuccess = (res) => {\n        Loader.offFor('personRequestReview.submitting')\n            personRequestReview.success = true\n            DataStorage.deleteType('userPersonRequest')\n            $scope.$digest()\n            $timeout(() => {\n                $state.go('organization.requests.usersRegistrationRequests')\n        }, 3000)  \n    }\n\n    const handleError = (err) => {\n        console.log(`There was an error in approving user registration ${err}`)\n        Loader.offFor('personRequestReview.submitting')\n        personRequestReview.error = true\n        $scope.$digest()\n    }\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    const requestData = DataStorage.getType('userPersonRequest')\n    if (requestData&&requestData.request.registrant.id===userId) {\n        personRequestReview.packages = requestData.completePackageData\n        personRequestReview.personData = requestData.personData\n        personRequestReview.organization = requestData.organization\n        personRequestReview.request = requestData.request\n\n        if (personRequestReview.packages.length > 0) {\n            getApprovalCounts(personRequestReview.packages)\n        }\n    }\n    else{\n        $state.go('organization.requests.personRequest',{userId:userId, orgId:orgId})\n    }\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n\n    personRequestReview.submit = () => {\n        Loader.onFor('personRequestReview.submitting')\n\n        if (personRequestReview.request.approval==='denied') {\n            API.cui.denyPersonRegistrationRequest({qs:[['requestId',personRequestReview.request.id],['reason',personRequestReview.request.rejectReason|\"\"]]})\n            .then(handleSuccess)\n            .fail(handleError)\n        }\n        else if (personRequestReview.deniedCount===0) {\n            API.cui.approvePersonRegistrationRequest({qs:[['requestId',personRequestReview.request.id]]})\n            .then(handleSuccess)\n            .fail(handleError)\n        }\n        else{\n            API.cui.approvePersonRequest({qs:[['requestId',personRequestReview.request.registrant.requestId||personRequestReview.request.id]]})\n            .then(res => {\n                let packageRequestCalls = []\n\n                personRequestReview.packages.forEach(packageRequest => {\n                    packageRequestCalls.push(ServicePackage.handlePackageApproval(packageRequest))\n                })\n\n                $q.all(packageRequestCalls)\n                .then(() => {\n                    Loader.offFor('personRequestReview.submitting')\n                    personRequestReview.success = true\n                    DataStorage.deleteType('userPersonRequest')\n                    $timeout(() => {\n                        $state.go('organization.requests.usersRegistrationRequests')\n                    }, 3000)  \n                })\n                .catch(err => {\n                    console.log(\"User approval successful but there was an error approving/denying package requests\" +err)\n                    personRequestReview.error = true\n                    personRequestReview.errorMessage=\"app-approval-error\"\n                })\n            })\n            .fail(handleError)\n        }        \n    }\n\n    // ON CLICK END ----------------------------------------------------------------------------------\n\n})\n\r\nangular.module('organization')\n.controller('usersAppRequestsCtrl', \n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User) {\n\n    const scopeName = 'usersAppRequests.'\n\t\tconst usersAppRequests = this\n    usersAppRequests.search = {}\n\t\tusersAppRequests.sortBy = {}\n\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\n\t\tvar foundOrgs = [];\n\t\tvar foundPersons = [];\n\t\tvar foundPackages = [];\n\n\n  \tvar init = function() {\n  \t\tcui.log('init');\n\n      usersAppRequests.search['isApprovable'] = true;\n      usersAppRequests.search.pageSize = usersAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\n\t\t\tvar qsArray = APIHelpers.getQs(usersAppRequests.search);\n\n\t    usersAppRequests.data = []\n      Loader.onFor(scopeName + 'data')\n      APIError.offFor(scopeName + 'data')\n\n\n\t\t\tvar getOrg = function(orgId) {\n\t\t\t\treturn $.Deferred(function (dfr) {\n\t\t\t\t\tif (orgId.length) {\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\n\t\t\t\t\t\tif (cached) {\n\t\t\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\n\t\t\t\t\t\t\t\tdfr.resolve(org);\n\t\t\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\n\t\t\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar getPerson = function(personId) {\n\t\t\t\treturn $.Deferred(function (dfr) {\n\t\t\t\t\tif (personId.length) {\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\n\t\t\t\t\t\tif (cached) {\n\t\t\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\n\t\t\t\t\t\t\t\tdfr.resolve(person);\n\t\t\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\n\t\t\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar getPackage = function(packageId) {\n\t\t\t\treturn $.Deferred(function (dfr) {\n\t\t\t\t\tif (packageId.length) {\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\n\t\t\t\t\t\tif (cached) {\n\t\t\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\n\t\t\t\t\t\t\t\tdfr.resolve(p);\n\t\t\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\n\t\t\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar done = function(context) {\n  \t\t\t$timeout(function() {\n\t        Loader.offFor(scopeName + 'data')\n\t        cui.log('done', context);\n\t        cui.log('data', usersAppRequests.data);\n\n\t        usersAppRequests.reRenderPagination && usersAppRequests.reRenderPagination()\n  \t\t\t});\n\t\t\t};\n\n\n\t\t\tAPI.cui.getPackageRequests({ qs: qsArray }).then(function(res) {\n\t\t\t\tvar calls = [];\n\n\t\t\t\t_.each(res, function(pkgReq) {\n\t\t\t\t\t\n\t\t\t\t\t// NB create an obj and bind it to scope...\n\t\t\t\t\tvar data = {};\n        \tusersAppRequests.data.push(data);\n\n        \t// ..then cache the calls, which populate obj asynchronously...\n\t        calls.push(\n\t        \tgetPerson(pkgReq.requestor.id).then(function(person) {\n\t        \t\tdata.personData = person || {};\n\t        \t\tvar pkgId = (pkgReq && pkgReq.servicePackage) ? pkgReq.servicePackage.id : '';\n\t          \treturn getPackage(pkgId);\n\t\t\t\t\t\t}).then(function(pkg) {\n\t        \t\tdata.packageData = pkg;\n\t        \t\tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\n\t\t\t\t\t\t\treturn getOrg(orgId);\n\t\t\t\t\t\t}).then(function(org) {\n\t\t\t\t\t\t\tif (! data.personData.organization) {\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\t        \t\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\n\t      \t\t}).fail(function() {\n\t      \t\t\t// mute the failures so as not to derail the entire list\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\n\t      \t\t})\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\treturn $.Deferred().resolve(calls);\n\t\t\t}).then(function(calls) {\n\t\t\t\t// do the cached calls\n\t\t\t\treturn $.when.apply($, calls);\n\t\t\t}).then(function() {\n\t\t\t\t// do the count (used for pagination)\n\t\t\t\treturn API.cui.getPackageRequestsCount();\n\t\t\t}).then(function(count) {\n\t\t\t\t// apply the count\n\t\t\t\tusersAppRequests.userCount = count;\n\t\t\t\tAPI.user.userAppRequestsCount=count\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\n\t\t\t}).fail(function(error) {\n        APIError.onFor(scopeName + 'data')\n      }).always(function() {\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('App Requests'))\n      \tdone('finally');\n      });\n    };\n\n    init();\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n    usersAppRequests.sortingCallbacks = {\n      name () {\n          usersAppRequests.sortBy.sortBy = 'name'\n          usersAppRequests.sort(['personData.name.given', 'personData.name.surname'], usersAppRequests.sortBy.sortType)\n      },\n      title () {\n          usersAppRequests.sortBy.sortBy = 'title'\n          usersAppRequests.sort('personData.title', usersAppRequests.sortBy.sortType)\n      },\n      submitted () {\n          usersAppRequests.sortBy.sortBy = 'submitted'\n          usersAppRequests.sort('personData.creation', usersAppRequests.sortBy.sortType)\n      },\n      application () {\n          usersAppRequests.sortBy.sortBy = 'application'\n          usersAppRequests.sort('packageData.name', usersAppRequests.sortBy.sortType)\n      },\n      division () {\n          usersAppRequests.sortBy.sortBy = 'division'\n          usersAppRequests.sort('personData.organization.name', usersAppRequests.sortBy.sortType)\n      }\n    }\n\n    usersAppRequests.sort = (sortBy, order) => {\n    \tcui.log('sort', sortBy, order)\n      usersAppRequests.data = _.orderBy(usersAppRequests.data, sortBy, order)\n    }\n\n\t\tusersAppRequests.goToDetails = function(request) {\n\t\t\tif (request.personData && request.personData.id && \n\t\t\t\trequest.personData.organization && request.personData.organization.id &&\n\t\t\t\trequest.packageData && request.packageData.id) {\n\t\t\t\t$state.go('organization.requests.pendingRequests', {\n\t\t\t\t \t'userId': request.personData.id, \n\t\t\t\t\t'orgId': request.personData.organization.id,\n\t\t\t\t\t'packageId': request.packageData.id\n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tcui.log('usersAppRequests goToDetails missing keys', request);\n\t\t\t}\n\t\t}\n\n    usersAppRequests.updateSearchParams = (page) => {\n        if (page) usersAppRequests.search.page = page\n        $state.transitionTo('organization.requests.usersAppRequests', usersAppRequests.search, {notify: false})\n        init()\n    }\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n\n\t});\n\r\nangular.module('organization')\n.controller('usersRegistrationRequestsCtrl', \n\t\tfunction($timeout,$filter,$pagination,$state,$stateParams,API,APIError,APIHelpers,CuiMobileNavFactory,Loader,User,$scope,DataStorage) {\n\n    const scopeName = 'usersRegistrationRequests.'\n\t\tconst usersRegistrationRequests = this\n    usersRegistrationRequests.search = {}\n\t\tusersRegistrationRequests.sortBy = {}\n\tusersRegistrationRequests.searchByOrg=[]\n      usersRegistrationRequests.searchByPerson=[]\n\n\n    /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n\t\tvar foundOrgs = [];\n\t\tvar foundPersons = [];\n\t\tvar foundPackages = [];\n\n\n  \tvar init = function() {\n  \t\tcui.log('init');\n\n      usersRegistrationRequests.search.pageSize = usersRegistrationRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\n\t\t\tvar qsArray = APIHelpers.getQs(usersRegistrationRequests.search);\n\t\t\t//cui.log('qsArray', qsArray);\n\t\t\tif(usersRegistrationRequests.searchByOrg.length>0){\n\t\t\t\tusersRegistrationRequests.searchByOrg.forEach(function(val){\n\t\t\t\t\tqsArray.push(['organization.id',val.id])\n\t\t\t\t})\n\t\t\t\t\n\t\t\t}else if(usersRegistrationRequests.searchByPerson.length>0){\n\t\t\t\tusersRegistrationRequests.searchByPerson.forEach(function(val){\n\t\t\t\t\tqsArray.push(['registrant.id',val.id])\n\t\t\t\t})\n\t\t\t}\n\t\t\telse{}\n\n\t    usersRegistrationRequests.data = []\n      Loader.onFor(scopeName + 'data')\n      APIError.offFor(scopeName + 'data')\n\n\t\t\tvar getOrg = function(orgId) {\n\t\t\t\treturn $.Deferred(function (dfr) {\n\t\t\t\t\tif (orgId.length) {\n\t\t\t\t\t\tvar cached = _.find(foundOrgs, {id: orgId});\n\t\t\t\t\t\tif (cached) {\n\t\t\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAPI.cui.getOrganizationSecured({ organizationId: orgId }).then(function(org) {\n\t\t\t\t\t\t\t\tfoundOrgs.push(org);\n\t\t\t\t\t\t\t\t//cui.log('org pushed', org, foundOrgs);\n\t\t\t\t\t\t\t\tdfr.resolve(org);\n\t\t\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\t\t\tcui.log('getOrg error', orgId, err);\n\t\t\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar getPerson = function(personId) {\n\t\t\t\treturn $.Deferred(function (dfr) {\n\t\t\t\t\tif (personId.length) {\n\t\t\t\t\t\tvar cached = _.find(foundPersons, {id: personId});\n\t\t\t\t\t\tif (cached) {\n\t\t\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAPI.cui.getPerson({ personId: personId }).then(function(person) {\n\t\t\t\t\t\t\t\tfoundPersons.push(person);\n\t\t\t\t\t\t\t\tdfr.resolve(person);\n\t\t\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\t\t\tcui.log('getPerson error', personId, err);\n\t\t\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar getPackage = function(packageId) {\n\t\t\t\treturn $.Deferred(function (dfr) {\n\t\t\t\t\tif (packageId.length) {\n\t\t\t\t\t\tvar cached = _.find(foundPackages, {id: packageId});\n\t\t\t\t\t\tif (cached) {\n\t\t\t\t\t\t\tdfr.resolve(cached);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAPI.cui.getPackage({ packageId: packageId }).then(function(pkg) {\n\t\t\t\t\t\t\t\tvar p = {id: pkg.id, name: pkg.name[0].text};\n\t\t\t\t\t\t\t\tfoundPackages.push(p);\n\t\t\t\t\t\t\t\tdfr.resolve(p);\n\t\t\t\t\t\t\t}).fail(function(err) {\n\t\t\t\t\t\t\t\tcui.log('getPackage error', packageId, err);\n\t\t\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdfr.resolve({});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tvar done = function(context) {\n  \t\t\t$timeout(function() {\n\t        Loader.offFor(scopeName + 'data')\n\t        cui.log('done', context);\n\t\t\t\t\tcui.log('data', usersRegistrationRequests.data);\n\n\t        usersRegistrationRequests.reRenderPagination && usersRegistrationRequests.reRenderPagination()\n  \t\t\t});\n\t\t\t};\n\n\t\t\tvar start = window.performance.now();\n\t\t\tvar end;\n\t\t\tAPI.cui.getRegistrationRequests({ qs: qsArray }).then(function(res) {\n\t\t\t\tvar calls = [];\n\n\t\t\t\t_.each(res, function(regReq) {\n\t\t\t\t\t// NB create an obj and bind it to scope...\n\t\t\t\t\tvar data = {};\n\t\t\t\t\tdata.request=regReq\n\t\t        \tusersRegistrationRequests.data.push(data);\n\n\t\t        \t// ..then cache the calls, which populate obj asynchronously...\n\t\t\t        calls.push(\n\t\t\t\t        getPerson(regReq.registrant.id)\n\t\t\t\t        .then(function(person) {\n\t\t\t\t        \tdata.personData = person || {};\n\t\t\t\t        \tvar pkgId = (! _.isEmpty(regReq.packages)) ? regReq.packages[0].id : '';\n\t\t\t\t          \treturn getPackage(pkgId);\n\t\t\t\t\t\t})\n\t\t\t\t        .then(function(pkg) {\n\t\t\t\t        \tdata.packageData = pkg;\n\t\t\t\t        \tconsole.log(data.personData.organization.id)\n\t\t\t\t        \tvar orgId = (data.personData && data.personData.organization) ? data.personData.organization.id : '';\n\t\t\t\t\t\t\treturn getOrg(orgId);\n\t\t\t\t\t\t})\n\t\t\t\t        .then(function(org) {\n\t\t\t\t\t\t\tif (! data.personData.organization) {\n\t\t\t\t\t\t\t\tdata.personData.organization = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdata.personData.organization.name = (! _.isEmpty(org)) ? org.name : '';\n\t\t\t\t\t\t\tdata.organization={\n\t\t\t\t\t\t\t\tid:org.id,\n\t\t\t\t\t\t\t\tname:org.name\n\t\t\t\t\t\t\t}        \t\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\n\t\t\t      \t\t}).fail(function() {\n\t\t\t      \t\t\t// mute the failures so as not to derail the entire list\n\t\t\t\t\t\t\treturn $.Deferred().resolve();\n\t\t\t      \t\t})\n\t\t\t\t    );\n\t\t\t\t});\n\t\t\t\treturn $.Deferred().resolve(calls);\n\t\t\t}).then(function(calls) {\n\t\t\t\t// do the cached calls\n\t\t\t\treturn $.when.apply($, calls);\n\t\t\t}).then(function() {\n\t\t\t\t// do the count (used for pagination)\n\t\t\t\treturn API.cui.getRegistrationRequestsCount();\n\t\t\t}).then(function(count) {\n\t\t\t\t// apply the count\n\t\t\t\tusersRegistrationRequests.userCount = count;\n\t\t\t\tAPI.user.userRegistrationRequestsCount=count\n\t\t\t\treturn $.Deferred().resolve();\t\t\t\t\n\t\t\t}).fail(function(error) {\n        APIError.onFor(scopeName + 'data')\n      }).always(function() {\n        CuiMobileNavFactory.setTitle($filter('cuiI18n')('Registration Requests'))\n      \tdone('finally');\n\t\t\t\tvar end = window.performance.now();\n\t\t\t\tvar time = end - start;\n\t\t\t\tcui.log('time', time);\n      });\n    };\n\n    init();\n    /* --------------------------------------------- ON LOAD END ---------------------------------------------- */\n\n\n    /* --------------------------------------- ON CLICK FUNCTIONS START --------------------------------------- */\n    usersRegistrationRequests.sortingCallbacks = {\n      name () {\n          usersRegistrationRequests.sortBy.sortBy = 'name'\n          usersRegistrationRequests.sort(['personData.name.given', 'personData.name.surname'], usersRegistrationRequests.sortBy.sortType)\n      },\n      title () {\n          usersRegistrationRequests.sortBy.sortBy = 'title'\n          usersRegistrationRequests.sort('personData.title', usersRegistrationRequests.sortBy.sortType)\n      },\n      submitted () {\n          usersRegistrationRequests.sortBy.sortBy = 'submitted'\n          usersRegistrationRequests.sort('personData.creation', usersRegistrationRequests.sortBy.sortType)\n      },\n      application () {\n          usersRegistrationRequests.sortBy.sortBy = 'application'\n          usersRegistrationRequests.sort('packageData.name', usersRegistrationRequests.sortBy.sortType)\n      },\n      division () {\n          usersRegistrationRequests.sortBy.sortBy = 'division'\n          usersRegistrationRequests.sort('personData.organization.name', usersRegistrationRequests.sortBy.sortType)\n      }\n    }\n\n    usersRegistrationRequests.sort = (sortBy, order) => {\n    \tcui.log('sort', sortBy, order)\n      usersRegistrationRequests.data = _.orderBy(usersRegistrationRequests.data, sortBy, order)\n    }\n\n\n\t\tusersRegistrationRequests.goToDetails = function(request) {\n\t\t\tif (request.personData && request.personData.id && \n\t\t\t\trequest.personData.organization && request.personData.organization.id) {\n\t\t\t\tDataStorage.setType('userPersonRequest', {personData:request.personData, organization:request.organization,request:request.request,packageData:request.packageData} )\n\t\t\t\t$state.go('organization.requests.personRequest', {\n\t\t\t\t \t'userId': request.personData.id, \n\t\t\t\t\t'orgId': request.personData.organization.id \n\t\t\t\t})\n\t\t\t} else {\n\t\t\t\tcui.log('usersRegistrationRequests goToDetails missing keys', request);\n\t\t\t}\n\t\t}\n\n    usersRegistrationRequests.updateSearchParams = (page) => {\n    \t//cui.log('updateSearchParams', page);\n        if (page) usersRegistrationRequests.search.page = page\n        // WHY transition to this same route? if setting notify:false? what is the purpose? just to add an item to history?\n        $state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.search, {notify: false})\n        init()\n    }\n    /* ---------------------------------------- ON CLICK FUNCTIONS END ---------------------------------------- */\n    usersRegistrationRequests.searchBy='person'\n    usersRegistrationRequests.updateSearchByName = () =>{     \n    \t//console.log(usersRegistrationRequests.searchBy)\n    \tif(usersRegistrationRequests.searchBy==='org'&&usersRegistrationRequests.searchValue){\n    \t\tLoader.onFor(scopeName + 'data')\n      \t\tAPIError.offFor(scopeName + 'data')\n      \t\t usersRegistrationRequests.searchByOrg=[]\n    \t\tAPI.cui.getOrganizations({qs:[['name',usersRegistrationRequests.searchValue+'*']]})\n    \t\t.then((res) =>{\n    \t\t\tconsole.log(res)\n    \t\t\tusersRegistrationRequests.searchByOrg=res\n    \t\t\tLoader.offFor(scopeName + 'data')\n    \t\t\tif(res.length>0){\n    \t\t\t\t$state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.searchByOrg, {notify: false})\n        \t\t\tinit()\n        \t\t}else{\n        \t\t\tusersRegistrationRequests.data=[]\n        \t\t\t$scope.$apply()\n        \t\t}\n    \t\t})\n    \t\t.fail((err) =>{\n    \t\t\tconsole.log(err)\n    \t\t})\n    \t}else if (usersRegistrationRequests.searchBy==='person'&&usersRegistrationRequests.searchValue){\n    \t\tLoader.onFor(scopeName + 'data')\n      \t\tAPIError.offFor(scopeName + 'data')\n      \t\t usersRegistrationRequests.searchByPerson=[]\n    \t\tAPI.cui.getPersons({qs:[['fullName',usersRegistrationRequests.searchValue]]})\n    \t\t.then(res =>{\n    \t\t\tconsole.log(res)\n    \t\t\tusersRegistrationRequests.searchByPerson=res\n    \t\t\tLoader.offFor(scopeName + 'data')\n    \t\t\tif(res.length>0){\n    \t\t\t\t$state.transitionTo('organization.requests.usersRegistrationRequests', usersRegistrationRequests.searchByPerson, {notify: false})\n        \t\t\tinit()\n        \t\t}else{\n        \t\t\tusersRegistrationRequests.data=[]\n        \t\t\t$scope.$apply()\n        \t\t}\n    \t\t})\n    \t\t.fail(err =>{\n    \t\t\t\tconsole.log(err)\n    \t\t})\n    \t}else{\n    \t\tusersRegistrationRequests.searchByOrg=[]\n            usersRegistrationRequests.searchByPerson=[]\n    \t\t$state.transitionTo('organization.requests.usersRegistrationRequests', {notify: false})\n    \t\tinit()\n    \t}\n    \t\t/*return undefined*/\n    }\n\t\n\t});\n\r\nangular.module('organization')\n.controller('orgRolesCtrl', function($scope) {\n    'use strict';\n\n    const orgRoles = this;\n\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    var handleError = function handleError(err) {\n        orgRoles.loading = false;\n        $scope.$digest();\n        console.log('Error', err);\n    };\n\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK START --------------------------------------------------------------------------------\n    // ON CLICK END ----------------------------------------------------------------------------------\n\n});\n\r\nangular.module('misc', [])\n    .config(['$stateProvider', function($stateProvider) {\n\n        const templateBase = 'app/modules/misc/';\n\n        const returnCtrlAs = function(name, asPrefix) {\n            return name + 'Ctrl as ' + (asPrefix ? asPrefix : '') + (asPrefix ? name[0].toUpperCase() + name.slice(1, name.length) : name);\n        };\n\n        const loginRequired = true;\n        $stateProvider\n            .state('welcome', {\n                url: '/welcome',\n                templateUrl: templateBase + 'welcome/welcome.html'\n            })\n            .state('search', {\n                url: '/search?page&pageSize',\n                templateUrl: templateBase + 'search/search.html',\n                controller: returnCtrlAs('search'),\n                access: {\n                    permittedLogic:appConfig.globalSearch\n                }\n            })\n            .state('misc', {\n                url: '/status',\n                templateUrl: templateBase + 'status/status.html'\n            })\n            .state('misc.404', {\n                url: '/404',\n                templateUrl: templateBase + 'status/status-404.html'\n            })\n            .state('misc.notAuth', {\n                url: '/notAuthorized',\n                templateUrl: templateBase + 'status/status-notAuth.html'\n            })\n            .state('misc.pendingStatus', {\n                url: '/pendingStatus',\n                templateUrl: templateBase + 'status/status-pendingStatus.html'\n            })\n            .state('misc.success', {\n                url: '/success',\n                templateUrl: templateBase + 'status/status-success.html'\n            })\n            .state('misc.loadError', {\n                url: '/error',\n                templateUrl: templateBase + 'status/status-loadError.html'\n            });\n\n    }]);\n\r\nangular.module('misc')\n    .controller('searchCtrl', ['API', '$scope', '$stateParams', '$state', '$q', '$pagination','APIHelpers','Loader', 'APIError','Base',\n    function(API, $scope, $stateParams, $state, $q, $pagination,APIHelpers,Loader,APIError,Base) {\n        let search = this;\n        search.currentParentOrg = API.user.organization.id;\n\n        search.users = null;\n        search.timer = null\n        search.searchType = \"organizations\";\n        search.searchOrgId = \"\";\n        search.searchterms=\"\"\n        search.count=1000\n        search.pageError=false\n\n        // search.keypress = function() {\n        //     search.users = [];\n        //     if (search.timer) { clearTimeout(search.timer); }\n        //     search.timer = window.setTimeout(function() {\n        //         search.searchNow();\n        //     }, 200);\n        // }\n\n        /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\n\n        search.flattenOrgHierarchy = function(orgHierarchy) {\n            /*\n                Takes the organization hierarchy response and returns a flat object array containing the id's and name's of\n                the top level organization as well as it's divisions.\n            */\n\n            if (orgHierarchy) {\n                let organizationArray = [];\n\n                organizationArray.push({\n                    id: orgHierarchy.id,\n                    name: orgHierarchy.name\n                });\n\n                if (orgHierarchy.children) {\n                    orgHierarchy.children.forEach((division) => {\n                        organizationArray.push({\n                            id: division.id,\n                            name: division.name\n                        });\n\n                        if (division.children) {\n                            let flatArray = _.flatten(division.children);\n\n                            flatArray.forEach((childDivision) => {\n                                organizationArray.push({\n                                    id: childDivision.id,\n                                    name: childDivision.name\n                                });\n                            });\n                        }\n                    });\n                }\n                return organizationArray;\n            } else {\n                throw new Error('No organization hierarchy object provided');\n            }\n        }\n\n        search.addPerson = function(newPerson) {\n\n            // Prevent Duplicates\n            var add = true;\n            search.users.forEach(function(person) {\n                if (newPerson.id == person.id) { add = false; }\n            })\n\n            if (newPerson.status == 'pending') { add = false; }\n            if (add) { search.users.push(newPerson) }\n\n        }\n\n        search.searchNow = function(searchOrPage) {\n            search.pageError=false\n            if (searchOrPage) {\n                search.searchParams.page=1\n            }\n            Loader.onFor('search.loading')\n            search.users = [];\n            search.orgs = [];\n            let qsArray=APIHelpers.getQs(search.searchParams)\n            //Need to filter out pending and unactive\n            qsArray.push(['status','active'],['status','suspended'])\n            // if (search.searchterms|| !type) {\n\n                if (search.searchType == \"people\") {\n                    let qsArrayNameSearch=angular.copy(qsArray)\n                    qsArrayNameSearch.push(['fullName', search.searchterms],['status','locked'])\n                    const promises= [API.cui.countPersons({qs:qsArrayNameSearch}),API.cui.getPersons({qs: qsArrayNameSearch})]\n                    $q.all(promises)\n                    .then(res=>{\n                        search.personCount=res[0]\n                        search.users=res[1]\n                        if (search.users.length===0) {\n                            search.noRecords=true\n                        }\n                        Loader.offFor('search.loading')\n                    })                    \n                    .catch(error => {\n                        Loader.offFor('search.loading')\n                        search.pageError=true\n                    })\n                    //     qsArray.push(['email', search.searchterms])\n                    // API.cui.getPersons({\n                    //         qs: qsArray\n                    //     })\n                    //     .done(personResponse => {\n\n                    //         personResponse.forEach(function(x) {\n                    //             search.addPerson(x);\n                    //         })\n\n                    //         $scope.$digest()\n                    //     })\n                    //     .fail(error => {\n\n                    //     })\n\n                }\n                if (search.searchType == \"organizations\") {\n                    qsArray.push(['name', search.searchterms + \"*\"])\n                    API.cui.getOrganizations({qs: qsArray})\n                    .done(orgsResponse => {\n                        search.orgs = orgsResponse;\n                        if (search.orgs.length===0) {\n                            search.noRecords=true\n                        }\n                    })\n                    .fail(error => {\n                        search.pageError=true\n                    })\n                    .always(handleAll)\n                }\n            // }\n        }\n\n        const handleAll= () => {\n            Loader.offFor('search.loading')\n            $scope.$digest()\n        }\n\n        /* -------------------------------------------- HELPER FUNCTIONS END --------------------------------------------- */\n\n        /* -------------------------------------------- ON LOAD START --------------------------------------------- */\n        search.searchParams = Object.assign({}, $stateParams)\n        search.searchParams.pageSize = search.searchParams.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\n        if (!search.searchParams.page) {\n            search.searchParams.page=1\n        }\n        search.sortBy = {}\n        search.organizationList = null;\n        // API.cui.getOrganizationsCount({qs:APIHelpers.getQs(search.searchParams)})\n        // .then(count=>{\n        //     search.orgCount=count\n        //     return API.cui.getOrganizations({qs:APIHelpers.getQs(search.searchParams)})\n        // })\n        // Authorization for org serach and user search\n        if (Base.accessToSecurityAndExchangeAdmins()) {            \n            search.searchNow(true)\n        }\n        else{\n            search.searchType = \"people\"\n            search.searchNow(true)\n        }\n\n        /* -------------------------------------------- ON LOAD END --------------------------------------------- */\n\n        /* -------------------------------------------- ON CLICK FUNCTIONS START --------------------------------------------- */\n        search.updateSearchParams = function(page) {\n            if (page) {\n                search.searchParams.page=page\n            }\n            $state.transitionTo('search', search.searchParams, {notify: false})\n            search.searchNow()\n        }\n\n        search.userClick = function(clickedUser) {\n\n            const stateOpts = {\n                userId: clickedUser.id,\n                orgId: clickedUser.organization.id,\n            }\n            if (clickedUser.status === 'pending') $state.go('organization.requests.personRequest', stateOpts)\n            else $state.go('organization.directory.userDetails', stateOpts)\n\n        }\n\n        search.orgClick = function(clickedOrd) {\n            const stateOpts = {\n                orgId: clickedOrd.id,\n            }\n            $state.go('organization.directory.orgDetails', stateOpts)\n        }\n\n        /* -------------------------------------------- ON CLICK FUNCTIONS END --------------------------------------------- */\n    }]);\n\r\nangular.module('common',['translate','ngMessages','cui.authorization','cui-ng','ui.router','snap','LocalStorageModule'])\n.config(($translateProvider,$locationProvider,$urlRouterProvider,$injector,\n    localStorageServiceProvider,$cuiIconProvider,$cuiI18nProvider,$paginationProvider,\n    $stateProvider,$compileProvider,$cuiResizeHandlerProvider) => {\n\n    $urlRouterProvider.rule(($injector, $location) => {\n        const path = $location.path()\n        const hasTrailingSlash = path[path.length-1] === '/'\n\n        if (hasTrailingSlash) {\n            const newPath = path.substr(0, path.length-1)\n            return newPath\n        }\n    })\n\n    localStorageServiceProvider.setPrefix('cui');\n    // $locationProvider.html5Mode(true);\n\n    const templateBase = 'app/modules/common/';\n\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\n\n    $stateProvider\n    .state('auth', {\n        url: '/auth?xsrfToken&cuid',\n        controller: returnCtrlAs('auth'),\n        templateUrl: templateBase + 'auth/auth.html',\n        access:true\n    });\n\n    if (appConfig.languages) {\n        if (!appConfig.languageResources) {\n            console.error('You need to configure languageResources in your appConfig.json.');\n        }\n\n        /*\n        *   This section will dynamically generate the correct path to versioned i18n assets \n        *   based off of current i18n version in use in the project.\n        *\n        *   This requires a proper appConfig.json setup. Please refer to the documentation in\n        *   ./docs/features/cui-framework/cui-i18n.md for information on how to setup the appConfig.\n        *\n        *   Note: Grunt tasks will not automatically work with all of the possible setups of i18n assets.\n        */\n\n        if (appConfig.languageResources.hasOwnProperty('customDependencyName')) {\n            // Loading in custom i18n project\n            const customDependency = appConfig.languageResources.customDependencyName\n            const dependencyType = appConfig.languageResources.dependencyType || 'dependencies'\n            const customDependencyVersion = packageJson[dependencyType][customDependency].split('#v')[1]\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, customDependencyVersion)\n        }\n        else if (appConfig.languageResources.hasOwnProperty('dependencyOrigin') && appConfig.languageResources.dependencyOrigin === 'cui-idm-b2x') {\n            // Loading in i18n dependency through B2X (generator projects)\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, i18nPackageJson.version)\n        }\n        else {\n            // Loading in standalone cui-i18n dependency\n            const dependencyType = appConfig.languageResources.dependencyType || 'dependencies'\n            appConfig.languageResources.url = appConfig.languageResources.url.replace(/\\{\\{(.*?)\\}\\}/, packageJson[dependencyType]['@covisint/cui-i18n'])\n        }\n\n        $cuiI18nProvider.setLocaleCodesAndNames(appConfig.languages);\n        let languageKeys = Object.keys($cuiI18nProvider.getLocaleCodesAndNames());\n\n        const returnRegisterAvailableLanguageKeys = () => {\n            // Reroute unknown language to prefered language\n            let object = {'*': languageKeys[0]};\n            languageKeys.forEach(function(languageKey) {\n                // Redirect language keys such as en_US to en\n                object[languageKey + '*'] = languageKey;\n            });\n            return object;\n        };\n\n        $translateProvider.useLoader('LocaleLoader', appConfig.languageResources )\n        .registerAvailableLanguageKeys(languageKeys, returnRegisterAvailableLanguageKeys())\n        .uniformLanguageTag('java')\n        .determinePreferredLanguage()\n        .fallbackLanguage(languageKeys);\n\n        $cuiI18nProvider.setLocalePreference(languageKeys);\n    }\n\n    if (appConfig.iconSets) {\n        appConfig.iconSets.forEach((iconSet) => {\n            $cuiIconProvider.iconSet(iconSet.name, iconSet.path, iconSet.defaultViewBox || null);\n        });\n    }\n\n    // Pagination Results Per Page Options\n    if (appConfig.paginationOptions) {\n        $paginationProvider.setPaginationOptions(appConfig.paginationOptions)\n    }\n    else {\n        throw new Error(`You don't have paginationOptions set in your appConfig.json`)\n    }\n\n    // Cui Resize Handler Breakpoint Option\n    if (appConfig.breakpointOption) {\n        $cuiResizeHandlerProvider.setBreakpoint(appConfig.breakpointOption);\n    } else {\n        throw new Error('You don\\'t have breakpointOption set in your appConfig.json');\n    }\n\n    $compileProvider.debugInfoEnabled(false);\n\n});\n\nangular.module('common')\n.run(['LocaleService','$rootScope','$state','$http','$templateCache','$cuiI18n','User',\n    'cui.authorization.routing','cui.authorization.evalRouteRequest','Menu','API','$cuiIcon','$timeout','PubSub','APIError','Loader','Theme','CuiRouteHistoryFactory',\n(LocaleService,$rootScope,$state,$http,$templateCache,$cuiI18n,User,routing,evalRouteRequest,Menu,API,$cuiIcon,$timeout,PubSub,APIError,Loader,Theme,CuiRouteHistoryFactory) => {\n\n    if(window.cuiApiInterceptor) {\n        const cuiApiInterceptorConfig = {\n            apiUris: [ appConfig.serviceUrl ],\n            stopIfInvalidPayload: true\n        }\n\n        if(appConfig.debugServiceUrl) {\n            cuiApiInterceptorConfig.apiUris.push(appConfig.debugServiceUrl)\n        }\n\n        const interceptors = [\n            'Get',\n            'PrePut',\n            'PrePost',\n            'PostPut',\n            'PostPost'\n        ]\n\n        interceptors.forEach(interceptor => window.cuiApiInterceptor[`start${ interceptor }Interceptor`](cuiApiInterceptorConfig))\n    }\n\n    // Add locales here\n    const languageNameObject = $cuiI18n.getLocaleCodesAndNames();\n\n    for (var LanguageKey in languageNameObject) {\n        LocaleService.setLocales(LanguageKey, languageNameObject[LanguageKey]);\n    }\n\n    $rootScope.$on('$stateChangeStart', (event, toState, toParams, fromState, fromParams) => {\n        Theme.clear() \n        APIError.clearAll()\n        Loader.clearAll()\n        event.preventDefault();\n\n        function attachAccessInfo(toState) {\n            if (toState.access) {\n                if (! _.isObject(toState.access)) {\n                    toState.access = {};\n                }\n                toState.access.roles = User.getRoles();\n                toState.access.entitlements = User.getEntitlements();\n            } else {\n                toState.access = {};                \n            }\n        }\n\n        function go(toState, toParams, fromState, fromParams) {\n            // NB... detailed access logic is evaluated upstream, in cui.authorization.evalRouteRequest...\n            attachAccessInfo(toState);\n            evalRouteRequest(toState, toParams, fromState, fromParams,'misc.notAuth');\n            PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams }); \n            Menu.handleStateChange(toState.menu);\n        }\n\n        const route = () => {\n            if (appConfig.debugServiceUrl) {\n                /**\n                    appConfig.debugServiceUrl can be pointed at a localhost server to act as a mock API.\n                        Ex: 'debugServiceUrl': 'http://localhost:8001'\n                    mock api server source code \n                        https://github.com/thirdwavellc/cui-api-mock\n                    NB this workaround is not calling new evalRouteRequest() logic.\n                **/\n                let userInfo = {};\n                API.cui.getPerson({personId: 'personId'})\n                .then((res) => {\n                    userInfo = res;\n                    return API.cui.getOrganization({ organizationId: res.organization.id });\n                })\n                .then((res) => {\n                    userInfo.organization = res;\n                    API.setUser(userInfo);\n                });\n                routing(toState, toParams, fromState, fromParams, []);\n                PubSub.publish('stateChange',{ toState,toParams,fromState,fromParams }); // this is required to make the ui-sref-active-nested directive work\n                Menu.handleStateChange(toState.menu );\n            }\n            else {\n                /* deprecated...\n                if (!toState.access || !toState.access.loginRequired) {\n                    Menu.handleStateChange(toState.menu);\n                    routing(toState, toParams, fromState, fromParams, User.getEntitlements());\n                    PubSub.publish('stateChange',{ toState,toParams,fromState,fromParams }); // this is required to make the ui-sref-active-nested directive work with a multi-module approach\n                    return;\n                }\n                else if (User.get() !== '[cuid]') {\n                    routing(toState, toParams, fromState, fromParams, User.getEntitlements());\n                    PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams });\n                    Menu.handleStateChange(toState.menu);\n                }\n                else {\n                    API.authenticateUser({ toState,toParams,fromState,fromParams })\n                    .then((res) => {\n                        const { toState, toParams, fromState, fromParams } = res.redirect;\n                        // Determine if user is able to access the particular route we're navigating to\n                        routing(toState, toParams, fromState, fromParams, res.roleList);\n                        PubSub.publish('stateChange',{ toState, toParams, fromState, fromParams }); // this is required to make the ui-sref-active-nested directive work with a multi-module approach\n                        // Menu handling\n                        Menu.handleStateChange(res.redirect.toState.menu);\n                    });\n                }\n                */\n                if (!toState.access || User.get() !== '[cuid]') {\n                    // ...route needs no User info... or ...route needs User and we have User info...\n                    cui.log('stateChangeStart2', toState, toParams);\n                    go(toState, toParams, fromState, fromParams);\n                } else {\n                    // ..route needs (loggedIn) User and we need User info...\n                    API.authenticateUser({toState, toParams, fromState, fromParams}).then((res) => {\n                        cui.log('stateChangeStart3', res.redirect.toState, res.redirect.toParams);\n                        go(res.redirect.toState, res.redirect.toParams, res.redirect.fromState, res.redirect.fromParams);\n                    });\n                }\n            }\n        };\n\n        if (_.isEmpty(API.cui)) {\n            // async load API.cui\n            API.initApi().then(() => {\n                route();\n            });\n        } else {\n            route();\n        }\n    });\n\n    // $state.stateStack is a stack of states used by base.goBack()\n    $state.stateStack = []\n\n    $rootScope.$on('$stateChangeSuccess', (e, { toState, toParams, fromState, fromParams }) => {\n        // For base.goBack()\n        $state.stateStack.push({\n            name: fromState.name,\n            params: fromParams || {}\n        })\n\n        // routeHistory POC\n        var routeTextArray = toState.name.split('.');\n        CuiRouteHistoryFactory.add({\n            text: routeTextArray[routeTextArray.length - 1],\n            uiroute: toState.name,\n            uirouteparams: toParams\n        });\n\n        cui.log('on $stateChangeSuccess', toState, toParams, fromState, fromParams, $state.stateStack);\n    })\n\n    angular.forEach($cuiIcon.getIconSets(), (iconSettings, namespace) => {\n        $http.get(iconSettings.path, {\n            cache: $templateCache\n        });\n    });\n\n}]);\n\r\nangular.module('common')\n.controller('authCtrl', ['$state',function($state) {\n    $state.go('welcome');\n}]);\n\r\nangular.module('common')\n.controller('baseCtrl', function(Base, $scope) {\n\n    $scope.base = Base\n    $scope.base.pendingNotificationFlag=false\n})\n\n.filter('capitalize', function() {\n    return function(input) {\n      return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\n    }\n})\n\n.filter('capitalize', function() {\n    return function(input) {\n      return (!!input) ? input.charAt(0).toUpperCase() + input.substr(1).toLowerCase() : '';\n    }\n})\n\r\nangular.module('common')\n.directive('disableAnimate', ($animate) => ({\n\n\t/*\n\t\tUse this directive to disable the animation window that is introduced by ng-animate.\n\t\tAdd the 'disable-animate' attribute to an element you need to disable ng-animate on.\n\n\t\tExample: \t<p disable-animate> Element you need to disable ng-animate on. </p>\n\t*/\n\n\trestrict: 'A',\n\tlink: (attrs, elem) => {\n\t\t$animate.enabled(elem, false)\n\t}\n}))\n\r\nangular.module('common')\n.factory('CuiMobileNavFactory', (PubSub,User,$filter) => {\n    return {\n        title: User.user.organization.name,\n        defaultTitle: User.user.organization.name,\n        getTitle: function() {\n            return this.title\n        },\n        setTitle: function(newTitle) {\n            this.title = newTitle\n            PubSub.publish('mobileNavTitleChange')\n        },\n        getDefaultTitle: function() {\n            return this.defaultTitle\n        },\n        setDefaultTitle: function(newDefaultTitle) {\n            this.defaultTitle = newDefaultTitle\n        }\n    }\n})\n.directive('cuiMobileNav', (CuiMobileNavFactory,PubSub,$state) => ({\n    restrict: 'E',\n    scope: {\n        showIf: '=',\n        links: '=',\n        activeTitle:'@activeTitle',\n        label: '=?'\n    },\n    link: (scope, elem, attrs) => {\n        // attrs.activeTitle ? scope.activeTitle = attrs.activeTitle : scope.activeTitle = CuiMobileNavFactory.getDefaultTitle()\n        scope.currentState = $state.current.name\n\n        scope.close = () => scope.showIf = false\n        scope.toggle = () => scope.showIf =! scope.showIf\n\n        const pubSubSubscription = PubSub.subscribe('mobileNavTitleChange', () => {\n            // scope.activeTitle = CuiMobileNavFactory.getTitle()\n        })\n\n        scope.$on('$destroy', () => {\n            PubSub.unsubscribe(pubSubSubscription)\n        })\n    },\n    template: `\n        <nav class=\"cui-breadcrumb--mobile\" id=\"breadcrumb-button\" aria-hidden=\"true\" ng-click=\"toggle()\" off-click=\"close()\">\n            <ul class=\"cui-breadcrumb__links\">\n                <li class=\"cui-breadcrumb__link cui-breadcrumb__link--current\">\n                    <span class=\"cui-breadcrumb__mobile-link\" ng-if=\"links[currentState]\" class=\"active\"><span class=\"cui-mobile-only\" ng-if=\"activeTitle\">{{activeTitle}}.</span>{{links[currentState].label}}</span>\n                    <span class=\"cui-breadcrumb__mobile-link\" ng-if=\"!links[currentState]\" class=\"active\"><span class=\"cui-mobile-only\" ng-if=\"activeTitle\">{{activeTitle}}.</span>{{label}}</span>\n                </li>\n                <div class=\"cui-popover cui-popover--menu cui-breadcrumb__popover cui-popover--top cui-popover__categories-popover\" tether target=\"#breadcrumb-button\" attachment=\"top left\" target-attachment=\"bottom left\" offset=\"-10px 0\" ng-if=\"showIf\">\n                    <li class=\"cui-breadcrumb__link cui-popover__row\" ng-repeat=\"(state, stateDetails) in links\" ng-if=\"currentState!==state\">\n                        <a class=\"cui-breadcrumb__mobile-link\" ui-sref=\"{{state}}(stateDetails.stateParams)\">{{stateDetails.label}}</a>\n                    </li>\n                </div>\n            </ul>\n        </nav>\n    `\n}))\n\r\n/*\nTODO\n    -strategically handle jumps?\n        - best bet is to just display last 3 routes in markup\n*/\n\nangular.module('common')\n.factory('CuiRouteHistoryFactory', () => {\n    var routes = [];\n    /*\n        route: {\n            text: '',\n            uiroute: '',\n            uirouteparams: ''\n        }\n    */\n    return {\n        add: function(route) {\n            routes.push(route);\n            return;\n        },\n        remove: function(route) {\n            _.remove(routes, {text: route.text});\n            return;\n        },\n        truncate: function(route) {\n            // Remove everything that follows route\n            var idx = routes.indexOf(route);\n            cui.log('truncate before', routes, route, idx);\n            if (idx !== -1) {\n                routes = routes.slice(0, idx);\n            }\n            cui.log('truncate after', routes);\n            return;\n        },\n        clear: function() {\n            routes = [];\n            return;\n        },\n        get: function() {\n            return routes;\n        }\n    }\n})\n.directive('cuiRouteHistory', (CuiRouteHistoryFactory, $state) => ({\n    restrict: 'E',\n    link: (scope, elem, attrs) => {\n        //scope.currentState = $state.current.name;\n        scope.routes = CuiRouteHistoryFactory.get();\n        scope.go = function(route) {\n            if (route.uiroute && route.uiroute !== $state.current.name) {\n                CuiRouteHistoryFactory.truncate(route);\n                if (route.uirouteparams) {\n                    $state.go(route.uiroute, route.uirouteparams);   \n                } else {\n                    $state.go(route.uiroute);   \n                }\n            }\n        };\n    },\n    template: `\n        <nav class=\"cui-breadcrumb\">\n            <ul class=\"cui-breadcrumb__links\">\n              <li class=\"cui-breadcrumb__link\" ng-repeat=\"route in routes | limitTo:-3\">\n                <span ng-class=\"{'cui-breadcrumb__route':!$last, 'cui-breadcrumb__routelast':$last}\" ng-click=\"go(route)\">{{route.text}}</span>\n              </li>\n            </ul>\n        </nav>\n    `\n    //            <a ng-if=\"route.uiroute !== null\" ui-sref=\"{{route.uiroute}}\">{{route.text}}</a>\n}))\n\r\nangular.module('common')\n.directive('cuiSuccessPane', ($state,$timeout) => ({\n\n\t/*****\n\t\t--- Usage ---\n\n        <cui-success-pane show-if=\"scope.variable\" close-after=\"5000\" on-close=\"scope.functionName()\">\n      \t\t<p class=\"cui-modal__secondary-message\">This is extra content</p>\n      \t\t<p class=\"cui-modal__secondary-message\">{{scope.object.name}}</p>\n    \t</cui-success-pane>\n\n        --- Optional Paramaters ---\n\n            close-after - specify how long before the success pane automatically closes\n                        - if timer is not specified, the pane will stay open until clicked\n\n            on-close    - specify what scope function to fire when the modal closes\n\t*****/\n\n    restrict: 'E',\n    transclude: true,\n    scope: {\n        showIf: '=',\n        closeAfter: '=',\n        onClose: '&'\n    },\n    link: (scope) => {\n        scope.close = () => {\n            scope.showIf =! scope.showIf\n        }\n\n        if (scope.closeAfter) {\n            $timeout(() => {\n                if (scope.onClose) {\n                    scope.onClose() && scope.onClose()();\n                }\n                scope.close()\n            }, scope.closeAfter)\n        }\n    },\n    template: `\n        <div class=\"cui-modal\" ng-if=\"showIf\" ng-click=\"close()\">\n            <div class=\"cui-modal__pane\">\n                <div class=\"cui-modal__icon\">\n                    <cui-icon cui-svg-icon=\"cui:check-with-border\" class=\"cui-modal__icon\"></cui-icon>\n                </div>\n                <span class=\"cui-modal__primary-message\">{{'cui-success' | translate}}</span>\n                <ng-transclude></ng-transclude>\n            </div>\n        </div>\n    `\n}))\n\r\nangular.module('common')\n.directive('unique', ['$parse', ($parse) => {\n  return {\n    restrict: 'A',\n    require: 'ngModel',\n    link: (scope, element, attrs, ctrl) => {\n      const checkIfUnique = (values) => {\n        ctrl.$setValidity('unique', values[0] !== (values[1] || ''));\n      };\n\n      scope.$watch(()=> [scope.$eval(attrs.unique), ctrl.$viewValue], checkIfUnique, (newValues,oldValues) => angular.equals(newValues,oldValues));\n    }\n  };\n}]);\r\nangular.module('common')\n.factory('API', (Base, CustomAPI, Loader, localStorageService, User, $location, $q, $timeout, $window,LocaleService) => {\n\n    let authInfo = {}\n    let myCUI = {}\n\n    Base.authInfo = authInfo\n\n    const populateUserInfo = (info, redirectOpts) => {\n        const deferred = $q.defer()\n        let userInfo, roleList, entitlementList\n        authInfo = info\n        User.set(info)\n\n        $q.all([\n            myCUI.getPersonRoles({ personId: authInfo.cuid }),\n            myCUI.getPersonEntitlements({ personId: authInfo.cuid }),\n            myCUI.getPerson({ personId: authInfo.cuid })\n        ])\n        .then(res => {\n            roleList = res[0].map(x => x.name)\n            User.setRoles(roleList)\n\n            entitlementList = res[1].map(x => x.privilegeName)\n            User.setEntitlements(entitlementList)\n\n            userInfo = res[2]\n            LocaleService.setLocaleByDisplayName(appConfig.languages[userInfo.language])\n            return myCUI.getOrganizationWithAttributes({ organizationId: res[2].organization.id })\n        })\n        .then(res => {\n            userInfo.organization = res\n            User.set(userInfo)\n            //cui.log('populateUserInfo', User);\n            //get user notification related information  as lazy loading,\n            // No need to hold entire UI apps for this loading.\n            getNotificationDetails(userInfo)\n            deferred.resolve({ roleList: roleList, redirect: redirectOpts })\n        })\n\n        return deferred.promise\n    }\n\n    const getNotificationDetails = (userInfo) => {\n        if (!Base.canGrantAppToUser()) {\n            myCUI.getPersonPendingApps({personId: userInfo.id})\n            .then((res) => {\n                userInfo.pendingApps=res.map(x=> x.name)\n                User.set(userInfo)\n            })\n        }\n        else{\n            $q.all([\n                myCUI.getRegistrationRequestsCount(),\n                myCUI.getPackageRequestsCount(),\n                myCUI.getOrgRegistrationRequestsCount(),\n                myCUI.getPackageRequestsCount({qs:[['requestor.id',userInfo.organization.id],['requestor.type','organization']]})\n            ])\n            .then(res => {\n                userInfo.userRegistrationRequestsCount=res[0]\n                userInfo.userAppRequestsCount=res[1]\n                userInfo.orgRegistrationRequestsCount=res[2]\n                userInfo.orgAppRequestsCount=res[3]\n                userInfo.totalCount=res[0]+res[1]+res[2]+res[3]\n                User.set(userInfo)\n            })\n        }\n        \n    }\n    const jwtAuthHandler = () => {\n        return myCUI.covAuth({\n            originUri: appConfig.originUri,\n            authRedirect: window.location.href.split('#')[0] + '#/auth',\n            appRedirect: $location.path()\n        })\n    }\n\n    const initApi = () => {\n        let deferred = $q.defer()\n        Loader.onFor('wholeApp','custom-api-loading')\n        cui.api({\n            retryUnseured: true,\n            envDefs: ['https://cuijs.run.covisintrnd.com/defs/env.json'],\n            dataCallDefs: [\n                'https://cuijs.run.covisintrnd.com/defs/auth.json',\n                'app/json/idm-call-defs.json',\n                CustomAPI\n            ]\n        })\n        .then((cuiObject) => {\n            if (appConfig.logoutUrl) {\n                Base.logout = () => {\n                    myCUI.covLogout({\n                        redirect: appConfig.logoutUrl,\n                        qs: [['type', 'logout']]\n                    })\n                }    \n            }\n            else Base.logout = cuiObject.covLogout\n            angular.copy(cuiObject, myCUI)\n            myCUI.setAuthHandler(jwtAuthHandler)\n            // overwrite the service url to get the solution instance id\n            appConfig.solutionInstancesUrl && myCUI.setServiceUrl(appConfig.solutionInstancesUrl)\n            return myCUI.covAuthInfo({originUri: appConfig.originUri})\n        })\n        .then(() => {\n            // reset the service url\n            appConfig.debugServiceUrl\n                ? myCUI.setServiceUrl(appConfig.debugServiceUrl)\n                : myCUI.setServiceUrl(appConfig.serviceUrl)\n            $timeout(() => Loader.offFor('wholeApp'), 50)\n            deferred.resolve()\n        })\n        return deferred.promise\n    }\n\n    let apiFactory = {\n        cui: myCUI,\n        getUser: User.get,\n        setUser: User.set,\n        setPersonData: User.setPersonData,\n        getPersonData: User.getPersonData,\n        user: User.user,\n        initApi,\n        authenticateUser: (redirectOpts) => {\n            const deferred = $q.defer()\n            const sessionInfo = myCUI.getCovAuthInfo()\n\n            if (redirectOpts.toState.name!=='auth') {\n                localStorageService.set('appRedirect',redirectOpts) // set the redirect to whatever the last state before auth was\n                Loader.onFor('wholeApp','redirecting-to-sso') // don't need to turn this loader off since covAuth takes us to another page\n                appConfig.solutionInstancesUrl && myCUI.setServiceUrl(appConfig.solutionInstancesUrl)\n                jwtAuthHandler() // force redirect to SSO\n            }\n            else {\n                Loader.onFor('wholeApp','getting-user-info')\n                myCUI.handleCovAuthResponse({ selfRedirect: true })\n                .then(res => {\n                    populateUserInfo(res,localStorageService.get('appRedirect'))\n                    .then(res => {\n                        deferred.resolve(res)\n                        $timeout(()=> Loader.offFor('wholeApp'),50)\n                    })\n                })\n            }\n            return deferred.promise\n        },\n        setAuthInfo: function(newAuthInfo) {\n            angular.copy(newAuthInfo[0], authInfo)\n        },\n        authInfo: authInfo\n    }\n\n    return apiFactory\n\n})\n\r\nangular.module('common')\n.factory('APIError', (SharedService) => {\n    const APIError = Object.create(SharedService)\n    APIError.details = Object.assign({}, APIError.details)\n    APIError.for = APIError.details\n    return APIError\n})\r\nangular.module('common')\n.factory('APIHelpers', (API,$filter) => {\n    'use strict'\n\n    const apiHelpers = {\n\n        getQs(opts) {\n            /**\n                return a qs array from an object of key value pairs\n                where the key is the search param and the value is the search value (accepts undefined values)\n            **/\n\n            return Object.keys(_(opts).omitBy(_.isUndefined).value())\n            .reduce((query, param) => {\n                return query.concat([[param, opts[param]]])\n            }, [])\n        },\n\n        buildPackageRequests(arrayOfApps) {\n            /**\n                returns an array of API package request promises\n                based on an array of apps that we want to request\n\n                the reason for the request should be under app._reason\n                if it does not have a reason and the service package\n                for that app requires one, we return undefined and\n                attach an _error property (app._error = true) on that app\n            **/\n\n            const numberOfApps = arrayOfApps.length\n\n            if (!_.isArray(arrayOfApps) || numberOfApps === 0) {\n                throw new Error ('The argument passed to APIHelpers.buildPackageRequests should be an array of apps, with 1 or more apps.')\n                return undefined\n            }\n\n            let error = false\n            for (let i=0; i < numberOfApps; i += 1) {\n                if (arrayOfApps[i].servicePackage.requestReasonRequired && !arrayOfApps[i]._reason) {\n                    arrayOfApps[i]._error = true\n                    if (!error) {\n                        error = true;\n                    }\n                }\n            }\n            if (error) {\n                return undefined;\n            }\n\n            let packagesBeingRequested = []\n            let packageRequests = []\n            for (let i=0; i < numberOfApps; i += 1) {\n                if (packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id) >= 0) {\n                    // if the service package is already being requested, simply append to the reason.\n                    // if the app doesn't have a reason and we got to this point then the package\n                    // doesn't require a reason\n                    if (arrayOfApps[i]._reason) {\n                        packageRequests[packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id)].reason +=\n                            ('\\n' + $filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(arrayOfApps[i].name) + ': ' + arrayOfApps[i].name._reason)\n                    }\n                }\n                else {\n                    // cache the ids in another array so that we can look for an existing package request\n                    // without having to search through the array of requests.\n                    packagesBeingRequested.push(arrayOfApps[i].servicePackage.id)\n                    packageRequests.push({\n                        requestor: {\n                            id: API.getUser(),\n                            type: 'person'\n                        },\n                        servicePackage: {\n                            id: arrayOfApps[i].servicePackage.id,\n                            type: 'servicePackage'\n                        },\n                        reason: arrayOfApps[i]._reason || ''\n                    })\n                }\n            }\n            return packageRequests.map(data => API.cui.createPackageRequest({ data }))\n        },\n\n        flattenOrgHierarchy(orgHierarchy) {\n            /*\n                Takes the organization hierarchy response and returns a flat object array containing the id's and name's of\n                the top level organization as well as it's divisions.\n            */\n\n            if (orgHierarchy) {\n                let organizationArray = [];\n\n                organizationArray.push({\n                    id: orgHierarchy.id,\n                    name: orgHierarchy.name\n                });\n\n                if (orgHierarchy.children) {\n                    orgHierarchy.children.forEach((division) => {\n                        organizationArray.push({\n                            id: division.id,\n                            name: division.name\n                        });\n\n                        if (division.children) {\n                            let flatArray = _.flatten(division.children);\n                            \n                            flatArray.forEach((childDivision) => {\n                                organizationArray.push({\n                                    id: childDivision.id,\n                                    name: childDivision.name\n                                });\n                            });\n                        }\n                    });\n                }\n                return organizationArray;\n            }\n            else {\n                throw new Error ('No organization hierarchy object provided');\n            }\n        },\n\n        getCollectionValuesAndCount(collection, key, returnAsCollection) {\n            // Given a collection and a key, will return an object containing each different value found\n            // for the given key as well as the count of that key. If the optional parameter `returnAsCollection`\n            // is provided, will return data as a collection instead of an object. This was done as in some \n            // cases (such as ng-repeat) it is easier to work with the data when its in an array.\n\n            // One area this method is handy is when you are getting all the different status values of a user list\n            // and need the count of each status.\n\n            let data = {\n                all: 0\n            }\n\n            collection.forEach(object => {\n                if (object.hasOwnProperty(key)) {\n                    let keyValue = object[key]\n                    if (data.hasOwnProperty(keyValue)) {\n                        data[keyValue] += 1\n                        data.all += 1\n                    }\n                    else {\n                        data[keyValue] = 1\n                        data.all += 1\n                    }\n                }\n            })\n\n            if (!returnAsCollection) return data\n            else {\n                let collectionData = []\n\n                Object.keys(data).forEach(dataKey => {\n                    let asObject = {\n                        value: dataKey,\n                        count: data[dataKey]\n                    }\n\n                    collectionData.push(asObject)\n                })\n\n                return collectionData\n            }\n        }\n    };\n\n    return apiHelpers\n\n});\n\r\nangular.module('common')\n.factory('Base', (APIError, BaseExtensions, Countries, Languages, LocaleService, Loader, Menu, Theme, Timezones, User, $state, $translate) => {\n\n    const baseFactory = {\n        apiError: APIError,\n        appConfig: appConfig,\n        countries: Countries,\n        getLanguageCode: Languages.getCurrentLanguageCode,\n        languages: Languages.all,\n        loader: Loader,\n        menu: Menu,\n        theme: Theme,\n        timezones: Timezones.all,\n        user: User.user,\n\n        goBack: (stateName,stateParams) => {\n            const numberOfStates = $state.stateStack.length\n            let i = numberOfStates - 1 // Last state user visited\n            let counter = 0\n            let stateParamsFromStack\n            do {\n                if ($state.stateStack[i].name === stateName) {\n                    stateParamsFromStack = $state.stateStack[i].params\n                }\n                i--\n                counter++\n            } while (!stateParamsFromStack && i >= 0 && counter <= 20) // limit our attempts to 20\n            if (stateParamsFromStack) stateParams=stateParamsFromStack\n            if (!stateParams) $state.go(stateName)\n            else $state.go(stateName, stateParams)\n        },\n\n        generateHiddenPassword: (password) => Array(password.length+1).join('•')\n    }\n\n    return Object.assign({}, baseFactory, BaseExtensions)\n\n})\n\r\nangular.module('common')\n\t.factory('BaseExtensions', ['cui.authorization.permitted', 'User', (permitted, User) => {\n\n\t\tfunction test() {\n\t\t\tcui.log('base extensions test');\n\t\t\treturn true;\n\t\t}\n\n\t\treturn {\n\t\t\ttest: function() {\n\t\t\t\treturn test();\n\t\t\t},\n\t\t\tisPermitted: function(logic) {\n\t\t\t\t//cui.log('isPermitted', logic, User.getRoles(), User.getEntitlements());\n\t\t\t\treturn permitted(logic, User.getRoles(), User.getEntitlements());\n\t\t\t},\n\t\t\tisOrgAdmin: function() {\n\t\t\t\t//cui.log('isOrgAdmin', appConfig.orgAdminLogic, User.getRoles(), User.getEntitlements());\n\t\t\t\treturn permitted(appConfig.orgAdminLogic, User.getRoles(), User.getEntitlements());\n\t\t\t},\n\t\t\tcanGrantAppToUser: function(){\n\t\t\t\treturn permitted(appConfig.grantAppToUserLogic, User.getRoles(), User.getEntitlements());\n\t\t\t},\n\t\t\tcanGrantAppToOrg: function(){\n\t\t\t\treturn permitted(appConfig.grantAppToOrgLogic, User.getRoles(), User.getEntitlements());\n\t\t\t},\n\t\t\taccessByAnyAdmin: function(){\n\t\t\t\treturn permitted(appConfig.accessByAnyAdmin, User.getRoles(), User.getEntitlements());\n\t\t\t},\n\t\t\tglobalSearch: function(){\n\t\t\t\treturn permitted(appConfig.globalSearch, User.getRoles(), User.getEntitlements());\n\t\t\t},\n\t\t\taccessToSecurityAndExchangeAdmins:function(){\n\t\t\t\treturn permitted(appConfig.accessToSecurityAndExchangeAdmins, User.getRoles(), User.getEntitlements());\n\t\t\t}\n\t\t}\n\t}])\n\r\nangular.module('common')\n.factory('CommonAPI', (API, APIError, $q) => {\n\t'use strict'\n\n\t// This service handles basic API calls that are done throughout the project.\n\t// API calls that are more specific are handled in their own services.\n\n\tconst errorName = 'CommonAPIFactory.'\n\n\tconst getPerson = (userId) => {\n\t\tconst defer = $q.defer()\n\n\t\tAPIError.offFor(errorName + 'getPerson')\n\n\t\tAPI.cui.getPerson({ personId: userId })\n\t\t.done(personResponse => {\n\t\t\tdefer.resolve(personResponse)\n\t\t})\n\t\t.fail(err => {\n\t\t\tconsole.error('Failed getting person information')\n\t\t\tAPIError.onFor(errorName + 'getPerson')\n\t\t\tdefer.reject(err)\n\t\t})\n\n\t\treturn defer.promise\n\t}\n\n\tconst getOrganization = (organizationId) => {\n\t\tconst defer = $q.defer()\n\n\t\tAPIError.offFor(errorName + 'getOrganization')\n\n\t\tAPI.cui.getOrganization({ organizationId: organizationId })\n\t\t.done(orgResponse => {\n\t\t\tdefer.resolve(orgResponse)\n\t\t})\n\t\t.fail(err => {\n\t\t\tconsole.error('Failed getting organization information')\n\t\t\tAPIError.onFor(errorName + 'getOrganization')\n\t\t\tdefer.reject(err)\n\t\t})\n\n\t\treturn defer.promise\n\t}\n\n\tconst getOrganizationHierarchy = (organizationId) => {\n\t\tconst defer = $q.defer()\n\n\t\tAPIError.offFor(errorName + 'getOrgHierarchy')\n\n\t\tAPI.cui.getOrganizationHierarchy({ organizationId: organizationId })\n\t\t.done(orgHierarchy => {\n\t\t\tdefer.resolve(orgHierarchy)\n\t\t})\n\t\t.fail(err => {\n\t\t\tconsole.error('Failed getting organization hierarchy')\n\t\t\tAPIError.onFor(errorName + 'getOrgHierarchy')\n\t\t\tdefer.reject(err)\n\t\t})\n\n\t\treturn defer.promise\n\t}\n\n\treturn {\n\t\tgetPerson: getPerson,\n\t\tgetOrganization: getOrganization,\n\t\tgetOrganizationHierarchy: getOrganizationHierarchy\n\t}\n\n})\n\r\nangular.module('common')\n.factory('Countries', function($http, $rootScope, $translate) {\n\n    let countries = []\n\n    const GetCountries = (locale) => {\n        return $http.get(appConfig.languageResources.url + 'countries/' + locale + '.json')\n    }\n\n    const setCountries = (language) => {\n        language = language || 'en'\n\n        if (language.indexOf('_') > -1) {\n            language = language.split('_')[0]\n        }\n\n        GetCountries(language)\n        .then(res => {\n            countries.length = 0\n\n            res.data.forEach(country => {\n                countries.push(country)\n            })\n        })\n        .catch(err => {\n            console.log(err)\n        })\n    }\n\n    $rootScope.$on('languageChange',function(e, args) {\n        setCountries(args)\n    })\n\n    const getCountryByCode = (countryCode) => {\n        return _.find(countries, function(countryObject) {\n            return countryObject.code === countryCode\n        })\n    }\n\n    setCountries($translate.proposedLanguage())\n\n    return {\n        list: countries,\n        getCountryByCode: getCountryByCode\n    }\n})\n\r\nangular.module('common')\n.factory('CustomAPI', (CustomAPIExtension) => {\n\n    const calls = [\n        {\n            cmd: 'getPackageClaims',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.package.claim.v1+json',\n            call: '/service/v3/claims',\n            type: 'GET'\n        },\n        {\n            cmd: 'getPersonPackageClaims',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',\n            call: `/service/v3/persons/${ '{grantee}' }/packages/${ '{packageId}' }/claims`,\n            type: 'GET' \n        },\n        {\n            cmd: 'getCategories',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.category.v1+json',\n            call: `/service/v3/categories`,\n            type: 'GET' \n        },\n        {\n            cmd: 'getPersonRequestableApps',            \n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\n            call: `/service/v3/applications/persons/${ '{personId}' }/requestable`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getPersonRequestableCount',\n            accepts: 'text/plain',\n            call: `/service/v3/applications/persons/${ '{personId}' }/requestable/count`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getPersonGrantedApps',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\n            call: `/service/v3/applications/persons/${ '{personId}' }`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getPersonGrantedAppCount',\n            cmdType: 'secured',\n            accepts: 'text/plain',\n            call: `/service/v3/applications/persons/${ '{personId}' }/count`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getOrganizationRequestableApps',\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getOrganizationRequestableCount',\n            accepts: 'text/plain',\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/requestable/count`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getOrganizationGrantedApps',            \n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getOrganizationGrantedCount',\n            accepts: 'text/plain',\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/count`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getPersonGrantableApps',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\n            call: `/service/v3/applications/persons/${ '{personId}' }/grantable`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getPersonGrantableCount',\n            accepts: 'text/plain',\n            call: `/service/v3/applications/persons/${ '{personId}' }/grantable/count`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getOrganizationGrantableApps',\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/grantable`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getOrganizationGrantableCount',\n            accepts: 'text/plain',\n            call: `/service/v3/applications/organizations/${ '{organizationId}' }/grantable/count`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getPersonStatusHistory',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.person.status.history.v1+json',\n            call: '/person/v3/persons/statusHistory',\n            type: 'GET'\n        },\n        {\n            cmd: 'getPersonPasswordChangeHistory',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.authn.password.change.history.req.v1+json',\n            call: `/authentication/v4/passwords/changeHistory`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getPersonPendingServicePackages',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.package.request.v1+json',\n            call: `/service/v3/requests`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getPackage',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.package.v1+json',\n            call: `/service/v3/packages/${ '{packageId}' }`,\n            type: 'GET'\n        },\n        {\n            cmd: 'denyPackage',\n            cmdType: 'secured',\n            accepts: 'text/plain',\n            type: 'POST',\n            call: `/service/v3/requests/tasks/deny`,\n        },\n        {\n            cmd: 'approvePackage',\n            cmdType: 'secured',\n            accepts: 'text/plain',\n            type: 'POST',\n            call: `/service/v3/requests/tasks/approve`\n        },\n        {\n            cmd: 'grantClaims',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',\n            call: `/service/v3/packages/grants/claims`,\n            type: 'PUT'\n        },\n        {\n            cmd: 'getOrganizationRegistrationRequest',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.organization.request.v1+json',\n            call: `/organization/v3/requests`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getPersonRegistrationRequest',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\n            call: `/person/v3/requests`,\n            type: 'GET'\n        },\n        {\n            cmd: 'approvePersonRegistration',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\n            call: `/person/v3/requests/tasks/approve`,\n            type: 'POST'\n        },\n        {\n            cmd: 'denyPersonRegistration',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\n            call: `/person/v3/requests/tasks/deny`,\n            type: 'POST'\n        },\n        {\n            cmd: 'getAllOrganizationRequests',\n            accepts: 'application/vnd.com.covisint.platform.organization.request.v1+json',\n            call: `/organization/v3/requests`,\n            type: 'GET'\n        },\n        {\n            cmd: 'getPersonEntitlements',\n            cmdType: 'secured',\n            contentType: 'application/vnd.com.covisint.platform.person.privilege.v1+json',\n            accepts: 'application/vnd.com.covisint.platform.person.privilege.v1+json',\n            call: `/person/v3/persons/privileges/${ '{personId}'}`,\n            type: 'GET'\n        },\n        {   cmd: 'getPersonGrantedCount',\n            cmdType: 'secured',\n            accepts: 'text/plain',\n            call: `/person/v3/persons/count`,\n            type: 'GET' \n        },\n        {\n            cmd: 'suspendOrgPkg',\n            cmdType: 'secured',\n            accepts: 'application/vnd.com.covisint.platform.package.grant.status.request.v1+json',\n            contentType: 'application/vnd.com.covisint.platform.package.grant.status.request.v1+json',\n            call: `/service/v3/grants/tasks/organization/package/suspend`,\n            type: 'POST'\n        }\n    ]\n\n    return calls.concat(CustomAPIExtension)\n\n})\n\r\nangular.module('common')\n.factory('CustomAPIExtension', () => {\n\n\t/* \t\n\t\tAny calls added here will be added to the API.cui object.\n\t*/\n\n    const calls = [\n    \t/* ---------- Registration Nonce Calls ---------- */\n    \t{\n    \t\tcmd: 'initiateNonce',\n    \t\tcmdType: 'unsecured',\n    \t\ttype: 'GET',\n    \t\taccepts: 'application/json',\n    \t\tcall: '/registration/v1/registrations/open/initiate'\n    \t},\n    \t{\n    \t\tcmd: 'getOrganizationNonce',\n    \t\tcmdType: 'nonce',\n    \t\ttype: 'GET',\n    \t\taccepts: 'application/vnd.com.covisint.platform.organization.v1+json',\n    \t\tcall: '/registration/v1/registrations/organizations/{organizationId}'\n    \t},\n    \t{\n    \t\tcmd: 'getOrganizationsNonce',\n    \t\tcmdType: 'nonce',\n    \t\ttype: 'GET',\n    \t\taccepts: 'application/vnd.com.covisint.platform.organization.v1+json',\n    \t\tcall: '/registration/v1/registrations/organizations'\n    \t},\n    \t{\n    \t\tcmd: 'getSecurityQuestionsNonce',\n    \t\tcmdType: 'nonce',\n    \t\ttype: 'GET',\n    \t\taccepts: 'application/vnd.com.covisint.platform.securityquestion.v1+json',\n    \t\tcall: '/registration/v1/registrations/securityQuestions'\n    \t},\n    \t{\n    \t\tcmd: 'postUserRegistrationNonce',\n    \t\tcmdType: 'nonce',\n    \t\ttype: 'POST',\n    \t\taccepts: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\n    \t\tcontentType: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\n    \t\tcall: '/registration/v1/registrations/persons/registration'\n    \t},\n    \t{\n            cmd: 'getPasswordPoliciesNonce',\n            cmdType: 'nonce',\n            type: 'GET',\n            accepts: 'application/vnd.com.covisint.platform.password.policy.v1+json',\n            call: '/registration/v1/registrations/passwords/policies/{policyId}'\n        },\n        {\n            cmd: 'postPersonRequestNonce',\n            cmdType: 'nonce',\n            type: 'POST',\n            accepts: 'application/vnd.com.covisint.platform.person.request.v1+json',\n            contentType: 'application/vnd.com.covisint.platform.person.request.v1+json',\n            call: '/registration/v1/registrations/persons/requests'\n        },\n        {\n        \tcmd: 'getOrgPackageGrantsNonce',\n        \tcmdType: 'nonce',\n        \ttype: 'GET',\n        \taccepts: 'application/vnd.com.covisint.platform.package.grant.v1+json',\n        \tcall: '/registration/v1/registrations/organizations/{organizationId}/packages'\n        },\n\t\t{\n\t\t\tcmd: 'validateUsernameEmailNonce',\n\t\t\tcmdType: 'nonce',\n\t\t\ttype: 'POST',\n\t\t\taccepts: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\n\t\t\tcontentType: 'application/vnd.com.covisint.platform.person.password.account.v1+json',\n\t\t\tcall: '/registration/v1/registrations/persons/registration/validate'\n\t\t},\n        {\n            cmd: 'securedInitiate',\n            cmdType: 'unsecured',\n            type: 'GET',\n            accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json',\n            call: '/registration/v1/registrations/securedInvite/initiate/{invitationId}'\n        },\n        {\n            cmd: 'getOrgAppsNonce',\n            cmdType: 'nonce',\n            type: 'GET',\n            accepts: 'application/vnd.com.covisint.platform.service.application.v1+json',\n            call: '/registration/v1/applications/organizations/{organizationId}'\n        },\n        {\n            cmd: 'getOrgAppsCountNonce',\n            cmdType: 'nonce',\n            type: 'GET',\n            accepts: 'text/plain',\n            call: '/registration/v1/applications/organizations/{organizationId}/count'\n        },\n        {\n            cmd: 'getOrganizationsCountNonce',\n            cmdType: 'nonce',\n            type: 'GET',\n            accepts: 'text/plain',\n            call: '/registration/v1/registrations/organizations/count'\n        },\n        //New Calls-S\n        {cmd: \"getOrgRegistrationRequests\",call:\"/registration/v1/organization/requests\",type:\"GET\",accepts:\"application/vnd.com.covisint.platform.organization.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.organization.request.v1+json\"},\n        {cmd: \"getOrgRegistrationRequestsCount\",call: \"/registration/v1/organization/requests/count\",type: \"GET\",accepts: \"text/plain\"},\n        {cmd: 'approveOrgRegistrationRequest', call:'/registration/v1/organization/requests/tasks/approve', type:'POST', accepts:'application/vnd.com.covisint.platform.organization.request.v1+json'},\n        {cmd: 'denyOrgRegistrationRequest', call:'/registration/v1/organization/requests/tasks/deny', type:'POST', accepts:'application/vnd.com.covisint.platform.organization.request.v1+json'},\n                // ADMIN... imported from Coke...\n        {cmd: 'getPackageByQuery',accepts: 'application/vnd.com.covisint.platform.package.v1+json',call: `/service/v3/packages`,type: 'GET' },\n        {cmd: \"getPersonByQuery\",call: \"/person/v3/persons\",type: \"GET\",accepts: \"application/vnd.com.covisint.platform.person.v1+json\"  },\n        {cmd: \"getRegistrationRequests\",call:\"/registration/v1/person/requests\",type:\"GET\",accepts:\"application/vnd.com.covisint.platform.person.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.person.request.v1+json\"},\n        {cmd: \"createRegistrationRequest\",\"cmdType\": \"unsecured\",call:\"/registration/v1/person/requests\",type:\"POST\",accepts:\"application/vnd.com.covisint.platform.person.request.v1+json\",contentType:\"application/vnd.com.covisint.platform.person.request.v1+json\"},\n        {cmd: \"getOrganizationSecured\",\"cmdType\": \"secured\",\"call\": \"/organization/v3/organizations/{organizationId}\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.organization.v1+json\"},\n        {cmd: \"getPasswordPolicySecured\",\"cmdType\": \"secured\",\"call\": \"/authn/v4/passwords/policies/{policyId}\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.password.policy.v1+json\"},\n        {cmd: 'grantClaims',accepts: 'application/vnd.com.covisint.platform.package.grant.claim.v1+json',contentType:\"application/vnd.com.covisint.platform.package.grant.claim.v1+json\",call: '/service/v3/packages/grants/claims',type: 'PUT' },\n        {cmd: 'initiateRegistration', cmdType: 'unsecured', call: '/registration/v1/registrations/open/initiate', type: 'GET', accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json'},\n        {cmd: 'initiateSecuredRegistration', cmdType: 'unsecured', call: '/registration/v1/registrations/securedInvite/initiate/{id}', type: 'GET', accepts: 'application/vnd.com.covisint.platform.person.invitation.v1+json'},\n        {cmd: 'createRegistrationNonce',cmdType: 'nonce',call:'/registration/v1/registrations/persons/registration',type:'POST',accepts:'application/vnd.com.covisint.platform.person.password.account.v1+json',contentType:'application/vnd.com.covisint.platform.person.password.account.v1+json'},\n        {cmd: 'createRegistrationRequestNonceWithPkg',cmdType: 'nonce',call:'/registration/v1/registrations/persons/requests',type:'POST',accepts:'application/vnd.com.covisint.platform.person.request.v1+json',contentType:'application/vnd.com.covisint.platform.person.request.v1+json'},\n        {cmd: 'approvePersonRegistrationRequest', call:'/registration/v1/person/requests/tasks/approve', type:'POST', accepts:'application/vnd.com.covisint.platform.person.request.v1+json'},\n        {cmd: 'denyPersonRegistrationRequest', call:'/registration/v1/person/requests/tasks/deny', type:'POST', accepts:'application/vnd.com.covisint.platform.person.request.v1+json'},\n        {cmd: 'validateRegistrationNonce',cmdType:'nonce',call: '/registration/v1/registrations/persons/registration/validate', type:'POST', accepts: 'text/plain'},\n        //{cmd: 'getOrganizationNonce',cmdType:'nonce',call: '/registration/v1/registrations/organizations/{id}', type:'GET', accepts: 'application/vnd.com.covisint.platform.organization.v1+json'},\n        {cmd: 'getPasswordPolicyNonce',cmdType:'nonce',call: '/registration/v1/registrations/passwords/policies/{id}', type:'GET', accepts: 'application/vnd.com.covisint.platform.password.policy.v1+json'},\n        {cmd: 'getAttributeTemplatesNonce',cmdType:'nonce',call: '/registration/v1/registrations/attributeTemplates', type:'GET', accepts: 'application/vnd.com.covisint.platform.attribute.template.v1+json'},\n        {cmd: \"getOrganizationPackagesSecured\",\"cmdType\": \"secured\",\"call\": \"/service/v3/organizations/{organizationId}/packages\",\"type\": \"GET\",\"accepts\": \"application/vnd.com.covisint.platform.package.grant.v1+json\"},\n        {cmd: \"validatePasswordSecured\",call: \"/person/v3/persons/password/validate\",type: \"POST\",accepts: \"application/vnd.com.covisint.platform.password.validation.response.v1+json\",\"contentType\": \"application/vnd.com.covisint.platform.password.validation.v1+json\"},\n        {cmd: \"getPackageRequestsCount\",call: \"/service/v3/requests/count\",type: \"GET\",accepts: \"text/plain\"},\n        {cmd: \"getOrganizationPackagesCount\",call: \"/service/v3/organizations/{organizationId}/packages/count\",type: \"GET\",accepts: \"text/plain\"},\n        {cmd: \"getRegistrationRequestsCount\",call: \"/registration/v1/person/requests/count\",type: \"GET\",accepts: \"text/plain\"},\n        {cmd: \"getPackagesRequestedCount\",call: \"/service/v3/persons/{personId}/packages/count\",type: \"GET\",accepts: \"text/plain\"},\n        {cmd: 'validatePasswordNonce',cmdType:'nonce',call: '/registration/v1/registrations/persons/password/validate', type:'POST', accepts: 'application/vnd.com.covisint.platform.password.validation.response.v1+json',contentType:'application/vnd.com.covisint.platform.password.validation.v1+json'}\n\n\n    ];\n\n    return calls\n\n})\n\r\nangular.module('common')\n.factory('DataStorage', (API, localStorageService) => {\n\n    let storage = localStorageService.get('dataStorage') || {}\n    let dataStorage = {}\n\n    const initStorageIfUndefined = () => {\n        if (!storage[API.getUser()]) {\n            storage[API.getUser()] = {}\n        }\n    }\n\n    const saveToLocaStorage = () => {\n        localStorageService.set('dataStorage', storage)\n    }\n\n    /****************************************\n        FOR OBJECT AND ARRAY TYPE DATA\n    ****************************************/\n\n    // completely overrides a type\n    dataStorage.setType = (type, data) => {\n        initStorageIfUndefined()\n        storage[API.getUser()][type] = data\n        saveToLocaStorage()\n    }\n\n    dataStorage.getType = (type) => {\n        if (!storage[API.getUser()]) {\n            return undefined\n        }\n        return storage[API.getUser()][type]\n    }\n\n    dataStorage.deleteType = (type) => {\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\n            return\n        }\n        delete storage[API.getUser()][type]\n        saveToLocaStorage()\n    }\n\n    // deletes the storage for just the currently logged in user\n    dataStorage.deleteUserStorage = () => {\n        if (storage[API.getUser()]) {\n            delete storage[API.getUser()]\n        }\n        saveToLocaStorage()\n    }\n\n    // deletes the storage for every user in local storage\n    dataStorage.clear = () => {\n        storage = {}\n        saveToLocaStorage()\n    }\n\n    dataStorage.getUserStorage = () => storage[API.getUser()]\n\n    /****************************************\n        FOR ARRAY TYPE DATA ONLY\n    ****************************************/\n\n    // appends to a certain type\n    // NOTE: Make sure to use data that you can later distinguish between using dataThatMatches\n    // I recommend using replaceDataThatMatches instead unless you know what you're doing\n    dataStorage.appendToType = (type, data) => {\n        initStorageIfUndefined()\n        if (!storage[API.getUser()][type]) {\n            storage[API.getUser()][type] = [data]\n        } \n        else if (!_.isArray(storage[API.getUser()][type])) {\n            throw new Error('Tried appending to an existing data type that is not an array in dataStorage.')\n            return\n        } \n        else {\n            storage[API.getUser()][type].push(data)\n        }\n        saveToLocaStorage()\n    }\n\n    // returns ALL data that matches against a given comparison or undefined if no results\n    dataStorage.getDataThatMatches = (type, comparison) => {\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\n            return undefined\n        } \n        else if (!_.isArray(storage[API.getUser()][type])) {\n            throw new Error('Tried using DataStorage.getDataThatMatches on a type that isn\\'t an array. Use .getType(type) instead.')\n            return\n        } \n        else {\n            const matches = storage[API.getUser()][type].filter(x => {\n                return _.isMatch(x, comparison)\n            })\n            if (matches.length > 0) {\n                return matches\n            } \n            else {\n                return undefined\n            }\n        }\n    }\n\n    // replaces all data that matches against a certain comparison and appends\n    // new data to that type's array\n    dataStorage.replaceDataThatMatches = (type, comparison, newData) => {\n        dataStorage.deleteDataThatMatches(type, newData)\n        dataStorage.appendToType(type, newData)\n    }\n\n    dataStorage.deleteDataThatMatches = (type, comparison) => {\n        if (!storage[API.getUser()] || !storage[API.getUser()][type]) {\n            return\n        } \n        else if (!_.isArray(storage[API.getUser()][type])) {\n            throw new Error('Tried using DataStorage.deleteDataThatMatches on a type that isn\\'t an array. Use .deleteType(type) instead.')\n            return\n        } \n        else {\n            storage[API.getUser()][type] = storage[API.getUser()][type].filter(x => {\n                return !_.isMatch(x, comparison)\n            })\n        }\n        saveToLocaStorage()\n    }\n\n    return dataStorage\n})\n\r\nangular.module('common')\n.factory('Languages',['$cuiI18n','LocaleService',function($cuiI18n,LocaleService){\n\n    var languages=$cuiI18n.getLocaleCodesAndNames();\n\n    return {\n        all:languages,\n        getCurrentLanguageCode : function(){\n            if (LocaleService.getLocaleCode().indexOf('_')>-1) {\n                return LocaleService.getLocaleCode().split('_')[0];\n            } else {\n                return LocaleService.getLocaleCode();\n            }\n        }\n    };\n}]);\r\nangular.module('common')\n.factory('Loader', (SharedService) => {\n    const Loader = Object.create(SharedService)\n    Loader.details = Object.assign({}, Loader.details)\n    Loader.for = Loader.details\n    return Loader\n})\n\r\nangular.module('common')\n.factory('Menu', (snapRemote, $rootScope, $window) => {\n\n    const shouldShowMobileNav = () => {\n        if ($window.innerWidth >= 1000) {\n            snapRemote.close()\n        }\n    }\n\n    // Fixes issue where opening up the mobile menu and then expanding into desktop mode \n    // would leave all content pushed to the right.\n    $window.onresize = _.debounce(function() {\n        shouldShowMobileNav()\n    }, 1000)\n\n    return {\n        desktop: {\n            state: 'open', // default state for desktop menu\n            enabled: true,\n            open: function() {\n                this.state = 'closed'\n            },\n            close: function() {\n                this.state = 'closed'\n            },\n            toggle: function() { \n                this.state === 'open' ? this.state = 'closed' : this.state = 'open' \n            },\n            hide: function() {\n                this.enabled = false\n            },\n            show: function() {\n                this.enabled = true\n            }\n        },\n\n        mobile: {\n            state: 'closed', // default state for mobile menu\n            enabled: true,\n            open: function() {\n                this.state = 'open'\n            },\n            close: function() {\n                this.state = 'close'\n            },\n            toggle: function() {\n                this.state === 'open' ? this.state = 'closed' : this.state = 'open'\n            },\n            hide: function() {\n                this.enabled = false\n            },\n            show: function() {\n                this.state = true\n            }\n        },\n\n        handleStateChange: function(stateMenuOptions){\n            if (!angular.isDefined(stateMenuOptions)){\n                this.desktop.show()\n                this.mobile.show()\n            }\n            else {\n                (angular.isDefined(stateMenuOptions.desktop) && stateMenuOptions.desktop=== false)? this.desktop.hide() : this.desktop.show()\n                (angular.isDefined(stateMenuOptions.mobile) && stateMenuOptions.mobile=== false)? this.mobile.hide() : this.mobile.show()\n            }\n        }\n    }\n})\n\r\nangular.module('common')\n.factory('Organization', (API, $q) => {\n\n\tconst factoryName = 'organizationFactory.'\n\n\tconst getOrganizationAdmins = (organizationId) => {\n\t\tconst defer = $q.defer()\n\n\t\tAPI.cui.getOrganizationSecurityAdmins({organizationId: organizationId})\n\t\t.done(response => defer.resolve(response))\n\t\t.fail(error => defer.reject(error))\n\n\t\treturn defer.promise\n\t}\n\n\tconst getOrganizationPasswordPolicy = (policyId) => {\n\t\tconst defer = $q.defer()\n\n\t\tAPI.cui.getPasswordPolicy({policyId: policyId})\n\t\t.done(response => defer.resolve(response))\n\t\t.fail(error => defer.reject(error))\n\n\t\treturn defer.promise\n\t}\n\n\tconst getOrganizationAuthenticationPolicy = (policyId) => {\n\t\tconst defer = $q.defer()\n\n\t\tAPI.cui.getAuthenticationPolicy({policyId: policyId})\n\t\t.done(response => defer.resolve(response))\n\t\t.fail(error => defer.reject(error))\n\n\t\treturn defer.promise\n\t}\n\n\tconst getOrganization = (organizationId) => {\n\t\treturn API.cui.getOrganizationWithAttributes({organizationId:organizationId})\n\t}\n\n\tconst initOrganizationProfile = (organizationId, policyId, authPolicyId) => {\n\t\tconst defer = $q.defer()\n\t\tconst organizationProfile = {}\n\t\tconst callsToComplete = 3\n\t\tlet callsCompleted = 0\n\n\t\tgetOrganizationAdmins(organizationId)\n\t\t.then(response => organizationProfile['admins'] = response)\n\t\t.finally(() => {\n\t\t\tcallsCompleted += 1\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\n\t\t})\n\n\t\tgetOrganizationPasswordPolicy(policyId)\n\t\t.then(response => organizationProfile['passwordPolicy'] = response)\n\t\t.finally(() => {\n\t\t\tcallsCompleted += 1\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\n\t\t})\n\n\t\tgetOrganizationAuthenticationPolicy(authPolicyId)\n\t\t.then(response => organizationProfile['authenticationPolicy'] = response)\n\t\t.finally(() => {\n\t\t\tcallsCompleted += 1\n\t\t\tif (callsCompleted === callsToComplete) defer.resolve(organizationProfile)\n\t\t})\n\n\t\treturn defer.promise\n\t}\n\n\treturn {\n\t\tgetOrganizationAdmins: getOrganizationAdmins,\n\t\tgetOrganizationPasswordPolicy: getOrganizationPasswordPolicy,\n\t\tgetOrganizationAuthenticationPolicy:getOrganizationAuthenticationPolicy,\n\t\tgetOrganization:getOrganization,\n\t\tinitOrganizationProfile: initOrganizationProfile\n\t}\n\n})\n\r\nangular.module('common')\n.factory('PersonAndOrgRequest', (API, APIError, CommonAPI, $q) => {\n\t'use strict'\n\n\t/*\n\t\tUse this service as a helper when dealing with person requests.\n\n\t\tAllows you to get a person's registration request or a wrapper call that also gets you the person's and their\n\t\torganization's data.\n\t*/\n\n\tconst PersonAndOrgRequestFactory = {}\n\tconst errorName = 'PersonAndOrgRequestFactory.'\n\n\t/****************************************\n\t\t\t\tService Functions\n\t****************************************/\n\n\t// Returns the registration request associated with the userId\n\tPersonAndOrgRequestFactory.getPersonRegistrationRequest = (userId) => {\n\t\tconst defer = $q.defer()\n\n\t\tAPI.cui.getPersonRegistrationRequest({qs: [['registrant.id', userId]]})\n\t\t.done(registrationResponse => {\n\t\t\tdefer.resolve(registrationResponse[0])\n\t\t})\n\t\t.fail(err => {\n\t\t\tconsole.error('Failed getting user\\'s registration request')\n\t\t\tAPIError.onFor(errorName + 'getRegistrationRequest')\n\t\t\tdefer.reject(err)\n\t\t})\n\n\t\treturn defer.promise\n\t}\n\n\tPersonAndOrgRequestFactory.getOrgRegistrationRequest = (organizationId) => {\n\t\tconst defer = $q.defer()\n\n\t\tAPI.cui.getOrgRegistrationRequests({qs: [['organization.id', organizationId]]})\n\t\t.done(registrationResponse => {\n\t\t\tdefer.resolve(registrationResponse[0])\n\t\t})\n\t\t.fail(err => {\n\t\t\tconsole.error('Failed getting organization\\'s registration request')\n\t\t\tAPIError.onFor(errorName + 'getRegistrationRequest')\n\t\t\tdefer.reject(err)\n\t\t})\n\n\t\treturn defer.promise\n\t}\n\n\t/*\n\t\tWrapper call for: \tPersonRequest.getPersonRegistrationRequest()\n\t\t\t\t\t\t\tCommonAPI.getPerson()\n\t\t\t\t\t\t\tCommonAPI.getOrganization()\n\t*/\n\tPersonAndOrgRequestFactory.getRegistrationRequestData = (userId, organizationId, type) => {\n\t\tconst defer = $q.defer()\n\t\tlet callsCompleted = 0\n\t\tlet requestData = {}\n\n\t\tif (type==='person') {\n\t\t\tPersonAndOrgRequestFactory.getPersonRegistrationRequest(userId)\n\t\t\t.then(registrationRequest => {\n\t\t\t\trequestData.request = registrationRequest\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tcallsCompleted += 1\n\t\t\t\tif (callsCompleted === 3) {\n\t                defer.resolve(requestData);\n\t            }\n\t\t\t})\n\t\t}\n\t\telse{\n\t\t\tPersonAndOrgRequestFactory.getOrgRegistrationRequest(organizationId)\n\t\t\t.then(registrationRequest => {\n\t\t\t\trequestData.request = registrationRequest\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tcallsCompleted += 1\n\t\t\t\tif (callsCompleted === 3) {\n\t                defer.resolve(requestData);\n\t            }\n\t\t\t})\n\t\t}\n\n\t\tCommonAPI.getPerson(userId)\n\t\t.then(personData => {\n\t\t\trequestData.personData = personData\n\t\t})\n\t\t.finally(() => {\n\t\t\tcallsCompleted += 1\n\t\t\tif (callsCompleted === 3) {\n                defer.resolve(requestData);\n            }\t\n\t\t})\n\n\t\tCommonAPI.getOrganization(organizationId)\n\t\t.then(organizationData => {\n\t\t\trequestData.organization = organizationData\n\t\t})\n\t\t.finally(() => {\n\t\t\tcallsCompleted += 1\n\t\t\tif (callsCompleted === 3) {\n                defer.resolve(requestData);\n            }\n\t\t})\n\t\t\n\t\treturn defer.promise\n\t}\n\n\t// Provided a decision ('approved' or 'denied') and the person request object\n\t// Handles the approval/denial of the person request\n\tPersonAndOrgRequestFactory.handleRequestApproval = (decision, request) => {\n\t\tlet data = [['requestId', request.id]]\n\n\t\tif (decision === 'approved') {\n\t\t\tAPI.cui.approvePersonRegistration({qs: data})\n\t\t}\n\t\telse if (decision === 'denied') {\n\t\t\tif (request.rejectReason) {\n\t\t\t\tdata.push(['reason', request.rejectReason])\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('Requires a decision of \"approved\" or \"denied\" and the request object.')\n\t\t}\n\t}\n\n\treturn PersonAndOrgRequestFactory\n\n})\n\r\nangular.module('common')\n.factory('PersonRequest', (API, APIError, CommonAPI, $q) => {\n\t'use strict'\n\n\t/*\n\t\tUse this service as a helper when dealing with person requests.\n\n\t\tAllows you to get a person's registration request or a wrapper call that also gets you the person's and their\n\t\torganization's data.\n\t*/\n\n\tconst personRequestFactory = {}\n\tconst errorName = 'PersonRequestFactory.'\n\n\t/****************************************\n\t\t\t\tService Functions\n\t****************************************/\n\n\t// Returns the registration request associated with the userId\n\tpersonRequestFactory.getPersonRegistrationRequest = (userId) => {\n\t\tconst defer = $q.defer()\n\n\t\tAPI.cui.getPersonRegistrationRequest({qs: [['registrant.id', userId]]})\n\t\t.done(registrationResponse => {\n\t\t\tdefer.resolve(registrationResponse[0])\n\t\t})\n\t\t.fail(err => {\n\t\t\tconsole.error('Failed getting user\\'s registration request')\n\t\t\tAPIError.onFor(errorName + 'getRegistrationRequest')\n\t\t\tdefer.reject(err)\n\t\t})\n\n\t\treturn defer.promise\n\t}\n\n\t/*\n\t\tWrapper call for: \tPersonRequest.getPersonRegistrationRequest()\n\t\t\t\t\t\t\tCommonAPI.getPerson()\n\t\t\t\t\t\t\tCommonAPI.getOrganization()\n\t*/\n\tpersonRequestFactory.getPersonRegistrationRequestData = (userId, organizationId) => {\n\t\tconst defer = $q.defer()\n\t\tlet callsCompleted = 0\n\t\tlet requestData = {}\n\n\t\tpersonRequestFactory.getPersonRegistrationRequest(userId)\n\t\t.then(registrationRequest => {\n\t\t\trequestData.request = registrationRequest\n\t\t})\n\t\t.finally(() => {\n\t\t\tcallsCompleted += 1\n\t\t\tif (callsCompleted === 3) {\n                defer.resolve(requestData);\n            }\n\t\t})\n\n\t\tCommonAPI.getPerson(userId)\n\t\t.then(personData => {\n\t\t\trequestData.personData = personData\n\t\t})\n\t\t.finally(() => {\n\t\t\tcallsCompleted += 1\n\t\t\tif (callsCompleted === 3) {\n                defer.resolve(requestData);\n            }\t\n\t\t})\n\n\t\tCommonAPI.getOrganization(organizationId)\n\t\t.then(organizationData => {\n\t\t\trequestData.organization = organizationData\n\t\t})\n\t\t.finally(() => {\n\t\t\tcallsCompleted += 1\n\t\t\tif (callsCompleted === 3) {\n                defer.resolve(requestData);\n            }\n\t\t})\n\t\t\n\t\treturn defer.promise\n\t}\n\n\t// Provided a decision ('approved' or 'denied') and the person request object\n\t// Handles the approval/denial of the person request\n\tpersonRequestFactory.handleRequestApproval = (decision, request) => {\n\t\tlet data = [['requestId', request.id]]\n\n\t\tif (decision === 'approved') {\n\t\t\tAPI.cui.approvePersonRegistration({qs: data})\n\t\t}\n\t\telse if (decision === 'denied') {\n\t\t\tif (request.rejectReason) {\n\t\t\t\tdata.push(['reason', request.rejectReason])\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn API.cui.denyPersonRegistration({qs: data})\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthrow new Error('Requires a decision of \"approved\" or \"denied\" and the request object.')\n\t\t}\n\t}\n\n\treturn personRequestFactory\n\n})\n\r\nangular.module('common')\n.factory('Registration', (API, APIError, Base, $q) => {\n\n    const self = {}\n    const pub = {}\n\n    // Helper functions to build out the person and request objects needed for registration\n    const build = {\n        person: function(registrationData) {\n            const personData = Object.assign({}, registrationData.profile)\n\n            personData.addresses[0].country = registrationData.userCountry.originalObject.code\n            personData.organization = { id: registrationData.organization.id }\n            personData.language=registrationData.profile.language.id\n            personData.timezone=registrationData.profile.timezone.id\n\n            if (personData.phones[0]) {\n                personData.phones[0].type = 'main'\n            }\n\n            return personData\n        },\n        passwordAccount: function(registrationData) {\n            return {\n                version: '1',\n                username: registrationData.login.username,\n                password: registrationData.login.password,\n                passwordPolicy: registrationData.organization.passwordPolicy,\n                authenticationPolicy: registrationData.organization.authenticationPolicy\n            }\n        },\n        securityQuestionAccount: function(registrationData) {\n            return {\n                version: '1',\n                questions: [{\n                    question: {\n                        id: registrationData.login.question1.id,\n                        type: 'question',\n                        realm: registrationData.organization.realm\n                    },\n                    answer: registrationData.login.challengeAnswer1,\n                    index: 1\n                },\n                {\n                    question: {\n                        id: registrationData.login.question2.id,\n                        type: 'question',\n                        realm: registrationData.organization.realm\n                    },\n                    answer: registrationData.login.challengeAnswer2,\n                    index: 2\n                }]\n            }\n        }, \n        walkupSubmit: function(registrationData) {\n            const _registrationData = Object.assign({}, registrationData)\n\n            return {\n                person: this.person(_registrationData),\n                passwordAccount: this.passwordAccount(_registrationData),\n                securityQuestionAccount: this.securityQuestionAccount(_registrationData)\n            }\n        },\n        InvitedSubmit: function(registrationData,inviteId) {\n            const _registrationData = Object.assign({}, registrationData)\n\n            return {\n                person: this.person(_registrationData),\n                passwordAccount: this.passwordAccount(_registrationData),\n                securityQuestionAccount: this.securityQuestionAccount(_registrationData),\n                inviteId:inviteId\n            }\n        },\n        servicePackageRequest: function(personId, personRealm, packageData,requestReason) {\n            let request = {\n                registrant: {\n                    id: personId,\n                    type: 'person',\n                    realm: personRealm\n                },\n                justification: requestReason||'User Walkup Registration'\n            }\n\n            if (packageData && packageData.selected) {\n                request.packages = []\n                angular.forEach(packageData.selected, function(servicePackage) {\n                    // userWalkup.applications.selected is an array of strings that looks like\n                    // ['<appId>,<packageId>,<appName>']\n                    request.packages.push({\n                        id: servicePackage.split(',')[1],\n                        type: 'servicePackage'\n                    })\n                })\n                request.packages=_.uniqBy(request.packages,'id')    \n            }\n\n            return request\n        }\n    }\n\n    /**\n     * this method makes sure to make the call but before it calls cui.initiateNonce\n     * @param method method name\n     * @param args method arguments\n     * @returns {*} promise\n     */\n    self.makeNonceCall = ( method, ...args )=>{\n        const deferred = $.Deferred()\n        const tag = \"registration/self/makeNonceCall\"\n\n        API.cui.initiateNonce()\n        .then(res=>{\n\n            API.cui[method].apply( API.cui, args )\n            .then(result=>{\n                deferred.resolve(result)\n            })\n            .fail((error)=>{\n                deferred.reject(error)\n            })\n\n        })\n        .fail((error)=>{\n            console.error( tag, error )\n            deferred.reject(error)\n        })\n\n        return deferred.promise()\n    }\n\n    /**\n     * TODO: once the promise gets an error message, we are going to resolve as false. This is temporary.\n     * Makes an api call to know if the registrating user's username or email address\n     * appear already been taken.\n     * @param stringParams a param array having either or both userName and emalAddress.\n     * @returns {{promise, valid: (function(*=)), catch: (function(*))}}\n     */\n    self.isUsernameOrEmailTaken = stringParams => {\n        const tag = \"registration/self/isUsernameOrEmailTaken\";\n\n        return {\n            promise:(() => {\n                const defered = $q.defer()\n\n                if( stringParams ){\n\n                    self.makeNonceCall( \"validateUsernameEmailNonce\", {qs:stringParams} ).then( res => {\n                        defered.resolve( true )\n                    }).fail( error => {\n                        defered.resolve( false )\n                        console.error( tag + \".error\", error )\n                    })\n                }else{\n                    defered.resolve( true )\n                }\n\n                return defered.promise\n            })(),\n            valid: res => {\n                return res\n            },\n            catch: error => {\n                // do something with the error here\n                console.error( tag + \".catch\", \"there is an error, :) \")\n            }\n        }\n    }\n\n    pub.getOrganizations=()=>{\n        return self.makeNonceCall( \"getOrganizationsNonce\" )\n    }\n\n    pub.getSecurityQuestions=()=>{\n        return self.makeNonceCall( \"getSecurityQuestionsNonce\" )\n    }\n\n    // Returns organizations and security questions for the realm.\n    // Both must resolve for the walkup registration to work.\n    pub.initWalkupRegistration = (pageSize) => {    \n        const defer = $q.defer()\n        const data = {}\n        \n        APIError.offFor('RegistrationFactory.initWalkup')\n\n        API.cui.initiateNonce()\n        .then(() => {\n            //  2-13-2017 filter resuts by status is not available for count now.\n            return API.cui.getOrganizationsCountNonce()\n        })\n        .then((res) => {\n            data.organizationCount=res\n            return API.cui.getOrganizationsNonce({qs:[['page',1],['pageSize',pageSize],['status','active']]})\n        })\n        .then(res => {\n            data.organizations = res\n            return API.cui.getSecurityQuestionsNonce()\n        })\n        .then(res => {\n            data.securityQuestions = res\n            defer.resolve(data)\n        })\n        .fail(error => {\n            APIError.onFor('RegistrationFactory.initWalkup')\n            defer.reject(error)\n        })\n\n        return defer.promise\n    }\n    // validates invite and Returns Target organization\n    //Must resolve for the Invited registration to work.\n    pub.initInvitedRegistration= (encodedString) =>{\n        const defer = $q.defer()\n        const data = {}\n        \n        APIError.offFor('RegistrationFactory.initInvited')\n\n        API.cui.securedInitiate({invitationId:encodedString})\n        .then((res) => {\n            data.invitationData=res;\n            return API.cui.getOrganizationNonce({organizationId:res.targetOrganization.id})\n        })\n        .then(res => {\n            data.organization = res\n            return API.cui.getSecurityQuestionsNonce()\n        })\n        .then(res => {\n            data.securityQuestions = res\n            defer.resolve(data)\n        })\n        .fail(error => {\n            APIError.onFor('RegistrationFactory.initInvited')\n            defer.reject(error)\n        })\n\n        return defer.promise\n    }\n\n    pub.walkupSubmit = (registrationData) => {\n        const defer = $q.defer()\n        const submitData = build.walkupSubmit(registrationData)\n\n        API.cui.initiateNonce()\n        .then(() => {\n            return API.cui.postUserRegistrationNonce({data: submitData})\n        })\n        .then(res => {\n            const packageRequestData = build.servicePackageRequest(res.person.id, res.person.realm, registrationData.applications,registrationData.requestReason)\n            return API.cui.postPersonRequestNonce({data: packageRequestData})\n        })\n        .then(res => {\n            defer.resolve(res)\n        })\n        .fail(error => {\n            defer.reject(error)\n        })\n\n        return defer.promise\n    }\n\n    pub.invitedSubmit = (registrationData,encodedString,invitationId) => {\n        const defer = $q.defer()\n        const submitData = build.InvitedSubmit(registrationData,invitationId)\n\n        API.cui.securedInitiate({invitationId:encodedString})\n        .then(() => {\n            return API.cui.postUserRegistrationNonce({qs:[['inviteId',invitationId]],data: submitData})\n        })\n        .then(res => {\n            const packageRequestData = build.servicePackageRequest(res.person.id, res.person.realm, registrationData.applications,registrationData.requestReason)\n            return API.cui.postPersonRequestNonce({data: packageRequestData})\n        })\n        .then(res => {\n            defer.resolve(res)\n        })\n        .fail(error => {\n            defer.reject(error)\n        })\n\n        return defer.promise\n    }\n\n    pub.getOrgAppsByPage = (page, pageSize, organizationId) => {\n        return API.cui.getOrgAppsNonce({organizationId: organizationId, qs:[['page',page],['pageSize',pageSize]]})\n    }\n\n    pub.getOrgsByPageAndName = (page,pageSize,name) => {\n        if (name!==undefined) {\n            return self.makeNonceCall(\"getOrganizationsNonce\",{qs:[['page',page],['pageSize',pageSize],['status','active'],['name',name]]})\n        }\n        else{\n            return self.makeNonceCall(\"getOrganizationsNonce\",{qs:[['page',page],['pageSize',pageSize],['status','active']]})\n        }\n        \n    }\n\n    pub.selectOrganization = (organization,pageSize)=>{\n        const deferred = $.Deferred()\n        const results = {\n            grants: []\n        }\n\n        API.cui.initiateNonce()\n        .then(res => {\n            return API.cui.getOrgAppsCountNonce({organizationId: organization.id})\n        })\n        .then(res => {\n            results.appCount=res\n            return pub.getOrgAppsByPage(1,pageSize,organization.id)\n        })\n        .then(res => {\n            res.forEach(grant => {\n                if (grant.servicePackage.requestable) results.grants.push(grant)\n            })\n            return API.cui.getPasswordPoliciesNonce({policyId: organization.passwordPolicy.id})\n        })\n        .then(res => {\n            results.passwordRules = res.rules\n            deferred.resolve(results)\n        })\n        .fail( error=>{\n            deferred.reject(error)\n        })\n\n        return deferred.promise()\n    }\n\n    pub.getTac = (packageId) => {\n        const deferred = $q.defer()\n        self.makeNonceCall(\"getOrgTacOfPackage\",{packageId:packageId})\n        .then(res =>{\n            deferred.resolve(res);\n        })\n        .fail(err =>{\n            console.log(\"Error in fetching TaC for application \"+packageId)\n            console.log(err);\n            deferred.reject(err);\n        })\n        return deferred.promise;\n    }\n\n    pub.isUsernameTaken = name => {\n        return self.isUsernameOrEmailTaken( [['userName',name]] );\n    }\n\n    pub.isEmailTaken = email => {\n        return self.isUsernameOrEmailTaken( [['emailAddress',email]] );\n    }\n\n    return pub\n\n})\n\r\nangular.module('common')\n.service('SharedService', function () {\n    /*****\n        this service serves as an instantiable class\n        that can be extended to provide information throughout the app\n        using the base controller\n\n        How to use:\n        angular.module('myModule')\n        .factory/service/provider('MyProvider', function(SharedService){\n            const MyProvider = Object.create(SharedService)\n        })\n\n        MyProvider now has an object that serves as a data holder for switchable loaders, error messages etc.\n\n        methods\n        .onFor(property:String, <message>:String)\n            enables that property in the details object, setting the message associated with that property\n            if you use onFor for multiple properties without using \"offFor\" to disable them\n            there's a count that gets incremented, and that property will only be disabled once offFor\n            is called on that property n times, where n is the amount of times it was enabled\n\n        .offFor(property:String)\n\n        .toggleFor(property:String, <message>:String)\n\n        .for\n            this holds a reference to the storage object, so that you can associate it with your base ctrl\n    *****/\n\n    this.details = {}\n\n    this.onFor = function (property, message) {\n        if (this.details[property]) {\n            this.details[property].count\n                ? this.details[property].count += 1\n                : this.details[property].count = 2 // count is only defined if there's more than 1\n            if (message) {\n                this.details[property].message = message;\n            }\n        } else {\n            this.details[property] = {\n                status: true,\n                message\n            }\n        }\n    }\n\n    this.offFor = function (property) {\n        if (!this.details[property]) {\n            return;\n        } else if (!this.details[property].count || this.details[property].count===1) {\n            delete this.details[property];\n        } else {\n            this.details[property].count -= 1;\n        }\n    }\n\n    this.toggleFor = function (property,message) {\n        if (this.details[property]) {\n            delete this.details[property];\n        } else {\n            this.details[property] = {\n                status:true,\n                message\n            }\n        }\n    }\n\n    this.clearAll = function() {\n        for (const key in this.details) delete this.details[key]\n    }\n\n    this.for = this.details\n\n    return this\n})\r\nangular.module('common')\n.factory('Sort',['$filter',function($filter) {\n    return {\n        listSort: function(listToSort, sortType, order) {\n            listToSort.sort(function(a, b) {\n                if (sortType === 'alphabetically') { \n                    if (a.name[0]) {\n                        a = $filter('cuiI18n')(a.name).toUpperCase(),\n                        b = $filter('cuiI18n')(b.name).toUpperCase();    \n                    }\n                    else {\n                        a = a.name.given.toUpperCase(),\n                        b = b.name.given.toUpperCase();\n                    }\n                }\n                else if (sortType=== 'date') { \n                    if (a.dateCreated) {\n                        a = a.dateCreated, b = b.dateCreated;\n                    }\n                    else {\n                        a = a.creation, b = b.creation;\n                    }\n                }\n                else { \n                    a = a.status, b = b.status; \n                }\n\n                if ( a < b ) {\n                    if (order) {\n                        return 1;\n                    } else {\n                        return -1;\n                    }\n                }\n                else if (a > b) {\n                    if (order) {\n                        return -1;\n                    } else {\n                        return 1;\n                    }\n                } else {\n                    return 0;\n                }\n            });\n        }\n    };\n}]);\n\r\nangular.module('common')\n.factory('Theme', () => {\n\n\t/*\n\t*\tUtilize this factory when you need to set styles on the top-level element based on the current router state.\n\t*\t\n\t*\tFull documentation on how to utilize and or customize the application with this factory can be found in:\n\t*\t`./docs/features/factories/Theme.md`\n\t*/\n\n\tlet activeTheme\n\tlet defaultTheme\n\n\tconst getTheme = () => {\n\t\treturn activeTheme\n\t}\n\n\tconst setTheme = (cssClass) => {\n\t\tactiveTheme = cssClass\n\t}\n\n\tconst getDefaultTheme = () => {\n\t\treturn defaultTheme\n\t}\n\n\tconst setDefaultTheme = (cssClass) => {\n\t\tdefaultTheme = cssClass\n\t}\n\n\tconst clearActiveTheme = () => {\n\t\tactiveTheme = ''\n\t}\n\n\tconst useDefaultTheme = () => {\n\t\tactiveTheme = defaultTheme\n\t}\n\n\tconst setActiveDefaultTheme = (cssClass) => {\n\t\tdefaultTheme = cssClass\n\t\tactiveTheme = cssClass\n\t}\n\n    return {\n    \tget: getTheme,\n    \tset: setTheme,\n    \tgetDefault: getDefaultTheme,\n    \tsetDefault: setDefaultTheme,\n    \tuseDefault: useDefaultTheme,\n    \tsetActiveDefault: setActiveDefaultTheme,\n    \tclear: clearActiveTheme\n    }\n\n})\n\r\nangular.module('common')\n.factory('Timezones', function($http, $rootScope, $translate) {\n\n    let timezones = []\n\n    const GetTimezones = (locale) => {\n        return $http.get(appConfig.languageResources.url + 'timezones/' + locale + '.json')\n    }\n\n    const setTimezones = (language) => {\n        language = language || 'en'\n\n        if (language.indexOf('_') > -1) {\n            language = language.split('_')[0]\n        }\n\n        GetTimezones(language)\n        .then(res => {\n            timezones.length = 0\n\n            res.data.forEach(timezone => {\n                timezones.push(timezone)\n            })\n        })\n        .catch(function(err) {\n            console.log(err)\n        })\n    }\n\n    const getTimezoneById = (id) => {\n        if (!id) {\n            return ''\n        }\n\n        return _.find(timezones, function(timezone) {\n            return timezone.id === id\n        }).name\n    }\n\n    $rootScope.$on('languageChange', function(e, args) {\n        setTimezones(args)\n    })\n\n    setTimezones($translate.proposedLanguage())\n\n    return {\n        all: timezones,\n        timezoneById: getTimezoneById\n    }\n})\n\r\nangular.module('common')\n.factory('User', ($rootScope) => {\n\n    /*\n        This factory is intended to store data/logic pertaining to the logged in user only.\n        This data is populated right after logon (this can be found in the API.factory.js \n        inside the populateUserInfo method). The application will not run if those endpoints\n        fail.\n    */\n\n    let user = {\n        entitlements: undefined,\n        roles: undefined\n    }\n\n    return {\n        set : (newUser) => {\n            angular.merge(user, newUser);\n        },\n\n        get : () => user.cuid || '[cuid]',\n\n        setEntitlements : (newEntitlements) => {\n            user.entitlements ? user.entitlements = user.entitlements.concat(newEntitlements) : user.entitlements = newEntitlements\n        },\n\n        getEntitlements : () => user.entitlements,\n\n        setRoles : (newRoles) => {\n            user.roles ? user.roles = user.roles.concat(newRoles) : user.roles = newRoles\n        },\n\n        getRoles : () => user.roles,\n\n        user\n    }\n\n})\n\r\nangular.module('common')\n.factory('UserHistory', function(API, APIError, LocaleService, $q, $timeout) {\n\n    const errorName = 'userHistoryFactory.'\n\n    const UserHistory = {\n        getTodaysDate:function(){\n            let today=new Date()\n            let dd=today.getDate()\n            let yyyy=today.getFullYear()\n            let mmm=today.toString().substring(4,7);\n            return dd+'-'+mmm+'-'+yyyy\n        },\n\n        initStatusHistory: function(userId) {\n            let defer = $q.defer()\n\n            API.cui.getPersonDetailedStatusHistory({qs : [\n                ['userId', userId], \n                ['startDate','01-Jan-2016'],\n                ['lastDate',UserHistory.getTodaysDate()]\n            ]})\n            .done(res => {               \n                defer.resolve(res)\n            })\n            .fail(err => {\n                console.error('Failed getting user status information', err)\n                APIError.onFor(errorName + 'initStatusHistory')\n                $timeout(() => {\n                    APIError.offFor(errorName + 'initStatusHistory')\n                }, 5000)\n                defer.reject(err)\n            })\n            return defer.promise\n        },\n\n        initPasswordChangeHistory: function(userId) {\n            let defer = $q.defer()\n            API.cui.getPasswordCangeHistory({personId:userId})\n            .then(res => {                \n                defer.resolve(res)\n            })\n            .fail(err => {\n                console.error('Failed getting Password change history', err)\n                APIError.onFor(errorName + 'initPasswordChangeHistory')\n                $timeout(() => {\n                    APIError.offFor(errorName + 'initPasswordChangeHistory')\n                }, 5000)\n                defer.reject(err)\n            })\n            return defer.promise\n        },\n\n        initUserHistory: function(userId, organizationId) {\n            let defer = $q.defer()\n            let history = {}\n            let callsCompleted = 0\n            const callsToComplete = 2\n\n            UserHistory.initStatusHistory(userId)\n            .then(res => {\n                history.statusHistory=res;\n            })\n            .finally(() => {\n                callsCompleted += 1\n                if (callsCompleted === callsToComplete) defer.resolve(history)\n            })\n\n            UserHistory.initPasswordChangeHistory(userId)\n            .then(res => {\n                history.passwordChangeHistory=res;\n            })\n            .finally(() => {\n                callsCompleted += 1\n                if (callsCompleted === callsToComplete) defer.resolve(history)\n            })\n\n            return defer.promise\n        },\n\n        injectUI: function(history, $scope, personId) {\n            history.fail = false\n            history.success = false\n        }\n    }\n\n    return UserHistory\n})\n\r\nangular.module('common')\n.factory('UserList', (API, APIError, APIHelpers, $q) => {\n\n\tconst errorName = 'UserListFactory.'\n\n\tconst getUsers = (opts) => {\n\t\tconst defer = $q.defer()\n\n\t\tAPIError.offFor(errorName + 'getUsers')\n\n\t\tAPI.cui.getPersons(opts)\n\t\t.done(personResponse => {\n\t\t\tdefer.resolve(personResponse)\n\t\t})\n\t\t.fail(error => {\n\t\t\tconsole.error('Failed getting user list')\n\t\t\tAPIError.onFor(errorName + 'getUsers')\n\t\t\tdefer.reject(error)\n\t\t})\n\n\t\treturn defer.promise\n\t}\n\n\tconst getUserCount = (opts) => {\n\t\tconst defer = $q.defer()\n\n\t\tAPIError.offFor(errorName + 'getUserCount')\n\n\t\tAPI.cui.countPersons(opts)\n\t\t.done(countResponse => {\n\t\t\tdefer.resolve(countResponse)\n\t\t})\n\t\t.fail(error => {\n\t\t\tconsole.error('Failed getting user count')\n\t\t\tAPIError.onFor(errorName + 'getUserCount')\n\t\t\tdefer.reject(error)\n\t\t})\n\n\t\treturn defer.promise\n\t}\n\n\treturn {\n\t\tgetUsers: getUsers,\n\t\tgetUserCount: getUserCount\n\t}\n\n})\n\r\nangular.module('common')\n.factory('UserProfile', function(API, APIError, LocaleService, Timezones, $filter, $q, $timeout) {\n\n    const errorName = 'userProfileFactory.'\n\n    const UserProfile = {\n\n        setPhone:function(type,index){\n            var phone={};\n            phone.type=type;\n            phone.number=\"\";\n            return phone;\n        },\n\n        getTodaysDate:function(){\n            let today=new Date()\n            let dd=today.getDate()\n            let yyyy=today.getFullYear()\n            let mmm=today.toString().substring(4,7);\n            return dd+'-'+mmm+'-'+yyyy\n        },\n\n        initUser: function(userId) {\n            let defer = $q.defer()\n            let user = {}\n\n            API.cui.getPerson({ personId: userId })\n            .done(res => {\n                // If the person object has no addresses we need to initialize it\n                if (!res.addresses) {\n                    res.addresses = [{streets: []}];\n                }\n                //If there is no streets in address we need to initialie it\n                else if (!res.addresses[0].streets) {\n                    res.addresses[0].streets=[];\n                };\n                user.user = Object.assign({}, res)\n                user.tempUser = Object.assign({}, res)\n                //When user doesnot have any phones(data issue)\n                    if (!user.tempUser.phones) {\n                        user.tempUser.phones=[];\n                        user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\n                        user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\n                        user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\n                    }else{\n                        //When user have fax/mobile but not mobile\n                        if (user.tempUser.phones[0] && user.tempUser.phones[0].type!==\"main\") {\n                            if (user.tempUser.phones[0].type===\"fax\") {\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[0]);\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\n                                user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\n                            }else if (user.tempUser.phones[0].type===\"mobile\" && user.tempUser.phones[1]) {\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[1]);\n                                user.tempUser.phones[1]=angular.copy(user.tempUser.phones[0]);\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\n                            }else\n                            {\n                                user.tempUser.phones[1]=angular.copy(user.tempUser.phones[0]);\n                                user.tempUser.phones[0]=UserProfile.setPhone(\"main\",0);\n                                user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\n                            }\n                        }\n                        else if (user.tempUser.phones[1]) {\n                            if (user.tempUser.phones[1].type===\"fax\") {\n                                user.tempUser.phones[2]=angular.copy(user.tempUser.phones[1]);\n                                user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\n                            }else{\n                                if (!user.tempUser.phones[2]) {\n                                    user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\n                                };\n                            }\n                        }else{\n                            user.tempUser.phones[1]=UserProfile.setPhone(\"mobile\",1);\n                            user.tempUser.phones[2]=UserProfile.setPhone(\"fax\",2);\n                        }\n                    }\n                    angular.copy(user.tempUser, user.user);\n                defer.resolve(user)\n            })\n            .fail(err => {\n                console.error('Failed getting user information', err)\n                APIError.onFor(errorName + 'initUser')\n                $timeout(() => {\n                    APIError.offFor(errorName + 'initUser')\n                }, 5000)\n                defer.reject(err)\n            })\n            return defer.promise\n        },\n\n        initSecurityQuestions: function(userId) {\n            let defer = $q.defer()\n            let securityQuestions = {\n                userSecurityQuestions: {},\n                tempUserSecurityQuestions: {},\n                allSecurityQuestions: [],\n                allSecurityQuestionsDup: []\n            }\n\n            $q.all([\n                API.cui.getSecurityQuestionAccount({ personId: userId }), \n                API.cui.getSecurityQuestions()\n            ])\n            .then(res => {\n                angular.copy(res[0], securityQuestions.userSecurityQuestions)\n                angular.copy(res[0], securityQuestions.tempUserSecurityQuestions)\n                angular.copy(res[1], securityQuestions.allSecurityQuestions) \n                angular.copy(res[1], securityQuestions.allSecurityQuestionsDup)\n\n                securityQuestions.allSecurityQuestions.splice(0, 1)\n\n                let numberOfQuestions = securityQuestions.allSecurityQuestions.length\n                let numberOfQuestionsFloor = Math.floor(numberOfQuestions/2)\n\n                securityQuestions.allChallengeQuestions0 = securityQuestions.allSecurityQuestions.slice(0, numberOfQuestionsFloor)\n                securityQuestions.allChallengeQuestions1 = securityQuestions.allSecurityQuestions.slice(numberOfQuestionsFloor)\n\n                securityQuestions.challengeQuestionsTexts = UserProfile.selectTextsForQuestions(securityQuestions)\n\n                defer.resolve(securityQuestions)\n            })\n            .catch(err => {\n                console.error('Failed getting security question data', err)\n                APIError.onFor(errorName + 'initSecurityQuestions')\n                $timeout(() => {\n                    APIError.offFor(errorName + 'initSecurityQuestions')\n                }, 5000)\n                defer.reject(err)\n            })\n            return defer.promise\n        },\n\n        selectTextsForQuestions: function(securityQuestions) {\n            let challengeQuestionsTexts = []\n\n            angular.forEach(securityQuestions.userSecurityQuestions.questions, (userQuestion) => {\n                let question = _.find(securityQuestions.allSecurityQuestionsDup, (question) => {\n                    return question.id === userQuestion.question.id\n                })\n                challengeQuestionsTexts.push($filter('cuiI18n')(question.question))\n            })\n            return challengeQuestionsTexts\n        },\n\n        initPasswordPolicy: function(organizationId) {\n            let defer = $q.defer()\n            let passwordPolicy = {}\n\n            API.cui.getOrganization({ organizationId: organizationId })\n            .then(res => {\n                passwordPolicy.organization = res\n                return API.cui.getPasswordPolicy({policyId: res.passwordPolicy.id})\n            })\n            .then(res => {\n                passwordPolicy.passwordRules = res.rules\n                res.rules.forEach(rule => {\n                    if (rule.type === 'history') {\n                        passwordPolicy.numberOfPasswords = rule.numberOfPasswords\n                    }\n                })\n                defer.resolve(passwordPolicy)\n            })\n            .fail(err => {\n                console.error('Failed getting password policy data', err)\n                APIError.onFor(errorName + 'initPasswordPolicy')\n                $timeout(() => {\n                    APIError.offFor(errorName + 'initPasswordPolicy')\n                }, 5000)\n                defer.reject(err)\n            })\n            return defer.promise\n        },\n\n        initRegisteredDate: function(userId) {\n            const defer = $q.defer()\n            let lastDate=UserProfile.getTodaysDate();\n\n            API.cui.getPersonDetailedStatusHistory({qs : [\n                ['userId', userId], \n                ['startDate','01-Jan-2016'],\n                ['lastDate',lastDate]\n            ]})\n            .then(res => {\n                let activeStatusList=[];\n                res.forEach((status, index) => {\n                    if (status.status === 'ACTIVE') {\n                        activeStatusList.push(status)\n                    }\n                    if (res.length-1===index) {\n                        _.orderBy(activeStatusList, ['creation'], ['asc'])\n                        defer.resolve(activeStatusList[0].creation) \n                    }          \n                    \n                })\n            })\n            .fail(error => {\n                console.error('initRegisteredDate: There was an issue retrieving the registered date.')\n                APIError.onFor(errorName + 'initRegisteredDate')\n                $timeout(() => {\n                    APIError.offFor(errorName + 'initRegisteredDate')\n                }, 5000)\n                defer.reject(error)\n            })\n\n            return defer.promise\n        },\n\n        initUserProfile: function(userId, organizationId) {\n            let defer = $q.defer()\n            let profile = {}\n            let callsCompleted = 0\n            const callsToComplete = 4\n\n            UserProfile.initUser(userId)\n            .then(res => {\n                angular.merge(profile, res)\n            })\n            .finally(() => {\n                callsCompleted += 1\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\n            })\n\n            UserProfile.initSecurityQuestions(userId)\n            .then(res => {\n                angular.merge(profile, res)\n            })\n            .finally(() => {\n                callsCompleted += 1\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\n            })\n\n            UserProfile.initPasswordPolicy(organizationId)\n            .then(res => {\n                angular.merge(profile, res)\n            })\n            .finally(() => {\n                callsCompleted += 1\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\n            })\n\n            UserProfile.initRegisteredDate(userId)\n            .then(res => {\n                profile['registeredDate'] = res\n            })\n            .finally(() => {\n                callsCompleted += 1\n                if (callsCompleted === callsToComplete) defer.resolve(profile)\n            })\n\n            return defer.promise\n        },\n\n        buildPersonPasswordAccount: function(user, passwordAccount, organization) {\n            return {\n                version: '1',\n                username: user.username,\n                currentPassword: passwordAccount.currentPassword,\n                password: passwordAccount.password,\n                passwordPolicy: organization.passwordPolicy,\n                authenticationPolicy: organization.authenticationPolicy\n            }\n        },\n\n        injectUI: function(profile, $scope, personId) {\n            let userId\n\n            personId\n                ? userId = personId\n                : userId = API.getUser()\n\n            profile.saving = false\n            profile.fail = false\n            profile.success = false\n            profile.timezoneById = Timezones.timezoneById\n            profile.toggleOffFunctions = {}\n\n            profile.resetAllData = () => {\n                angular.copy(profile.userSecurityQuestions, profile.tempUserSecurityQuestions)\n                angular.copy(profile.user, profile.tempUser)\n            }\n\n            profile.toggleAllOff = () => {\n                angular.forEach(profile.toggleOffFunctions, function(toggleOff) {\n                    toggleOff()\n                })\n                profile.resetAllData()\n            }\n\n            profile.pushToggleOff = (toggleOffObject) => {\n                if (!profile.toggleOffFunctions) {\n                    profile.toggleOffFunctions = {}\n                }\n                profile.toggleOffFunctions[toggleOffObject.name] = toggleOffObject.function\n            }\n\n            profile.resetPasswordFields = () => {\n                profile.userPasswordAccount = {\n                    currentPassword: '',\n                    password: ''\n                }\n                profile.passwordRe = ''\n            }\n\n            profile.checkIfRepeatedSecurityAnswer = (securityQuestions, formObject) => {\n                securityQuestions.forEach((secQuestion, i) => {\n                    let securityAnswerRepeatedIndex = _.findIndex(securityQuestions, (secQuestionToCompareTo, z) => {\n                        return z !== i && secQuestion.answer && secQuestionToCompareTo.answer && secQuestion.answer.toUpperCase() === secQuestionToCompareTo.answer.toUpperCase()\n                    })\n                    if (securityAnswerRepeatedIndex > -1) {\n                        if (formObject['answer' + securityAnswerRepeatedIndex]) {\n                            formObject['answer' + securityAnswerRepeatedIndex].$setValidity('securityAnswerRepeated', false)\n                        }\n                        if (formObject['answer' + i]) {\n                            formObject['answer' + i].$setValidity('securityAnswerRepeated', false)\n                        }\n                    }\n                    else {\n                        if (formObject['answer' + i]) {\n                            formObject['answer' + i].$setValidity('securityAnswerRepeated', true)\n                        }\n                    }\n                })\n            }\n\n            profile.updatePerson = (section, toggleOff) => {\n                let tempUserWithoutLastLogin;\n                if (section) {\n                    profile[section] = { submitting: true }\n                }\n\n                if (!profile.userCountry) {\n                    profile.tempUser.addresses[0].country = profile.user.addresses[0].country;\n                } else {\n                    profile.tempUser.addresses[0].country = profile.userCountry.originalObject.code;\n                }\n\n                // [7/20/2016] Note: Can't pass in 'activatedDate' anymore when updating a person\n                delete profile.tempUser.activatedDate\n                // Can't pass lastLoginDate\n                tempUserWithoutLastLogin= Object.assign({}, profile.tempUser)\n                if (tempUserWithoutLastLogin.lastLoginDate) {\n                    delete tempUserWithoutLastLogin.lastLoginDate\n                };\n\n                API.cui.updatePerson({personId: userId, data:tempUserWithoutLastLogin})\n                .always(() => {\n                    if (section) {\n                        profile[section].submitting = false;\n                    }\n                    $scope.$digest()\n                })\n                .done(() => {\n                    angular.copy(profile.tempUser, profile.user)\n                    LocaleService.setLocaleByDisplayName(appConfig.languages[profile.user.language])\n                    if (toggleOff) {\n                        toggleOff();\n                    }\n                })\n                .fail((err) => {\n                    console.error('Failed to update user profile:', err)\n                    if (section) {\n                        profile[section].error = true;\n                    }\n                })\n            }\n\n            profile.updatePassword = function(section, toggleOff) {\n                if (section) profile[section] = { submitting: true }\n                profile.lifetimeError=false\n\n                API.cui.updatePersonPassword({ \n                    personId: userId, \n                    data: UserProfile.buildPersonPasswordAccount(profile.user, profile.userPasswordAccount, profile.organization) \n                })\n                .always(() => {\n                    if (section) profile[section].submitting = false\n                })\n                .done(() => {\n                    if (toggleOff) toggleOff()\n                    profile.passwordUpdateSuccess = true\n                    $timeout(() => profile.passwordUpdateSuccess = false, 5000)\n                    profile.resetPasswordFields()\n                    $scope.$digest()\n                })\n                .fail(err => {\n                    console.error('Error updating password', err)\n                    if (err.responseJSON.apiMessage.indexOf('does not conform to policy')>1) {\n                        profile.lifetimeError=true\n                    }\n                    if (section) profile[section].error = true\n                    $scope.$digest()\n                })\n            }\n\n            profile.saveChallengeQuestions = (section, toggleOff) => {\n                if (section) {\n                    profile[section] = { submitting: true }\n                }\n                profile.userSecurityQuestions = angular.copy(profile.tempUserSecurityQuestions)\n\n                API.cui.updateSecurityQuestionAccount({\n                    personId: userId,\n                    data: {\n                        version: '1',\n                        id: userId,\n                        questions: profile.userSecurityQuestions.questions\n                    }\n                })\n                .always(() => {\n                    if (section) {\n                        profile[section].submitting = false;\n                    }\n                })\n                .done(() => {\n                    if (toggleOff) {\n                        toggleOff();\n                    }\n                    profile.challengeQuestionsTexts = UserProfile.selectTextsForQuestions(profile)\n                    $scope.$digest()\n                })\n                .fail(err => {\n                    console.error('Error updating security questions', err)\n                    if (section) {\n                        profile[section].error = true;\n                    }\n                    $scope.$digest()\n                })\n            }\n\n            profile.validatePassword = (password, formObject, input) => {\n\n                const validSwitch = (input, isValidBoolean, type) => {\n                    switch (input) {\n                        case 'newPassword':\n                            if (type==='history') \n                                profile.validNewPasswordHistory = isValidBoolean\n                            else\n                                profile.validNewPasswordDisallowed = isValidBoolean\n                        case 'newPasswordRe':\n                            if (type==='history') \n                                profile.validNewPasswordReHistory = isValidBoolean\n                            else\n                                profile.validNewPasswordReDisallowed = isValidBoolean\n                    }\n                }\n\n                const validateData = {\n                    userId: userId,\n                    organizationId: profile.user.organization.id,\n                    password: password,\n                    operations: ['PASSWORD_SPECIFY']\n                }\n\n                API.cui.validatePassword({data: validateData})\n                .then(res => {\n                    let validPasswordHistory = false\n                    let validateDisallowed =false\n                    // Sometimes disallowed words will not come in response, In that case need to set form object to true\n                    let disallowedFlag=false\n                    res.forEach(rule => {\n                        if (rule.type === 'HISTORY' && rule.isPassed) {\n                            validPasswordHistory = true\n                        }\n                        if (rule.type === 'DISALLOWED_WORDS'){\n                            disallowedFlag =true\n                            if(rule.isPassed) {\n                                validateDisallowed = true\n                            }\n                        }\n                    })\n                    //History Validation\n                    if (validPasswordHistory) {\n                        validSwitch(input, true, 'history')\n                    }\n                    else {\n                        validSwitch(input, false, 'history')\n                    }\n                    //Disallowed words Validation\n                    if (disallowedFlag===false||validateDisallowed===true) {\n                        validSwitch(input, true, 'disallowed')                        \n                    }\n                    else {\n                        validSwitch(input, false, 'disallowed')                        \n                    }\n                    if (validPasswordHistory &&(disallowedFlag===false||validateDisallowed===true)) {\n                        formObject[input].$setValidity(input, true)\n                        $scope.$digest()\n                    }\n                    else{\n                        formObject[input].$setValidity(input, false)\n                        $scope.$digest()\n                    }\n                })\n            }\n        }\n    }\n\n    return UserProfile\n})\n\r\nangular.module('common')\n.factory('BuildPackageRequests', (API) => {\n\n    /*\n        Helper factory for creating and sending service package requests.\n\n        Usage: BuildPackageRequests(requestorId, requestorType, arrayOfServices)\n        Return: Array of API service package request promises\n        \n        Notes:\n            - RequestorType: Whether the requestor is a person or organization (expects 'person' or 'organization')\n            - The reason for the request should be under service._reason\n            - If no reason is provided and the service package requires a reason, returns undefined and attach\n              an _error property (app._error = true) for that service.\n            - This factory is not pure (alters the provided array of services)\n    */\n\n    return (requestorId, requestorType, arrayOfApps) => {\n        const numberOfApps = arrayOfApps.length\n\n        if (!_.isArray(arrayOfApps) || numberOfApps === 0) {\n            throw new Error ('The argument passed to BuildPackageRequests should be an array of 1 or more services.')\n            return undefined\n        }\n\n        let error = false\n\n        for (let i = 0; i < numberOfApps; i += 1) {\n            if (arrayOfApps[i].servicePackage.requestReasonRequired && !arrayOfApps[i]._reason) {\n                arrayOfApps[i]._error = true\n                if (!error) {\n                    error = true;\n                }\n            }\n        }\n\n        if (error) {\n            return undefined;\n        }\n\n        let packagesBeingRequested = []\n        let packageRequests = []\n\n        for (let i = 0; i < numberOfApps; i += 1) {\n            if (packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id) >= 0) {\n                // If the service package is already being requested, append service to the request reason\n                // If the request doesn't have a reason here, then it is not required for this service package\n                if (arrayOfApps[i]._reason) {\n                    packageRequests[packagesBeingRequested.indexOf(arrayOfApps[i].servicePackage.id)].reason +=\n                        ('\\n' + $filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(arrayOfApps[i].name) + ': ' + arrayOfApps[i].name._reason)\n                }\n            }\n            else {\n                // Cache id's in seperate array to check for existing package requests without having to search through the array of requests.\n                packagesBeingRequested.push(arrayOfApps[i].servicePackage.id)\n                packageRequests.push({\n                    requestor: {\n                        id: requestorId,\n                        type: requestorType\n                    },\n                    servicePackage: {\n                        id: arrayOfApps[i].servicePackage.id,\n                        type: 'servicePackage'\n                    },\n                    reason: arrayOfApps[i]._reason || ''\n                })\n            }\n        }\n        \n        return packageRequests.map(data => API.cui.createPackageRequest({ data }))\n\n    }\n})\n\r\nangular.module('common')\n.factory('AppRequests',['$filter',($filter) => {\n    var appRequestsObject={},\n        appRequests={};\n\n    appRequests.set=(newAppRequestsObject) => {\n        appRequestsObject=newAppRequestsObject;\n    };\n\n    appRequests.get=() => {\n        return appRequestsObject;\n    };\n\n    appRequests.clear= () => {\n        appRequestsObject = {};\n    };\n\n    appRequests.buildReason=(app,reason) => {\n        let tempApp={};\n        angular.copy(app,tempApp);\n        tempApp.reason=$filter('translate')('reason-im-requesting') + ' ' +  $filter('cuiI18n')(tempApp.name) + ': ' + reason;\n        return tempApp;\n    };\n\n\n    appRequests.getPackageRequests=(userId,arrayOfAppsBeingRequested) => {\n        let arrayOfPackagesBeingRequested=[],\n            arrayOfPackageRequests=[];\n        arrayOfAppsBeingRequested.forEach((app,i) => {\n            if(arrayOfPackagesBeingRequested.indexOf(app.servicePackage.id)>-1){ // if we've parsed an app that belongs to the same pacakge\n                if(app.servicePackage.reasonRequired){\n                    arrayOfPackageRequests.some((packageRequest,i) => {\n                        return arrayOfPackageRequests[i].servicePackage.id === app.servicePackage.id? (arrayOfPackageRequests[i].reason=arrayOfPackageRequests[i].reason + ('\\n\\n' + app.reason),true) : false; // if we already build a package request for this pacakge then append the reason of why we need this other app\n                    });\n                }\n                // if the reason isn't required then we don't need to do anything, we're already requesting this package\n            }\n            else {\n                arrayOfPackageRequests[i]={\n                    'requestor':{\n                        id:userId,\n                        type:'person'\n                    },\n                    servicePackage:{\n                        id:app.servicePackage.id,\n                        type: 'servicePackage'\n                    },\n                    reason: app.servicePackage.reasonRequired ? app.reason : undefined\n                };\n                arrayOfPackagesBeingRequested[i] = app.servicePackage.id; // save the pacakge id that we're requesting in a throwaway array, so it's easier to check if we're\n                                                                // already requesting this package\n            }\n        });\n        return arrayOfPackageRequests;\n    };\n\n    return appRequests;\n}]);\r\nangular.module('common')\n.factory('ServicePackage', (API, APIError, $q) => {\n    'use strict'\n\n    /*\n        This factory was originally used as a type of data storage for storing service package data. The use of this factory\n        for storing data is now deprecated in favor of an actual data storage solution in our \"DataStorage\" factory. \n        The data storage features of this factory will be removed in a future version.\n\n        The focus of this factory will transition to dealing with any other logic associated with service packages.\n    */\n\n    const servicePackage = {}\n    const errorName = 'ServicePackageFactory.'\n    let servicePackageStorage = {}\n\n    /****************************************\n                Helper Functions\n    ****************************************/\n\n    // Returns services that are associated with a package id\n    const getPackageServices = (packageId) => {\n        const defer = $q.defer()\n\n        API.cui.getPackageServices({packageId: packageId})\n        .done(packageServices => {\n            defer.resolve(packageServices)\n        })\n        .fail(err => {\n            console.error('Failed getting package services')\n            APIError.onFor(errorName + 'getPackageServices')\n            defer.reject(err)\n        })\n        return defer.promise\n    }\n\n    // Returns claims that are associated with a package id\n    const getPackageClaims = (packageId) => {\n        const defer = $q.defer()\n\n        API.cui.getPackageClaims({qs: [['packageId', packageId]]})\n        .done(packageClaims => {\n            defer.resolve(packageClaims)\n        })\n        .fail(err => {\n            console.error('Failed getting package claims')\n            APIError.onFor(errorName + 'getPackageClaims')\n            defer.reject(err)\n        })\n        return defer.promise\n    }\n\n    // Returns all data for a specified package id\n    const getPackageDetails = (packageId) => {\n        const defer = $q.defer()\n\n        API.cui.getPackage({packageId: packageId})\n        .done(packageData => {\n            defer.resolve(packageData)\n        })\n        .fail(err => {\n            console.error('Failed getting package details')\n            APIError.onFor(errorName + 'getPackageDetails')\n            defer.reject(err)\n        })\n        return defer.promise\n    }\n\n    /****************************************\n                Service Functions\n    ****************************************/\n\n    // Deprecated\n    servicePackage.set = (userId, newServicePackageArray) => {\n        servicePackageStorage.userId = newServicePackageArray\n    }\n\n    // Deprecated\n    servicePackage.get = (userId) => {\n        return servicePackageStorage.userId\n    }\n\n    // Deprecated\n    servicePackage.clear = () => {\n        servicePackageStorage = {}\n    }\n\n    // Deprecated\n    servicePackage.checkStorage = (userId) => {\n        if (servicePackageStorage.userId) {\n            return true\n        }\n        return false\n    }\n\n    // This call wraps the getPackageServices(), getPackageClaims(), and getPackageDetails() calls\n    // Returns all relevant data associated with the provided packageId including its services, claims, and details\n    servicePackage.getPackageDetails = (packageId) => {\n        const defer = $q.defer()\n        let packageDetails = {}\n        let callsCompleted = 0\n\n        getPackageDetails(packageId)\n        .then(packageData => {\n            packageDetails.details = packageData\n        })\n        .finally(() => {\n            callsCompleted += 1\n            if (callsCompleted === 3) {\n                defer.resolve(packageDetails);\n            }\n        })\n\n        getPackageServices(packageId)\n        .then(packageServices => {\n            packageDetails.services = packageServices\n        })\n        .finally(() => {\n            callsCompleted += 1\n            if (callsCompleted === 3) {\n                defer.resolve(packageDetails);\n            }\n        })\n\n        getPackageClaims(packageId)\n        .then(packageClaims => {\n            packageDetails.claims = packageClaims\n        })\n        .finally(() => {\n            callsCompleted += 1\n            if (callsCompleted === 3) {\n                defer.resolve(packageDetails);\n            }  \n        })\n\n        return defer.promise\n    }\n\n    // Returns all packages for the specified userId with a pending status\n    servicePackage.getPersonPendingPackages = (userId) => {\n        const defer = $q.defer()\n\n        API.cui.getPersonPendingServicePackages({qs: [\n            ['requestor.id', userId],\n            ['requestor.type', 'person']\n        ]})\n        .done(servicePackages => {\n            defer.resolve(servicePackages)\n        })\n        .fail(err => {\n            console.error('There was an error retrieving pending service packages')\n            APIError.onFor(errorName + 'getPendingPackages')\n            defer.reject(err)\n        })\n\n        return defer.promise\n    }\n\n    // This call wraps the service.getPersonPendingServicesPackages() and service.getPackageDetails() calls\n    // Returns all relevant data for a user's pending packages\n    servicePackage.getAllUserPendingPackageData = (userId) => {\n        const defer = $q.defer()\n        let pendingPackageData = []\n\n        servicePackage.getPersonPendingPackages(userId)\n        .then(pendingPackages => {\n            let packageDetailCalls = []\n\n            pendingPackages.forEach(pendingPackage => {\n                packageDetailCalls.push(\n                    servicePackage.getPackageDetails(pendingPackage.servicePackage.id)\n                    .then(packageDetails => {\n                        angular.merge(pendingPackage, packageDetails)\n                        pendingPackageData.push(pendingPackage)\n                    })\n                )\n            })\n\n            $q.all(packageDetailCalls)\n            .then(() => {\n                cui.log('packageDetailCalls then', userId, pendingPackageData);\n                defer.resolve(pendingPackageData)\n            })\n            .catch(err => {\n                cui.log('packageDetailCalls catch', err);\n                defer.reject(err)\n            })\n        })\n        .catch(err => {\n            defer.reject(err)\n        })\n\n        return defer.promise\n    }\n\n    // Handles the approval/denial of a package request\n    // The package request must have a property of \"approval\" with either \"approved\" or \"denied\"\n    // If the package is denied and the package request has an optional property of \"rejectReason\", appends the reason to the payload\n    servicePackage.handlePackageApproval = (packageRequest) => {\n        let data = [['requestId', packageRequest.id]]\n\n        if (packageRequest.approval === 'approved') {\n            return API.cui.approvePackage({qs: data})\n        }\n        else if (packageRequest.approval === 'denied') {\n            if (packageRequest.rejectReason) {\n                data.push(['justification', packageRequest.rejectReason]);\n            }\n            return API.cui.denyPackage({qs: data})\n        } else {\n            throw new Error('Package request object must contain \"approval\" of either \"approved\" or \"denied\"');\n        }\n    }\n\n    return servicePackage\n\n})\n\r\nangular.module('applications',[])\n.config(['$stateProvider', ($stateProvider) => {\n\n    const templateBase = 'app/modules/applications/';\n\n    const returnCtrlAs = (name, asPrefix) => `${name}Ctrl as ${ asPrefix || ''}${(asPrefix? name[0].toUpperCase() + name.slice(1, name.length) : name)}`;\n\n    const loginRequired = true;\n\n    $stateProvider\n        .state('applications', {\n            url: '/applications',\n            template: '<div ui-view class=\"cui-applications\"></div>',\n            access: loginRequired,\n            abstract: true\n        })\n        .state('applications.myApplications', {\n            url: '?page&pageSize&service.category',\n            templateUrl: templateBase + 'myApplications/myApplications.html',\n            controller: returnCtrlAs('myApplications'),\n            access:loginRequired\n        })\n        .state('applications.myApplicationDetails', {\n            url: '/details/:appId',\n            templateUrl: templateBase + 'myApplications/myApplications-details.html',\n            controller: returnCtrlAs('myApplicationDetails'),\n            access:loginRequired\n        })\n        .state('applications.newRequest', {\n            url: '/request',\n            templateUrl: templateBase + 'newRequestReview/newRequest.html',\n            controller: returnCtrlAs('newAppRequest'),\n            access:loginRequired\n        })\n        .state('applications.search', {\n            url: '/search?name&category&page&pageSize',\n            templateUrl: templateBase + 'search/applicationSearch.html',\n            controller: returnCtrlAs('applicationSearch'),\n            access:loginRequired\n        })\n        .state('applications.reviewRequest', {\n            url: '/review',\n            templateUrl: templateBase + 'newRequestReview/applicationReview.html',\n            controller: returnCtrlAs('applicationReview'),\n            access:loginRequired\n        })\n        .state('applications.manageApplications', {\n            url: '/manage?name&page&pageSize&service.category&sortBy&grant.status&service.name',\n            templateUrl: templateBase + 'myApplications/myApplications-manage.html',\n            controller: returnCtrlAs('manageApplications'),\n            access:loginRequired\n        })\n        // seperating out as it is a seperate icon on in menu\n        .state('pendingAppRequests', {\n            url: '/pendingAppRequests?page&pageSize&sortBy&name',\n            templateUrl: templateBase + 'pendingRequests/pendingRequests.html',\n            controller: returnCtrlAs('pendingAppRequests'),\n            access:loginRequired\n        })\n        /*Organization Applications*/\n        .state('applications.orgApplications', {\n            url: '/organization',\n            template: '<div ui-view></div>',\n            abstract: true,\n            access: loginRequired\n        })\n/*        .state('applications.orgApplications.applicationList', {\n            url: '?name&page&pageSize&service.category&sortBy&grant.status',\n            templateUrl: templateBase + 'orgApplications/applicationList/orgApplications-applicationList.html',\n            controller: returnCtrlAs('orgApplications'),\n            access: loginRequired\n        })\n        .state('applications.orgApplications.applicationDetails', {\n            url: '/application/:appId/details',\n            templateUrl: templateBase + 'orgApplications/applicationDetails/orgApplications-applicationDetails.html',\n            controller: returnCtrlAs('orgApplicationDetails'),\n            access: loginRequired\n        })*/\n        .state('applications.orgApplications.newGrant', {\n            url: '/application/:appId/new-grant',\n            templateUrl: templateBase + 'orgApplications/newGrant/orgApplications-newGrant.html',\n            controller: returnCtrlAs('orgAppNewGrant'),\n            access: loginRequired            \n        });\n/*        .state('applications.orgApplications.newRequest', {\n            url: '/request',\n            templateUrl: templateBase + 'orgApplications/appRequest/newRequest/appRequest-newRequest.html',\n            controller: returnCtrlAs('orgAppRequest'),\n            access: loginRequired\n        })\n        .state('applications.orgApplications.newRequestReview', {\n            url: '/request/review',\n            templateUrl: templateBase + 'orgApplications/appRequest/newRequestReview/appRequest-newRequestReview.html',\n            controller: returnCtrlAs('orgAppRequestReview'),\n            access: loginRequired\n        })\n        .state('applications.orgApplications.search', {\n            url: '/search?name&category&page&pageSize',\n            templateUrl: templateBase + 'orgApplications/search/orgApplications-search.html',\n            controller: returnCtrlAs('orgAppSearch'),\n            access: loginRequired\n        });*/\n}]);\n\r\nangular.module('applications')\n.controller('myApplicationDetailsCtrl', function(API, $scope, $stateParams, $state, $q, APIHelpers, Loader, APIError,DataStorage) {\n    let myApplicationDetails = this\n    myApplicationDetails.relatedApps=[]\n\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n    const getClaims = (app) => {\n        const packageId = app.servicePackage.id\n\n        Loader.onFor(loaderName + 'claims')\n        API.cui.getPersonPackageClaims({ grantee:API.getUser(), useCuid:true, packageId })\n        .then(res => {\n            APIError.offFor(loaderName + 'claims')\n            myApplicationDetails.claims = res\n        })\n        .fail(err => {\n            APIError.onFor(loaderName + 'claims')\n        })\n        .always(() => {\n            Loader.offFor(loaderName + 'claims')\n            $scope.$digest()\n        })\n    }\n\n    const getApp= (updating)=>{\n        if (!updating) {\n            Loader.onFor(loaderName + 'app')\n        }\n        API.cui.getPersonGrantedApps(opts)\n        .then(res => {\n            APIError.offFor(loaderName + 'app')\n            myApplicationDetails.app = Object.assign({}, res[0])\n            if (!updating) {\n            getClaims(myApplicationDetails.app)\n            getRelatedApps(myApplicationDetails.app)\n            }\n        })\n        .fail(err => {\n            APIError.onFor(loaderName + 'app')\n        })\n        .done(() => {\n            Loader.offFor(loaderName + 'app')\n            $scope.$digest()\n        })\n    }\n    const getRelatedApps=(app) => {\n        const packageId = app.servicePackage.id\n        let qs\n        if (app.servicePackage.parent) {\n            qs=[['servicePackage.id',app.servicePackage.parent.id]]\n        }else{\n            qs=[['servicePackage.parentPackage.id',app.servicePackage.id]]\n        }\n        Loader.onFor(loaderName + 'relatedApps')\n        let apiPromises=[\n        API.cui.getPersonRequestableApps({personId:API.getUser(),'qs':[['servicePackage.parentPackage.id',packageId]] }),\n        API.cui.getPersonGrantedApps({personId:API.getUser(),'qs':qs })\n        ]\n        $q.all(apiPromises)\n        .then(res=>{\n            APIError.offFor(loaderName + 'relatedApps')\n            myApplicationDetails.relatedApps=myApplicationDetails.relatedApps.concat(res[0])\n            myApplicationDetails.relatedApps=myApplicationDetails.relatedApps.concat(res[1])\n        })\n        .catch(err => {\n            APIError.onFor(loaderName + 'relatedApps')\n        })\n        .finally(()=>{\n            Loader.offFor(loaderName + 'relatedApps')\n        })\n    }\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    const loaderName = 'myApplicationDetails.'\n\n    const qs = {\n        'service.id': $stateParams.appId\n    }\n\n    const opts = {\n        personId: API.getUser(),\n        useCuid:true,\n        qs: APIHelpers.getQs(qs)\n    }\n    myApplicationDetails.app=DataStorage.getType('myAppDetail')\n    if (myApplicationDetails.app&& myApplicationDetails.app.id===$stateParams.appId) {        \n        getClaims(myApplicationDetails.app)\n        getRelatedApps(myApplicationDetails.app)\n        // Update application detail for any new changes during reload\n        // Commenting out as API is not giving full details for service.id query parameter get\n        //it is relying on previous page details which has full details\n        // getApp(true)\n    }\n    else{\n        getApp(false)\n    }\n\n    // ON LOAD END -----------------------------------------------------------------------------------\n\n    // ON CLICK FUNCTIONS START ----------------------------------------------------------------------\n\n    myApplicationDetails.goToDetails = (application) => {\n        $state.go('applications.myApplicationDetails', {\n            'packageId':application.packageId,\n            'appId':application.id\n        })\n    }\n\n    // ON CLICK FUNCTIONS END ------------------------------------------------------------------------\n\n})\n\r\nangular.module('applications')\n.controller('manageApplicationsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\n\n    const manageApplications = this\n    const userId = User.user.id\n    const loaderName = 'manageApplications.'\n\n    let checkedLocalStorage = false\n\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\n\n    const switchBetween = (property, firstValue, secondValue) => {\n        // helper function to switch a property between two values or set to undefined if values not passed\n        if (!firstValue) {\n            manageApplications.search[property] = undefined\n            return\n        }\n        manageApplications.search[property] = manageApplications.search[property] === firstValue\n            ? secondValue\n            : firstValue\n    }\n\n    const getCountsOfStatus=(qsValue)=>{\n        let opts = {\n            personId: API.getUser(),\n            useCuid:true\n        }\n        //Assign query strings if any value passed \n        //otherwise it will get full count\n        if (qsValue) {\n            opts.qs = [['grant.status',qsValue]]\n        }\n        API.cui.getPersonGrantedAppCount(opts)\n        .then(res=>{\n            if (!qsValue) {\n                manageApplications.popupCount=res;\n            }else if (qsValue===\"active\") {\n                manageApplications.activeCount=res;\n            }\n            else{\n                manageApplications.suspendedCount=res;\n            }\n            $scope.$digest();\n        })\n        .fail(err=>{\n\n        })\n    }\n\n    const getCountsOfcategories=()=>{\n        manageApplications.categories.forEach((category,index)=>{\n            console.log($filter('cuiI18n')(category.name))\n            let opts = {\n                personId: API.getUser(),\n                useCuid:true\n            }\n            opts.qs=[['service.category',$filter('cuiI18n')(category.name)]]\n            API.cui.getPersonGrantedAppCount(opts)\n            .then(res=>{\n                category.count=res;\n                if (index===manageApplications.categories.length-1) {\n                    $scope.$digest();\n                };\n            })\n            .fail(err=>{\n                console.log(err);\n                if (index===manageApplications.categories.length-1) {\n                    $scope.$digest();\n                };\n            })            \n        })\n    }\n\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\n\n    // ON LOAD START ------------------------------------------------------------------------------------------\n\n    const loadStoredData = () => {\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\n        const storedData = DataStorage.getType('manageApplicationsList')\n\n        if (storedData) {\n            Loader.onFor(loaderName + 'apps')\n            manageApplications.list = storedData.appList\n            manageApplications.count = storedData.appCount\n            manageApplications.categories = storedData.categories\n            Loader.offFor(loaderName + 'apps')\n        }\n\n        checkedLocalStorage = true\n        onLoad(false)\n    }\n\n    const onLoad = (previouslyLoaded) => {\n        if (previouslyLoaded) {\n            Loader.onFor(loaderName + 'reloadingApps')\n        }\n        else {\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\n            manageApplications.search = Object.assign({}, $stateParams)\n\n            Loader.onFor(loaderName + 'categories')\n            API.cui.getPersonAppCategories({personId:API.getUser()})\n            .then(res => {\n                APIError.offFor(loaderName + 'categories')\n                manageApplications.categories = res;\n                getCountsOfcategories()\n                APIError.offFor(loaderName + 'categories')\n            })\n            .fail(err => {\n                APIError.onFor(loaderName + 'categories')\n            })\n            .done(() => {\n                Loader.offFor(loaderName + 'categories')\n                $scope.$digest()\n            })\n        }\n\n        manageApplications.search.pageSize = manageApplications.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\n\n        const opts = {\n            personId: API.getUser(),\n            useCuid:true,\n            qs: APIHelpers.getQs(manageApplications.search)\n        }\n\n        const promises = [\n            API.cui.getPersonGrantedApps(opts), \n            API.cui.getPersonGrantedAppCount(opts)\n        ]\n\n        $q.all(promises)\n        .then(res => {\n            // manageApplications.list = Object.assign(res[0]).filter(x => x.hasOwnProperty('urls'))\n            manageApplications.count = res[1]\n            manageApplications.list=res[0];\n            // re-render pagination if available\n            manageApplications.reRenderPaginate && manageApplications.reRenderPaginate()\n\n            const storageData = {\n                appList: manageApplications.list, \n                appCount: manageApplications.count, \n                categories: manageApplications.categories\n            }\n            DataStorage.setType('manageApplicationsList', storageData)\n            APIError.offFor(loaderName + 'apps')\n        })\n        .catch(err => {\n            APIError.onFor(loaderName + 'apps')\n        })\n        .finally(() => {\n            if (previouslyLoaded) {\n                Loader.offFor(loaderName + 'reloadingApps')\n            } \n            else {\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\n            }\n        })\n        //Lazy loading of counts of applications based on status \n        //to display in popover\n        getCountsOfStatus(\"active\")\n        getCountsOfStatus(\"suspended\")\n        //To getFull count\n        getCountsOfStatus(undefined)\n\n\n    }\n\n    loadStoredData()\n\n    // ON LOAD END --------------------------------------------------------------------------------------------\n\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\n\n    manageApplications.pageChange = (newpage) => {\n        manageApplications.updateSearch('page', newpage)\n    }\n\n    manageApplications.updateSearchByName = () => {\n        manageApplications.updateSearch('name',manageApplications.search['service.name'])\n    }\n    manageApplications.updateSearch = (updateType, updateValue) => {\n        switch (updateType) {\n            case 'alphabetic':\n                switchBetween('sortBy', '+service.name', '-service.name')\n                break\n            case 'date':\n                switchBetween('sortBy', '+grant.instant', '-grant.instant')\n                break\n            case 'status':\n                manageApplications.search.page = 1\n                manageApplications.search['grant.status'] = updateValue\n                break\n            case 'category':\n                manageApplications.search.page = 1\n                manageApplications.search['service.category'] = $filter('cuiI18n')(updateValue)\n                break\n            case 'name':\n                manageApplications.search.page = 1\n                break\n        }\n\n        // doesn't change state, only updates the url\n        $state.transitionTo('applications.manageApplications', manageApplications.search, { notify:false })\n        onLoad(true)\n    }\n\n    manageApplications.goToDetails = (application) => {\n        const opts = {\n            appId: application.id\n        }\n        DataStorage.setType('myAppDetail',application)\n        $state.go('applications.myApplicationDetails', opts)\n    }\n\n    // ON CLICK FUNCTIONS END ---------------------------------------------------------------------------------\n\n})\n\r\nangular.module('applications')\n.controller('myApplicationsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,User,$filter,$pagination,$q,$scope,$state,$stateParams) {\n\tconst myApplications = this\n    const userId = User.user.id\n    const loaderName = 'myApplications.'\n    let checkedLocalStorage = false\n\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\n    const getCountsOfcategories=()=>{\n        myApplications.categories.forEach((category,index)=>{\n            console.log($filter('cuiI18n')(category.name))\n            let opts = {\n                personId: userId,\n                useCuid:true\n            }\n            opts.qs=[['service.category',$filter('cuiI18n')(category.name)]]\n            API.cui.getPersonGrantedAppCount(opts)\n            .then(res=>{\n                //Need to minus each category count with not displayble and other than active apps according to thier categories\n                category.count=res\n                -\n                (\n                    Object.assign(myApplications.list).filter(x => \n                        x.category&& $filter('cuiI18n')(x.category)===$filter('cuiI18n')(category.name)\n                    ).length\n                    -\n                    Object.assign(myApplications.viewList).filter(x => \n                            x.category&& $filter('cuiI18n')(x.category)===$filter('cuiI18n')(category.name)\n                    ).length\n                )                \n                if (index===myApplications.categories.length-1) {\n                    $scope.$digest();\n                };\n            })\n            .fail(err=>{\n                console.log(err);\n                if (index===myApplications.categories.length-1) {\n                    $scope.$digest();\n                };\n            })            \n        })\n    }\n\n    // HELPER FUNCTIONS END -----------------------------------------------------------------------------------\n\n    // ON LOAD START ------------------------------------------------------------------------------------------\n    const loadStoredData = () => {\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\n        const storedData = DataStorage.getType('myApplicationsList')\n\n        if (storedData) {\n            Loader.onFor(loaderName + 'apps')\n            myApplications.list = storedData.appList\n            myApplications.viewList = Object.assign(myApplications.list).filter(x => x.servicePackage.displayable===true&&x.grant.status=='active')\n            myApplications.count = storedData.appCount\n            myApplications.categories = storedData.categories\n            Loader.offFor(loaderName + 'apps')\n        }\n\n        checkedLocalStorage = true\n        onLoad(false)\n    }\n\n    const onLoad = (previouslyLoaded) => {\n        if (previouslyLoaded) {\n            Loader.onFor(loaderName + 'reloadingApps')\n        }\n        else {\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\n            myApplications.search = Object.assign({}, $stateParams)\n\n            Loader.onFor(loaderName + 'categories')\n            API.cui.getPersonAppCategories({personId:API.getUser()})\n            .then(res => {\n                APIError.offFor(loaderName + 'categories')\n                myApplications.categories = res;\n                getCountsOfcategories()\n                APIError.offFor(loaderName + 'categories')\n            })\n            .fail(err => {\n            \tconsole.error('There was an error in fetcting user\\'s app category details ' +err)\n                APIError.onFor(loaderName + 'categories')\n            })\n            .done(() => {\n                Loader.offFor(loaderName + 'categories')\n                $scope.$digest()\n            })\n        }\n\n        myApplications.search.pageSize = myApplications.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\n\n        const opts = {\n            personId: API.getUser(),\n            useCuid:true,\n            qs: APIHelpers.getQs(myApplications.search)\n        }\n        opts.qs.push(['grant.status','active'])\n        const promises = [\n            API.cui.getPersonGrantedApps(opts), \n            API.cui.getPersonGrantedAppCount(opts)\n        ]\n\n        $q.all(promises)\n        .then(res => {\n            myApplications.viewList = Object.assign(res[0]).filter(x => x.servicePackage.displayable===true&&x.grant.status=='active')\n            if (!previouslyLoaded) {\n                myApplications.count = res[1]\n            }\n            myApplications.popupCount = myApplications.count-Object.assign(res[0]).filter(x => x.servicePackage.displayable!==true || x.grant.status!=='active').length\n            myApplications.list=res[0];\n            // re-render pagination if available\n            myApplications.reRenderPaginate && myApplications.reRenderPaginate()\n\n            const storageData = {\n                appList: myApplications.list, \n                appCount: myApplications.count, \n                categories: myApplications.categories\n            }\n            DataStorage.setType('myApplicationsList', storageData)\n            APIError.offFor(loaderName + 'apps')\n        })\n        .catch(err => {\n        \tconsole.error('There was an error in fetcting user\\'s granted applications ' +err)\n            APIError.onFor(loaderName + 'apps')\n        })\n        .finally(() => {\n            if (previouslyLoaded) {\n                Loader.offFor(loaderName + 'reloadingApps')\n            } \n            else {\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\n            }\n        })\n    }\n\n    loadStoredData()\n\n    // ON LOAD END --------------------------------------------------------------------------------------------\n\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\n\n    myApplications.pageChange = (newpage) => {\n        myApplications.updateSearch('page', newpage)\n    }\n\n    myApplications.updateSearch = (updateType, updateValue) => {\n        switch (updateType) {\n            case 'category':\n                myApplications.search.page = 1\n                myApplications.search['service.category'] = $filter('cuiI18n')(updateValue)\n                break\n        }\n\n        // doesn't change state, only updates the url\n        $state.transitionTo('applications.myApplications', myApplications.search, { notify:false })\n        onLoad(true)\n    }\n})\n\r\nangular.module('applications')\n.controller('applicationReviewCtrl',['$scope','API','AppRequests','$timeout','$state','$q','localStorageService',function($scope,API,AppRequests,$timeout,$state,$q,localStorage) {\n\n    let applicationReview=this;\n\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) {\n        AppRequests.set(localStorage.get('appsBeingRequested'));\n    }\n\n    let appRequests=angular.copy(AppRequests.get());\n    angular.forEach(appRequests , (request) =>{\n        if (request.bundledApps) {\n            request.bundledApps.forEach(bundledApp => {\n                if (appRequests[bundledApp.id]) {\n                    delete appRequests[bundledApp.id]\n                }                    \n            })\n        }\n    })\n    const appsBeingRequested=Object.keys(appRequests)\n\n    if (appsBeingRequested.length===0) {\n        $state.go('applications.search');\n    }\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    applicationReview.appRequests=[];\n\n    for(let i=0; i < appsBeingRequested.length; i += 2){\n        const applicationGroup = [];\n        applicationGroup.push(appRequests[appsBeingRequested[i]]);\n        if (appRequests[appsBeingRequested[i+1]]) {\n            applicationGroup.push(appRequests[appsBeingRequested[i+1]]);\n        }\n        //get Terms And Conditions for requested packages\n        applicationGroup.forEach(app=>{\n            if (app.servicePackage.personTacEnabled) {\n                API.cui.getOrgTacOfPackage({packageId:app.servicePackage.id})\n                .then(res=>{\n                    app.tac=res;\n                })\n                .fail(err=>{\n                    console.log(\"There was an error fetching Tac\")\n                    console.log(err)\n                })\n            }\n        })\n        applicationReview.appRequests.push(applicationGroup);\n    }\n\n    applicationReview.numberOfRequests=0;\n    appsBeingRequested.forEach(() => {\n        applicationReview.numberOfRequests += 1;\n    });\n\n    // ON LOAD END ------------------------------------------------------------------------------------\n\n    // ON CLICK START ---------------------------------------------------------------------------------\n    let applicationRequestArray;\n\n    const requestsValid = () => {\n        applicationRequestArray=[];\n        applicationReview.attempting=true;\n        let error = false;\n        applicationReview.appRequests.forEach((appRequestGroup,i) => {\n\n            appRequestGroup.forEach((appRequest,x) => {\n                if (appRequest.servicePackage.reasonRequired) {\n                    if(!appRequest.reason || appRequest.reason===''){\n                        appRequest.reasonRequired=true;\n                        applicationReview.attempting=false;\n                        error=true;\n                    }\n                    else {\n                        appRequest.reasonRequired=false;\n                        applicationRequestArray[i+x] = AppRequests.buildReason(appRequest,appRequest.reason);\n                    }\n                } else {\n                    applicationRequestArray[i+x] = appRequest;\n                }\n            });\n        });\n        applicationReview.error = error;\n        if (error) {\n            return false;\n        } else {\n            return true;\n        }\n    };\n\n    applicationReview.submit = () => {\n        if (!requestsValid()) {\n            return;\n        }\n        const appRequests=AppRequests.getPackageRequests(API.getUser(),applicationRequestArray);\n\n        let requestsPromises=[];\n\n        appRequests.forEach((appRequest) => {\n            requestsPromises.push(API.cui.createPackageRequest({data:appRequest}))\n        });\n\n        $q.all(requestsPromises)\n        .then((res)=>{\n            applicationReview.attempting = false;\n            applicationReview.success = true;\n            AppRequests.clear(); // clears app requests if the request goes through\n            localStorage.set('appsBeingRequested',{});\n            $timeout(() => {\n                $state.go('applications.myApplications');\n            }, 3000);\n        })\n        .catch(() => {\n            applicationReview.attempting = false;\n            applicationReview.error = true;\n        });\n    };\n\n    applicationReview.updateSearch = (nameSearch) => {\n        applicationReview.search = nameSearch;\n    };\n\n    applicationReview.showTac= (application)=>{\n        if (application.tac) {\n            applicationReview.tacContent=application.tac.tacText\n            applicationReview.step=2\n        }\n    }\n\n    // Error validation\n    applicationReview.customError = {\n        email: {\n            email: function(){\n                var EMAIL_REGEXP = /^[a-z0-9!#$%&*?_.-]+@[a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+[.][a-z0-9!#$%&*?_.-][a-z0-9!#$%&*?_.-]+/i;\n                if (applicationReview.extendedData&&applicationReview.extendedData.email) {\n                    return EMAIL_REGEXP.test(applicationReview.extendedData.email)\n                }else{\n                    return true;\n                }\n            }\n        }\n    }\n    // ON CLICK END -----------------------------------------------------------------------------------\n\n}]);\r\nangular.module('applications')\n.controller('newAppRequestCtrl',['API','$scope','$state','AppRequests','localStorageService',\nfunction(API,$scope,$state,AppRequests,localStorage) {\n\n    let newAppRequest = this;\n\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    // HELPER FUNCTIONS END ---------------------------------------------------------------------------\n\n    // ON LOAD START ----------------------------------------------------------------------------------------\n\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) {\n        AppRequests.set(localStorage.get('appsBeingRequested'));\n    }\n    const appsBeingRequested = AppRequests.get();\n\n    newAppRequest.appsBeingRequested = [];\n    newAppRequest.numberOfRequests = 0;\n\n    Object.keys(appsBeingRequested).forEach((appId) => {\n        // This sets the checkboxes back to marked when the user clicks back\n        newAppRequest.numberOfRequests += 1;\n        newAppRequest.appsBeingRequested.push(appsBeingRequested[appId]);\n    });\n\n    API.cui.getCategories()\n    .then((res)=>{\n        newAppRequest.categories = res;\n        newAppRequest.loadingDone = true;\n        $scope.$digest();\n    })\n\n    // ON LOAD END ------------------------------------------------------------------------------------\n\n    // ON CLICK FUNCTIONS START -----------------------------------------------------------------------\n\n    newAppRequest.searchCallback = function(searchWord) {\n        $state.go('applications.search', {name: searchWord});\n    };\n\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------\n\n}]);\n\r\nangular.module('applications')\n.controller('pendingAppRequestsCtrl', function(API,APIError,APIHelpers,DataStorage,Loader,$filter,$pagination,$q,$scope,$state,$stateParams) {\n\n\tconst pendingAppRequests = this\n    const loaderName = 'pendingAppRequests.'\n\n    let checkedLocalStorage = false\n    // HELPER FUNCTIONS START ---------------------------------------------------------------------------------\n\n    const switchBetween = (property, firstValue, secondValue) => {\n        // helper function to switch a property between two values or set to undefined if values not passed\n        if (!firstValue) {\n            pendingAppRequests.search[property] = undefined\n            return\n        }\n        pendingAppRequests.search[property] = pendingAppRequests.search[property] === firstValue\n            ? secondValue\n            : firstValue\n    }\n\n    // HELPER FUNCTIONS END ---------------------------------------------------------------------------------\n\n    // ON LOAD START ------------------------------------------------------------------------------------------\n    \n    const loadStoredData = () => {\n        // Check DataStorage if this page has been loaded before. We initially populate this screen\n        // with data that was previously retrieved from the API while we redo calls to get the up to date data.\n        const storedData = DataStorage.getType('pendingAppRequestsList')\n\n        if (storedData) {\n            Loader.onFor(loaderName + 'apps')\n            pendingAppRequests.list = storedData.appList\n            // Pagination not supported now \n            // pendingAppRequests.count = storedData.appCount\n            Loader.offFor(loaderName + 'apps')\n        }\n\n        checkedLocalStorage = true\n        onLoad(false)\n    }\n\n    const onLoad = (previouslyLoaded) => {\n        if (previouslyLoaded) {\n            Loader.onFor(loaderName + 'reloadingApps')\n        }\n        else {\n            checkedLocalStorage ? Loader.onFor(loaderName + 'updating') : Loader.onFor(loaderName + 'apps')\n            pendingAppRequests.search = Object.assign({}, $stateParams)\n        }\n        // Pagination not supported now \n        // pendingAppRequests.search.pageSize = pendingAppRequests.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0]\n\n        const opts = {\n            personId: API.getUser(),\n            useCuid:true,\n            qs: APIHelpers.getQs(pendingAppRequests.search)\n        }\n\n        const promises = [\n            API.cui.getPersonPendingApps(opts) \n            // Pagination not supported now \n            // API.cui.getPersonGrantedAppCount(opts)\n        ]\n\n        $q.all(promises)\n        .then(res => {\n        \t// Pagination not supported now \n            // pendingAppRequests.count = res[1]\n            pendingAppRequests.list=res[0];\n            // re-render pagination if available\n            // Pagination not supported now\n            // pendingAppRequests.reRenderPaginate && pendingAppRequests.reRenderPaginate()\n\n            const storageData = {\n                appList: pendingAppRequests.list\n                // appCount: pendingAppRequests.count, \n            }\n            DataStorage.setType('pendingAppRequestsList', storageData)\n            APIError.offFor(loaderName + 'apps')\n        })\n        .catch(err => {\n        \tconsole.error('There was an error in fetcting user\\'s pending applications ' +err)\n            APIError.onFor(loaderName + 'apps')\n        })\n        .finally(() => {\n            if (previouslyLoaded) {\n                Loader.offFor(loaderName + 'reloadingApps')\n            } \n            else {\n                checkedLocalStorage ? Loader.offFor(loaderName + 'updating') : Loader.offFor(loaderName + 'apps')\n            }\n        })\n    }\n\n    loadStoredData()\n\n    // ON LOAD END ------------------------------------------------------------------------------------------\n\n    // ON CLICK FUNCTIONS START -------------------------------------------------------------------------------\n\n    pendingAppRequests.pageChange = (newpage) => {\n        pendingAppRequests.updateSearch('page', newpage)\n    }\n\n    pendingAppRequests.updateSearch = (updateType, updateValue) => {\n        switch (updateType) {\n            case 'alphabetic':\n                switchBetween('sortBy', '+service.name', '-service.name')\n                break\n            case 'date':\n                switchBetween('sortBy', '+requestedDate', '-requestedDate')\n                break\n            case 'name':\n                // Pagination not supported now \n                // myApplications.search.page = 1\n                pendingAppRequests.search['name'] = updateValue\n                break\n        }\n\n        // doesn't change state, only updates the url\n        $state.transitionTo('pendingAppRequests', pendingAppRequests.search, { notify:false })\n        onLoad(true)\n    }\n\n    pendingAppRequests.searchCallback= (searchWord) => {\n        pendingAppRequests.updateSearch('name',searchWord)\n    }\n\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------------\n})\r\nangular.module('applications')\n.controller('applicationSearchCtrl',['API','$scope','$stateParams','$state','AppRequests','localStorageService','$q','$pagination', function (API,$scope,$stateParams,$state,AppRequests,localStorage,$q,$pagination) {\n    let applicationSearch = this;\n\n    if(Object.keys(AppRequests.get()).length===0 && localStorage.get('appsBeingRequested')) { // If there's nothing in app memory and there's something in local storage\n        AppRequests.set(localStorage.get('appsBeingRequested'));\n    }\n    applicationSearch.packageRequests = AppRequests.get();\n    applicationSearch.appCheckbox = {};\n\n    // HELPER FUNCTIONS START ------------------------------------------------------------------------\n\n    const processNumberOfRequestedApps = (pkgRequest) => {\n        if (pkgRequest) {\n            applicationSearch.numberOfRequests += 1;\n        } else {\n            applicationSearch.numberOfRequests -= 1;\n        }\n    };\n\n    const updateViewList = (list) => {\n        let deferred= $q.defer()\n        applicationSearch.viewList=[]\n        let qs=[]\n        let apiPromises = []\n        angular.forEach(list, (app,parentIndex) => {\n            // Child App and Parent app requested by user\n            if(app.servicePackage.parent&&app.relatedApps){\n                let flag=false\n                angular.forEach(app.relatedApps, (realtedApp,index) => {\n                    if (_.find(list,{id:realtedApp.id})) {\n                        flag=true\n                    }\n                    else{\n                        qs.push(['service.id',realtedApp.id])\n                    }\n                    if (index===app.relatedApps.length-1&&qs.length!==0) {\n                        apiPromises.push(API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs}))\n                        qs=[]\n                    }\n                })\n            }\n            else{\n                applicationSearch.viewList.push(app)\n            }\n        })\n        $q.all(apiPromises)\n        .then(res => {\n            angular.forEach(res, (app) => {\n                if (applicationSearch.search.name) {\n                    app[0].expanded=true\n                }\n                applicationSearch.viewList.push(...app)\n                applicationSearch.list.push(...app)\n            })\n            deferred.resolve()\n        })\n        .catch(err =>{\n            console.log(\"There was an error loading parent requestable apps\")\n                deferred.reject(err)\n        })\n        return deferred.promise\n    }\n\n    // HELPER FUNCTIONS END --------------------------------------------------------------------------\n\n    // ON LOAD START ---------------------------------------------------------------------------------\n\n    const onLoad = (previouslyLoaded) => {\n        if(previouslyLoaded) {\n            applicationSearch.doneReloading = false;\n        }\n        else { // pre populate fields based on state params on first load\n            let numberOfRequests = 0;\n            Object.keys(applicationSearch.packageRequests).forEach(function(appId) { // Gets the list of package requests saved in memory\n                // This sets the checkboxes back to marked when the user clicks back after being in request review\n                applicationSearch.appCheckbox[appId] = true;\n                numberOfRequests += 1;\n            });\n            applicationSearch.numberOfRequests = numberOfRequests;\n\n            applicationSearch.search = {};\n            applicationSearch.search.name = $stateParams.name;\n            applicationSearch.search.category = $stateParams.category;\n            applicationSearch.search.page = parseInt($stateParams.page, 10);\n            applicationSearch.search.pageSize = parseInt($stateParams.pageSize, 10);\n        }\n\n        let query = [];\n        if (applicationSearch.search.name) {\n            query.push(['service.name',applicationSearch.search.name]);\n        }\n        if (applicationSearch.search.category) {\n            query.push(['service.category',applicationSearch.search.category]);\n        }\n\n        applicationSearch.search.pageSize = applicationSearch.search.pageSize || $pagination.getUserValue() || $pagination.getPaginationOptions()[0];\n        query.push(['pageSize',String(applicationSearch.search.pageSize)]);\n\n        applicationSearch.search.page = applicationSearch.search.page || 1;\n        query.push(['page',String(applicationSearch.search.page)]);\n\n        let opts = {\n            personId: API.getUser(),\n            useCuid:true,\n            qs: query\n        };\n\n        const promises = [API.cui.getPersonRequestableApps(opts),API.cui.getPersonRequestableCount(opts)];\n\n        $q.all(promises)\n        .then((res) => {\n             applicationSearch.list = res[0];\n             applicationSearch.count = res[1];\n             updateViewList(res[0])\n             .then(() =>{\n                applicationSearch.doneReloading = applicationSearch.doneLoading = true;\n             })\n        });\n    };\n    onLoad(false);\n\n    // ON LOAD END ------------------------------------------------------------------------------------\n\n    // ON CLICK FUNCTIONS START -----------------------------------------------------------------------\n\n    applicationSearch.pageChange = (newpage) => {\n        applicationSearch.updateSearch('page',newpage);\n    };\n\n    applicationSearch.updateSearch = function(updateType,updateValue) {\n        if (updateType!=='page'){\n            applicationSearch.search.page = 1;\n        }\n\n        // doesn't change state, only updates the url\n        $state.transitionTo('applications.search', applicationSearch.search, {notify:false});\n        onLoad(true);\n    };\n\n    applicationSearch.toggleRequest = function(application) {\n        if (!applicationSearch.packageRequests[application.id]) {\n            applicationSearch.packageRequests[application.id] = application;\n        } else {\n            delete applicationSearch.packageRequests[application.id];\n        }\n        localStorage.set('appsBeingRequested',applicationSearch.packageRequests);\n        processNumberOfRequestedApps(applicationSearch.packageRequests[application.id]);\n    };\n\n    applicationSearch.saveRequestsAndCheckout = function() {\n        let qs = []\n        //needed to set a flag for related apps to display in review page\n        angular.forEach(applicationSearch.packageRequests,(request)=>{\n            if (request.relatedApps) {\n                request.relatedAppSelectedCount=0\n                request.relatedApps.forEach(relatedApp=>{\n                    if(_.find(applicationSearch.packageRequests,{id:relatedApp.id})){\n                        relatedApp.selected=true\n                        request.relatedAppSelectedCount++\n                    }\n                    else{\n                        relatedApp.selected=false\n                    }\n                })\n            }\n            // If Selected Related app full details not available need to fetch it\n            if (!request.servicePackage) {\n                qs.push(['service.id',request.id])\n            }\n        })\n        if (qs.length!==0) {\n            API.cui.getPersonRequestableApps({personId:API.getUser(),qs:qs})\n            .then(res => {\n                res.forEach(app =>{\n                    applicationSearch.packageRequests[app.id] = app\n                })\n                AppRequests.set(applicationSearch.packageRequests);\n                $state.go('applications.reviewRequest');\n            })\n        }\n        else{\n            AppRequests.set(applicationSearch.packageRequests);\n            $state.go('applications.reviewRequest');\n        }\n    };\n\n    //Related apps will always appear inside body, So need to select parent if it is selected \n    applicationSearch.checkRelatedAppsBody= function(relatedApp, parent){\n        if (_.find(applicationSearch.list,{id:relatedApp.id})) {\n            applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:relatedApp.id}))\n        }\n        else{\n            applicationSearch.list.push(relatedApp)\n            applicationSearch.toggleRequest(relatedApp)\n        }           \n        applicationSearch.checkRelatedAndBundledApps(_.find(applicationSearch.list,{id:relatedApp.id}),parent)\n    };\n\n    //Deselect Child apps If it has any and select parent if checked from parent body \n    applicationSearch.checkRelatedAndBundledApps=function(application,parent){\n        //if unchecked the checkbox\n        if (!applicationSearch.packageRequests[application.id]) {\n            //if it is a parent then then deselect childs\n            if (!parent) {\n                application.relatedApps&&application.relatedApps.forEach((relatedApp)=>{\n                    if (applicationSearch.appCheckbox[relatedApp.id]) {\n                        applicationSearch.appCheckbox[relatedApp.id]=!applicationSearch.appCheckbox[relatedApp.id]\n                        applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:relatedApp.id}))\n                    }\n                })\n                applicationSearch.checkBundledApps(application,false)\n            }      \n        }else{\n            if (parent) {\n                if (!applicationSearch.appCheckbox[parent.id]) {\n                    applicationSearch.appCheckbox[parent.id]=true\n                    applicationSearch.toggleRequest(parent)\n                    applicationSearch.checkBundledApps(parent,true)\n                }\n            }else\n            applicationSearch.checkBundledApps(application,true)\n        }\n    }\n\n    applicationSearch.checkBundledApps= function(application,check){\n        if (application.bundledApps) {\n            application.bundledApps.forEach(bundledApp=>{\n                applicationSearch.appCheckbox[bundledApp.id]=check\n                if (_.find(applicationSearch.list,{id:bundledApp.id}))\n                    applicationSearch.toggleRequest(_.find(applicationSearch.list,{id:bundledApp.id}))\n            })\n        }\n    }\n    // ON CLICK FUNCTIONS END -------------------------------------------------------------------------\n\n}]);\n\r\nangular.element(document).ready(function () {\n\tangular.module('app',['common','misc','registration','applications','organization','user','ngAnimate']);\n\r\nangular.module('app')\n.config(['$urlRouterProvider', ($urlRouterProvider)  => {\n\n    // Fixes infinite digest loop with ui-router (do NOT change unless absolutely required)\n    $urlRouterProvider.otherwise(($injector) => {\n      const $state = $injector.get('$state');\n      $state.go('welcome');\n    });\n\n}]);\n\r\n    angular.bootstrap(document, ['app']);\n});\r\n\t\n\t})\n})(angular, $);\n"]}